{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wizardTower",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCallerOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "isMyWizardOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "12": "contracts/helpers/Ownable.sol",
    "13": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "25": "contracts/libraries/Strings.sol",
    "26": "contracts/wizards.sol",
    "5": "contracts/WizardTower.sol",
    "6": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        7809
      ],
      "Context": [
        5139
      ],
      "DoubleEndedQueue": [
        5095
      ],
      "ERC165": [
        5163
      ],
      "ERC2981Collection": [
        5247
      ],
      "ERC721": [
        6066
      ],
      "ERC721A": [
        7137
      ],
      "ERC721Enumerable": [
        11358
      ],
      "Governance": [
        2026
      ],
      "IERC165": [
        7293
      ],
      "IERC20": [
        7366
      ],
      "IERC2981": [
        10974
      ],
      "IERC721": [
        7482
      ],
      "IERC721Enumerable": [
        7513
      ],
      "IERC721Metadata": [
        11001
      ],
      "IERC721Receiver": [
        11019
      ],
      "Ownable": [
        7241
      ],
      "ReentrancyGuard": [
        7281
      ],
      "RelativeTimeVault": [
        2856
      ],
      "Strings": [
        8012
      ],
      "WizardTower": [
        5118
      ],
      "Wizards": [
        9105
      ]
    },
    "id": 2027,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 9106,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7367,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7294,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7483,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7514,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7138,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 6067,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 5164,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7242,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 5140,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7282,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 5248,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 8013,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 7810,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/WizardTower.sol",
        "file": "./WizardTower.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 5119,
        "src": "578:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2027,
        "sourceUnit": 5096,
        "src": "606:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5095,
              "src": "614:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7281,
              "src": "794:15:2"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:2"
          },
          {
            "baseName": {
              "id": 21,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7241,
              "src": "811:7:2"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "811:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2026,
        "linearizedBaseContracts": [
          2026,
          7241,
          5139,
          7281
        ],
        "name": "Governance",
        "nameLocation": "780:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "865:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "857:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$9105",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9105,
                "src": "857:7:2"
              },
              "referencedDeclaration": 9105,
              "src": "857:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$9105",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "wizardTower",
            "nameLocation": "893:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "881:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WizardTower_$5118",
              "typeString": "contract WizardTower"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "WizardTower",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5118,
                "src": "881:11:2"
              },
              "referencedDeclaration": 5118,
              "src": "881:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WizardTower_$5118",
                "typeString": "contract WizardTower"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 34,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1071:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "1014:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1023:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1034:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1183:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1155:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 37,
                  "keyType": {
                    "id": 35,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1277:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1270:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1270:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1321:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1316:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1316:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1344:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1337:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1337:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1398:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1392:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1430:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1423:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1456:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1449:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1485:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1478:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1514:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1507:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1136:8:2",
            "nodeType": "StructDefinition",
            "scope": 2026,
            "src": "1129:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 76,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1595:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1588:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 56,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1641:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1634:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1634:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1701:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1693:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 60,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1755:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1747:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 62,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1819:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1813:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1813:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1867:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1860:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "2039:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2032:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "2032:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2066:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2059:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2059:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2117:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2110:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 72,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2110:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2167:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2160:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2160:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1573:4:2",
            "nodeType": "StructDefinition",
            "scope": 2026,
            "src": "1566:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2280:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2273:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2305:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2298:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2340:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2330:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 81,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 83,
                  "length": {
                    "hexValue": "38",
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2337:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2330:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2362:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2355:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2389:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2382:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2418:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2411:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 89,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2411:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2254:8:2",
            "nodeType": "StructDefinition",
            "scope": 2026,
            "src": "2247:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 95,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2463:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2445:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 93,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 92,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "2445:8:2"
                },
                "referencedDeclaration": 55,
                "src": "2445:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 94,
              "nodeType": "ArrayTypeName",
              "src": "2445:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 98,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2619:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2582:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 97,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 96,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4773,
                "src": "2582:29:2"
              },
              "referencedDeclaration": 4773,
              "src": "2582:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 103,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2796:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2759:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 102,
              "keyType": {
                "id": 99,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2768:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2759:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 101,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 100,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2779:8:2"
                },
                "referencedDeclaration": 91,
                "src": "2779:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2819:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2811:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 110,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2873:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2840:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 109,
              "keyType": {
                "id": 106,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 108,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 107,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "2860:4:2"
                },
                "referencedDeclaration": 76,
                "src": "2860:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 112,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2899:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2884:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 117,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2959:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "2951:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2951:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 114,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2978:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2981:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2978:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "3011:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "3003:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3003:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3039:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 123,
            "mutability": "mutable",
            "name": "boardSeats",
            "nameLocation": "3068:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 2026,
            "src": "3060:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 121,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3060:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3081:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 132,
            "name": "VerificationAssigned",
            "nameLocation": "3095:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3124:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3116:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3155:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3150:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 128,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "3150:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "3150:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3115:47:2"
            },
            "src": "3089:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 140,
            "name": "VerificationFailed",
            "nameLocation": "3174:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3201:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3193:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3226:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3218:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3192:67:2"
            },
            "src": "3168:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 152,
            "name": "VerificationSucceeded",
            "nameLocation": "3271:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3301:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3293:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3319:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3311:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3337:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3329:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3353:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3345:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3364:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3359:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:86:2"
            },
            "src": "3265:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 162,
            "name": "HashTesting",
            "nameLocation": "3390:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3410:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3402:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3421:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3416:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3444:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3436:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3464:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3458:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:78:2"
            },
            "src": "3384:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 178,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3491:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3517:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3510:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3534:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3527:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3553:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3547:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3578:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3571:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3607:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3600:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3629:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3622:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3651:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3644:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3644:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:158:2"
            },
            "src": "3485:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 188,
            "name": "TaskCompleted",
            "nameLocation": "3679:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3701:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3693:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3719:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3711:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3734:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3727:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3752:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3744:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:65:2"
            },
            "src": "3673:85:2"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4434:239:2",
              "statements": [
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4479:166:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 204,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "4544:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 202,
                                    "name": "wizardTower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4515:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_WizardTower_$5118",
                                      "typeString": "contract WizardTower"
                                    }
                                  },
                                  "id": 203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getWizardOnFloor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2177,
                                  "src": "4515:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4515:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 200,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4496:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$9105",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5394,
                              "src": "4496:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4496:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4551:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4551:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4496:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 213,
                        "nodeType": "IfStatement",
                        "src": "4493:114:2",
                        "trueBody": {
                          "id": 212,
                          "nodeType": "Block",
                          "src": "4563:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4588:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 192,
                              "id": 211,
                              "nodeType": "Return",
                              "src": "4581:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 217,
                        "nodeType": "UncheckedBlock",
                        "src": "4620:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4630:3:2",
                              "subExpression": {
                                "id": 214,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "4632:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 216,
                            "nodeType": "ExpressionStatement",
                            "src": "4630:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 197,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "4462:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 198,
                      "name": "boardSeats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "4467:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4462:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "initializationExpression": {
                    "assignments": [
                      194
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4456:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "4448:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4448:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 196,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4448:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4444:201:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4661:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 192,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4654:12:2"
                }
              ]
            },
            "functionSelector": "3b47fed2",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCallerOnBoard",
            "nameLocation": "4389:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4404:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4428:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:6:2"
            },
            "scope": 2026,
            "src": "4380:293:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "4749:208:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 232,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "4781:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 230,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "4762:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$9105",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5394,
                            "src": "4762:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4762:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4790:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4790:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4762:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 239,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4829:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 237,
                            "name": "wizardTower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "4804:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WizardTower_$5118",
                              "typeString": "contract WizardTower"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOnTheTower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2161,
                          "src": "4804:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4762:74:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 244,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4872:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 242,
                            "name": "wizardTower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "4840:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WizardTower_$5118",
                              "typeString": "contract WizardTower"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getFloorGivenWizard",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2243,
                          "src": "4840:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4840:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 246,
                        "name": "boardSeats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "4882:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4840:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4762:130:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "4759:170:2",
                  "trueBody": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "4893:36:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4914:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 229,
                        "id": 250,
                        "nodeType": "Return",
                        "src": "4907:11:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4945:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 229,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "4938:12:2"
                }
              ]
            },
            "functionSelector": "0f61d8bd",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMyWizardOnBoard",
            "nameLocation": "4688:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "4714:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4706:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:16:2"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4743:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4742:6:2"
            },
            "scope": 2026,
            "src": "4679:278:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "5213:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 264,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "5230:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 266,
                    "indexExpression": {
                      "id": 265,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "5236:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5230:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "5223:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "5148:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "5168:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5160:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5159:17:2"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5200:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 261,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 260,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "5200:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "5200:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5199:13:2"
            },
            "scope": 2026,
            "src": "5139:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "5335:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 278,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "5353:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 279,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5366:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5353:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5382:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5345:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5345:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "5345:56:2"
                },
                {
                  "assignments": [
                    288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 288,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "5427:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "5411:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 286,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5411:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 287,
                        "nodeType": "ArrayTypeName",
                        "src": "5411:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 297,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "5452:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5462:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5452:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "5452:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5439:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 289,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 290,
                        "nodeType": "ArrayTypeName",
                        "src": "5443:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5411:79:2"
                },
                {
                  "body": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "5544:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 309,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "5558:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "id": 310,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "5568:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5558:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 312,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "5573:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 314,
                                "indexExpression": {
                                  "id": 313,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 271,
                                  "src": "5583:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5573:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "5573:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 317,
                            "indexExpression": {
                              "id": 316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "5601:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5573:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5558:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "5558:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 302,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "5519:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 303,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "5522:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5522:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5519:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 321,
                  "initializationExpression": {
                    "assignments": [
                      299
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5512:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "5504:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5504:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 301,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5516:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5504:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5540:3:2",
                      "subExpression": {
                        "id": 306,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "5540:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 308,
                    "nodeType": "ExpressionStatement",
                    "src": "5540:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5500:114:2"
                },
                {
                  "expression": {
                    "id": 322,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 288,
                    "src": "5630:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "5623:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "5266:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5283:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "5275:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5275:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5274:20:2"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "5318:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 273,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "5318:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 274,
                    "nodeType": "ArrayTypeName",
                    "src": "5318:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5317:17:2"
            },
            "scope": 2026,
            "src": "5257:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "5729:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 333,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "5747:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 334,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5760:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5747:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5776:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5739:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 340,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5814:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5814:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 342,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "5832:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 344,
                            "indexExpression": {
                              "id": 343,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 327,
                              "src": "5842:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5832:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "5832:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5814:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5868:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5805:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5805:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "5805:85:2"
                },
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "6018:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "6010:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6010:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6010:19:2"
                },
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "6047:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "6039:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6039:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 355,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6039:25:2"
                },
                {
                  "assignments": [
                    357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 357,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "6082:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "6074:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6074:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 359,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6086:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6074:13:2"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "6160:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 373,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "6213:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 375,
                                "indexExpression": {
                                  "id": 374,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "6223:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6213:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "6213:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 378,
                            "indexExpression": {
                              "id": 377,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "6241:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6213:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 379,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "6246:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6213:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 404,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "6442:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 406,
                                  "indexExpression": {
                                    "id": 405,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "6452:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6442:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84,
                                "src": "6442:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 409,
                              "indexExpression": {
                                "id": 408,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "6470:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6442:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 410,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "6476:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6442:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 417,
                          "nodeType": "IfStatement",
                          "src": "6439:93:2",
                          "trueBody": {
                            "id": 416,
                            "nodeType": "Block",
                            "src": "6494:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 412,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 357,
                                    "src": "6512:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6516:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6512:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 415,
                                "nodeType": "ExpressionStatement",
                                "src": "6512:5:2"
                              }
                            ]
                          }
                        },
                        "id": 418,
                        "nodeType": "IfStatement",
                        "src": "6210:322:2",
                        "trueBody": {
                          "id": 403,
                          "nodeType": "Block",
                          "src": "6265:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 381,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 354,
                                  "src": "6283:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 382,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 103,
                                        "src": "6303:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 384,
                                      "indexExpression": {
                                        "id": 383,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 327,
                                        "src": "6313:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6303:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 385,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 84,
                                    "src": "6303:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 387,
                                  "indexExpression": {
                                    "id": 386,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 361,
                                    "src": "6331:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6303:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "6283:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 389,
                              "nodeType": "ExpressionStatement",
                              "src": "6283:50:2"
                            },
                            {
                              "expression": {
                                "id": 392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 390,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "6351:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 391,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "6365:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6351:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 393,
                              "nodeType": "ExpressionStatement",
                              "src": "6351:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 394,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 357,
                                  "src": "6388:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6393:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6388:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 402,
                              "nodeType": "IfStatement",
                              "src": "6384:23:2",
                              "trueBody": {
                                "id": 401,
                                "nodeType": "Block",
                                "src": "6396:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 397,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 357,
                                        "src": "6398:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6404:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "6398:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 400,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6398:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 364,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "6114:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 365,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "6117:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "id": 366,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "6127:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6117:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "6117:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "6114:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 420,
                  "initializationExpression": {
                    "assignments": [
                      361
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6109:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "6101:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6101:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 363,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6111:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6101:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6156:3:2",
                      "subExpression": {
                        "id": 370,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "6156:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 372,
                    "nodeType": "ExpressionStatement",
                    "src": "6156:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6097:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 422,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "6559:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6564:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6559:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6567:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6551:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6551:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:35:2"
                },
                {
                  "expression": {
                    "id": 428,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 351,
                    "src": "6603:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 331,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "6596:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "5661:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5684:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "5676:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:20:2"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "5719:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5719:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5718:10:2"
            },
            "scope": 2026,
            "src": "5652:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "6749:607:2",
              "statements": [
                {
                  "assignments": [
                    439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 439,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6767:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 496,
                      "src": "6759:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6759:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "6813:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 440,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5095,
                        "src": "6789:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5078,
                      "src": "6789:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6789:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6759:79:2"
                },
                {
                  "assignments": [
                    447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6860:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 496,
                      "src": "6848:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 445,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "6848:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "6848:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6848:18:2"
                },
                {
                  "body": {
                    "id": 492,
                    "nodeType": "Block",
                    "src": "7032:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 456,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "7046:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 457,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "7055:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 466,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 462,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98,
                                      "src": "7089:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 463,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 450,
                                      "src": "7114:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 460,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5095,
                                      "src": "7069:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5032,
                                    "src": "7069:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7069:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7061:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 458,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7061:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7061:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7055:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7046:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "7046:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 469,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "7136:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "7136:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 471,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7175:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7175:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7136:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 474,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "7194:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "7194:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 476,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 433,
                                "src": "7210:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7194:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7136:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 479,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "7220:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 480,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "7220:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 481,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "7239:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7220:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7136:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 487,
                        "nodeType": "IfStatement",
                        "src": "7132:158:2",
                        "trueBody": {
                          "id": 486,
                          "nodeType": "Block",
                          "src": "7246:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7271:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 437,
                              "id": 485,
                              "nodeType": "Return",
                              "src": "7264:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 491,
                        "nodeType": "UncheckedBlock",
                        "src": "7303:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7313:3:2",
                              "subExpression": {
                                "id": 488,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "7315:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 490,
                            "nodeType": "ExpressionStatement",
                            "src": "7313:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 453,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "7006:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 454,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "7010:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7006:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 493,
                  "initializationExpression": {
                    "assignments": [
                      450
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7000:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "6992:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6992:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 452,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7003:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6992:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6988:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7344:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 437,
                  "id": 495,
                  "nodeType": "Return",
                  "src": "7337:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6677:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6712:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "6704:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6703:16:2"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "6743:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6743:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6742:6:2"
            },
            "scope": 2026,
            "src": "6668:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "7465:1507:2",
              "statements": [
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "7483:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "7475:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7475:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "7529:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 511,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5095,
                        "src": "7505:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5078,
                      "src": "7505:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7505:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7475:79:2"
                },
                {
                  "assignments": [
                    518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "7576:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "7564:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 517,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 516,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "7564:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "7564:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7564:18:2"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "7600:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "7592:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7592:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 522,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7592:14:2"
                },
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "7624:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "7616:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7616:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7630:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7616:15:2"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "7686:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 534,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "7700:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 539,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "7737:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 540,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 528,
                                    "src": "7763:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 537,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5095,
                                    "src": "7717:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5032,
                                  "src": "7717:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7717:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7709:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 535,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7709:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7709:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7700:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "7700:66:2"
                      },
                      {
                        "expression": {
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 545,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "7780:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 546,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "7789:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 548,
                            "indexExpression": {
                              "id": 547,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "7795:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7789:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7780:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "7780:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 551,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "7820:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "7820:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 553,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7859:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7859:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7820:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 556,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "7878:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7878:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 558,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "7898:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7878:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7820:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 566,
                        "nodeType": "IfStatement",
                        "src": "7816:140:2",
                        "trueBody": {
                          "id": 565,
                          "nodeType": "Block",
                          "src": "7905:51:2",
                          "statements": [
                            {
                              "id": 564,
                              "nodeType": "UncheckedBlock",
                              "src": "7923:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 562,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7933:7:2",
                                    "subExpression": {
                                      "id": 561,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 524,
                                      "src": "7935:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 563,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7933:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 570,
                        "nodeType": "UncheckedBlock",
                        "src": "7969:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7979:3:2",
                              "subExpression": {
                                "id": 567,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "7981:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 569,
                            "nodeType": "ExpressionStatement",
                            "src": "7979:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 531,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "7660:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 532,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "7664:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7660:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "initializationExpression": {
                    "assignments": [
                      528
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7654:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "7646:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7646:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 530,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7657:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7646:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7642:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 573,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "8051:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8058:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8051:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 604,
                  "nodeType": "IfStatement",
                  "src": "8047:249:2",
                  "trueBody": {
                    "id": 603,
                    "nodeType": "Block",
                    "src": "8061:235:2",
                    "statements": [
                      {
                        "assignments": [
                          580
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 580,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "8089:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 603,
                            "src": "8075:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 578,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 577,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "8075:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "8075:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 579,
                              "nodeType": "ArrayTypeName",
                              "src": "8075:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 587,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8110:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8099:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 582,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 581,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "8103:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "8103:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 583,
                              "nodeType": "ArrayTypeName",
                              "src": "8103:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8099:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8075:37:2"
                      },
                      {
                        "assignments": [
                          592
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 592,
                            "mutability": "mutable",
                            "name": "myReturnUint",
                            "nameLocation": "8143:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 603,
                            "src": "8126:29:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 590,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8126:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 591,
                              "nodeType": "ArrayTypeName",
                              "src": "8126:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 598,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8171:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8157:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 593,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8161:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 594,
                              "nodeType": "ArrayTypeName",
                              "src": "8161:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8157:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8126:47:2"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 599,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "8262:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Governance.Task memory[] memory"
                              }
                            },
                            {
                              "id": 600,
                              "name": "myReturnUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "8272:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 601,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8261:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 508,
                        "id": 602,
                        "nodeType": "Return",
                        "src": "8254:31:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "8314:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "8306:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8306:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8324:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8306:19:2"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "8349:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "8335:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 611,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 610,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8335:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8335:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 612,
                        "nodeType": "ArrayTypeName",
                        "src": "8335:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "8370:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8359:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 615,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 614,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8363:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8363:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 616,
                        "nodeType": "ArrayTypeName",
                        "src": "8363:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8359:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8335:41:2"
                },
                {
                  "assignments": [
                    625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 625,
                      "mutability": "mutable",
                      "name": "myTaskIds",
                      "nameLocation": "8403:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "8386:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8386:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 624,
                        "nodeType": "ArrayTypeName",
                        "src": "8386:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "8429:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8415:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8419:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 627,
                        "nodeType": "ArrayTypeName",
                        "src": "8419:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8415:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8386:49:2"
                },
                {
                  "body": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "8489:440:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 639,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "8503:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 644,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "8540:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 645,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 633,
                                    "src": "8566:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 642,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5095,
                                    "src": "8520:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5032,
                                  "src": "8520:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8520:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8512:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 640,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8512:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8512:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8503:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "8503:66:2"
                      },
                      {
                        "expression": {
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 650,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "8583:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 651,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "8592:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 653,
                            "indexExpression": {
                              "id": 652,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "8598:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8592:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "8583:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "8583:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 656,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "8623:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "8623:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 658,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8662:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8662:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8623:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 661,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "8681:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "8681:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 663,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "8701:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8681:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8623:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 689,
                        "nodeType": "IfStatement",
                        "src": "8619:272:2",
                        "trueBody": {
                          "id": 688,
                          "nodeType": "Block",
                          "src": "8708:183:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 666,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 613,
                                    "src": "8726:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 668,
                                  "indexExpression": {
                                    "id": 667,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 606,
                                    "src": "8734:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8726:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 669,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 518,
                                  "src": "8745:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "8726:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 671,
                              "nodeType": "ExpressionStatement",
                              "src": "8726:25:2"
                            },
                            {
                              "expression": {
                                "id": 676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 672,
                                    "name": "myTaskIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 625,
                                    "src": "8769:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 674,
                                  "indexExpression": {
                                    "id": 673,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 606,
                                    "src": "8779:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8769:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 675,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 521,
                                  "src": "8790:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8769:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 677,
                              "nodeType": "ExpressionStatement",
                              "src": "8769:27:2"
                            },
                            {
                              "id": 681,
                              "nodeType": "UncheckedBlock",
                              "src": "8814:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8824:9:2",
                                    "subExpression": {
                                      "id": 678,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 606,
                                      "src": "8826:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 680,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8824:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 682,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 606,
                                  "src": "8855:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 683,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 524,
                                  "src": "8863:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8855:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 687,
                              "nodeType": "IfStatement",
                              "src": "8852:25:2",
                              "trueBody": {
                                "id": 686,
                                "nodeType": "Block",
                                "src": "8869:8:2",
                                "statements": [
                                  {
                                    "id": 685,
                                    "nodeType": "Break",
                                    "src": "8870:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 693,
                        "nodeType": "UncheckedBlock",
                        "src": "8904:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8914:3:2",
                              "subExpression": {
                                "id": 690,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 633,
                                "src": "8916:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 692,
                            "nodeType": "ExpressionStatement",
                            "src": "8914:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 636,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "8463:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 637,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "8467:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8463:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 695,
                  "initializationExpression": {
                    "assignments": [
                      633
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8457:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 695,
                        "src": "8449:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8449:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 635,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8460:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8449:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8445:484:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 696,
                        "name": "myTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "8946:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Governance.Task memory[] memory"
                        }
                      },
                      {
                        "id": 697,
                        "name": "myTaskIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "8955:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 698,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8945:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 508,
                  "id": 699,
                  "nodeType": "Return",
                  "src": "8938:27:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "7372:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "7401:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "7394:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7394:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7393:15:2"
            },
            "returnParameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "7432:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 502,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 501,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 76,
                        "src": "7432:4:2"
                      },
                      "referencedDeclaration": 76,
                      "src": "7432:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 503,
                    "nodeType": "ArrayTypeName",
                    "src": "7432:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "7447:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 505,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7447:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 506,
                    "nodeType": "ArrayTypeName",
                    "src": "7447:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7431:33:2"
            },
            "scope": 2026,
            "src": "7363:1609:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "9136:1412:2",
              "statements": [
                {
                  "assignments": [
                    710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "9154:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 872,
                      "src": "9146:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9146:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 711,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9146:13:2"
                },
                {
                  "body": {
                    "id": 762,
                    "nodeType": "Block",
                    "src": "9207:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 720,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "9224:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 722,
                                      "indexExpression": {
                                        "id": 721,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 713,
                                        "src": "9234:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9224:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 723,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "9224:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 725,
                                  "indexExpression": {
                                    "id": 724,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 703,
                                    "src": "9261:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9224:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 726,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9271:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9271:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9224:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 729,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "9302:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 731,
                                    "indexExpression": {
                                      "id": 730,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 713,
                                      "src": "9312:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9302:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "9302:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 733,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9331:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9331:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9302:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9224:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 737,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "9350:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 739,
                                  "indexExpression": {
                                    "id": 738,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 713,
                                    "src": "9360:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9350:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "9350:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 741,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9378:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9378:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9350:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9224:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 745,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "9409:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 747,
                                "indexExpression": {
                                  "id": 746,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 713,
                                  "src": "9419:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9409:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "9409:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9439:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9409:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9224:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 757,
                        "nodeType": "IfStatement",
                        "src": "9221:285:2",
                        "trueBody": {
                          "id": 756,
                          "nodeType": "Block",
                          "src": "9455:51:2",
                          "statements": [
                            {
                              "id": 755,
                              "nodeType": "UncheckedBlock",
                              "src": "9473:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9483:7:2",
                                    "subExpression": {
                                      "id": 752,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 710,
                                      "src": "9485:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 754,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9483:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 761,
                        "nodeType": "UncheckedBlock",
                        "src": "9688:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9698:3:2",
                              "subExpression": {
                                "id": 758,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 713,
                                "src": "9700:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 760,
                            "nodeType": "ExpressionStatement",
                            "src": "9698:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 716,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "9186:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 717,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "9189:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9189:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9186:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "initializationExpression": {
                    "assignments": [
                      713
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 713,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9181:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "9173:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9173:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 715,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9183:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9173:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9169:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 764,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "9770:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9777:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9770:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 787,
                  "nodeType": "IfStatement",
                  "src": "9766:139:2",
                  "trueBody": {
                    "id": 786,
                    "nodeType": "Block",
                    "src": "9780:125:2",
                    "statements": [
                      {
                        "assignments": [
                          771
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 771,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "9810:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 786,
                            "src": "9794:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 769,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9794:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 770,
                              "nodeType": "ArrayTypeName",
                              "src": "9794:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 777,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9833:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9820:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 772,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9824:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 773,
                              "nodeType": "ArrayTypeName",
                              "src": "9824:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9820:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9794:41:2"
                      },
                      {
                        "expression": {
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 778,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "9849:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 780,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9858:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9849:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9863:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "9849:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 783,
                        "nodeType": "ExpressionStatement",
                        "src": "9849:16:2"
                      },
                      {
                        "expression": {
                          "id": 784,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "9886:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 708,
                        "id": 785,
                        "nodeType": "Return",
                        "src": "9879:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 792,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9931:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 872,
                      "src": "9915:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 790,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9915:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 791,
                        "nodeType": "ArrayTypeName",
                        "src": "9915:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 796,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "9954:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9941:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 793,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9945:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 794,
                        "nodeType": "ArrayTypeName",
                        "src": "9945:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9941:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9915:45:2"
                },
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9978:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 872,
                      "src": "9970:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9970:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 802,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9988:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9970:19:2"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "10037:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 811,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "10054:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 813,
                                      "indexExpression": {
                                        "id": 812,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 804,
                                        "src": "10064:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10054:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 814,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "10054:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 816,
                                  "indexExpression": {
                                    "id": 815,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 703,
                                    "src": "10091:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10054:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 817,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10101:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10101:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10054:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 820,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "10132:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 822,
                                    "indexExpression": {
                                      "id": 821,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 804,
                                      "src": "10142:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10132:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "10132:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 824,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10161:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 825,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10161:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10132:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10054:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 828,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "10180:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 830,
                                  "indexExpression": {
                                    "id": 829,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 804,
                                    "src": "10190:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10180:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 831,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "10180:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 832,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10208:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10208:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10180:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10054:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 836,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "10239:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 838,
                                "indexExpression": {
                                  "id": 837,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 804,
                                  "src": "10249:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10239:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "10239:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10269:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10239:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10054:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 863,
                        "nodeType": "IfStatement",
                        "src": "10051:429:2",
                        "trueBody": {
                          "id": 862,
                          "nodeType": "Block",
                          "src": "10285:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 843,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 792,
                                    "src": "10303:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 845,
                                  "indexExpression": {
                                    "id": 844,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 800,
                                    "src": "10311:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10303:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 846,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "10322:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 848,
                                    "indexExpression": {
                                      "id": 847,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 804,
                                      "src": "10332:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10322:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "10322:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "10303:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 851,
                              "nodeType": "ExpressionStatement",
                              "src": "10303:40:2"
                            },
                            {
                              "id": 855,
                              "nodeType": "UncheckedBlock",
                              "src": "10361:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "10371:9:2",
                                    "subExpression": {
                                      "id": 852,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 800,
                                      "src": "10373:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 854,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10371:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 856,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 800,
                                  "src": "10402:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 857,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 710,
                                  "src": "10413:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10402:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 861,
                              "nodeType": "IfStatement",
                              "src": "10399:67:2",
                              "trueBody": {
                                "id": 860,
                                "nodeType": "Block",
                                "src": "10420:46:2",
                                "statements": [
                                  {
                                    "id": 859,
                                    "nodeType": "Break",
                                    "src": "10442:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 867,
                        "nodeType": "UncheckedBlock",
                        "src": "10493:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "10503:3:2",
                              "subExpression": {
                                "id": 864,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 804,
                                "src": "10505:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 866,
                            "nodeType": "ExpressionStatement",
                            "src": "10503:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 807,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "10016:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 808,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "10019:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10019:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10016:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 869,
                  "initializationExpression": {
                    "assignments": [
                      804
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10011:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "10003:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10003:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 806,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10013:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10003:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9999:519:2"
                },
                {
                  "expression": {
                    "id": 870,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 792,
                    "src": "10534:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 708,
                  "id": 871,
                  "nodeType": "Return",
                  "src": "10527:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "9057:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "9088:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "9081:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9081:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9080:15:2"
            },
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "9119:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 705,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9119:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 706,
                    "nodeType": "ArrayTypeName",
                    "src": "9119:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9118:17:2"
            },
            "scope": 2026,
            "src": "9048:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "10715:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 880,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10725:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$9105",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 882,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 875,
                          "src": "10746:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 881,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9105,
                        "src": "10738:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$9105_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10738:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$9105",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "10725:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$9105",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "10725:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 878,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 877,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7184,
                  "src": "10705:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10705:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "10667:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "10689:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "10681:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10681:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10680:15:2"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10715:0:2"
            },
            "scope": 2026,
            "src": "10658:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 962,
              "nodeType": "Block",
              "src": "10953:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 960,
                    "nodeType": "Block",
                    "src": "11000:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 903,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11044:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 905,
                                      "indexExpression": {
                                        "id": 904,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 893,
                                        "src": "11054:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11044:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "11044:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 901,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11027:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11027:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11027:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 900,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11017:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11017:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 912,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 889,
                                    "src": "11098:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 910,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11081:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11081:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11081:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 909,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11071:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11071:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11017:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 955,
                        "nodeType": "IfStatement",
                        "src": "11014:1048:2",
                        "trueBody": {
                          "id": 954,
                          "nodeType": "Block",
                          "src": "11110:952:2",
                          "statements": [
                            {
                              "assignments": [
                                918
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 918,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "11209:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 954,
                                  "src": "11192:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 917,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 916,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "11192:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "11192:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 922,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 919,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "11222:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 921,
                                "indexExpression": {
                                  "id": 920,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 893,
                                  "src": "11232:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11222:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11192:42:2"
                            },
                            {
                              "assignments": [
                                925
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 925,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "11269:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 954,
                                  "src": "11252:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 924,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 923,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "11252:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "11252:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 932,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 926,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "11289:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 931,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 927,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "11299:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "11299:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11316:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "11299:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11289:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11252:66:2"
                            },
                            {
                              "expression": {
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 933,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 918,
                                  "src": "11434:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 934,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 925,
                                  "src": "11447:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "11434:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 936,
                              "nodeType": "ExpressionStatement",
                              "src": "11434:30:2"
                            },
                            {
                              "expression": {
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11482:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 937,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11489:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 942,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 938,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11499:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 939,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11499:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11516:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11499:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11489:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 944,
                              "nodeType": "ExpressionStatement",
                              "src": "11482:36:2"
                            },
                            {
                              "expression": {
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11988:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 945,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11995:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 950,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 946,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "12005:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12005:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 948,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12022:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12005:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11995:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 952,
                              "nodeType": "ExpressionStatement",
                              "src": "11988:36:2"
                            },
                            {
                              "id": 953,
                              "nodeType": "Break",
                              "src": "12042:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 959,
                        "nodeType": "UncheckedBlock",
                        "src": "12075:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12085:3:2",
                              "subExpression": {
                                "id": 956,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 893,
                                "src": "12087:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 958,
                            "nodeType": "ExpressionStatement",
                            "src": "12085:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 896,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "10980:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 897,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "10982:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10982:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10980:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 961,
                  "initializationExpression": {
                    "assignments": [
                      893
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10975:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "10967:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10967:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 895,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10977:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10967:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10963:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "10894:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10933:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 963,
                  "src": "10919:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10919:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10918:25:2"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10953:0:2"
            },
            "scope": 2026,
            "src": "10885:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 983,
              "nodeType": "Block",
              "src": "12361:200:2",
              "statements": [
                {
                  "expression": {
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 971,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "12415:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$9105",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 973,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "12436:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 972,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9105,
                        "src": "12428:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$9105_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12428:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$9105",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "12415:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$9105",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:26:2"
                },
                {
                  "expression": {
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 977,
                      "name": "wizardTower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "12451:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$5118",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 979,
                          "name": "_wizardTower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 968,
                          "src": "12477:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 978,
                        "name": "WizardTower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5118,
                        "src": "12465:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WizardTower_$5118_$",
                          "typeString": "type(contract WizardTower)"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12465:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$5118",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "src": "12451:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WizardTower_$5118",
                      "typeString": "contract WizardTower"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "12451:39:2"
                }
              ]
            },
            "documentation": {
              "id": 964,
              "nodeType": "StructuredDocumentation",
              "src": "12220:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 984,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "12334:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "12326:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12326:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_wizardTower",
                  "nameLocation": "12348:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 984,
                  "src": "12340:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12340:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12325:36:2"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12361:0:2"
            },
            "scope": 2026,
            "src": "12314:247:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "12625:7:2",
              "statements": []
            },
            "id": 988,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12605:2:2"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12625:0:2"
            },
            "scope": 2026,
            "src": "12598:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1077,
              "nodeType": "Block",
              "src": "12722:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1000,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "12740:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1001,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "12753:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12740:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12769:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12732:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12732:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "12732:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1009,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "12825:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1007,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12806:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$9105",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5394,
                            "src": "12806:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12806:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1011,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12833:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12833:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12806:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12845:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 1006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12798:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12798:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "12798:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1018,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "12882:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1020,
                            "indexExpression": {
                              "id": 1019,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "12901:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12882:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1022,
                          "indexExpression": {
                            "id": 1021,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "12913:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12882:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12921:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12882:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12924:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12874:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12874:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "12874:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1029,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "12958:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12965:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12958:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1032,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "12970:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1033,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "12979:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 1035,
                              "indexExpression": {
                                "id": 1034,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 990,
                                "src": "12989:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12979:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 1036,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "12979:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12970:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12958:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12950:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12950:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "12950:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1042,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13035:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13035:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1044,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "13053:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 1046,
                            "indexExpression": {
                              "id": 1045,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "13063:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13053:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "13053:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "13035:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13027:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13027:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "13027:61:2"
                },
                {
                  "expression": {
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1051,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "13098:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1054,
                        "indexExpression": {
                          "id": 1052,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "13117:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13098:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1055,
                      "indexExpression": {
                        "id": 1053,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "13129:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13098:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1056,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "13138:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13146:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "13138:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13098:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1060,
                  "nodeType": "ExpressionStatement",
                  "src": "13098:49:2"
                },
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1061,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "13190:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 1063,
                          "indexExpression": {
                            "id": 1062,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "13200:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13190:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "13190:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 1066,
                      "indexExpression": {
                        "id": 1065,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "13218:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13190:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13228:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13190:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "13190:39:2"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1070,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "13258:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 1072,
                        "indexExpression": {
                          "id": 1071,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "13268:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13258:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "13258:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13294:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13258:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "13258:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 1078,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 997,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 996,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "12711:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12711:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "12647:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "12660:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "12652:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12652:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "12680:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "12672:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12672:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "12695:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "12687:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12687:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12651:50:2"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12722:0:2"
            },
            "scope": 2026,
            "src": "12638:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "13530:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1096,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "13548:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13567:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13548:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1099,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "13572:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13591:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "13572:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13548:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13596:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13540:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13540:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "13540:84:2"
                },
                {
                  "expression": {
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1106,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13634:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13652:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13634:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "13634:19:2"
                },
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "13701:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1154,
                      "src": "13684:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 1111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1110,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 91,
                          "src": "13684:8:2"
                        },
                        "referencedDeclaration": 91,
                        "src": "13684:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1116,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1113,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "13714:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 1115,
                    "indexExpression": {
                      "id": 1114,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13724:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13714:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$91_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13684:55:2"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13753:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "13753:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1120,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "13779:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13753:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "13753:39:2"
                },
                {
                  "expression": {
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1123,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13806:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "13806:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1126,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "13832:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13806:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "13806:39:2"
                },
                {
                  "expression": {
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1129,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13859:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "13859:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1132,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "13888:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "13859:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "13859:45:2"
                },
                {
                  "expression": {
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1135,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13918:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "13918:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1138,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "13940:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13918:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "13918:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1142,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "13976:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1145,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "13994:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13987:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1143,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13987:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13987:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14011:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1148,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "14014:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1149,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "14026:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1150,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "14041:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1151,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "14056:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1141,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "13960:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13960:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "13960:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1092,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2025,
                  "src": "13520:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13520:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "13357:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13388:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13372:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13372:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "13406:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13399:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13399:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13431:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13424:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13424:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13450:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13443:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13443:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13472:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13465:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13494:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13487:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13487:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13371:139:2"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13530:0:2"
            },
            "scope": 2026,
            "src": "13348:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1182,
              "nodeType": "Block",
              "src": "14314:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1173,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "14340:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14351:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1175,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "14354:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1176,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "14372:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "14384:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1178,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "14399:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1179,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "14414:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1172,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "14324:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14324:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "14324:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1183,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1169,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2025,
                  "src": "14304:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "14304:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "14126:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14157:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14141:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14141:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1159,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14174:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14168:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14168:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14199:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14192:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14192:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1163,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14218:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14211:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14211:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14256:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14249:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14249:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14278:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "14271:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14271:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14140:154:2"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14314:0:2"
            },
            "scope": 2026,
            "src": "14117:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "14648:726:2",
              "statements": [
                {
                  "assignments": [
                    1201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "14666:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "14658:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14658:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1204,
                  "initialValue": {
                    "expression": {
                      "id": 1202,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14684:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14684:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14658:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1205,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "14710:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14710:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$55_storage_$bound_to$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14710:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "14710:16:2"
                },
                {
                  "assignments": [
                    1212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1212,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "14753:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "14736:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1211,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1210,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55,
                          "src": "14736:8:2"
                        },
                        "referencedDeclaration": 55,
                        "src": "14736:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1216,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1213,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14767:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1215,
                    "indexExpression": {
                      "id": 1214,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "14777:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14767:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14736:57:2"
                },
                {
                  "expression": {
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1217,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "14807:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "14807:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1220,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "14829:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14807:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "14807:31:2"
                },
                {
                  "expression": {
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1223,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "14852:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "14852:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14873:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14852:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "14852:26:2"
                },
                {
                  "expression": {
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1229,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "14892:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14892:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1232,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1187,
                      "src": "14917:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14892:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "14892:36:2"
                },
                {
                  "expression": {
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1235,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "14942:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14942:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1238,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "14972:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14942:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "14942:46:2"
                },
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1241,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "15002:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "15002:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1244,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1191,
                      "src": "15026:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "15002:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "15002:34:2"
                },
                {
                  "expression": {
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1247,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "15050:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "15050:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1250,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "15077:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15050:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "15050:40:2"
                },
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1253,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "15104:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "15104:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1256,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "15131:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15104:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "15104:40:2"
                },
                {
                  "expression": {
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1259,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "15158:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "15158:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1262,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "15187:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "15158:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "15158:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1266,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "15267:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1267,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "15278:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "15291:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "15309:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1270,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "15321:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1271,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "15336:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1272,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "15351:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1265,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "15248:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15248:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1274,
                  "nodeType": "EmitStatement",
                  "src": "15243:124:2"
                }
              ]
            },
            "id": 1276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "14452:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14484:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14468:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14468:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "14502:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14495:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14495:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14521:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14515:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14515:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14546:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14539:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14539:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14578:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14571:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14600:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14593:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14593:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14622:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "14615:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14615:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14467:171:2"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14648:0:2"
            },
            "scope": 2026,
            "src": "14443:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1377,
              "nodeType": "Block",
              "src": "15446:1063:2",
              "statements": [
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "15464:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1377,
                      "src": "15456:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15456:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1287,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1285,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "15510:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1283,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5095,
                        "src": "15486:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5078,
                      "src": "15486:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15486:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15456:79:2"
                },
                {
                  "assignments": [
                    1290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "15557:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1377,
                      "src": "15545:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1289,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1288,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "15545:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "15545:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1291,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15545:18:2"
                },
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "15581:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1377,
                      "src": "15573:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15573:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1294,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15573:14:2"
                },
                {
                  "body": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "15728:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1302,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "15742:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1307,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "15779:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1308,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1296,
                                    "src": "15805:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1305,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5095,
                                    "src": "15759:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5032,
                                  "src": "15759:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15759:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15751:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1303,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15751:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15751:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15742:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "15742:66:2"
                      },
                      {
                        "expression": {
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1313,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "15822:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1314,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "15831:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1316,
                            "indexExpression": {
                              "id": 1315,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "15837:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15831:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "15822:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1318,
                        "nodeType": "ExpressionStatement",
                        "src": "15822:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1319,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "15862:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "15862:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1321,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15901:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15901:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15862:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1324,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "15920:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "15920:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1326,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1278,
                                "src": "15936:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15920:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15862:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1329,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1290,
                                "src": "15946:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "15946:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1331,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "15965:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15946:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15862:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1370,
                        "nodeType": "IfStatement",
                        "src": "15858:554:2",
                        "trueBody": {
                          "id": 1369,
                          "nodeType": "Block",
                          "src": "15972:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1334,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1290,
                                    "src": "16150:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "16150:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1339,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1278,
                                      "src": "16177:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16170:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1337,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16170:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16170:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16150:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1342,
                              "nodeType": "ExpressionStatement",
                              "src": "16150:34:2"
                            },
                            {
                              "expression": {
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1343,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1290,
                                    "src": "16202:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1345,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75,
                                  "src": "16202:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1351,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1348,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16248:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1349,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16248:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1350,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 117,
                                        "src": "16266:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16248:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16241:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1346,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16241:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16241:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "16202:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1354,
                              "nodeType": "ExpressionStatement",
                              "src": "16202:81:2"
                            },
                            {
                              "expression": {
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1355,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "16301:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1357,
                                  "indexExpression": {
                                    "id": 1356,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1293,
                                    "src": "16307:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16301:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1358,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "16317:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16301:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1360,
                              "nodeType": "ExpressionStatement",
                              "src": "16301:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1362,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1278,
                                    "src": "16367:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1363,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1293,
                                    "src": "16375:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1364,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 110,
                                      "src": "16383:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1366,
                                    "indexExpression": {
                                      "id": 1365,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1293,
                                      "src": "16389:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16383:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1361,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "16346:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$76_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16346:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1368,
                              "nodeType": "EmitStatement",
                              "src": "16341:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1374,
                        "nodeType": "UncheckedBlock",
                        "src": "16425:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16435:3:2",
                              "subExpression": {
                                "id": 1371,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "16437:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1373,
                            "nodeType": "ExpressionStatement",
                            "src": "16435:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "15702:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1300,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "15706:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15702:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "initializationExpression": {
                    "assignments": [
                      1296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15696:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "15688:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15688:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15699:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15688:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15684:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "15390:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15429:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "15421:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15421:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15420:16:2"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15446:0:2"
            },
            "scope": 2026,
            "src": "15381:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1515,
              "nodeType": "Block",
              "src": "16601:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1513,
                    "nodeType": "Block",
                    "src": "16734:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1398,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "16772:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1400,
                                      "indexExpression": {
                                        "id": 1399,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "16782:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16772:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1401,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "16772:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1396,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16761:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16761:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16761:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1395,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16751:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16751:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1407,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1380,
                                    "src": "16820:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1405,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16809:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16809:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16809:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1404,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16799:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16799:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "16751:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1508,
                        "nodeType": "IfStatement",
                        "src": "16748:989:2",
                        "trueBody": {
                          "id": 1507,
                          "nodeType": "Block",
                          "src": "16832:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1412,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16918:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1414,
                                          "indexExpression": {
                                            "id": 1413,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1388,
                                            "src": "16928:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16918:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1415,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50,
                                        "src": "16918:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1416,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16947:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16947:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16918:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1419,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16966:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1420,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16966:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1421,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16985:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1423,
                                          "indexExpression": {
                                            "id": 1422,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1388,
                                            "src": "16995:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16985:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1424,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 52,
                                        "src": "16985:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "16966:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "16918:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1427,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17012:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1411,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16910:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16910:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1429,
                              "nodeType": "ExpressionStatement",
                              "src": "16910:124:2"
                            },
                            {
                              "assignments": [
                                1432
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1432,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "17099:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1507,
                                  "src": "17087:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1431,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1430,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 76,
                                      "src": "17087:4:2"
                                    },
                                    "referencedDeclaration": 76,
                                    "src": "17087:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1451,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1434,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1380,
                                    "src": "17113:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1435,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "17123:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1436,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1382,
                                    "src": "17131:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17138:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1438,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17141:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1440,
                                      "indexExpression": {
                                        "id": 1439,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "17151:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17141:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1441,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "17141:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1442,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17171:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1444,
                                      "indexExpression": {
                                        "id": 1443,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "17181:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17171:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1445,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "17171:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17195:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17198:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17201:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17204:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1433,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "17108:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$76_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17108:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17087:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1455,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "17250:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1458,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 112,
                                        "src": "17284:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1457,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17276:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1456,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17276:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17276:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1452,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5095,
                                    "src": "17224:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4805,
                                  "src": "17224:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17224:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1461,
                              "nodeType": "ExpressionStatement",
                              "src": "17224:81:2"
                            },
                            {
                              "expression": {
                                "id": 1466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1462,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "17323:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1464,
                                  "indexExpression": {
                                    "id": 1463,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "17329:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17323:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1465,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1432,
                                  "src": "17352:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "17323:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1467,
                              "nodeType": "ExpressionStatement",
                              "src": "17323:35:2"
                            },
                            {
                              "expression": {
                                "id": 1470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1468,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "17376:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17397:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "17376:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1471,
                              "nodeType": "ExpressionStatement",
                              "src": "17376:22:2"
                            },
                            {
                              "expression": {
                                "id": 1482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1472,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17453:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1474,
                                      "indexExpression": {
                                        "id": 1473,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "17463:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17453:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1475,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "17453:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1477,
                                  "indexExpression": {
                                    "id": 1476,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "17490:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17453:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1478,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17500:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1479,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17500:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1480,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17518:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17500:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17453:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1483,
                              "nodeType": "ExpressionStatement",
                              "src": "17453:71:2"
                            },
                            {
                              "expression": {
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1484,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "17542:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1486,
                                    "indexExpression": {
                                      "id": 1485,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1388,
                                      "src": "17552:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17542:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1487,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "17542:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1488,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17572:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1490,
                                      "indexExpression": {
                                        "id": 1489,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "17582:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17572:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1491,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54,
                                    "src": "17572:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17602:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17572:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "17542:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1495,
                              "nodeType": "ExpressionStatement",
                              "src": "17542:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1497,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "17641:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1500,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1498,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 112,
                                      "src": "17648:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17669:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "17648:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1501,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1380,
                                    "src": "17672:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1502,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17683:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1503,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17683:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1496,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "17627:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17627:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1505,
                              "nodeType": "EmitStatement",
                              "src": "17622:77:2"
                            },
                            {
                              "id": 1506,
                              "nodeType": "Break",
                              "src": "17717:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1512,
                        "nodeType": "UncheckedBlock",
                        "src": "17750:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "17760:3:2",
                              "subExpression": {
                                "id": 1509,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "17762:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1511,
                            "nodeType": "ExpressionStatement",
                            "src": "17760:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1391,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "16714:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1392,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "16716:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16716:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16714:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1514,
                  "initializationExpression": {
                    "assignments": [
                      1388
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16707:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1514,
                        "src": "16699:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16699:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1390,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16711:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16699:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16695:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "16524:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "16551:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "16537:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16537:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "16570:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "16562:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16562:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "16584:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "16577:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "16577:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16536:55:2"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16601:0:2"
            },
            "scope": 2026,
            "src": "16515:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "17898:412:2",
              "statements": [
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "17921:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1585,
                      "src": "17908:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17908:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1534,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1530,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1521,
                          "src": "17950:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1532,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17958:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17950:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1528,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17933:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "17933:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17933:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17908:53:2"
                },
                {
                  "condition": {
                    "id": 1535,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1523,
                    "src": "17974:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1564,
                  "nodeType": "IfStatement",
                  "src": "17971:193:2",
                  "trueBody": {
                    "id": 1563,
                    "nodeType": "Block",
                    "src": "17984:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1561,
                          "nodeType": "Block",
                          "src": "18037:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1544,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1521,
                                    "src": "18055:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1546,
                                  "indexExpression": {
                                    "id": 1545,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1537,
                                    "src": "18063:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18055:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1550,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1521,
                                            "src": "18095:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1552,
                                          "indexExpression": {
                                            "id": 1551,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1537,
                                            "src": "18103:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18095:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1548,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "18078:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1549,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "18078:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1553,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18078:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1547,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "18068:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18068:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "18055:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1556,
                              "nodeType": "ExpressionStatement",
                              "src": "18055:52:2"
                            },
                            {
                              "id": 1560,
                              "nodeType": "UncheckedBlock",
                              "src": "18125:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "18135:3:2",
                                    "subExpression": {
                                      "id": 1557,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1537,
                                      "src": "18137:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1559,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18135:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1540,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "18017:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1541,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1521,
                              "src": "18021:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18021:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18017:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1562,
                        "initializationExpression": {
                          "assignments": [
                            1537
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1537,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18010:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1562,
                              "src": "18002:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1536,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18002:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1539,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18014:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18002:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17998:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1566,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "18181:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1585,
                      "src": "18173:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1565,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18173:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1573,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1570,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "18217:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1568,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18200:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18200:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18200:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1567,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18190:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18190:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18173:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1575,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "18253:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1576,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "18261:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1577,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1518,
                          "src": "18269:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18261:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1579,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1521,
                          "src": "18281:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1581,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18289:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18281:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1582,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "18293:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1574,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "18241:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18241:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1584,
                  "nodeType": "EmitStatement",
                  "src": "18236:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "17816:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "17836:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "17828:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17828:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17865:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "17848:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1519,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17848:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1520,
                    "nodeType": "ArrayTypeName",
                    "src": "17848:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "17879:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "17874:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17874:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17827:61:2"
            },
            "returnParameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17898:0:2"
            },
            "scope": 2026,
            "src": "17807:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1978,
              "nodeType": "Block",
              "src": "19112:4112:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1599,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "19199:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1597,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "19180:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$9105",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5394,
                              "src": "19180:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19180:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1601,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19210:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19210:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19180:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1604,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "19224:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1606,
                              "indexExpression": {
                                "id": 1605,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "19230:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19224:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "19224:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1608,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "19251:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19224:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19180:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19259:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19172:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19172:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1613,
                  "nodeType": "ExpressionStatement",
                  "src": "19172:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1615,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "19312:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19312:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19329:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19312:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19304:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19304:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "19304:27:2"
                },
                {
                  "assignments": [
                    1623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1623,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "19354:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1978,
                      "src": "19342:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1621,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "19342:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "19342:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1627,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1624,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "19363:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1626,
                    "indexExpression": {
                      "id": 1625,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1590,
                      "src": "19369:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19363:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19342:35:2"
                },
                {
                  "assignments": [
                    1629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "19395:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1978,
                      "src": "19387:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19387:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1631,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19403:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19387:17:2"
                },
                {
                  "assignments": [
                    1633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1633,
                      "mutability": "mutable",
                      "name": "deleteTaskFlag",
                      "nameLocation": "19419:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1978,
                      "src": "19414:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1632,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19414:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1635,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19436:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19414:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1636,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1623,
                        "src": "19499:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                          "typeString": "struct Governance.Task memory"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "19499:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19518:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19499:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1668,
                  "nodeType": "IfStatement",
                  "src": "19496:205:2",
                  "trueBody": {
                    "id": 1667,
                    "nodeType": "Block",
                    "src": "19521:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1665,
                          "nodeType": "Block",
                          "src": "19574:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1648,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1593,
                                    "src": "19592:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1650,
                                  "indexExpression": {
                                    "id": 1649,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1641,
                                    "src": "19600:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19592:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1654,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1593,
                                            "src": "19632:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1656,
                                          "indexExpression": {
                                            "id": 1655,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1641,
                                            "src": "19640:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19632:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1652,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19615:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19615:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19615:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1651,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19605:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19605:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19592:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1660,
                              "nodeType": "ExpressionStatement",
                              "src": "19592:52:2"
                            },
                            {
                              "id": 1664,
                              "nodeType": "UncheckedBlock",
                              "src": "19662:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1662,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19672:3:2",
                                    "subExpression": {
                                      "id": 1661,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1641,
                                      "src": "19674:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1663,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19672:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1644,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "19554:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1645,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "19558:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19558:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19554:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1666,
                        "initializationExpression": {
                          "assignments": [
                            1641
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1641,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19547:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1666,
                              "src": "19539:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1640,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19539:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1643,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19551:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19539:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "19535:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1670,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19718:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1978,
                      "src": "19710:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19710:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1677,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1674,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "19754:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1672,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19737:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19737:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19737:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1671,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19727:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19727:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19710:53:2"
                },
                {
                  "assignments": [
                    1679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1679,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19782:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1978,
                      "src": "19774:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1678,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19774:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1687,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1680,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1623,
                          "src": "19796:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "19796:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1682,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "19811:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19796:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19824:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19796:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19820:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19774:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1689,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "19863:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1690,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1623,
                          "src": "19871:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59,
                        "src": "19871:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1692,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "19885:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1693,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "19894:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1694,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "19902:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19915:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19902:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1688,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "19841:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19841:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "EmitStatement",
                  "src": "19836:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1699,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "19932:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19946:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19932:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1912,
                    "nodeType": "Block",
                    "src": "20795:1630:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1776,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "20885:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "20885:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20903:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20885:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1806,
                        "nodeType": "IfStatement",
                        "src": "20882:211:2",
                        "trueBody": {
                          "id": 1805,
                          "nodeType": "Block",
                          "src": "20905:188:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1780,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "20923:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1782,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 73,
                                  "src": "20923:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1785,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1588,
                                      "src": "20947:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "20940:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1783,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "20940:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20940:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "20923:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1788,
                              "nodeType": "ExpressionStatement",
                              "src": "20923:31:2"
                            },
                            {
                              "expression": {
                                "id": 1793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1789,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "20972:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1791,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "20972:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1792,
                                  "name": "myHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "20991:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "20972:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1794,
                              "nodeType": "ExpressionStatement",
                              "src": "20972:25:2"
                            },
                            {
                              "expression": {
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1795,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "21015:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1797,
                                  "indexExpression": {
                                    "id": 1796,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "21021:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21015:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1798,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1623,
                                  "src": "21032:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "21015:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1800,
                              "nodeType": "ExpressionStatement",
                              "src": "21015:23:2"
                            },
                            {
                              "expression": {
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1801,
                                  "name": "deleteTaskFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1633,
                                  "src": "21056:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21073:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "21056:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1804,
                              "nodeType": "ExpressionStatement",
                              "src": "21056:22:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1807,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "21169:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1808,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63,
                            "src": "21169:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1809,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "21189:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "21169:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1910,
                          "nodeType": "Block",
                          "src": "22008:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1884
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1884,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "22122:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1910,
                                  "src": "22114:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1883,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22114:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1887,
                              "initialValue": {
                                "expression": {
                                  "id": 1885,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1623,
                                  "src": "22130:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 69,
                                "src": "22130:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22114:30:2"
                            },
                            {
                              "expression": {
                                "id": 1891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "22162:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1888,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "22169:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1890,
                                  "indexExpression": {
                                    "id": 1889,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "22175:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22169:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1892,
                              "nodeType": "ExpressionStatement",
                              "src": "22162:21:2"
                            },
                            {
                              "assignments": [
                                1894,
                                1896
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1894,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "22207:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1910,
                                  "src": "22202:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1893,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22202:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1896,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "22226:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1910,
                                  "src": "22213:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1895,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22213:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1904,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1902,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22261:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1897,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7170,
                                        "src": "22234:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22234:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "22234:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1901,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1900,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1884,
                                      "src": "22254:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "22234:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22234:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22201:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1906,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1894,
                                    "src": "22340:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1907,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22346:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1905,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22332:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22332:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1909,
                              "nodeType": "ExpressionStatement",
                              "src": "22332:37:2"
                            }
                          ]
                        },
                        "id": 1911,
                        "nodeType": "IfStatement",
                        "src": "21166:1249:2",
                        "trueBody": {
                          "id": 1882,
                          "nodeType": "Block",
                          "src": "21196:795:2",
                          "statements": [
                            {
                              "assignments": [
                                1812
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1812,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21222:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1882,
                                  "src": "21214:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1811,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21214:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1817,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1813,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "21230:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1814,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69,
                                  "src": "21230:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21245:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "21230:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21214:32:2"
                            },
                            {
                              "assignments": [
                                1819
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1819,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "21280:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1882,
                                  "src": "21264:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1818,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21264:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1828,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1824,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1623,
                                          "src": "21321:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                            "typeString": "struct Governance.Task memory"
                                          }
                                        },
                                        "id": 1825,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "21321:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1822,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "21302:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$9105",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1823,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5394,
                                      "src": "21302:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21302:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21294:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1820,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21294:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21294:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21264:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1832,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1623,
                                      "src": "21380:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                        "typeString": "struct Governance.Task memory"
                                      }
                                    },
                                    "id": 1833,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 73,
                                    "src": "21380:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1834,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21398:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1829,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21358:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$9105",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1831,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8726,
                                  "src": "21358:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21358:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1836,
                              "nodeType": "ExpressionStatement",
                              "src": "21358:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1840,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1588,
                                    "src": "21464:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1841,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21472:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1837,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21442:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$9105",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8726,
                                  "src": "21442:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21442:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1843,
                              "nodeType": "ExpressionStatement",
                              "src": "21442:56:2"
                            },
                            {
                              "expression": {
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21583:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1844,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "21590:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1846,
                                  "indexExpression": {
                                    "id": 1845,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "21596:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21590:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1848,
                              "nodeType": "ExpressionStatement",
                              "src": "21583:21:2"
                            },
                            {
                              "assignments": [
                                1850,
                                1852
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1850,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21671:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1882,
                                  "src": "21666:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1849,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21666:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1852,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21690:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1882,
                                  "src": "21677:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1851,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21677:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1859,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21729:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1853,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1819,
                                      "src": "21698:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21698:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1855,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1812,
                                      "src": "21722:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21698:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21698:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21665:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1861,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1850,
                                    "src": "21758:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21764:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1860,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21750:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21750:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1864,
                              "nodeType": "ExpressionStatement",
                              "src": "21750:37:2"
                            },
                            {
                              "expression": {
                                "id": 1875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1865,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1850,
                                      "src": "21843:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1866,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1852,
                                      "src": "21849:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1867,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21842:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21887:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1868,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21857:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1869,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21857:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1870,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21857:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1872,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1871,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1812,
                                        "src": "21880:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21857:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21857:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21842:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1876,
                              "nodeType": "ExpressionStatement",
                              "src": "21842:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1878,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1850,
                                    "src": "21916:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21922:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1877,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21908:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21908:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1881,
                              "nodeType": "ExpressionStatement",
                              "src": "21908:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1913,
                  "nodeType": "IfStatement",
                  "src": "19928:2497:2",
                  "trueBody": {
                    "id": 1775,
                    "nodeType": "Block",
                    "src": "19948:833:2",
                    "statements": [
                      {
                        "assignments": [
                          1703
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1703,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "20034:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "20026:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1702,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20026:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1708,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1704,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "20042:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1705,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "20042:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20057:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "20042:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20026:32:2"
                      },
                      {
                        "assignments": [
                          1710
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1710,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "20088:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "20072:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20072:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1719,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1715,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1623,
                                    "src": "20131:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1716,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "20131:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1713,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "20112:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$9105",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5394,
                                "src": "20112:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20112:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20104:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1711,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20104:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20104:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20072:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1723,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "20240:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1724,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "20240:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1725,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "20254:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1726,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "20254:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1720,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "20218:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$9105",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8726,
                            "src": "20218:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20218:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1728,
                        "nodeType": "ExpressionStatement",
                        "src": "20218:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1732,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "20307:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1733,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "20307:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1734,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "20326:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1729,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "20285:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$9105",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8726,
                            "src": "20285:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20285:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "20285:67:2"
                      },
                      {
                        "expression": {
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20429:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1737,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "20436:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1739,
                            "indexExpression": {
                              "id": 1738,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "20442:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20436:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1741,
                        "nodeType": "ExpressionStatement",
                        "src": "20429:21:2"
                      },
                      {
                        "assignments": [
                          1743,
                          1745
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1743,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "20509:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "20504:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1742,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20504:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1745,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20528:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1775,
                            "src": "20515:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1744,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "20515:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1752,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20569:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1746,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "20536:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20536:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1748,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "20562:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20536:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20536:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20503:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1754,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1743,
                              "src": "20594:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20600:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1753,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20586:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20586:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1757,
                        "nodeType": "ExpressionStatement",
                        "src": "20586:37:2"
                      },
                      {
                        "expression": {
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1758,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1743,
                                "src": "20671:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1759,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1745,
                                "src": "20677:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1760,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20670:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20715:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1761,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20685:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20685:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20685:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1764,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1703,
                                  "src": "20708:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20685:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20685:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20670:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1769,
                        "nodeType": "ExpressionStatement",
                        "src": "20670:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1771,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1743,
                              "src": "20740:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20746:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1770,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20732:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20732:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ExpressionStatement",
                        "src": "20732:37:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1914,
                    "name": "deleteTaskFlag",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1633,
                    "src": "22489:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1977,
                  "nodeType": "IfStatement",
                  "src": "22486:731:2",
                  "trueBody": {
                    "id": 1976,
                    "nodeType": "Block",
                    "src": "22504:713:2",
                    "statements": [
                      {
                        "assignments": [
                          1916
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1916,
                            "mutability": "mutable",
                            "name": "totalTasksSubmitted",
                            "nameLocation": "22526:19:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1976,
                            "src": "22518:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1915,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22518:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1921,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1919,
                              "name": "tasksWaitingConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "22572:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            ],
                            "expression": {
                              "id": 1917,
                              "name": "DoubleEndedQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5095,
                              "src": "22548:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                "typeString": "type(library DoubleEndedQueue)"
                              }
                            },
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5078,
                            "src": "22548:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22548:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22518:79:2"
                      },
                      {
                        "body": {
                          "id": 1974,
                          "nodeType": "Block",
                          "src": "22739:468:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1933,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22789:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 1934,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1923,
                                          "src": "22815:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1931,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5095,
                                          "src": "22769:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1932,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5032,
                                        "src": "22769:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4773_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 1935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22769:48:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22761:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1929,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22761:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22761:57:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1937,
                                  "name": "_taskID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1590,
                                  "src": "22820:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22761:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1969,
                              "nodeType": "IfStatement",
                              "src": "22757:404:2",
                              "trueBody": {
                                "id": 1968,
                                "nodeType": "Block",
                                "src": "22828:333:2",
                                "statements": [
                                  {
                                    "assignments": [
                                      1940
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1940,
                                        "mutability": "mutable",
                                        "name": "prevFront",
                                        "nameLocation": "22858:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1968,
                                        "src": "22850:17:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "typeName": {
                                          "id": 1939,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22850:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1945,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 1943,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22896:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1941,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5095,
                                          "src": "22870:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$5095_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "popFront",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4931,
                                        "src": "22870:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4773_storage_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"
                                        }
                                      },
                                      "id": 1944,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22870:51:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "22850:71:2"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1948,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1946,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1923,
                                        "src": "22946:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1947,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22949:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "22946:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1967,
                                    "nodeType": "IfStatement",
                                    "src": "22943:200:2",
                                    "trueBody": {
                                      "id": 1966,
                                      "nodeType": "Block",
                                      "src": "22951:192:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1964,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "id": 1949,
                                                  "name": "tasksWaitingConfirmation",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 98,
                                                  "src": "23028:24:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                                    "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                  }
                                                },
                                                "id": 1961,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_data",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4772,
                                                "src": "23028:30:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_int128_$_t_bytes32_$",
                                                  "typeString": "mapping(int128 => bytes32)"
                                                }
                                              },
                                              "id": 1962,
                                              "indexExpression": {
                                                "arguments": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    },
                                                    "id": 1959,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "id": 1953,
                                                        "name": "tasksWaitingConfirmation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 98,
                                                        "src": "23066:24:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Bytes32Deque_$4773_storage",
                                                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                        }
                                                      },
                                                      "id": 1954,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "_begin",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 4766,
                                                      "src": "23066:31:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int128",
                                                        "typeString": "int128"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                      "arguments": [
                                                        {
                                                          "id": 1957,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1923,
                                                          "src": "23104:1:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        ],
                                                        "id": 1956,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "23100:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_int256_$",
                                                          "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                          "id": 1955,
                                                          "name": "int",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "23100:3:2",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 1958,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "23100:6:2",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                      }
                                                    },
                                                    "src": "23066:40:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  ],
                                                  "id": 1952,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "23059:6:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int128_$",
                                                    "typeString": "type(int128)"
                                                  },
                                                  "typeName": {
                                                    "id": 1951,
                                                    "name": "int128",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "23059:6:2",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1960,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "23059:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_int128",
                                                  "typeString": "int128"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "23028:80:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 1963,
                                              "name": "prevFront",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1940,
                                              "src": "23111:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "src": "23028:92:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "id": 1965,
                                          "nodeType": "ExpressionStatement",
                                          "src": "23028:92:2"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1973,
                              "nodeType": "UncheckedBlock",
                              "src": "23178:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "23188:3:2",
                                    "subExpression": {
                                      "id": 1970,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1923,
                                      "src": "23190:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1972,
                                  "nodeType": "ExpressionStatement",
                                  "src": "23188:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1926,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "22713:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1927,
                            "name": "totalTasksSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1916,
                            "src": "22717:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22713:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1975,
                        "initializationExpression": {
                          "assignments": [
                            1923
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1923,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "22707:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1975,
                              "src": "22699:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1922,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22699:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1925,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22710:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22699:12:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "22695:512:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "19025:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "19052:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1979,
                  "src": "19044:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19044:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "19068:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1979,
                  "src": "19060:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19060:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "19094:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1979,
                  "src": "19077:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1591,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "19077:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1592,
                    "nodeType": "ArrayTypeName",
                    "src": "19077:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19043:59:2"
            },
            "returnParameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19112:0:2"
            },
            "scope": 2026,
            "src": "19016:4208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1987,
              "nodeType": "Block",
              "src": "23333:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23351:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23357:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23343:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23343:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "23343:30:2"
                },
                {
                  "id": 1986,
                  "nodeType": "PlaceholderStatement",
                  "src": "23383:1:2"
                }
              ]
            },
            "id": 1988,
            "name": "onlyAdmin",
            "nameLocation": "23321:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23330:2:2"
            },
            "src": "23312:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1996,
              "nodeType": "Block",
              "src": "23421:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23439:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23445:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23431:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23431:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "23431:30:2"
                },
                {
                  "id": 1995,
                  "nodeType": "PlaceholderStatement",
                  "src": "23471:1:2"
                }
              ]
            },
            "id": 1997,
            "name": "onlyNFTOwner",
            "nameLocation": "23406:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23418:2:2"
            },
            "src": "23397:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2005,
              "nodeType": "Block",
              "src": "23507:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23525:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23531:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23517:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23517:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "23517:31:2"
                },
                {
                  "id": 2004,
                  "nodeType": "PlaceholderStatement",
                  "src": "23558:1:2"
                }
              ]
            },
            "id": 2006,
            "name": "onlyLessee",
            "nameLocation": "23494:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23504:2:2"
            },
            "src": "23485:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2014,
              "nodeType": "Block",
              "src": "23594:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23634:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 2010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23640:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23626:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23626:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2012,
                  "nodeType": "ExpressionStatement",
                  "src": "23626:31:2"
                },
                {
                  "id": 2013,
                  "nodeType": "PlaceholderStatement",
                  "src": "23667:1:2"
                }
              ]
            },
            "id": 2015,
            "name": "onlyMember",
            "nameLocation": "23581:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23591:2:2"
            },
            "src": "23572:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "23725:202:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2018,
                          "name": "isCallerOnBoard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "23798:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23798:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23817:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 2017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23790:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23790:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "23790:50:2"
                },
                {
                  "id": 2023,
                  "nodeType": "PlaceholderStatement",
                  "src": "23919:1:2"
                }
              ]
            },
            "id": 2025,
            "name": "onlyBoard",
            "nameLocation": "23713:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23722:2:2"
            },
            "src": "23704:223:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2027,
        "src": "771:23163:2",
        "usedErrors": [
          4761,
          4764
        ]
      }
    ],
    "src": "0:23934:2"
  },
  "bytecode": "6080604052610258600c5562015180600d556003600e553480156200002357600080fd5b5060405162004668380380620046688339810160408190526200004691620000f7565b6001600055620000563362000088565b600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556200012f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000f257600080fd5b919050565b600080604083850312156200010b57600080fd5b6200011683620000da565b91506200012660208401620000da565b90509250929050565b614529806200013f6000396000f3fe6080604052600436106101855760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104fd578063f4739bd91461051d578063f713b7ed1461053d578063ff9810991461055d57600080fd5b8063d374a2171461047d578063e95d23471461049d578063f18c51d3146104dd57600080fd5b80638d9776721461038f5780638da5cb5b146103c557806390b293d8146103ed578063976217cd14610403578063b2bad54414610430578063beca3a161461045d57600080fd5b806361f9e9a81161013e578063715018a611610118578063715018a61461031a57806372e185ce1461032f578063826b8ebd1461034f5780638a6655d61461036f57600080fd5b806361f9e9a8146102945780636215597b146102b457806369d03738146102fa57600080fd5b8063013cf08b1461019157806309265ce6146101cb5780630f61d8bd146101ed57806310190ef11461021d5780633b47fed2146102515780634b50f16a1461026657600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac3660046135d1565b61058a565b6040516101c2959493929190613642565b60405180910390f35b3480156101d757600080fd5b506101eb6101e6366004613759565b610656565b005b3480156101f957600080fd5b5061020d6102083660046135d1565b61079c565b60405190151581526020016101c2565b34801561022957600080fd5b5061023d6102383660046135d1565b61091b565b6040516101c29897969594939291906137b3565b34801561025d57600080fd5b5061020d610a25565b34801561027257600080fd5b50610286610281366004613832565b610b33565b6040516101c292919061391e565b3480156102a057600080fd5b506101eb6102af366004613a26565b610fc7565b3480156102c057600080fd5b506102ec6102cf366004613ac3565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c2565b34801561030657600080fd5b506101eb610315366004613afa565b611031565b34801561032657600080fd5b506101eb61107d565b34801561033b57600080fd5b506101eb61034a366004613b86565b6110b3565b34801561035b57600080fd5b506102ec61036a3660046135d1565b611529565b34801561037b57600080fd5b506101eb61038a366004613bdc565b61174c565b34801561039b57600080fd5b506103af6103aa3660046135d1565b611785565b6040516101c29a99989796959493929190613c08565b3480156103d157600080fd5b506001546040516001600160a01b0390911681526020016101c2565b3480156103f957600080fd5b506102ec600b5481565b34801561040f57600080fd5b5061042361041e3660046135d1565b611887565b6040516101c29190613c89565b34801561043c57600080fd5b5061045061044b366004613832565b6119c9565b6040516101c29190613c9c565b34801561046957600080fd5b506101eb610478366004613cfe565b611d8f565b34801561048957600080fd5b506101eb6104983660046135d1565b611eef565b3480156104a957600080fd5b506006546104c390600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101c2565b3480156104e957600080fd5b506101eb6104f8366004613d4e565b612226565b34801561050957600080fd5b506101eb610518366004613afa565b612c43565b34801561052957600080fd5b5061020d6105383660046135d1565b612cde565b34801561054957600080fd5b506101eb610558366004613d9d565b612eae565b34801561056957600080fd5b5061057d6105783660046135d1565b61304b565b6040516101c29190613dd9565b6008602052600090815260409020805481906105a590613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546105d190613e21565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061066b5761066b613e5b565b602002602001015160405160200161068591815260200190565b604051602081830303815290604052905081156107115760005b835181101561070f578381815181106106ba576106ba613e5b565b60200260200101516040516020016106d491815260200190565b604051602081830303815290604052805190602001208482815181106106fc576106fc613e5b565b602090810291909101015260010161069f565b505b6000836040516020016107249190613e71565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061077457610774613e5b565b60200260200101518560405161078d9493929190613ea7565b60405180910390a15050505050565b6002546040516331a9108f60e11b81526004810183905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190613ed8565b6001600160a01b031614801561088c5750600354604051631d828f8360e31b8152600481018490526001600160a01b039091169063ec147c1890602401602060405180830381865afa158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190613ef5565b80156109065750600e546003546040516301245c6b60e21b8152600481018590526001600160a01b039091169063049171ac90602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190613f12565b11155b1561091357506001919050565b506000919050565b6005818154811061092b57600080fd5b906000526020600020906003020160009150905080600101805461094e90613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461097a90613e21565b80156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b600060015b600e548111610b2b576002546003546040516301038d3760e61b81526004810184905233926001600160a01b0390811692636352211e929116906340e34dc090602401602060405180830381865afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190613f12565b6040518263ffffffff1660e01b8152600401610acc91815260200190565b602060405180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d9190613ed8565b6001600160a01b031603610b2357600191505090565b600101610a2a565b506000905090565b6060806000610b51600654600f81810b600160801b909204900b0390565b9050610b5b613533565b600080805b84811015610ce357610b73600682613175565b6000818152600a602052604090819020815161014081019092528054929550909182908290610ba190613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90613e21565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610ccf57508764ffffffffff168460e0015161ffff16145b15610cdb578160010191505b600101610b60565b5080600003610d5057604080516001808252818301909252600091816020015b610d0b613533565b815260200190600190039081610d03575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610d6b57610d6b613686565b604051908082528060200260200182016040528015610da457816020015b610d91613533565b815260200190600190039081610d895790505b5090506000836001600160401b03811115610dc157610dc1613686565b604051908082528060200260200182016040528015610dea578160200160208202803683370190505b50905060005b87811015610fb757610e03600682613175565b6000818152600a602052604090819020815161014081019092528054929850909182908290610e3190613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5d90613e21565b8015610eaa5780601f10610e7f57610100808354040283529160200191610eaa565b820191906000526020600020905b815481529060010190602001808311610e8d57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610f5f57508a64ffffffffff168760e0015161ffff16145b15610faf5786838581518110610f7757610f77613e5b565b602002602001018190525085828581518110610f9557610f95613e5b565b602002602001018181525050836001019350848411610fb7575b600101610df0565b5090999098509650505050505050565b610fcf610a25565b6110175760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b6110288787600088888888886131e6565b50505050505050565b6001546001600160a01b0316331461105b5760405162461bcd60e51b815260040161100e90613f2b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146110a75760405162461bcd60e51b815260040161100e90613f2b565b6110b16000613365565b565b60005b60055481101561152357836040516020016110d19190613f60565b60405160208183030381529060405280519060200120600582815481106110fa576110fa613e5b565b906000526020600020906003020160010160405160200161111b9190613ff0565b604051602081830303815290604052805190602001200361151b57426005828154811061114a5761114a613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906111ae57506005818154811061118857611188613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6111f05760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b604482015260640161100e565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b81526020016005848154811061123357611233613e5b565b906000526020600020906003020160020160069054906101000a900460ff1660ff1681526020016005848154811061126d5761126d613e5b565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a9052208151919250829181906113029082614052565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b8054600090611401908490614127565b9091555061141490504262015180614127565b6005838154811061142757611427613e5b565b6000918252602080832064ffffffffff8816845260039092029091019052604090205560058054600191908490811061146257611462613e5b565b906000526020600020906003020160020160149054906101000a900461ffff1661148c919061413f565b6005838154811061149f5761149f613e5b565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b546114fb9190614162565b874260405161150d9493929190614179565b60405180910390a150611523565b6001016110b6565b50505050565b6000600954821061156f5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161100e565b600082815260086020526040902060030154600160501b900464ffffffffff1642116115d35760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161100e565b6000806000805b60008681526008602052604090206001015461ffff16811015611701578260086000888152602001908152602001600020600201826008811061161f5761161f613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff16111561169f5760086000878152602001908152602001600020600201816008811061166a5761166a613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361169a57600091505b6116ef565b826008600088815260200190815260200160002060020182600881106116c7576116c7613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff16036116ef57600191505b806116f9816141b0565b9150506115da565b5080156117435760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161100e565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161100e565b600a602052600090815260409020805481906117a090613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546117cc90613e21565b80156118195780601f106117ee57610100808354040283529160200191611819565b820191906000526020600020905b8154815290600101906020018083116117fc57829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61188f613533565b6000828152600a602052604090819020815161014081019092528054829082906118b890613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546118e490613e21565b80156119315780601f1061190657610100808354040283529160200191611931565b820191906000526020600020905b81548152906001019060200180831161191457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b600554811015611ae15742600582815481106119ed576119ed613e5b565b6000918252602080832064ffffffffff89168452600390920290910190526040902054108015611a5157504260058281548110611a2c57611a2c613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611a9057504260058281548110611a6c57611a6c613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611acd5750600160058281548110611aac57611aac613e5b565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611ad9578160010191505b6001016119cf565b5080600003611b4d57604080516001808252818301909252600091816020015b6060815260200190600190039081611b015790505090506040518060200160405280600081525081600081518110611b3b57611b3b613e5b565b60209081029190910101529392505050565b6000816001600160401b03811115611b6757611b67613686565b604051908082528060200260200182016040528015611b9a57816020015b6060815260200190600190039081611b855790505b5090506000805b600554811015611d85574260058281548110611bbf57611bbf613e5b565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611c2357504260058281548110611bfe57611bfe613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611c6257504260058281548110611c3e57611c3e613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611c9f5750600160058281548110611c7e57611c7e613e5b565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611d7d5760058181548110611cb757611cb7613e5b565b90600052602060002090600302016001018054611cd390613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611cff90613e21565b8015611d4c5780601f10611d2157610100808354040283529160200191611d4c565b820191906000526020600020905b815481529060010190602001808311611d2f57829003601f168201915b5050505050838381518110611d6357611d63613e5b565b602002602001018190525081600101915083821015611d85575b600101611ba1565b5090949350505050565b611d97610a25565b611dda5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b604482015260640161100e565b60018561ffff16118015611df357506101018561ffff16105b611e3f5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161100e565b600160096000828254611e529190614127565b909155505060095460009081526008602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611ed1888a836141c9565b50611ee588886009546000898989896131e6565b5050505050505050565b6000611f0a600654600f81810b600160801b909204900b0390565b9050611f14613533565b6000805b8381101561221f57611f2b600682613175565b6000818152600a602052604090819020815161014081019092528054929450909182908290611f5990613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611f8590613e21565b8015611fd25780601f10611fa757610100808354040283529160200191611fd2565b820191906000526020600020905b815481529060010190602001808311611fb557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015612084575084836020015164ffffffffff1614155b801561209957508483610100015161ffff1614155b156122175761ffff851660e0840152600c546120b59042614127565b64ffffffffff166101208401526000828152600a60205260409020835184919081906120e19082614052565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df2689161220e9188918691614288565b60405180910390a15b600101611f18565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561226f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122939190613ed8565b6001600160a01b03161480156122c457506000828152600a6020526040902060040154600160701b900461ffff1683145b6123105760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a617264604482015260640161100e565b600081511161231e57600080fd5b6000828152600a60205260408082208151610140810190925280548290829061234690613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461237290613e21565b80156123bf5780601f10612394576101008083540402835291602001916123bf565b820191906000526020600020905b8154815290600101906020018083116123a257829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b909204909416610120909301929092529183015192935060009216156124dc5760005b84518110156124da5784818151811061248557612485613e5b565b602002602001015160405160200161249f91815260200190565b604051602081830303815290604052805190602001208582815181106124c7576124c7613e5b565b602090810291909101015260010161246a565b505b6000846040516020016124ef9190613e71565b60405160208183030381529060405280519060200120905060008185604001511461251b57600061251e565b60015b602086810151604080518c815264ffffffffff909216928201929092529081018990526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361284157600060028660c001516125a19190614353565b60025460e08801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126289190613ed8565b600254602089015160a08a0151604051638ad4d6a560e01b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561268a57600080fd5b505af115801561269e573d6000803e3d6000fd5b505060025460e08a0151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156126fa57600080fd5b505af115801561270e573d6000803e3d6000fd5b50505060008a8152600a60205260408120915061272b8282613587565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146127a9576040519150601f19603f3d011682016040523d82523d6000602084013e6127ae565b606091505b5091509150816127d05760405162461bcd60e51b815260040161100e90614387565b60405133908590600081818185875af1925050503d8060008114612810576040519150601f19603f3d011682016040523d82523d6000602084013e612815565b606091505b509092509050816128385760405162461bcd60e51b815260040161100e90614387565b50505050612bac565b84610100015161ffff166000036129735761ffff8816610100860152606085018290526000878152600a60205260409020855186919081906128839082614052565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b81856060015103612ac657600060028660c001516129919190614353565b6002546101008801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156129f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a199190613ed8565b600254610100890151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015612a7257600080fd5b505af1158015612a86573d6000803e3d6000fd5b5050600254600d54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a591506044016126e0565b60c08501516000888152600a602052604081206001600160501b039092169190612af08282613587565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580612b376001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114612b81576040519150601f19603f3d011682016040523d82523d6000602084013e612b86565b606091505b509150915081612ba85760405162461bcd60e51b815260040161100e90614387565b5050505b8215611ee5576000612bcd600654600f81810b600160801b909204900b0390565b905060005b81811015612c375788612be6600683613175565b03612c2f576000612bf760066133b7565b90508115612c2d576006548190600790600090612c18908690600f0b6143b5565b600f0b81526020810191909152604001600020555b505b600101612bd2565b50505050505050505050565b6001546001600160a01b03163314612c6d5760405162461bcd60e51b815260040161100e90613f2b565b6001600160a01b038116612cd25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161100e565b612cdb81613365565b50565b600080612cfa600654600f81810b600160801b909204900b0390565b9050612d04613533565b60005b82811015612ea357600a6000612d1e600684613175565b60001c815260200190815260200160002060405180610140016040529081600082018054612d4b90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054612d7790613e21565b8015612dc45780601f10612d9957610100808354040283529160200191612dc4565b820191906000526020600020905b815481529060010190602001808311612da757829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612e76575084826020015164ffffffffff1614155b8015612e8b57508482610100015161ffff1614155b15612e9b57506001949350505050565b600101612d07565b506000949350505050565b60005b6005548110156130475781604051602001612ecc91906143f6565b6040516020818303038152906040528051906020012060058281548110612ef557612ef5613e5b565b9060005260206000209060030201600101604051602001612f169190614412565b604051602081830303815290604052805190602001200361303f57600060058281548110612f4657612f46613e5b565b90600052602060002090600302019050600060056001600580549050612f6c9190614162565b81548110612f7c57612f7c613e5b565b9060005260206000209060030201905080915060056001600580549050612fa39190614162565b81548110612fb357612fb3613e5b565b90600052602060002090600302016000600182016000612fd39190613587565b5060020180546001600160b01b031916905560058054612ff590600190614162565b8154811061300557613005613e5b565b906000526020600020906003020160006001820160006130259190613587565b5060020180546001600160b01b0319169055506130479050565b600101612eb1565b5050565b606060095482106130915760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161100e565b60008281526008602052604081206001015461ffff166001600160401b038111156130be576130be613686565b6040519080825280602002602001820160405280156130e7578160200160208202803683370190505b50905060005b815181101561316e5760086000858152602001908152602001600020600201816008811061311d5761311d613e5b565b601091828204019190066002029054906101000a900461ffff1682828151811061314957613149613e5b565b61ffff9092166020928302919091019091015280613166816141b0565b9150506130ed565b5092915050565b60008061319861318484613436565b85546131939190600f0b6143b5565b6134a4565b8454909150600160801b9004600f90810b9082900b126131cb57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600580546001810180835560008381529192908390811061320957613209613e5b565b6000918252602090912060039091020190506001810161322a8a8c836141c9565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051613351989796959493929190614484565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006133d28254600f81810b600160801b909204900b131590565b156133f057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b038211156134a05760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161100e565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906134d757506f7fffffffffffffffffffffffffffffff8213155b6134a05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161100e565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461359390613e21565b6000825580601f106135a3575050565b601f016020900490600052602060002090810190612cdb91905b808211156134a057600081556001016135bd565b6000602082840312156135e357600080fd5b5035919050565b60005b838110156136055781810151838201526020016135ed565b838111156115235750506000910152565b6000815180845261362e8160208601602086016135ea565b601f01601f19169290920160200192915050565b60a08152600061365560a0830188613616565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156136c4576136c4613686565b604052919050565b600082601f8301126136dd57600080fd5b813560206001600160401b038211156136f8576136f8613686565b8160051b61370782820161369c565b928352848101820192828101908785111561372157600080fd5b83870192505b8483101561374057823582529183019190830190613727565b979650505050505050565b8015158114612cdb57600080fd5b60008060006060848603121561376e57600080fd5b8335925060208401356001600160401b0381111561378b57600080fd5b613797868287016136cc565b92505060408401356137a88161374b565b809150509250925092565b60006101008083526137c78184018c613616565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461382d57600080fd5b919050565b60006020828403121561384457600080fd5b61384d82613818565b9392505050565b6000610140825181855261386a82860182613616565b9150506020830151613885602086018264ffffffffff169052565b50604083015160408501526060830151606085015260808301516138ae608086018260ff169052565b5060a08301516138c560a086018262ffffff169052565b5060c08301516138e060c08601826001600160501b03169052565b5060e08301516138f660e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611d85565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561397557605f19888703018552613963868351613854565b95509382019390820190600101613947565b50508584038187015286518085528782019482019350915060005b828110156139ac57845184529381019392810192600101613990565b5091979650505050505050565b60008083601f8401126139cb57600080fd5b5081356001600160401b038111156139e257600080fd5b6020830191508360208285010111156139fa57600080fd5b9250929050565b803562ffffff8116811461382d57600080fd5b803561ffff8116811461382d57600080fd5b600080600080600080600060c0888a031215613a4157600080fd5b87356001600160401b03811115613a5757600080fd5b613a638a828b016139b9565b909850965050602088013560ff81168114613a7d57600080fd5b9450613a8b60408901613a01565b9350613a9960608901613818565b9250613aa760808901613818565b9150613ab560a08901613a14565b905092959891949750929550565b60008060408385031215613ad657600080fd5b50508035926020909101359150565b6001600160a01b0381168114612cdb57600080fd5b600060208284031215613b0c57600080fd5b813561384d81613ae5565b600082601f830112613b2857600080fd5b81356001600160401b03811115613b4157613b41613686565b613b54601f8201601f191660200161369c565b818152846020838601011115613b6957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b9b57600080fd5b83356001600160401b03811115613bb157600080fd5b613bbd86828701613b17565b93505060208401359150613bd360408501613818565b90509250925092565b600080600060608486031215613bf157600080fd5b505081359360208301359350604090920135919050565b6000610140808352613c1c8184018e613616565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061384d6020830184613854565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613cf157603f19888603018452613cdf858351613616565b94509285019290850190600101613cc3565b5092979650505050505050565b600080600080600080600060c0888a031215613d1957600080fd5b87356001600160401b03811115613d2f57600080fd5b613d3b8a828b016139b9565b9098509650613a7d905060208901613a14565b600080600060608486031215613d6357600080fd5b833592506020840135915060408401356001600160401b03811115613d8757600080fd5b613d93868287016136cc565b9150509250925092565b600060208284031215613daf57600080fd5b81356001600160401b03811115613dc557600080fd5b613dd184828501613b17565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613e1557835161ffff1683529284019291840191600101613df5565b50909695505050505050565b600181811c90821680613e3557607f821691505b602082108103613e5557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613e9b57815185529382019390820190600101613e7f565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613ece6080830184613616565b9695505050505050565b600060208284031215613eea57600080fd5b815161384d81613ae5565b600060208284031215613f0757600080fd5b815161384d8161374b565b600060208284031215613f2457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061384d6020830184613616565b60008154613f8081613e21565b808552602060018381168015613f9d5760018114613fb757613fe5565b60ff1985168884015283151560051b880183019550613fe5565b866000528260002060005b85811015613fdd5781548a8201860152908301908401613fc2565b890184019650505b505050505092915050565b60208152600061384d6020830184613f73565b601f82111561404d57600081815260208120601f850160051c8101602086101561402a5750805b601f850160051c820191505b8181101561404957828155600101614036565b5050505b505050565b81516001600160401b0381111561406b5761406b613686565b61407f816140798454613e21565b84614003565b602080601f8311600181146140b4576000841561409c5750858301515b600019600386901b1c1916600185901b178555614049565b600085815260208120601f198616915b828110156140e3578886015182559484019460019091019084016140c4565b50858210156141015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000821982111561413a5761413a614111565b500190565b600061ffff8381169083168181101561415a5761415a614111565b039392505050565b60008282101561417457614174614111565b500390565b64ffffffffff8516815283602082015260806040820152600061419f6080830185613616565b905082606083015295945050505050565b6000600182016141c2576141c2614111565b5060010190565b6001600160401b038311156141e0576141e0613686565b6141f4836141ee8354613e21565b83614003565b6000601f84116001811461422857600085156142105750838201355b600019600387901b1c1916600186901b17835561221f565b600083815260209020601f19861690835b828110156142595786850135825560209485019460019092019101614239565b50868210156142765760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8381528260208201526060604082015260006101408060608401526142b16101a0840185613f73565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c8116848701526143356101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b038084168061437b57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b03849003851316156143d7576143d7614111565b600160ff1b83900384128116156143f0576143f0614111565b50500190565b600082516144088184602087016135ea565b9190910192915050565b600080835461442081613e21565b60018281168015614438576001811461444d57613e9b565b60ff1984168752821515830287019450613e9b565b8760005260208060002060005b858110156144735781548a82015290840190820161445a565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea26469706673582212203ea70e9d4786e136b3f25cae625628e63d68b7649c43a52848281b715bc3cb0864736f6c634300080f0033",
  "bytecodeSha1": "a029d61ae573a54abc8190321f3b75e8eb6a562d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "186": [
            26367,
            26392,
            false
          ],
          "187": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "185": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "182": [
            4843,
            4860,
            false
          ]
        },
        "DoubleEndedQueue.popFront": {
          "183": [
            3380,
            3392,
            false
          ]
        }
      },
      "12": {
        "Ownable.transferOwnership": {
          "184": [
            1990,
            2012,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "177": [
            7136,
            7190,
            false
          ],
          "178": [
            7194,
            7216,
            false
          ],
          "179": [
            7220,
            7245,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "161": [
            15862,
            15916,
            false
          ],
          "162": [
            15920,
            15942,
            false
          ],
          "163": [
            15946,
            15971,
            false
          ]
        },
        "Governance.completeTask": {
          "139": [
            16751,
            16831,
            false
          ],
          "140": [
            16918,
            16962,
            false
          ],
          "141": [
            16966,
            17010,
            true
          ]
        },
        "Governance.createProposal": {
          "158": [
            23798,
            23815,
            true
          ],
          "159": [
            13548,
            13568,
            false
          ],
          "160": [
            13572,
            13594,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "180": [
            11017,
            11109,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "148": [
            9224,
            9286,
            false
          ],
          "149": [
            9302,
            9346,
            false
          ],
          "150": [
            9350,
            9393,
            false
          ],
          "151": [
            9409,
            9440,
            false
          ],
          "152": [
            9770,
            9778,
            false
          ],
          "153": [
            10054,
            10116,
            false
          ],
          "154": [
            10132,
            10176,
            false
          ],
          "155": [
            10180,
            10223,
            false
          ],
          "156": [
            10239,
            10270,
            false
          ],
          "157": [
            10402,
            10418,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "133": [
            7820,
            7874,
            false
          ],
          "134": [
            7878,
            7904,
            false
          ],
          "135": [
            8051,
            8059,
            false
          ],
          "136": [
            8623,
            8677,
            false
          ],
          "137": [
            8681,
            8707,
            false
          ],
          "138": [
            8855,
            8868,
            false
          ]
        },
        "Governance.getVotes": {
          "181": [
            5353,
            5380,
            true
          ]
        },
        "Governance.getWinningVote": {
          "142": [
            5747,
            5774,
            true
          ],
          "143": [
            5814,
            5866,
            true
          ],
          "144": [
            6213,
            6263,
            false
          ],
          "145": [
            6388,
            6394,
            false
          ],
          "146": [
            6442,
            6493,
            false
          ],
          "147": [
            6559,
            6565,
            true
          ]
        },
        "Governance.isCallerOnBoard": {
          "132": [
            4496,
            4561,
            false
          ]
        },
        "Governance.isMyWizardOnBoard": {
          "129": [
            4762,
            4800,
            false
          ],
          "130": [
            4804,
            4836,
            false
          ],
          "131": [
            4840,
            4892,
            false
          ]
        },
        "Governance.submitVerification": {
          "164": [
            19180,
            19220,
            false
          ],
          "165": [
            19224,
            19257,
            true
          ],
          "166": [
            19312,
            19330,
            true
          ],
          "167": [
            19499,
            19519,
            false
          ],
          "168": [
            19796,
            19817,
            true
          ],
          "169": [
            19932,
            19947,
            false
          ],
          "170": [
            20594,
            20598,
            true
          ],
          "171": [
            20885,
            20904,
            false
          ],
          "172": [
            21169,
            21195,
            false
          ],
          "173": [
            22340,
            22344,
            true
          ],
          "174": [
            22489,
            22503,
            false
          ],
          "175": [
            22761,
            22827,
            false
          ],
          "176": [
            22946,
            22950,
            false
          ]
        },
        "Governance.testHashing": {
          "128": [
            17974,
            17982,
            false
          ]
        }
      },
      "25": {},
      "26": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "127": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "125": [
            35401,
            35488
          ],
          "126": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "106": [
            4839,
            4882
          ],
          "107": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.empty": {
          "121": [
            5859,
            5892
          ]
        },
        "DoubleEndedQueue.length": {
          "9": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.popFront": {
          "120": [
            3376,
            3408
          ],
          "122": [
            3460,
            3491
          ],
          "123": [
            3501,
            3531
          ],
          "124": [
            3565,
            3594
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "29": [
            2207,
            2237
          ],
          "30": [
            2271,
            2297
          ]
        }
      },
      "12": {
        "Ownable._setOwner": {
          "118": [
            2193,
            2210
          ],
          "119": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "26": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "91": [
            1982,
            2055
          ],
          "92": [
            2066,
            2085
          ]
        }
      },
      "13": {},
      "2": {
        "Governance._createTaskType": {
          "108": [
            14710,
            14726
          ],
          "109": [
            14807,
            14838
          ],
          "110": [
            14852,
            14878
          ],
          "111": [
            14892,
            14928
          ],
          "112": [
            14942,
            14988
          ],
          "113": [
            15002,
            15036
          ],
          "114": [
            15050,
            15090
          ],
          "115": [
            15104,
            15144
          ],
          "116": [
            15158,
            15202
          ],
          "117": [
            15243,
            15367
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "93": [
            7046,
            7118
          ],
          "94": [
            7264,
            7275
          ],
          "95": [
            7313,
            7316
          ],
          "96": [
            7337,
            7349
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "64": [
            15742,
            15808
          ],
          "65": [
            15822,
            15844
          ],
          "66": [
            16150,
            16184
          ],
          "67": [
            16202,
            16283
          ],
          "68": [
            16301,
            16323
          ],
          "69": [
            16341,
            16397
          ],
          "70": [
            16435,
            16438
          ]
        },
        "Governance.completeTask": {
          "27": [
            16910,
            17034
          ],
          "28": [
            17224,
            17305
          ],
          "31": [
            17323,
            17358
          ],
          "32": [
            17376,
            17398
          ],
          "33": [
            17453,
            17524
          ],
          "34": [
            17542,
            17603
          ],
          "35": [
            17622,
            17699
          ],
          "36": [
            17717,
            17722
          ],
          "37": [
            17760,
            17763
          ]
        },
        "Governance.createProposal": {
          "57": [
            13540,
            13624
          ],
          "58": [
            13634,
            13653
          ],
          "59": [
            13753,
            13792
          ],
          "60": [
            13806,
            13845
          ],
          "61": [
            13859,
            13904
          ],
          "62": [
            13918,
            13949
          ],
          "63": [
            13960,
            14072
          ]
        },
        "Governance.createTaskType": {
          "23": [
            14324,
            14430
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "97": [
            11434,
            11464
          ],
          "98": [
            11482,
            11518
          ],
          "99": [
            11988,
            12024
          ],
          "100": [
            12042,
            12047
          ],
          "101": [
            12085,
            12088
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "48": [
            9483,
            9490
          ],
          "49": [
            9698,
            9701
          ],
          "50": [
            9849,
            9865
          ],
          "51": [
            9879,
            9894
          ],
          "52": [
            10303,
            10343
          ],
          "53": [
            10371,
            10380
          ],
          "54": [
            10442,
            10447
          ],
          "55": [
            10503,
            10506
          ],
          "56": [
            10527,
            10541
          ]
        },
        "Governance.getTaskById": {
          "47": [
            5223,
            5244
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "10": [
            7700,
            7766
          ],
          "11": [
            7780,
            7802
          ],
          "12": [
            7933,
            7940
          ],
          "13": [
            7979,
            7982
          ],
          "14": [
            8254,
            8285
          ],
          "15": [
            8503,
            8569
          ],
          "16": [
            8583,
            8605
          ],
          "17": [
            8726,
            8751
          ],
          "18": [
            8769,
            8796
          ],
          "19": [
            8824,
            8833
          ],
          "20": [
            8870,
            8875
          ],
          "21": [
            8914,
            8917
          ],
          "22": [
            8938,
            8965
          ]
        },
        "Governance.getVotes": {
          "102": [
            5345,
            5401
          ],
          "103": [
            5558,
            5603
          ],
          "104": [
            5540,
            5543
          ],
          "105": [
            5623,
            5639
          ]
        },
        "Governance.getWinningVote": {
          "38": [
            5739,
            5795
          ],
          "39": [
            5805,
            5890
          ],
          "40": [
            6283,
            6333
          ],
          "41": [
            6351,
            6366
          ],
          "42": [
            6398,
            6405
          ],
          "43": [
            6512,
            6517
          ],
          "44": [
            6156,
            6159
          ],
          "45": [
            6551,
            6586
          ],
          "46": [
            6596,
            6614
          ]
        },
        "Governance.isCallerOnBoard": {
          "6": [
            4581,
            4592
          ],
          "7": [
            4630,
            4633
          ],
          "8": [
            4654,
            4666
          ]
        },
        "Governance.isMyWizardOnBoard": {
          "4": [
            4907,
            4918
          ],
          "5": [
            4938,
            4950
          ]
        },
        "Governance.setNFTAddress": {
          "25": [
            10725,
            10752
          ]
        },
        "Governance.submitVerification": {
          "71": [
            19172,
            19294
          ],
          "72": [
            19304,
            19331
          ],
          "73": [
            19592,
            19644
          ],
          "74": [
            19672,
            19675
          ],
          "75": [
            19836,
            19917
          ],
          "76": [
            20218,
            20271
          ],
          "77": [
            20285,
            20352
          ],
          "78": [
            20429,
            20450
          ],
          "79": [
            20586,
            20623
          ],
          "80": [
            20670,
            20718
          ],
          "81": [
            20732,
            20769
          ],
          "82": [
            20923,
            20954
          ],
          "83": [
            20972,
            20997
          ],
          "84": [
            21015,
            21038
          ],
          "85": [
            21358,
            21424
          ],
          "86": [
            21442,
            21498
          ],
          "87": [
            22162,
            22183
          ],
          "88": [
            22332,
            22369
          ],
          "89": [
            23028,
            23120
          ],
          "90": [
            23188,
            23191
          ]
        },
        "Governance.testHashing": {
          "1": [
            18055,
            18107
          ],
          "2": [
            18135,
            18138
          ],
          "3": [
            18236,
            18303
          ]
        }
      },
      "25": {},
      "26": {},
      "5": {},
      "6": {
        "Context._msgSender": {
          "24": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "WizardTower",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101855760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104fd578063f4739bd91461051d578063f713b7ed1461053d578063ff9810991461055d57600080fd5b8063d374a2171461047d578063e95d23471461049d578063f18c51d3146104dd57600080fd5b80638d9776721461038f5780638da5cb5b146103c557806390b293d8146103ed578063976217cd14610403578063b2bad54414610430578063beca3a161461045d57600080fd5b806361f9e9a81161013e578063715018a611610118578063715018a61461031a57806372e185ce1461032f578063826b8ebd1461034f5780638a6655d61461036f57600080fd5b806361f9e9a8146102945780636215597b146102b457806369d03738146102fa57600080fd5b8063013cf08b1461019157806309265ce6146101cb5780630f61d8bd146101ed57806310190ef11461021d5780633b47fed2146102515780634b50f16a1461026657600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac3660046135d1565b61058a565b6040516101c2959493929190613642565b60405180910390f35b3480156101d757600080fd5b506101eb6101e6366004613759565b610656565b005b3480156101f957600080fd5b5061020d6102083660046135d1565b61079c565b60405190151581526020016101c2565b34801561022957600080fd5b5061023d6102383660046135d1565b61091b565b6040516101c29897969594939291906137b3565b34801561025d57600080fd5b5061020d610a25565b34801561027257600080fd5b50610286610281366004613832565b610b33565b6040516101c292919061391e565b3480156102a057600080fd5b506101eb6102af366004613a26565b610fc7565b3480156102c057600080fd5b506102ec6102cf366004613ac3565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c2565b34801561030657600080fd5b506101eb610315366004613afa565b611031565b34801561032657600080fd5b506101eb61107d565b34801561033b57600080fd5b506101eb61034a366004613b86565b6110b3565b34801561035b57600080fd5b506102ec61036a3660046135d1565b611529565b34801561037b57600080fd5b506101eb61038a366004613bdc565b61174c565b34801561039b57600080fd5b506103af6103aa3660046135d1565b611785565b6040516101c29a99989796959493929190613c08565b3480156103d157600080fd5b506001546040516001600160a01b0390911681526020016101c2565b3480156103f957600080fd5b506102ec600b5481565b34801561040f57600080fd5b5061042361041e3660046135d1565b611887565b6040516101c29190613c89565b34801561043c57600080fd5b5061045061044b366004613832565b6119c9565b6040516101c29190613c9c565b34801561046957600080fd5b506101eb610478366004613cfe565b611d8f565b34801561048957600080fd5b506101eb6104983660046135d1565b611eef565b3480156104a957600080fd5b506006546104c390600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101c2565b3480156104e957600080fd5b506101eb6104f8366004613d4e565b612226565b34801561050957600080fd5b506101eb610518366004613afa565b612c43565b34801561052957600080fd5b5061020d6105383660046135d1565b612cde565b34801561054957600080fd5b506101eb610558366004613d9d565b612eae565b34801561056957600080fd5b5061057d6105783660046135d1565b61304b565b6040516101c29190613dd9565b6008602052600090815260409020805481906105a590613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546105d190613e21565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061066b5761066b613e5b565b602002602001015160405160200161068591815260200190565b604051602081830303815290604052905081156107115760005b835181101561070f578381815181106106ba576106ba613e5b565b60200260200101516040516020016106d491815260200190565b604051602081830303815290604052805190602001208482815181106106fc576106fc613e5b565b602090810291909101015260010161069f565b505b6000836040516020016107249190613e71565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061077457610774613e5b565b60200260200101518560405161078d9493929190613ea7565b60405180910390a15050505050565b6002546040516331a9108f60e11b81526004810183905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190613ed8565b6001600160a01b031614801561088c5750600354604051631d828f8360e31b8152600481018490526001600160a01b039091169063ec147c1890602401602060405180830381865afa158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190613ef5565b80156109065750600e546003546040516301245c6b60e21b8152600481018590526001600160a01b039091169063049171ac90602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190613f12565b11155b1561091357506001919050565b506000919050565b6005818154811061092b57600080fd5b906000526020600020906003020160009150905080600101805461094e90613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461097a90613e21565b80156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b600060015b600e548111610b2b576002546003546040516301038d3760e61b81526004810184905233926001600160a01b0390811692636352211e929116906340e34dc090602401602060405180830381865afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190613f12565b6040518263ffffffff1660e01b8152600401610acc91815260200190565b602060405180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d9190613ed8565b6001600160a01b031603610b2357600191505090565b600101610a2a565b506000905090565b6060806000610b51600654600f81810b600160801b909204900b0390565b9050610b5b613533565b600080805b84811015610ce357610b73600682613175565b6000818152600a602052604090819020815161014081019092528054929550909182908290610ba190613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90613e21565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610ccf57508764ffffffffff168460e0015161ffff16145b15610cdb578160010191505b600101610b60565b5080600003610d5057604080516001808252818301909252600091816020015b610d0b613533565b815260200190600190039081610d03575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610d6b57610d6b613686565b604051908082528060200260200182016040528015610da457816020015b610d91613533565b815260200190600190039081610d895790505b5090506000836001600160401b03811115610dc157610dc1613686565b604051908082528060200260200182016040528015610dea578160200160208202803683370190505b50905060005b87811015610fb757610e03600682613175565b6000818152600a602052604090819020815161014081019092528054929850909182908290610e3190613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5d90613e21565b8015610eaa5780601f10610e7f57610100808354040283529160200191610eaa565b820191906000526020600020905b815481529060010190602001808311610e8d57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610f5f57508a64ffffffffff168760e0015161ffff16145b15610faf5786838581518110610f7757610f77613e5b565b602002602001018190525085828581518110610f9557610f95613e5b565b602002602001018181525050836001019350848411610fb7575b600101610df0565b5090999098509650505050505050565b610fcf610a25565b6110175760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b6110288787600088888888886131e6565b50505050505050565b6001546001600160a01b0316331461105b5760405162461bcd60e51b815260040161100e90613f2b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146110a75760405162461bcd60e51b815260040161100e90613f2b565b6110b16000613365565b565b60005b60055481101561152357836040516020016110d19190613f60565b60405160208183030381529060405280519060200120600582815481106110fa576110fa613e5b565b906000526020600020906003020160010160405160200161111b9190613ff0565b604051602081830303815290604052805190602001200361151b57426005828154811061114a5761114a613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906111ae57506005818154811061118857611188613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6111f05760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b604482015260640161100e565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b81526020016005848154811061123357611233613e5b565b906000526020600020906003020160020160069054906101000a900460ff1660ff1681526020016005848154811061126d5761126d613e5b565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a9052208151919250829181906113029082614052565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b8054600090611401908490614127565b9091555061141490504262015180614127565b6005838154811061142757611427613e5b565b6000918252602080832064ffffffffff8816845260039092029091019052604090205560058054600191908490811061146257611462613e5b565b906000526020600020906003020160020160149054906101000a900461ffff1661148c919061413f565b6005838154811061149f5761149f613e5b565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b546114fb9190614162565b874260405161150d9493929190614179565b60405180910390a150611523565b6001016110b6565b50505050565b6000600954821061156f5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161100e565b600082815260086020526040902060030154600160501b900464ffffffffff1642116115d35760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161100e565b6000806000805b60008681526008602052604090206001015461ffff16811015611701578260086000888152602001908152602001600020600201826008811061161f5761161f613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff16111561169f5760086000878152602001908152602001600020600201816008811061166a5761166a613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361169a57600091505b6116ef565b826008600088815260200190815260200160002060020182600881106116c7576116c7613e5b565b601091828204019190066002029054906101000a900461ffff1661ffff16036116ef57600191505b806116f9816141b0565b9150506115da565b5080156117435760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161100e565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161100e565b600a602052600090815260409020805481906117a090613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546117cc90613e21565b80156118195780601f106117ee57610100808354040283529160200191611819565b820191906000526020600020905b8154815290600101906020018083116117fc57829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61188f613533565b6000828152600a602052604090819020815161014081019092528054829082906118b890613e21565b80601f01602080910402602001604051908101604052809291908181526020018280546118e490613e21565b80156119315780601f1061190657610100808354040283529160200191611931565b820191906000526020600020905b81548152906001019060200180831161191457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b600554811015611ae15742600582815481106119ed576119ed613e5b565b6000918252602080832064ffffffffff89168452600390920290910190526040902054108015611a5157504260058281548110611a2c57611a2c613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611a9057504260058281548110611a6c57611a6c613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611acd5750600160058281548110611aac57611aac613e5b565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611ad9578160010191505b6001016119cf565b5080600003611b4d57604080516001808252818301909252600091816020015b6060815260200190600190039081611b015790505090506040518060200160405280600081525081600081518110611b3b57611b3b613e5b565b60209081029190910101529392505050565b6000816001600160401b03811115611b6757611b67613686565b604051908082528060200260200182016040528015611b9a57816020015b6060815260200190600190039081611b855790505b5090506000805b600554811015611d85574260058281548110611bbf57611bbf613e5b565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611c2357504260058281548110611bfe57611bfe613e5b565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611c6257504260058281548110611c3e57611c3e613e5b565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611c9f5750600160058281548110611c7e57611c7e613e5b565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611d7d5760058181548110611cb757611cb7613e5b565b90600052602060002090600302016001018054611cd390613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611cff90613e21565b8015611d4c5780601f10611d2157610100808354040283529160200191611d4c565b820191906000526020600020905b815481529060010190602001808311611d2f57829003601f168201915b5050505050838381518110611d6357611d63613e5b565b602002602001018190525081600101915083821015611d85575b600101611ba1565b5090949350505050565b611d97610a25565b611dda5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b604482015260640161100e565b60018561ffff16118015611df357506101018561ffff16105b611e3f5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161100e565b600160096000828254611e529190614127565b909155505060095460009081526008602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611ed1888a836141c9565b50611ee588886009546000898989896131e6565b5050505050505050565b6000611f0a600654600f81810b600160801b909204900b0390565b9050611f14613533565b6000805b8381101561221f57611f2b600682613175565b6000818152600a602052604090819020815161014081019092528054929450909182908290611f5990613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611f8590613e21565b8015611fd25780601f10611fa757610100808354040283529160200191611fd2565b820191906000526020600020905b815481529060010190602001808311611fb557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015612084575084836020015164ffffffffff1614155b801561209957508483610100015161ffff1614155b156122175761ffff851660e0840152600c546120b59042614127565b64ffffffffff166101208401526000828152600a60205260409020835184919081906120e19082614052565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df2689161220e9188918691614288565b60405180910390a15b600101611f18565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa15801561226f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122939190613ed8565b6001600160a01b03161480156122c457506000828152600a6020526040902060040154600160701b900461ffff1683145b6123105760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a617264604482015260640161100e565b600081511161231e57600080fd5b6000828152600a60205260408082208151610140810190925280548290829061234690613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461237290613e21565b80156123bf5780601f10612394576101008083540402835291602001916123bf565b820191906000526020600020905b8154815290600101906020018083116123a257829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b909204909416610120909301929092529183015192935060009216156124dc5760005b84518110156124da5784818151811061248557612485613e5b565b602002602001015160405160200161249f91815260200190565b604051602081830303815290604052805190602001208582815181106124c7576124c7613e5b565b602090810291909101015260010161246a565b505b6000846040516020016124ef9190613e71565b60405160208183030381529060405280519060200120905060008185604001511461251b57600061251e565b60015b602086810151604080518c815264ffffffffff909216928201929092529081018990526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361284157600060028660c001516125a19190614353565b60025460e08801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126289190613ed8565b600254602089015160a08a0151604051638ad4d6a560e01b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561268a57600080fd5b505af115801561269e573d6000803e3d6000fd5b505060025460e08a0151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156126fa57600080fd5b505af115801561270e573d6000803e3d6000fd5b50505060008a8152600a60205260408120915061272b8282613587565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146127a9576040519150601f19603f3d011682016040523d82523d6000602084013e6127ae565b606091505b5091509150816127d05760405162461bcd60e51b815260040161100e90614387565b60405133908590600081818185875af1925050503d8060008114612810576040519150601f19603f3d011682016040523d82523d6000602084013e612815565b606091505b509092509050816128385760405162461bcd60e51b815260040161100e90614387565b50505050612bac565b84610100015161ffff166000036129735761ffff8816610100860152606085018290526000878152600a60205260409020855186919081906128839082614052565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b81856060015103612ac657600060028660c001516129919190614353565b6002546101008801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156129f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a199190613ed8565b600254610100890151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015612a7257600080fd5b505af1158015612a86573d6000803e3d6000fd5b5050600254600d54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a591506044016126e0565b60c08501516000888152600a602052604081206001600160501b039092169190612af08282613587565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580612b376001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114612b81576040519150601f19603f3d011682016040523d82523d6000602084013e612b86565b606091505b509150915081612ba85760405162461bcd60e51b815260040161100e90614387565b5050505b8215611ee5576000612bcd600654600f81810b600160801b909204900b0390565b905060005b81811015612c375788612be6600683613175565b03612c2f576000612bf760066133b7565b90508115612c2d576006548190600790600090612c18908690600f0b6143b5565b600f0b81526020810191909152604001600020555b505b600101612bd2565b50505050505050505050565b6001546001600160a01b03163314612c6d5760405162461bcd60e51b815260040161100e90613f2b565b6001600160a01b038116612cd25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161100e565b612cdb81613365565b50565b600080612cfa600654600f81810b600160801b909204900b0390565b9050612d04613533565b60005b82811015612ea357600a6000612d1e600684613175565b60001c815260200190815260200160002060405180610140016040529081600082018054612d4b90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054612d7790613e21565b8015612dc45780601f10612d9957610100808354040283529160200191612dc4565b820191906000526020600020905b815481529060010190602001808311612da757829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612e76575084826020015164ffffffffff1614155b8015612e8b57508482610100015161ffff1614155b15612e9b57506001949350505050565b600101612d07565b506000949350505050565b60005b6005548110156130475781604051602001612ecc91906143f6565b6040516020818303038152906040528051906020012060058281548110612ef557612ef5613e5b565b9060005260206000209060030201600101604051602001612f169190614412565b604051602081830303815290604052805190602001200361303f57600060058281548110612f4657612f46613e5b565b90600052602060002090600302019050600060056001600580549050612f6c9190614162565b81548110612f7c57612f7c613e5b565b9060005260206000209060030201905080915060056001600580549050612fa39190614162565b81548110612fb357612fb3613e5b565b90600052602060002090600302016000600182016000612fd39190613587565b5060020180546001600160b01b031916905560058054612ff590600190614162565b8154811061300557613005613e5b565b906000526020600020906003020160006001820160006130259190613587565b5060020180546001600160b01b0319169055506130479050565b600101612eb1565b5050565b606060095482106130915760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161100e565b60008281526008602052604081206001015461ffff166001600160401b038111156130be576130be613686565b6040519080825280602002602001820160405280156130e7578160200160208202803683370190505b50905060005b815181101561316e5760086000858152602001908152602001600020600201816008811061311d5761311d613e5b565b601091828204019190066002029054906101000a900461ffff1682828151811061314957613149613e5b565b61ffff9092166020928302919091019091015280613166816141b0565b9150506130ed565b5092915050565b60008061319861318484613436565b85546131939190600f0b6143b5565b6134a4565b8454909150600160801b9004600f90810b9082900b126131cb57604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600580546001810180835560008381529192908390811061320957613209613e5b565b6000918252602090912060039091020190506001810161322a8a8c836141c9565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051613351989796959493929190614484565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006133d28254600f81810b600160801b909204900b131590565b156133f057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b038211156134a05760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161100e565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906134d757506f7fffffffffffffffffffffffffffffff8213155b6134a05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161100e565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461359390613e21565b6000825580601f106135a3575050565b601f016020900490600052602060002090810190612cdb91905b808211156134a057600081556001016135bd565b6000602082840312156135e357600080fd5b5035919050565b60005b838110156136055781810151838201526020016135ed565b838111156115235750506000910152565b6000815180845261362e8160208601602086016135ea565b601f01601f19169290920160200192915050565b60a08152600061365560a0830188613616565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156136c4576136c4613686565b604052919050565b600082601f8301126136dd57600080fd5b813560206001600160401b038211156136f8576136f8613686565b8160051b61370782820161369c565b928352848101820192828101908785111561372157600080fd5b83870192505b8483101561374057823582529183019190830190613727565b979650505050505050565b8015158114612cdb57600080fd5b60008060006060848603121561376e57600080fd5b8335925060208401356001600160401b0381111561378b57600080fd5b613797868287016136cc565b92505060408401356137a88161374b565b809150509250925092565b60006101008083526137c78184018c613616565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461382d57600080fd5b919050565b60006020828403121561384457600080fd5b61384d82613818565b9392505050565b6000610140825181855261386a82860182613616565b9150506020830151613885602086018264ffffffffff169052565b50604083015160408501526060830151606085015260808301516138ae608086018260ff169052565b5060a08301516138c560a086018262ffffff169052565b5060c08301516138e060c08601826001600160501b03169052565b5060e08301516138f660e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611d85565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561397557605f19888703018552613963868351613854565b95509382019390820190600101613947565b50508584038187015286518085528782019482019350915060005b828110156139ac57845184529381019392810192600101613990565b5091979650505050505050565b60008083601f8401126139cb57600080fd5b5081356001600160401b038111156139e257600080fd5b6020830191508360208285010111156139fa57600080fd5b9250929050565b803562ffffff8116811461382d57600080fd5b803561ffff8116811461382d57600080fd5b600080600080600080600060c0888a031215613a4157600080fd5b87356001600160401b03811115613a5757600080fd5b613a638a828b016139b9565b909850965050602088013560ff81168114613a7d57600080fd5b9450613a8b60408901613a01565b9350613a9960608901613818565b9250613aa760808901613818565b9150613ab560a08901613a14565b905092959891949750929550565b60008060408385031215613ad657600080fd5b50508035926020909101359150565b6001600160a01b0381168114612cdb57600080fd5b600060208284031215613b0c57600080fd5b813561384d81613ae5565b600082601f830112613b2857600080fd5b81356001600160401b03811115613b4157613b41613686565b613b54601f8201601f191660200161369c565b818152846020838601011115613b6957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b9b57600080fd5b83356001600160401b03811115613bb157600080fd5b613bbd86828701613b17565b93505060208401359150613bd360408501613818565b90509250925092565b600080600060608486031215613bf157600080fd5b505081359360208301359350604090920135919050565b6000610140808352613c1c8184018e613616565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061384d6020830184613854565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613cf157603f19888603018452613cdf858351613616565b94509285019290850190600101613cc3565b5092979650505050505050565b600080600080600080600060c0888a031215613d1957600080fd5b87356001600160401b03811115613d2f57600080fd5b613d3b8a828b016139b9565b9098509650613a7d905060208901613a14565b600080600060608486031215613d6357600080fd5b833592506020840135915060408401356001600160401b03811115613d8757600080fd5b613d93868287016136cc565b9150509250925092565b600060208284031215613daf57600080fd5b81356001600160401b03811115613dc557600080fd5b613dd184828501613b17565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613e1557835161ffff1683529284019291840191600101613df5565b50909695505050505050565b600181811c90821680613e3557607f821691505b602082108103613e5557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613e9b57815185529382019390820190600101613e7f565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613ece6080830184613616565b9695505050505050565b600060208284031215613eea57600080fd5b815161384d81613ae5565b600060208284031215613f0757600080fd5b815161384d8161374b565b600060208284031215613f2457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061384d6020830184613616565b60008154613f8081613e21565b808552602060018381168015613f9d5760018114613fb757613fe5565b60ff1985168884015283151560051b880183019550613fe5565b866000528260002060005b85811015613fdd5781548a8201860152908301908401613fc2565b890184019650505b505050505092915050565b60208152600061384d6020830184613f73565b601f82111561404d57600081815260208120601f850160051c8101602086101561402a5750805b601f850160051c820191505b8181101561404957828155600101614036565b5050505b505050565b81516001600160401b0381111561406b5761406b613686565b61407f816140798454613e21565b84614003565b602080601f8311600181146140b4576000841561409c5750858301515b600019600386901b1c1916600185901b178555614049565b600085815260208120601f198616915b828110156140e3578886015182559484019460019091019084016140c4565b50858210156141015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000821982111561413a5761413a614111565b500190565b600061ffff8381169083168181101561415a5761415a614111565b039392505050565b60008282101561417457614174614111565b500390565b64ffffffffff8516815283602082015260806040820152600061419f6080830185613616565b905082606083015295945050505050565b6000600182016141c2576141c2614111565b5060010190565b6001600160401b038311156141e0576141e0613686565b6141f4836141ee8354613e21565b83614003565b6000601f84116001811461422857600085156142105750838201355b600019600387901b1c1916600186901b17835561221f565b600083815260209020601f19861690835b828110156142595786850135825560209485019460019092019101614239565b50868210156142765760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8381528260208201526060604082015260006101408060608401526142b16101a0840185613f73565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c8116848701526143356101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b038084168061437b57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b03849003851316156143d7576143d7614111565b600160ff1b83900384128116156143f0576143f0614111565b50500190565b600082516144088184602087016135ea565b9190910192915050565b600080835461442081613e21565b60018281168015614438576001811461444d57613e9b565b60ff1984168752821515830287019450613e9b565b8760005260208060002060005b858110156144735781548a82015290840190820161445a565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea26469706673582212203ea70e9d4786e136b3f25cae625628e63d68b7649c43a52848281b715bc3cb0864736f6c634300080f0033",
  "deployedSourceMap": "771:23163:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:46;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;17807:503;;;;;;;;;;-1:-1:-1;17807:503:2;;;;;:::i;:::-;;:::i;:::-;;4679:278;;;;;;;;;;-1:-1:-1;4679:278:2;;;;;:::i;:::-;;:::i;:::-;;;3463:14:27;;3456:22;3438:41;;3426:2;3411:18;4679:278:2;3298:187:27;2445:27:2;;;;;;;;;;-1:-1:-1;2445:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;4380:293::-;;;;;;;;;;;;;:::i;7363:1609::-;;;;;;;;;;-1:-1:-1;7363:1609:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;14117:320::-;;;;;;;;;;-1:-1:-1;14117:320:2;;;;;:::i;:::-;;:::i;1014:75::-;;;;;;;;;;-1:-1:-1;1014:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9466:25:27;;;9454:2;9439:18;1014:75:2;9320:177:27;10658:101:2;;;;;;;;;;-1:-1:-1;10658:101:2;;;;;:::i;:::-;;:::i;1652:94:12:-;;;;;;;;;;;;;:::i;16515:1286:2:-;;;;;;;;;;-1:-1:-1;16515:1286:2;;;;;:::i;:::-;;:::i;5652:969::-;;;;;;;;;;-1:-1:-1;5652:969:2;;;;;:::i;:::-;;:::i;12638:664::-;;;;;;;;;;-1:-1:-1;12638:664:2;;;;;:::i;:::-;;:::i;2840:38::-;;;;;;;;;;-1:-1:-1;2840:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:12:-;;;;;;;;;;-1:-1:-1;1074:6:12;;1001:87;;-1:-1:-1;;;;;1074:6:12;;;12383:51:27;;12371:2;12356:18;1001:87:12;12237:203:27;2884:34:2;;;;;;;;;;;;;;;;5139:112;;;;;;;;;;-1:-1:-1;5139:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9048:1500::-;;;;;;;;;;-1:-1:-1;9048:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13348:762::-;;;;;;;;;;-1:-1:-1;13348:762:2;;;;;:::i;:::-;;:::i;15381:1128::-;;;;;;;;;;-1:-1:-1;15381:1128:2;;;;;:::i;:::-;;:::i;2582:61::-;;;;;;;;;;-1:-1:-1;2582:61:2;;;;;;;;;-1:-1:-1;;;2582:61:2;;;;;;;;;;14481:2:27;14470:22;;;14452:41;;14529:22;;;;14524:2;14509:18;;14502:50;14425:18;2582:61:2;14282:276:27;19016:4208:2;;;;;;;;;;-1:-1:-1;19016:4208:2;;;;;:::i;:::-;;:::i;1901:192:12:-;;;;;;;;;;-1:-1:-1;1901:192:12;;;;;:::i;:::-;;:::i;6668:688:2:-;;;;;;;;;;-1:-1:-1;6668:688:2;;;;;:::i;:::-;;:::i;10885:1221::-;;;;;;;;;;-1:-1:-1;10885:1221:2;;;;;:::i;:::-;;:::i;5257:389::-;;;;;;;;;;-1:-1:-1;5257:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2759:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2759:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;;-1:-1:-1;;;2759:46:2;;;;:::o;17807:503::-;17908:22;17950:7;17958:1;17950:10;;;;;;;;:::i;:::-;;;;;;;17933:28;;;;;;16673:19:27;;16717:2;16708:12;;16544:182;17933:28:2;;;;;;;;;;;;;17908:53;;17974:8;17971:193;;;18002:9;17998:156;18021:7;:14;18017:1;:18;17998:156;;;18095:7;18103:1;18095:10;;;;;;;;:::i;:::-;;;;;;;18078:28;;;;;;16673:19:27;;16717:2;16708:12;;16544:182;18078:28:2;;;;;;;;;;;;;18068:39;;;;;;18055:7;18063:1;18055:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;18135:3;;17998:156;;;;17971:193;18173:14;18217:7;18200:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;18190:36;;;;;;18173:53;;18241:62;18253:6;18269:10;18261:6;:18;18281:7;18289:1;18281:10;;;;;;;;:::i;:::-;;;;;;;18293:9;18241:62;;;;;;;;;:::i;:::-;;;;;;;;17898:412;;17807:503;;;:::o;4679:278::-;4762:10;;:26;;-1:-1:-1;;;4762:26:2;;;;;9466:25:27;;;4743:4:2;;4790:10;;-1:-1:-1;;;;;4762:10:2;;;;:18;;9439::27;;4762:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4762:38:2;;:74;;;;-1:-1:-1;4804:11:2;;:32;;-1:-1:-1;;;4804:32:2;;;;;9466:25:27;;;-1:-1:-1;;;;;4804:11:2;;;;:24;;9439:18:27;;4804:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4762:130;;;;-1:-1:-1;4882:10:2;;4840:11;;:39;;-1:-1:-1;;;4840:39:2;;;;;9466:25:27;;;-1:-1:-1;;;;;4840:11:2;;;;:31;;9439:18:27;;4840:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;4762:130;4759:170;;;-1:-1:-1;4914:4:2;;4679:278;-1:-1:-1;4679:278:2:o;4759:170::-;-1:-1:-1;4945:5:2;;4679:278;-1:-1:-1;4679:278:2:o;2445:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;2445:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;-1:-1:-1;;;2445:27:2;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;;2445:27:2;;;;;:::o;4380:293::-;4428:4;4459:1;4444:201;4467:10;;4462:1;:15;4444:201;;4496:10;;4515:11;;:31;;-1:-1:-1;;;4515:31:2;;;;;9466:25:27;;;4551:10:2;;-1:-1:-1;;;;;4496:10:2;;;;:18;;4515:11;;;:28;;9439:18:27;;4515:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4496:51;;;;;;;;;;;;;9466:25:27;;9454:2;9439:18;;9320:177;4496:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4496:65:2;;4493:114;;4588:4;4581:11;;;4380:293;:::o;4493:114::-;4630:3;;4444:201;;;;4661:5;4654:12;;4380:293;:::o;7363:1609::-;7432:13;7447:16;7475:27;7505:49;7529:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;7505:49:2;7475:79;;7564:18;;:::i;:::-;7592:14;;;7642:352;7664:19;7660:1;:23;7642:352;;;7717:48;7737:24;7763:1;7717:19;:48::i;:::-;7709:57;7789:13;;;:5;:13;;;;;;;7780:22;;;;;;;;;;7709:57;;-1:-1:-1;7780:22:2;;;;7789:13;;7780:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7780:22:2;;;-1:-1:-1;;7780:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7780:22:2;;-1:-1:-1;;;;;7780:22:2;;;;;-1:-1:-1;;;7780:22:2;;;;;;;;;;-1:-1:-1;;;7780:22:2;;;;;;;-1:-1:-1;;;7780:22:2;;;;;;;;;7820:36;;;;;-1:-1:-1;7859:15:2;7820:54;;;:84;;;;;7898:6;7878:26;;:6;:17;;;:26;;;7820:84;7816:140;;;7933:7;;;;;7816:140;7979:3;;7642:352;;;;8051:5;8058:1;8051:8;8047:249;;8099:13;;;8110:1;8099:13;;;;;;;;;8075:22;;8099:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;8157:16:2;;;8171:1;8157:16;;;;;;;;;8075:37;;-1:-1:-1;8126:29:2;;8157:16;;;;;;;;;;-1:-1:-1;8262:8:2;;;;-1:-1:-1;8262:8:2;;-1:-1:-1;;;;;;;;;7363:1609:2:o;8047:249::-;8306:15;8335:21;8370:5;-1:-1:-1;;;;;8359:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8335:41;;8386:26;8429:5;-1:-1:-1;;;;;8415:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8415:20:2;;8386:49;;8449:9;8445:484;8467:19;8463:1;:23;8445:484;;;8520:48;8540:24;8566:1;8520:19;:48::i;:::-;8512:57;8592:13;;;:5;:13;;;;;;;8583:22;;;;;;;;;;8512:57;;-1:-1:-1;8583:22:2;;;;8592:13;;8583:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8583:22:2;;;-1:-1:-1;;8583:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8583:22:2;;-1:-1:-1;;;;;8583:22:2;;;;;-1:-1:-1;;;8583:22:2;;;;;;;;;;-1:-1:-1;;;8583:22:2;;;;;;;-1:-1:-1;;;8583:22:2;;;;;;;;;8623:36;;;;;-1:-1:-1;8662:15:2;8623:54;;;:84;;;;;8701:6;8681:26;;:6;:17;;;:26;;;8623:84;8619:272;;;8745:6;8726:7;8734;8726:16;;;;;;;;:::i;:::-;;;;;;:25;;;;8790:6;8769:9;8779:7;8769:18;;;;;;;;:::i;:::-;;;;;;:27;;;;;8824:9;;;;;8863:5;8855:7;:13;8870:5;8852:25;;8914:3;;8445:484;;;-1:-1:-1;8946:7:2;;8955:9;;-1:-1:-1;7363:1609:2;-1:-1:-1;;;;;;;7363:1609:2:o;14117:320::-;23798:17;:15;:17::i;:::-;23790:50;;;;-1:-1:-1;;;23790:50:2;;18624:2:27;23790:50:2;;;18606:21:27;18663:2;18643:18;;;18636:30;-1:-1:-1;;;18682:18:27;;;18675:50;18742:18;;23790:50:2;;;;;;;;;14324:106:::1;14340:9;;14351:1;14354:16;14372:10;14384:13;14399;14414:15;14324;:106::i;:::-;14117:320:::0;;;;;;;:::o;10658:101::-;1074:6:12;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;10725:10:2::1;:27:::0;;-1:-1:-1;;;;;;10725:27:2::1;-1:-1:-1::0;;;;;10725:27:2;;;::::1;::::0;;;::::1;::::0;;10658:101::o;1652:94:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;16515:1286:2:-;16699:9;16695:1080;16716:9;:16;16714:18;;16695:1080;;;16820:9;16809:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;16799:32;;;;;;16772:9;16782:1;16772:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;16761:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;16751:44;;;;;;:80;16748:989;;16947:15;16918:9;16928:1;16918:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16918:25:2;;;;:44;;;;:92;;;16985:9;16995:1;16985:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16985:25:2;;;;16966:15;:44;;16918:92;16910:124;;;;-1:-1:-1;;;16910:124:2;;20692:2:27;16910:124:2;;;20674:21:27;20731:2;20711:18;;;20704:30;-1:-1:-1;;;20750:18:27;;;20743:49;20809:18;;16910:124:2;20490:343:27;16910:124:2;17087:18;17108:98;;;;;;;;17113:9;17108:98;;;;17123:6;17108:98;;;;;;17131:5;17108:98;;;;17138:1;17108:98;;;;;;17141:9;17151:1;17141:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;17108:98;;;;;;17171:9;17181:1;17171:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;17171:22:2;;;;17108:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;17284:19;;17250:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;-1:-1:-1;;;;;2271:26:1;;;2207:11;2284:13;;;2271:26;;;;;;;17323::2;;:5;:26;;;:35;;;;-1:-1:-1;17323:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;17323:35:2;;;;;;;;;;-1:-1:-1;;17323:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17323:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17323:35:2;-1:-1:-1;;;;;;;;17323:35:2;;;;;;;-1:-1:-1;;;;17323:35:2;;-1:-1:-1;;;17323:35:2;;;;;;-1:-1:-1;;;;17323:35:2;-1:-1:-1;;;17323:35:2;;;;;-1:-1:-1;;;;17323:35:2;;;;;-1:-1:-1;;;17323:35:2;;;;;;;;;;;;17376:19;:22;;-1:-1:-1;;17376:22:2;;17323:35;;17376:22;:::i;:::-;;;;-1:-1:-1;17500:24:2;;-1:-1:-1;17500:15:2;17518:6;17500:24;:::i;:::-;17453:9;17463:1;17453:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;17572:9;:12;;17602:1;;17572:9;17582:1;;17572:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;17542:9;17552:1;17542:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;17627:72;17641:6;17669:1;17648:19;;:22;;;;:::i;:::-;17672:9;17683:15;17627:72;;;;;;;;;:::i;:::-;;;;;;;;17717:5;;;16748:989;17760:3;;16695:1080;;;;16515:1286;;;:::o;5652:969::-;5719:7;5760:14;;5747:10;:27;5739:56;;;;-1:-1:-1;;;5739:56:2;;24193:2:27;5739:56:2;;;24175:21:27;24232:2;24212:18;;;24205:30;-1:-1:-1;;;24251:18:27;;;24244:46;24307:18;;5739:56:2;23991:340:27;5739:56:2;5832:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5832:34:2;;;;5814:15;:52;5805:85;;;;-1:-1:-1;;;5805:85:2;;24538:2:27;5805:85:2;;;24520:21:27;24577:2;24557:18;;;24550:30;-1:-1:-1;;;24596:18:27;;;24589:49;24655:18;;5805:85:2;24336:343:27;5805:85:2;6010:19;6039:25;6074:11;6101:9;6097:445;6117:21;;;;:9;:21;;;;;:37;;;;;6114:40;;6097:445;;;6246:17;6213:9;:21;6223:10;6213:21;;;;;;;;;;;:27;;6241:1;6213:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;6210:322;;;6303:9;:21;6313:10;6303:21;;;;;;;;;;;:27;;6331:1;6303:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6283:50;;;;6365:1;6351:15;;6388:3;6393:1;6388:6;6384:23;;6404:1;6398:7;;6384:23;6210:322;;;6476:17;6442:9;:21;6452:10;6442:21;;;;;;;;;;;:27;;6470:1;6442:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;6439:93;;6516:1;6512:5;;6439:93;6156:3;;;;:::i;:::-;;;;6097:445;;;-1:-1:-1;6559:6:2;;6551:35;;;;-1:-1:-1;;;6551:35:2;;25026:2:27;6551:35:2;;;25008:21:27;25065:2;25045:18;;;25038:30;-1:-1:-1;;;25084:18:27;;;25077:46;25140:18;;6551:35:2;24824:340:27;6551:35:2;-1:-1:-1;6603:11:2;;5652:969;-1:-1:-1;;;5652:969:2:o;12638:664::-;23626:31;;-1:-1:-1;;;23626:31:2;;25371:2:27;23626:31:2;;;25353:21:27;25410:2;25390:18;;;25383:30;-1:-1:-1;;;25429:18:27;;;25422:44;25483:18;;23626:31:2;25169:338:27;2840:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2840:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:38:2;-1:-1:-1;2840:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;;-1:-1:-1;;;2840:38:2;;;;;:::o;5139:112::-;5200:11;;:::i;:::-;5230:14;;;;:5;:14;;;;;;;5223:21;;;;;;;;;;;;5230:14;;5223:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5223:21:2;;;-1:-1:-1;;5223:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5223:21:2;;-1:-1:-1;;;;;5223:21:2;;;;;-1:-1:-1;;;5223:21:2;;;;;;;;;;-1:-1:-1;;;5223:21:2;;;;;;;-1:-1:-1;;;5223:21:2;;;;;;;;;;;;-1:-1:-1;;5139:112:2:o;9048:1500::-;9119:15;9146:13;;9169:544;9189:9;:16;9186:19;;9169:544;;;9271:15;9224:9;9234:1;9224:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9331:15;9302:9;9312:1;9302:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9302:25:2;;;;:44;;9224:122;:169;;;;;9378:15;9350:9;9360:1;9350:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9350:25:2;;;;:43;9224:169;:216;;;;;9439:1;9409:9;9419:1;9409:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9409:27:2;;;;:31;9224:216;9221:285;;;9483:7;;;;;9221:285;9698:3;;9169:544;;;;9770:5;9777:1;9770:8;9766:139;;9820:15;;;9833:1;9820:15;;;;;;;;;9794:24;;9820:15;;;;;;;;;;;;;;;;;;;;9794:41;;9849:16;;;;;;;;;;;;:8;9858:1;9849:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;9886:8;9048:1500;-1:-1:-1;;;9048:1500:2:o;9766:139::-;9915:23;9954:5;-1:-1:-1;;;;;9941:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9915:45;;9970:15;10003:9;9999:519;10019:9;:16;10016:19;;9999:519;;;10101:15;10054:9;10064:1;10054:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;10161:15;10132:9;10142:1;10132:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10132:25:2;;;;:44;;10054:122;:169;;;;;10208:15;10180:9;10190:1;10180:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10180:25:2;;;;:43;10054:169;:216;;;;;10269:1;10239:9;10249:1;10239:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;10239:27:2;;;;:31;10054:216;10051:429;;;10322:9;10332:1;10322:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10303:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;10311;10303:16;;;;;;;;:::i;:::-;;;;;;:40;;;;10371:9;;;;;10413:5;10402:7;:16;10399:67;10442:5;10399:67;;10503:3;;9999:519;;;-1:-1:-1;10534:7:2;;9048:1500;-1:-1:-1;;;;9048:1500:2:o;13348:762::-;23798:17;:15;:17::i;:::-;23790:50;;;;-1:-1:-1;;;23790:50:2;;18624:2:27;23790:50:2;;;18606:21:27;18663:2;18643:18;;;18636:30;-1:-1:-1;;;18682:18:27;;;18675:50;18742:18;;23790:50:2;18422:344:27;23790:50:2;13567:1:::1;13548:16;:20;;;:46;;;;;13591:3;13572:16;:22;;;13548:46;13540:84;;;::::0;-1:-1:-1;;;13540:84:2;;26865:2:27;13540:84:2::1;::::0;::::1;26847:21:27::0;26904:2;26884:18;;;26877:30;26943:27;26923:18;;;26916:55;26988:18;;13540:84:2::1;26663:349:27::0;13540:84:2::1;13652:1;13634:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;13724:14:2::1;::::0;13684:27:::1;13714:25:::0;;;:9:::1;:25;::::0;;;;13753:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;13806:39:2;13753;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;13806:39:2;;;;;-1:-1:-1;;;13806:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;13859:26:2;::::1;:45:::0;;-1:-1:-1;;13859:45:2::1;;::::0;::::1;;::::0;;13714:25;13918:31:::1;13940:9:::0;;13714:25;13918:31:::1;:::i;:::-;;13960:112;13976:9;;13994:14;;14011:1;14014:10;14026:13;14041;14056:15;13960;:112::i;:::-;13530:580;13348:762:::0;;;;;;;:::o;15381:1128::-;15456:27;15486:49;15510:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;15486:49:2;15456:79;;15545:18;;:::i;:::-;15573:14;;15684:766;15706:19;15702:1;:23;15684:766;;;15759:48;15779:24;15805:1;15759:19;:48::i;:::-;15751:57;15831:13;;;:5;:13;;;;;;;15822:22;;;;;;;;;;15751:57;;-1:-1:-1;15822:22:2;;;;15831:13;;15822:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15822:22:2;;;-1:-1:-1;;15822:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15822:22:2;;-1:-1:-1;;;;;15822:22:2;;;;;-1:-1:-1;;;15822:22:2;;;;;;;;;;-1:-1:-1;;;15822:22:2;;;;;;;-1:-1:-1;;;15822:22:2;;;;;;;;;15862:36;;;;;-1:-1:-1;15901:15:2;15862:54;;;:80;;;;;15936:6;15920;:12;;;:22;;;;15862:80;:109;;;;;15965:6;15946;:16;;;:25;;;;15862:109;15858:554;;;16150:34;;;:17;;;:34;16266:16;;16248:34;;:15;:34;:::i;:::-;16202:81;;:36;;;:81;16301:13;;;;:5;:13;;;;;:22;;16202:6;;16301:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;16301:22:2;;;;;;;;;;-1:-1:-1;;16301:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16301:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16301:22:2;-1:-1:-1;;;;;;;;16301:22:2;;;;;;;-1:-1:-1;;;;16301:22:2;;-1:-1:-1;;;16301:22:2;;;;;;-1:-1:-1;;;;16301:22:2;-1:-1:-1;;;16301:22:2;;;;;-1:-1:-1;;;;16301:22:2;;;;;-1:-1:-1;;;16301:22:2;;;;;;;;;;;;-1:-1:-1;16383:13:2;;;:5;:13;;;;;;;16346:51;;;;;;16367:6;;16383:13;;16346:51;:::i;:::-;;;;;;;;15858:554;16435:3;;15684:766;;;;15446:1063;;;15381:1128;:::o;19016:4208::-;19180:10;;:26;;-1:-1:-1;;;19180:26:2;;;;;9466:25:27;;;19210:10:2;;-1:-1:-1;;;;;19180:10:2;;:18;;9439::27;;19180:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19180:40:2;;:77;;;;-1:-1:-1;19224:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;19224:25:2;;;;:33;;19180:77;19172:122;;;;-1:-1:-1;;;19172:122:2;;29892:2:27;19172:122:2;;;29874:21:27;;;29911:18;;;29904:30;29970:34;29950:18;;;29943:62;30022:18;;19172:122:2;29690:356:27;19172:122:2;19329:1;19312:7;:14;:18;19304:27;;;;;;19342:18;19363:14;;;:5;:14;;;;;;19342:35;;;;;;;;;;;;19363:14;;19342:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19342:35:2;;;-1:-1:-1;;19342:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19342:35:2;;-1:-1:-1;;;;;19342:35:2;;;;;-1:-1:-1;;;19342:35:2;;;;;;;;;;-1:-1:-1;;;19342:35:2;;;;;;;;-1:-1:-1;;;19342:35:2;;;;;;;;;;;;;;19499:16;;;;;;-1:-1:-1;;;19499:20:2;;19496:205;;19539:9;19535:156;19558:7;:14;19554:1;:18;19535:156;;;19632:7;19640:1;19632:10;;;;;;;;:::i;:::-;;;;;;;19615:28;;;;;;16673:19:27;;16717:2;16708:12;;16544:182;19615:28:2;;;;;;;;;;;;;19605:39;;;;;;19592:7;19600:1;19592:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19672:3;;19535:156;;;;19496:205;19710:14;19754:7;19737:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19727:36;;;;;;19710:53;;19774:19;19811:6;19796;:11;;;:21;:29;;19824:1;19796:29;;;19820:1;19796:29;19871:12;;;;;19841:76;;;30303:25:27;;;30376:12;30364:25;;;30344:18;;;30337:53;;;;30406:18;;;30399:34;;;30464:2;30449:18;;30442:34;;;19774:51:2;;;;;19915:1;19902:14;;30507:3:27;30492:19;;30485:51;19774::2;-1:-1:-1;19841:76:2;;30290:3:27;30275:19;19841:76:2;;;;;;;19932:11;19946:1;19932:15;19928:2497;;20026:13;20057:1;20042:6;:14;;;:16;;;;:::i;:::-;20112:10;;20131:17;;;;20112:37;;-1:-1:-1;;;20112:37:2;;31027:6:27;31015:19;;;20112:37:2;;;30997:38:27;-1:-1:-1;;;;;20026:32:2;;;;;-1:-1:-1;20072:29:2;;-1:-1:-1;;;;;20112:10:2;;;;:18;;30970::27;;20112:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20218:10;;20240:12;;;;20254:16;;;;20218:53;;-1:-1:-1;;;20218:53:2;;31248:12:27;31236:25;;;20218:53:2;;;31218:44:27;31310:8;31298:21;31278:18;;;31271:49;20072:78:2;;-1:-1:-1;;;;;;20218:10:2;;:21;;31191:18:27;;20218:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20285:10:2;;20307:17;;;;20326:25;;20285:67;;-1:-1:-1;;;20285:67:2;;31534:6:27;31522:19;;;20285:67:2;;;31504:38:27;31558:18;;;31551:34;-1:-1:-1;;;;;20285:10:2;;;;-1:-1:-1;20285:21:2;;-1:-1:-1;31477:18:27;;20285:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20436:14:2;;;;:5;:14;;;;;;-1:-1:-1;20429:21:2;20436:14;;20429:21;:::i;:::-;-1:-1:-1;20429:21:2;;;;;-1:-1:-1;;20429:21:2;;;-1:-1:-1;20429:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20429:21:2;;;20536:36;;-1:-1:-1;;;;;;;20536:18:2;;;20562:5;;-1:-1:-1;20536:36:2;-1:-1:-1;20536:36:2;20562:5;20536:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20503:69;;;;20594:4;20586:37;;;;-1:-1:-1;;;20586:37:2;;;;;;;:::i;:::-;20685:33;;:10;;20708:5;;20685:33;;;;20708:5;20685:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20670:48:2;;-1:-1:-1;20670:48:2;-1:-1:-1;20670:48:2;20732:37;;;;-1:-1:-1;;;20732:37:2;;;;;;;:::i;:::-;19948:833;;;;19928:2497;;;20885:6;:16;;;:19;;20903:1;20885:19;20882:211;;20923:31;;;:16;;;:31;20972:18;;;:25;;;-1:-1:-1;21015:14:2;;;:5;:14;;;;;:23;;20923:6;;21015:14;;;:23;;:14;:23;:::i;:::-;-1:-1:-1;21015:23:2;;;;;;;;;-1:-1:-1;;21015:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21015:23:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21015:23:2;-1:-1:-1;;;;;;;;21015:23:2;;;;;;;-1:-1:-1;;;;21015:23:2;;-1:-1:-1;;;21015:23:2;;;;;;-1:-1:-1;;;;21015:23:2;-1:-1:-1;;;21015:23:2;;;;;-1:-1:-1;;;;21015:23:2;;;;;-1:-1:-1;;;21015:23:2;;;;;;;;;;;-1:-1:-1;;;20882:211:2;21189:6;21169;:18;;;:26;21166:1249;;21214:13;21245:1;21230:6;:14;;;:16;;;;:::i;:::-;21302:10;;;21321:16;;;21302:36;;-1:-1:-1;;;21302:36:2;;31027:6:27;31015:19;;;21302:36:2;;;30997:38:27;-1:-1:-1;;;;;21214:32:2;;;;;-1:-1:-1;21264:27:2;;-1:-1:-1;;;;;21302:10:2;;;;:18;;30970::27;;21302:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21358:10;;;21380:16;;;21398:25;;21358:66;;-1:-1:-1;;;21358:66:2;;31534:6:27;31522:19;;;21358:66:2;;;31504:38:27;31558:18;;;31551:34;21264:75:2;;-1:-1:-1;;;;;;21358:10:2;;:21;;31477:18:27;;21358:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21442:10:2;;21472:25;;21442:56;;-1:-1:-1;;;21442:56:2;;;;;32329:25:27;;;32370:18;;;32363:34;;;;-1:-1:-1;;;;;21442:10:2;;;;-1:-1:-1;21442:21:2;;-1:-1:-1;32302:18:27;;21442:56:2;32155:248:27;21166:1249:2;22130:14;;;;22114:13;22169:14;;;:5;:14;;;;;-1:-1:-1;;;;;22114:30:2;;;;22169:14;22162:21;22169:14;22114:13;22162:21;:::i;:::-;-1:-1:-1;22162:21:2;;;;;-1:-1:-1;;22162:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22162:21:2;;;;22234:7;1074:6:12;;-1:-1:-1;;;;;1074:6:12;;1001:87;22234:7:2;-1:-1:-1;;;;;22234:12:2;22254:5;22234:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22201:63;;;;22340:4;22332:37;;;;-1:-1:-1;;;22332:37:2;;;;;;;:::i;:::-;22008:407;;;21166:1249;22489:14;22486:731;;;22518:27;22548:49;22572:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;22548:49:2;22518:79;;22699:9;22695:512;22717:19;22713:1;:23;22695:512;;;22820:7;22769:48;22789:24;22815:1;22769:19;:48::i;:::-;22761:66;22757:404;;22850:17;22870:51;22896:24;22870:25;:51::i;:::-;22850:71;-1:-1:-1;22946:4:2;;22943:200;;23028:24;23066:31;23111:9;;23028:30;;:80;;23066:40;;23104:1;;23066:31;;:40;:::i;:::-;23028:80;;;;;;;;;;;;;-1:-1:-1;23028:80:2;:92;22943:200;22828:333;22757:404;23188:3;;22695:512;;;;22504:713;19112:4112;;;;;19016:4208;;;:::o;1901:192:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:12;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:12;;32880:2:27;1982:73:12::1;::::0;::::1;32862:21:27::0;32919:2;32899:18;;;32892:30;32958:34;32938:18;;;32931:62;-1:-1:-1;;;33009:18:27;;;33002:36;33055:19;;1982:73:12::1;32678:402:27::0;1982:73:12::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;6668:688:2:-;6743:4;6759:27;6789:49;6813:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6789:49:2;6759:79;;6848:18;;:::i;:::-;6992:9;6988:340;7010:19;7006:1;:23;6988:340;;;7055:5;:63;7069:47;7089:24;7114:1;7069:19;:47::i;:::-;7061:56;;7055:63;;;;;;;;;;;7046:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7046:72:2;;;-1:-1:-1;;7046:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7046:72:2;;-1:-1:-1;;;;;7046:72:2;;;;;-1:-1:-1;;;7046:72:2;;;;;;;;;;-1:-1:-1;;;7046:72:2;;;;;;;-1:-1:-1;;;7046:72:2;;;;;;;;;7136:36;;;;;-1:-1:-1;7175:15:2;7136:54;;;:80;;;;;7210:6;7194;:12;;;:22;;;;7136:80;:109;;;;;7239:6;7220;:16;;;:25;;;;7136:109;7132:158;;;-1:-1:-1;7271:4:2;;6668:688;-1:-1:-1;;;;6668:688:2:o;7132:158::-;7313:3;;6988:340;;;-1:-1:-1;7344:5:2;;6668:688;-1:-1:-1;;;;6668:688:2:o;10885:1221::-;10967:9;10963:1137;10982:9;:16;10980:18;;10963:1137;;;11098:9;11081:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;11071:38;;;;;;11044:9;11054:1;11044:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;11027:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;11017:50;;;;;;:92;11014:1048;;11192:27;11222:9;11232:1;11222:12;;;;;;;;:::i;:::-;;;;;;;;;;;11192:42;;11252:34;11289:9;11316:1;11299:9;:16;;;;:18;;;;:::i;:::-;11289:29;;;;;;;;:::i;:::-;;;;;;;;;;;11252:66;;11447:17;11434:30;;11489:9;11516:1;11499:9;:16;;;;:18;;;;:::i;:::-;11489:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11482:36;;;;;;;;:::i;:::-;-1:-1:-1;11482:36:2;;;;-1:-1:-1;;;;;;11482:36:2;;;11995:9;12005:16;;:18;;11482:36;;12005:18;:::i;:::-;11995:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11988:36;;;;;;;;:::i;:::-;-1:-1:-1;11988:36:2;;;;-1:-1:-1;;;;;;11988:36:2;;;-1:-1:-1;12042:5:2;;-1:-1:-1;12042:5:2;11014:1048;12085:3;;10963:1137;;;;10885:1221;:::o;5257:389::-;5318:15;5366:14;;5353:10;:27;5345:56;;;;-1:-1:-1;;;5345:56:2;;24193:2:27;5345:56:2;;;24175:21:27;24232:2;24212:18;;;24205:30;-1:-1:-1;;;24251:18:27;;;24244:46;24307:18;;5345:56:2;23991:340:27;5345:56:2;5411:25;5452:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;5439:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5439:51:2;;5411:79;;5504:9;5500:114;5522:9;:16;5519:1;:19;5500:114;;;5573:9;:21;5583:10;5573:21;;;;;;;;;;;:27;;5601:1;5573:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5558:9;5568:1;5558:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;5540:3;;;;:::i;:::-;;;;5500:114;;;-1:-1:-1;5630:9:2;5257:389;-1:-1:-1;;5257:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;14443:931:2:-;14684:9;:16;;14710;;;;;;14658:23;14710:16;;;14684;;:9;:16;;14767:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;14807:20:2;;;:31;14829:9;;14807:20;:31;:::i;:::-;;14873:5;14852:11;:18;;;:26;;;;;;;;;;;;;;;;;;14917:11;14892;:22;;;:36;;;;;;;;;;;;;;;;;;14972:16;14942:11;:27;;;:46;;;;;;;;;;;;;;;;;;15026:10;15002:11;:21;;;:34;;;;;;;;;;;;;;;;;;15077:13;15050:11;:24;;;:40;;;;;;;;;;;;;;;;;;15131:13;15104:11;:24;;;:40;;;;;;;;;;;;;;;;;;15187:15;15158:11;:26;;;:44;;;;;;;;;;;;;;;;;;15248:119;15267:9;;15278:11;15291:16;15309:10;15321:13;15336;15351:15;15248:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;14648:726;;14443:931;;;;;;;;:::o;2101:173:12:-;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;3287:324:1:-;3351:13;3380:12;3386:5;5880:12;;;;;-1:-1:-1;;;5866:10:1;;;;;:26;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:1;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:1;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;-1:-1:-1;;3565:29:1;3580:14;;-1:-1:-1;;;;;3565:29:1;;;;;;;;3468:23;3287:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;35348:2:27;35401:87:0;;;35330:21:27;35387:2;35367:18;;;35360:30;35426:34;35406:18;;;35399:62;-1:-1:-1;;;35477:18:27;;;35470:38;35525:19;;35401:87:0;35146:404:27;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;35757:2:27;26359:106:0;;;35739:21:27;35796:2;35776:18;;;35769:30;35835:34;35815:18;;;35808:62;-1:-1:-1;;;35886:18:27;;;35879:37;35933:19;;26359:106:0;35555:403:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:27;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:27;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:27;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:27:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:27;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:27:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:27;1729:40;;-1:-1:-1;;;;;1784:34:27;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:27:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:27;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:27:o;2625:118::-;2711:5;2704:13;2697:21;2690:5;2687:32;2677:60;;2733:1;2730;2723:12;2748:545;2847:6;2855;2863;2916:2;2904:9;2895:7;2891:23;2887:32;2884:52;;;2932:1;2929;2922:12;2884:52;2968:9;2955:23;2945:33;;3029:2;3018:9;3014:18;3001:32;-1:-1:-1;;;;;3048:6:27;3045:30;3042:50;;;3088:1;3085;3078:12;3042:50;3111:61;3164:7;3155:6;3144:9;3140:22;3111:61;:::i;:::-;3101:71;;;3222:2;3211:9;3207:18;3194:32;3235:28;3257:5;3235:28;:::i;:::-;3282:5;3272:15;;;2748:545;;;;;:::o;3667:836::-;3955:4;3984:3;4014:2;4003:9;3996:21;4034:45;4075:2;4064:9;4060:18;4052:6;4034:45;:::i;:::-;4122:14;;4115:22;4110:2;4095:18;;4088:50;-1:-1:-1;;4157:12:27;4205:15;;;4200:2;4185:18;;4178:43;4269:4;4257:17;;;;4252:2;4237:18;;4230:45;4324:8;4312:21;;;;4306:3;4291:19;;4284:50;4371:15;;;4365:3;4350:19;;4343:44;4424:15;;;4418:3;4403:19;;4396:44;4489:6;4477:19;;;4471:3;4456:19;;;4449:48;4122:14;4026:53;-1:-1:-1;3667:836:27:o;4508:165::-;4575:20;;4635:12;4624:24;;4614:35;;4604:63;;4663:1;4660;4653:12;4604:63;4508:165;;;:::o;4678:184::-;4736:6;4789:2;4777:9;4768:7;4764:23;4760:32;4757:52;;;4805:1;4802;4795:12;4757:52;4828:28;4846:9;4828:28;:::i;:::-;4818:38;4678:184;-1:-1:-1;;;4678:184:27:o;4978:1175::-;5025:3;5053:6;5094:5;5088:12;5121:2;5116:3;5109:15;5145:45;5186:2;5181:3;5177:12;5163;5145:45;:::i;:::-;5133:57;;;5238:4;5231:5;5227:16;5221:23;5253:49;5296:4;5291:3;5287:14;5271;896:12;885:24;873:37;;820:96;5253:49;;5351:4;5344:5;5340:16;5334:23;5327:4;5322:3;5318:14;5311:47;5407:4;5400:5;5396:16;5390:23;5383:4;5378:3;5374:14;5367:47;5462:4;5455:5;5451:16;5445:23;5477:48;5519:4;5514:3;5510:14;5494;3557:4;3546:16;3534:29;;3490:75;5477:48;;5573:4;5566:5;5562:16;5556:23;5588:49;5631:4;5626:3;5622:14;5606;3646:8;3635:20;3623:33;;3570:92;5588:49;;5685:4;5678:5;5674:16;5668:23;5700:49;5743:4;5738:3;5734:14;5718;-1:-1:-1;;;;;4932:34:27;4920:47;;4867:106;5700:49;;5797:4;5790:5;5786:16;5780:23;5812:49;5855:4;5850:3;5846:14;5830;801:6;790:18;778:31;;725:90;5812:49;-1:-1:-1;5880:6:27;5923:14;;;5917:21;801:6;790:18;5981:12;;;778:31;6013:6;6056:14;;;6050:21;896:12;885:24;;6114:12;;;873:37;6080:47;820:96;6158:1357;6418:4;6466:2;6455:9;6451:18;6496:2;6485:9;6478:21;6519:6;6554;6548:13;6585:6;6577;6570:22;6623:2;6612:9;6608:18;6601:25;;6685:2;6675:6;6672:1;6668:14;6657:9;6653:30;6649:39;6635:53;;6707:4;6746:2;6738:6;6734:15;6767:1;6777:260;6791:6;6788:1;6785:13;6777:260;;;6884:2;6880:7;6868:9;6860:6;6856:22;6852:36;6847:3;6840:49;6912:45;6950:6;6941;6935:13;6912:45;:::i;:::-;6902:55;-1:-1:-1;7015:12:27;;;;6980:15;;;;6813:1;6806:9;6777:260;;;-1:-1:-1;;7073:22:27;;;7053:18;;;7046:50;7149:13;;7171:24;;;7253:15;;;;7213;;;-1:-1:-1;7149:13:27;-1:-1:-1;7288:1:27;7298:189;7314:8;7309:3;7306:17;7298:189;;;7383:15;;7369:30;;7460:17;;;;7421:14;;;;7342:1;7333:11;7298:189;;;-1:-1:-1;7504:5:27;;6158:1357;-1:-1:-1;;;;;;;6158:1357:27:o;7520:348::-;7572:8;7582:6;7636:3;7629:4;7621:6;7617:17;7613:27;7603:55;;7654:1;7651;7644:12;7603:55;-1:-1:-1;7677:20:27;;-1:-1:-1;;;;;7709:30:27;;7706:50;;;7752:1;7749;7742:12;7706:50;7789:4;7781:6;7777:17;7765:29;;7841:3;7834:4;7825:6;7817;7813:19;7809:30;7806:39;7803:59;;;7858:1;7855;7848:12;7803:59;7520:348;;;;;:::o;7873:161::-;7940:20;;8000:8;7989:20;;7979:31;;7969:59;;8024:1;8021;8014:12;8039:159;8106:20;;8166:6;8155:18;;8145:29;;8135:57;;8188:1;8185;8178:12;8203:859;8313:6;8321;8329;8337;8345;8353;8361;8414:3;8402:9;8393:7;8389:23;8385:33;8382:53;;;8431:1;8428;8421:12;8382:53;8471:9;8458:23;-1:-1:-1;;;;;8496:6:27;8493:30;8490:50;;;8536:1;8533;8526:12;8490:50;8575:59;8626:7;8617:6;8606:9;8602:22;8575:59;:::i;:::-;8653:8;;-1:-1:-1;8549:85:27;-1:-1:-1;;8738:2:27;8723:18;;8710:32;8782:4;8771:16;;8761:27;;8751:55;;8802:1;8799;8792:12;8751:55;8825:5;-1:-1:-1;8849:37:27;8882:2;8867:18;;8849:37;:::i;:::-;8839:47;;8905:37;8938:2;8927:9;8923:18;8905:37;:::i;:::-;8895:47;;8961:38;8994:3;8983:9;8979:19;8961:38;:::i;:::-;8951:48;;9018:38;9051:3;9040:9;9036:19;9018:38;:::i;:::-;9008:48;;8203:859;;;;;;;;;;:::o;9067:248::-;9135:6;9143;9196:2;9184:9;9175:7;9171:23;9167:32;9164:52;;;9212:1;9209;9202:12;9164:52;-1:-1:-1;;9235:23:27;;;9305:2;9290:18;;;9277:32;;-1:-1:-1;9067:248:27:o;9502:131::-;-1:-1:-1;;;;;9577:31:27;;9567:42;;9557:70;;9623:1;9620;9613:12;9638:247;9697:6;9750:2;9738:9;9729:7;9725:23;9721:32;9718:52;;;9766:1;9763;9756:12;9718:52;9805:9;9792:23;9824:31;9849:5;9824:31;:::i;9890:531::-;9933:5;9986:3;9979:4;9971:6;9967:17;9963:27;9953:55;;10004:1;10001;9994:12;9953:55;10040:6;10027:20;-1:-1:-1;;;;;10062:2:27;10059:26;10056:52;;;10088:18;;:::i;:::-;10132:55;10175:2;10156:13;;-1:-1:-1;;10152:27:27;10181:4;10148:38;10132:55;:::i;:::-;10212:2;10203:7;10196:19;10258:3;10251:4;10246:2;10238:6;10234:15;10230:26;10227:35;10224:55;;;10275:1;10272;10265:12;10224:55;10340:2;10333:4;10325:6;10321:17;10314:4;10305:7;10301:18;10288:55;10388:1;10363:16;;;10381:4;10359:27;10352:38;;;;10367:7;9890:531;-1:-1:-1;;;9890:531:27:o;10426:462::-;10512:6;10520;10528;10581:2;10569:9;10560:7;10556:23;10552:32;10549:52;;;10597:1;10594;10587:12;10549:52;10637:9;10624:23;-1:-1:-1;;;;;10662:6:27;10659:30;10656:50;;;10702:1;10699;10692:12;10656:50;10725;10767:7;10758:6;10747:9;10743:22;10725:50;:::i;:::-;10715:60;;;10822:2;10811:9;10807:18;10794:32;10784:42;;10845:37;10878:2;10867:9;10863:18;10845:37;:::i;:::-;10835:47;;10426:462;;;;;:::o;10893:316::-;10970:6;10978;10986;11039:2;11027:9;11018:7;11014:23;11010:32;11007:52;;;11055:1;11052;11045:12;11007:52;-1:-1:-1;;11078:23:27;;;11148:2;11133:18;;11120:32;;-1:-1:-1;11199:2:27;11184:18;;;11171:32;;10893:316;-1:-1:-1;10893:316:27:o;11214:1018::-;11562:4;11591:3;11621:2;11610:9;11603:21;11641:45;11682:2;11671:9;11667:18;11659:6;11641:45;:::i;:::-;11705:12;11753:15;;;11748:2;11733:18;;11726:43;11800:2;11785:18;;11778:34;;;;-1:-1:-1;;11843:2:27;11828:18;;11821:34;;;;11904:4;11892:17;;;;11886:3;11871:19;;11864:46;11959:8;11947:21;;;;11941:3;11926:19;;11919:50;-1:-1:-1;;;;;12006:35:27;;;;12000:3;11985:19;;11978:64;12061:6;12104:15;;;12098:3;12083:19;;12076:44;12157:15;12151:3;12136:19;;12129:44;12210:15;;;12204:3;12189:19;;;12182:44;;;;11633:53;11214:1018;-1:-1:-1;11214:1018:27:o;12445:245::-;12614:2;12603:9;12596:21;12577:4;12634:50;12680:2;12669:9;12665:18;12657:6;12634:50;:::i;12695:803::-;12857:4;12886:2;12926;12915:9;12911:18;12956:2;12945:9;12938:21;12979:6;13014;13008:13;13045:6;13037;13030:22;13083:2;13072:9;13068:18;13061:25;;13145:2;13135:6;13132:1;13128:14;13117:9;13113:30;13109:39;13095:53;;13183:2;13175:6;13171:15;13204:1;13214:255;13228:6;13225:1;13222:13;13214:255;;;13321:2;13317:7;13305:9;13297:6;13293:22;13289:36;13284:3;13277:49;13349:40;13382:6;13373;13367:13;13349:40;:::i;:::-;13339:50;-1:-1:-1;13447:12:27;;;;13412:15;;;;13250:1;13243:9;13214:255;;;-1:-1:-1;13486:6:27;;12695:803;-1:-1:-1;;;;;;;12695:803:27:o;13503:774::-;13614:6;13622;13630;13638;13646;13654;13662;13715:3;13703:9;13694:7;13690:23;13686:33;13683:53;;;13732:1;13729;13722:12;13683:53;13772:9;13759:23;-1:-1:-1;;;;;13797:6:27;13794:30;13791:50;;;13837:1;13834;13827:12;13791:50;13876:59;13927:7;13918:6;13907:9;13903:22;13876:59;:::i;:::-;13954:8;;-1:-1:-1;13850:85:27;-1:-1:-1;14008:37:27;;-1:-1:-1;14041:2:27;14026:18;;14008:37;:::i;14563:484::-;14665:6;14673;14681;14734:2;14722:9;14713:7;14709:23;14705:32;14702:52;;;14750:1;14747;14740:12;14702:52;14786:9;14773:23;14763:33;;14843:2;14832:9;14828:18;14815:32;14805:42;;14898:2;14887:9;14883:18;14870:32;-1:-1:-1;;;;;14917:6:27;14914:30;14911:50;;;14957:1;14954;14947:12;14911:50;14980:61;15033:7;15024:6;15013:9;15009:22;14980:61;:::i;:::-;14970:71;;;14563:484;;;;;:::o;15052:322::-;15121:6;15174:2;15162:9;15153:7;15149:23;15145:32;15142:52;;;15190:1;15187;15180:12;15142:52;15230:9;15217:23;-1:-1:-1;;;;;15255:6:27;15252:30;15249:50;;;15295:1;15292;15285:12;15249:50;15318;15360:7;15351:6;15340:9;15336:22;15318:50;:::i;:::-;15308:60;15052:322;-1:-1:-1;;;;15052:322:27:o;15379:643::-;15548:2;15600:21;;;15670:13;;15573:18;;;15692:22;;;15519:4;;15548:2;15771:15;;;;15745:2;15730:18;;;15519:4;15814:182;15828:6;15825:1;15822:13;15814:182;;;15893:13;;15908:6;15889:26;15877:39;;15971:15;;;;15936:12;;;;15850:1;15843:9;15814:182;;;-1:-1:-1;16013:3:27;;15379:643;-1:-1:-1;;;;;;15379:643:27:o;16027:380::-;16106:1;16102:12;;;;16149;;;16170:61;;16224:4;16216:6;16212:17;16202:27;;16170:61;16277:2;16269:6;16266:14;16246:18;16243:38;16240:161;;16323:10;16318:3;16314:20;16311:1;16304:31;16358:4;16355:1;16348:15;16386:4;16383:1;16376:15;16240:161;;16027:380;;;:::o;16412:127::-;16473:10;16468:3;16464:20;16461:1;16454:31;16504:4;16501:1;16494:15;16528:4;16525:1;16518:15;16731:543;16949:13;;16892:3;;16923;;17002:4;17029:15;;;16892:3;17072:175;17086:6;17083:1;17080:13;17072:175;;;17149:13;;17135:28;;17185:14;;;;17222:15;;;;17108:1;17101:9;17072:175;;;-1:-1:-1;17263:5:27;;16731:543;-1:-1:-1;;;;;;16731:543:27:o;17279:443::-;17504:6;17493:9;17486:25;17561:6;17554:14;17547:22;17542:2;17531:9;17527:18;17520:50;17606:6;17601:2;17590:9;17586:18;17579:34;17649:3;17644:2;17633:9;17629:18;17622:31;17467:4;17670:46;17711:3;17700:9;17696:19;17688:6;17670:46;:::i;:::-;17662:54;17279:443;-1:-1:-1;;;;;;17279:443:27:o;17727:251::-;17797:6;17850:2;17838:9;17829:7;17825:23;17821:32;17818:52;;;17866:1;17863;17856:12;17818:52;17898:9;17892:16;17917:31;17942:5;17917:31;:::i;17983:245::-;18050:6;18103:2;18091:9;18082:7;18078:23;18074:32;18071:52;;;18119:1;18116;18109:12;18071:52;18151:9;18145:16;18170:28;18192:5;18170:28;:::i;18233:184::-;18303:6;18356:2;18344:9;18335:7;18331:23;18327:32;18324:52;;;18372:1;18369;18362:12;18324:52;-1:-1:-1;18395:16:27;;18233:184;-1:-1:-1;18233:184:27:o;18771:356::-;18973:2;18955:21;;;18992:18;;;18985:30;19051:34;19046:2;19031:18;;19024:62;19118:2;19103:18;;18771:356::o;19132:220::-;19281:2;19270:9;19263:21;19244:4;19301:45;19342:2;19331:9;19327:18;19319:6;19301:45;:::i;19483:772::-;19533:3;19574:5;19568:12;19603:36;19629:9;19603:36;:::i;:::-;19648:19;;;19686:4;19709:1;19726:18;;;19753:146;;;;19913:1;19908:341;;;;19719:530;;19753:146;-1:-1:-1;;19795:24:27;;19781:12;;;19774:46;19867:14;;19860:22;19857:1;19853:30;19844:40;;19840:49;;;-1:-1:-1;19753:146:27;;19908:341;19939:5;19936:1;19929:16;19986:2;19983:1;19973:16;20011:1;20025:174;20039:6;20036:1;20033:13;20025:174;;;20126:14;;20108:11;;;20104:20;;20097:44;20169:16;;;;20054:10;;20025:174;;;20223:11;;20219:20;;;-1:-1:-1;;19719:530:27;;;;;;19483:772;;;;:::o;20260:225::-;20406:2;20395:9;20388:21;20369:4;20426:53;20475:2;20464:9;20460:18;20452:6;20426:53;:::i;20838:545::-;20940:2;20935:3;20932:11;20929:448;;;20976:1;21001:5;20997:2;20990:17;21046:4;21042:2;21032:19;21116:2;21104:10;21100:19;21097:1;21093:27;21087:4;21083:38;21152:4;21140:10;21137:20;21134:47;;;-1:-1:-1;21175:4:27;21134:47;21230:2;21225:3;21221:12;21218:1;21214:20;21208:4;21204:31;21194:41;;21285:82;21303:2;21296:5;21293:13;21285:82;;;21348:17;;;21329:1;21318:13;21285:82;;;21289:3;;;20929:448;20838:545;;;:::o;21559:1352::-;21685:3;21679:10;-1:-1:-1;;;;;21704:6:27;21701:30;21698:56;;;21734:18;;:::i;:::-;21763:97;21853:6;21813:38;21845:4;21839:11;21813:38;:::i;:::-;21807:4;21763:97;:::i;:::-;21915:4;;21979:2;21968:14;;21996:1;21991:663;;;;22698:1;22715:6;22712:89;;;-1:-1:-1;22767:19:27;;;22761:26;22712:89;-1:-1:-1;;21516:1:27;21512:11;;;21508:24;21504:29;21494:40;21540:1;21536:11;;;21491:57;22814:81;;21961:944;;21991:663;19430:1;19423:14;;;19467:4;19454:18;;-1:-1:-1;;22027:20:27;;;22145:236;22159:7;22156:1;22153:14;22145:236;;;22248:19;;;22242:26;22227:42;;22340:27;;;;22308:1;22296:14;;;;22175:19;;22145:236;;;22149:3;22409:6;22400:7;22397:19;22394:201;;;22470:19;;;22464:26;-1:-1:-1;;22553:1:27;22549:14;;;22565:3;22545:24;22541:37;22537:42;22522:58;22507:74;;22394:201;-1:-1:-1;;;;;22641:1:27;22625:14;;;22621:22;22608:36;;-1:-1:-1;21559:1352:27:o;22916:127::-;22977:10;22972:3;22968:20;22965:1;22958:31;23008:4;23005:1;22998:15;23032:4;23029:1;23022:15;23048:128;23088:3;23119:1;23115:6;23112:1;23109:13;23106:39;;;23125:18;;:::i;:::-;-1:-1:-1;23161:9:27;;23048:128::o;23181:217::-;23220:4;23249:6;23305:10;;;;23275;;23327:12;;;23324:38;;;23342:18;;:::i;:::-;23379:13;;23181:217;-1:-1:-1;;;23181:217:27:o;23403:125::-;23443:4;23471:1;23468;23465:8;23462:34;;;23476:18;;:::i;:::-;-1:-1:-1;23513:9:27;;23403:125::o;23533:453::-;23777:12;23769:6;23765:25;23754:9;23747:44;23827:6;23822:2;23811:9;23807:18;23800:34;23870:3;23865:2;23854:9;23850:18;23843:31;23728:4;23891:46;23932:3;23921:9;23917:19;23909:6;23891:46;:::i;:::-;23883:54;;23973:6;23968:2;23957:9;23953:18;23946:34;23533:453;;;;;;;:::o;24684:135::-;24723:3;24744:17;;;24741:43;;24764:18;;:::i;:::-;-1:-1:-1;24811:1:27;24800:13;;24684:135::o;27017:1206::-;-1:-1:-1;;;;;27136:3:27;27133:27;27130:53;;;27163:18;;:::i;:::-;27192:94;27282:3;27242:38;27274:4;27268:11;27242:38;:::i;:::-;27236:4;27192:94;:::i;:::-;27312:1;27337:2;27332:3;27329:11;27354:1;27349:616;;;;28009:1;28026:3;28023:93;;;-1:-1:-1;28082:19:27;;;28069:33;28023:93;-1:-1:-1;;21516:1:27;21512:11;;;21508:24;21504:29;21494:40;21540:1;21536:11;;;21491:57;28129:78;;27322:895;;27349:616;19430:1;19423:14;;;19467:4;19454:18;;-1:-1:-1;;27385:17:27;;;27486:9;27508:229;27522:7;27519:1;27516:14;27508:229;;;27611:19;;;27598:33;27583:49;;27718:4;27703:20;;;;27671:1;27659:14;;;;27538:12;27508:229;;;27512:3;27765;27756:7;27753:16;27750:159;;;27889:1;27885:6;27879:3;27873;27870:1;27866:11;27862:21;27858:34;27854:39;27841:9;27836:3;27832:19;27819:33;27815:79;27807:6;27800:95;27750:159;;;27952:1;27946:3;27943:1;27939:11;27935:19;27929:4;27922:33;27322:895;;27017:1206;;;:::o;28363:1322::-;28585:6;28574:9;28567:25;28628:6;28623:2;28612:9;28608:18;28601:34;28671:2;28666;28655:9;28651:18;28644:30;28548:4;28693:6;28735:2;28730;28719:9;28715:18;28708:30;28761:54;28810:3;28799:9;28795:19;28787:6;28761:54;:::i;:::-;28904:4;28892:17;;28886:24;28339:12;28323:29;896:12;885:24;;28967:3;28952:19;;873:37;-1:-1:-1;29027:4:27;29015:17;;29009:24;29003:3;28988:19;;28981:53;29089:4;29077:17;;29071:24;29065:3;29050:19;;29043:53;29140:4;29128:17;;29122:24;29187:4;29172:20;;29209:3;29194:19;;3534:29;29249:1;29245:17;;;29264:8;29241:32;29290:3;29275:19;;3623:33;29330:2;29326:18;;;-1:-1:-1;;;;;29322:47:27;29386:3;29371:19;;4920:47;29410:6;29451:3;29447:19;;;29443:28;;29473:18;;;778:31;29501:68;29564:3;29553:9;29549:19;29544:2;29532:9;29527:3;29523:19;29519:28;801:6;790:18;778:31;;725:90;29501:68;-1:-1:-1;29604:3:27;29600:19;;;29621:12;29596:38;29651:3;29636:19;;873:37;-1:-1:-1;29673:6:27;28363:1322;-1:-1:-1;;;;;;28363:1322:27:o;30547:300::-;30586:1;-1:-1:-1;;;;;30661:2:27;30658:1;30654:10;30683:3;30673:134;;30729:10;30724:3;30720:20;30717:1;30710:31;30764:4;30761:1;30754:15;30792:4;30789:1;30782:15;30673:134;30825:10;;30821:20;;;;;30547:300;-1:-1:-1;;30547:300:27:o;31806:344::-;32008:2;31990:21;;;32047:2;32027:18;;;32020:30;-1:-1:-1;;;32081:2:27;32066:18;;32059:50;32141:2;32126:18;;31806:344::o;32408:265::-;32447:3;32475:9;;;32500:10;;-1:-1:-1;;;;;32519:27:27;;;32512:35;;32496:52;32493:78;;;32551:18;;:::i;:::-;-1:-1:-1;;;32598:19:27;;;32591:27;;32583:36;;32580:62;;;32622:18;;:::i;:::-;-1:-1:-1;;32658:9:27;;32408:265::o;33085:276::-;33216:3;33254:6;33248:13;33270:53;33316:6;33311:3;33304:4;33296:6;33292:17;33270:53;:::i;:::-;33339:16;;;;;33085:276;-1:-1:-1;;33085:276:27:o;33366:842::-;33494:3;33523:1;33556:6;33550:13;33586:36;33612:9;33586:36;:::i;:::-;33641:1;33658:18;;;33685:133;;;;33832:1;33827:356;;;;33651:532;;33685:133;-1:-1:-1;;33718:24:27;;33706:37;;33791:14;;33784:22;33772:35;;33763:45;;;-1:-1:-1;33685:133:27;;33827:356;33858:6;33855:1;33848:17;33888:4;33933:2;33930:1;33920:16;33958:1;33972:165;33986:6;33983:1;33980:13;33972:165;;;34064:14;;34051:11;;;34044:35;34107:16;;;;34001:10;;33972:165;;;-1:-1:-1;;;34157:16:27;;;;;34199:3;-1:-1:-1;;;;;;33366:842:27:o;34213:928::-;34526:3;34515:9;34508:22;34567:6;34561:3;34550:9;34546:19;34539:35;34489:4;34593:3;34646:6;34638;34633:2;34622:9;34618:18;34605:48;34702:1;34673:22;;;34669:31;;34662:42;34794:12;34844:15;;;34837:4;34822:20;;34815:45;34908:4;34896:17;;;;34891:2;34876:18;;34869:45;-1:-1:-1;34962:8:27;34950:21;;;;34945:2;34930:18;;34923:49;35009:15;;;35003:3;34988:19;;34981:44;35062:15;;;35056:3;35041:19;;35034:44;35127:6;35115:19;;;35109:3;35094:19;;35087:48;34765:2;34744:15;;;-1:-1:-1;;34740:29:27;34725:45;34721:54;;;-1:-1:-1;34213:928:27:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ],
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    771,
    23934
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD374A217 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xF61D8BD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x3B47FED2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3759 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0xA25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x3832 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP3 SWAP2 SWAP1 PUSH2 0x391E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3A26 JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3AC3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AFA JUMP JUMPDEST PUSH2 0x1031 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x107D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B86 JUMP JUMPDEST PUSH2 0x10B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3BDC JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3C89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x3832 JUMP JUMPDEST PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3C9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CFE JUMP JUMPDEST PUSH2 0x1D8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x1EEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4C3 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4E JUMP JUMPDEST PUSH2 0x2226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AFA JUMP JUMPDEST PUSH2 0x2C43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x2CDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9D JUMP JUMPDEST PUSH2 0x2EAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x578 CALLDATASIZE PUSH1 0x4 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x304B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x5A5 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D1 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x601 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x66B JUMPI PUSH2 0x66B PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x685 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI PUSH2 0x6BA PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FC JUMPI PUSH2 0x6FC PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x69F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x3E71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x78D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x88C JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D828F83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xEC147C18 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x906 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1245C6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x49171AC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x903 SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x913 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xE SLOAD DUP2 GT PUSH2 0xB2B JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1038D37 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH4 0x6352211E SWAP3 SWAP2 AND SWAP1 PUSH4 0x40E34DC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAE SWAP2 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB23 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA2A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0xB51 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB5B PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE3 JUMPI PUSH2 0xB73 PUSH1 0x6 DUP3 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xBA1 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBCD SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xCCF JUMPI POP DUP8 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xCDB JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB60 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xD50 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD0B PUSH2 0x3533 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD03 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP4 SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD6B JUMPI PUSH2 0xD6B PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDA4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD91 PUSH2 0x3533 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD89 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xDC1 JUMPI PUSH2 0xDC1 PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDEA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xFB7 JUMPI PUSH2 0xE03 PUSH1 0x6 DUP3 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP9 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xE31 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE5D SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP9 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xF5F JUMPI POP DUP11 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xFAF JUMPI DUP7 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF95 JUMPI PUSH2 0xF95 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 ADD SWAP4 POP DUP5 DUP5 GT PUSH2 0xFB7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xDF0 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFCF PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x1017 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1028 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x31E6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x105B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x3F2B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x3F2B JUMP JUMPDEST PUSH2 0x10B1 PUSH1 0x0 PUSH2 0x3365 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1523 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x3F60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10FA JUMPI PUSH2 0x10FA PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x151B JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x114A JUMPI PUSH2 0x114A PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0x11AE JUMPI POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1188 JUMPI PUSH2 0x1188 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x11F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xB SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x7 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0x1302 SWAP1 DUP3 PUSH2 0x4052 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1401 SWAP1 DUP5 SWAP1 PUSH2 0x4127 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1414 SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x4127 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1427 JUMPI PUSH2 0x1427 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1462 JUMPI PUSH2 0x1462 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x149F JUMPI PUSH2 0x149F PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x4162 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x150D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x15D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1701 JUMPI DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x161F JUMPI PUSH2 0x161F PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x169F JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x166A JUMPI PUSH2 0x166A PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x169A JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x16EF JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x16C7 JUMPI PUSH2 0x16C7 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x16EF JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x16F9 DUP2 PUSH2 0x41B0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DA JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x17A0 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17CC SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1819 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1819 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x188F PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x18B8 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18E4 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1931 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1906 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1931 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1914 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1AE1 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19ED JUMPI PUSH2 0x19ED PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1A51 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A2C JUMPI PUSH2 0x1A2C PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A90 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A6C JUMPI PUSH2 0x1A6C PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1ACD JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AAC JUMPI PUSH2 0x1AAC PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1AD9 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x19CF JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x1B4D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B01 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B3B JUMPI PUSH2 0x1B3B PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B67 PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B9A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B85 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1D85 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BBF JUMPI PUSH2 0x1BBF PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1C23 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BFE JUMPI PUSH2 0x1BFE PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C62 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C3E JUMPI PUSH2 0x1C3E PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1C9F JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7E PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1D7D JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CB7 JUMPI PUSH2 0x1CB7 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1CD3 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CFF SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D63 JUMPI PUSH2 0x1D63 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x1D85 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1BA1 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D97 PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x1DDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1DF3 JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1E3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E52 SWAP2 SWAP1 PUSH2 0x4127 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1ED1 DUP9 DUP11 DUP4 PUSH2 0x41C9 JUMP JUMPDEST POP PUSH2 0x1EE5 DUP9 DUP9 PUSH1 0x9 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x31E6 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0A PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F14 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x221F JUMPI PUSH2 0x1F2B PUSH1 0x6 DUP3 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1F59 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F85 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FD2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FA7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FD2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2084 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2099 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2217 JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x20B5 SWAP1 TIMESTAMP PUSH2 0x4127 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x20E1 SWAP1 DUP3 PUSH2 0x4052 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x220E SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x4288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F18 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2293 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x22C4 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x2310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x231E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x2346 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2372 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2394 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 AND ISZERO PUSH2 0x24DC JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24DA JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2485 JUMPI PUSH2 0x2485 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x249F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24C7 JUMPI PUSH2 0x24C7 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x246A JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24EF SWAP2 SWAP1 PUSH2 0x3E71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x251B JUMPI PUSH1 0x0 PUSH2 0x251E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x2841 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x25A1 SWAP2 SWAP1 PUSH2 0x4353 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2604 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2628 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x268A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x269E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x270E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 POP PUSH2 0x272B DUP3 DUP3 PUSH2 0x3587 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x27D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x4387 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2810 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2815 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x4387 JUMP JUMPDEST POP POP POP POP PUSH2 0x2BAC JUMP JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x2973 JUMPI PUSH2 0xFFFF DUP9 AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 MLOAD DUP7 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x2883 SWAP1 DUP3 PUSH2 0x4052 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP2 DUP6 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x2AC6 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x2991 SWAP2 SWAP1 PUSH2 0x4353 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A19 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP16 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2AF0 DUP3 DUP3 PUSH2 0x3587 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x2B37 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B81 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B86 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x4387 JUMP JUMPDEST POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 PUSH2 0x2BCD PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C37 JUMPI DUP9 PUSH2 0x2BE6 PUSH1 0x6 DUP4 PUSH2 0x3175 JUMP JUMPDEST SUB PUSH2 0x2C2F JUMPI PUSH1 0x0 PUSH2 0x2BF7 PUSH1 0x6 PUSH2 0x33B7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x2C2D JUMPI PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2C18 SWAP1 DUP7 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2BD2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x3F2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x100E JUMP JUMPDEST PUSH2 0x2CDB DUP2 PUSH2 0x3365 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CFA PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D04 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2EA3 JUMPI PUSH1 0xA PUSH1 0x0 PUSH2 0x2D1E PUSH1 0x6 DUP5 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2D4B SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D77 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DC4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DA7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2E76 JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2E8B JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E9B JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D07 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x3047 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2ECC SWAP2 SWAP1 PUSH2 0x43F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2EF5 JUMPI PUSH2 0x2EF5 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F16 SWAP2 SWAP1 PUSH2 0x4412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x303F JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2F46 JUMPI PUSH2 0x2F46 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2F6C SWAP2 SWAP1 PUSH2 0x4162 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2F7C JUMPI PUSH2 0x2F7C PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2FA3 SWAP2 SWAP1 PUSH2 0x4162 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2FB3 JUMPI PUSH2 0x2FB3 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2FD3 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0x2FF5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4162 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3005 JUMPI PUSH2 0x3005 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x3025 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x3047 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EB1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x3091 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x30BE JUMPI PUSH2 0x30BE PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x30E7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x316E JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x311D JUMPI PUSH2 0x311D PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3149 JUMPI PUSH2 0x3149 PUSH2 0x3E5B JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x3166 DUP2 PUSH2 0x41B0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30ED JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3198 PUSH2 0x3184 DUP5 PUSH2 0x3436 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x3193 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x43B5 JUMP JUMPDEST PUSH2 0x34A4 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x31CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3209 JUMPI PUSH2 0x3209 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x322A DUP11 DUP13 DUP4 PUSH2 0x41C9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3351 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D2 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x33F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x100E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x34D7 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x34A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3593 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x35A3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2CDB SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3605 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35ED JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1523 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x362E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3655 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x3616 JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x36C4 JUMPI PUSH2 0x36C4 PUSH2 0x3686 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x36F8 JUMPI PUSH2 0x36F8 PUSH2 0x3686 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x3707 DUP3 DUP3 ADD PUSH2 0x369C JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x3721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3740 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x3727 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x376E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x378B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3797 DUP7 DUP3 DUP8 ADD PUSH2 0x36CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x37A8 DUP2 PUSH2 0x374B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x37C7 DUP2 DUP5 ADD DUP13 PUSH2 0x3616 JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x382D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x384D DUP3 PUSH2 0x3818 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x386A DUP3 DUP7 ADD DUP3 PUSH2 0x3616 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3885 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x38AE PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x38C5 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x38E0 PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x38F6 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3975 JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x3963 DUP7 DUP4 MLOAD PUSH2 0x3854 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3947 JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP6 MSTORE DUP8 DUP3 ADD SWAP5 DUP3 ADD SWAP4 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39AC JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3990 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x39CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x39FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x382D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x382D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3A41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A63 DUP11 DUP3 DUP12 ADD PUSH2 0x39B9 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3A7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x3A8B PUSH1 0x40 DUP10 ADD PUSH2 0x3A01 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A99 PUSH1 0x60 DUP10 ADD PUSH2 0x3818 JUMP JUMPDEST SWAP3 POP PUSH2 0x3AA7 PUSH1 0x80 DUP10 ADD PUSH2 0x3818 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB5 PUSH1 0xA0 DUP10 ADD PUSH2 0x3A14 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x384D DUP2 PUSH2 0x3AE5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B41 JUMPI PUSH2 0x3B41 PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x3B54 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x369C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BBD DUP7 DUP3 DUP8 ADD PUSH2 0x3B17 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3BD3 PUSH1 0x40 DUP6 ADD PUSH2 0x3818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x3C1C DUP2 DUP5 ADD DUP15 PUSH2 0x3616 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x384D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3854 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3CF1 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3CDF DUP6 DUP4 MLOAD PUSH2 0x3616 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3CC3 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D3B DUP11 DUP3 DUP12 ADD PUSH2 0x39B9 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x3A7D SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x3A14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3D63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D93 DUP7 DUP3 DUP8 ADD PUSH2 0x36CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3DC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DD1 DUP5 DUP3 DUP6 ADD PUSH2 0x3B17 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E15 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3DF5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3E35 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E9B JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3E7F JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3ECE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3616 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x384D DUP2 PUSH2 0x3AE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x384D DUP2 PUSH2 0x374B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x384D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3616 JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3F80 DUP2 PUSH2 0x3E21 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x3F9D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3FB7 JUMPI PUSH2 0x3FE5 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x3FE5 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FDD JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3FC2 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x384D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F73 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x404D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x402A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4049 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4036 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x406B JUMPI PUSH2 0x406B PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x407F DUP2 PUSH2 0x4079 DUP5 SLOAD PUSH2 0x3E21 JUMP JUMPDEST DUP5 PUSH2 0x4003 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x40B4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x409C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x4049 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x40E3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x40C4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4101 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x413A JUMPI PUSH2 0x413A PUSH2 0x4111 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x415A JUMPI PUSH2 0x415A PUSH2 0x4111 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4174 JUMPI PUSH2 0x4174 PUSH2 0x4111 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x419F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3616 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x41C2 JUMPI PUSH2 0x41C2 PUSH2 0x4111 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x41E0 JUMPI PUSH2 0x41E0 PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x41F4 DUP4 PUSH2 0x41EE DUP4 SLOAD PUSH2 0x3E21 JUMP JUMPDEST DUP4 PUSH2 0x4003 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4228 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4210 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x221F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4259 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4239 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x4276 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x42B1 PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x3F73 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x4335 PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x437B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x43D7 JUMPI PUSH2 0x43D7 PUSH2 0x4111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x43F0 JUMPI PUSH2 0x43F0 PUSH2 0x4111 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4408 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x35EA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x4420 DUP2 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x4438 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x444D JUMPI PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3E9B JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4473 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x445A JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xA7 0xE SWAP14 SELFBALANCE DUP7 0xE1 CALLDATASIZE 0xB3 CALLCODE 0x5C 0xAE PUSH3 0x5628E6 RETURNDATASIZE PUSH9 0xB7649C43A52848281B PUSH18 0x5BC3CB0864736F6C634300080F0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x185"
    },
    "12": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1"
    },
    "29": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "GT",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FD"
    },
    "62": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "69": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51D"
    },
    "73": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "80": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53D"
    },
    "84": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55D"
    },
    "95": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "107": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47D"
    },
    "111": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "118": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49D"
    },
    "122": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "129": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "133": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "138": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "145": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "149": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5"
    },
    "160": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "167": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED"
    },
    "171": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "178": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "182": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "189": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x430"
    },
    "193": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "200": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "204": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "209": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "210": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "216": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "GT",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E"
    },
    "220": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "GT",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118"
    },
    "231": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "238": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A"
    },
    "242": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "249": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32F"
    },
    "253": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "260": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F"
    },
    "264": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "271": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "275": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "280": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "281": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "287": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x294"
    },
    "291": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "298": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4"
    },
    "302": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "303": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "309": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA"
    },
    "313": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "318": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "319": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "325": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191"
    },
    "329": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "336": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "340": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF61D8BD"
    },
    "347": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED"
    },
    "351": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "358": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D"
    },
    "362": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3B47FED2"
    },
    "369": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x251"
    },
    "373": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "380": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "EQ",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266"
    },
    "384": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "385": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "394": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "395": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "STOP",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "399": {
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "400": {
      "first_revert": true,
      "fn": null,
      "offset": [
        771,
        23934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "401": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "405": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "408": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "409": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "412": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "REVERT",
      "path": "2"
    },
    "413": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1"
    },
    "418": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "421": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "422": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "424": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "427": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "428": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58A"
    },
    "432": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "433": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "434": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "436": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "437": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "440": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "441": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "442": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "443": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "444": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "445": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "446": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3642"
    },
    "449": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "450": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "451": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "453": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "454": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "456": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "457": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "RETURN",
      "path": "2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "461": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "DUP1",
      "path": "2"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "469": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "DUP1",
      "path": "2"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "REVERT",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E6"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3759"
    },
    "485": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMP",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x656"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMP",
      "path": "2"
    },
    "491": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "STOP",
      "path": "2"
    },
    "493": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "494": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "495": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "496": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "497": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "500": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "501": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "503": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "504": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "505": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "510": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x208"
    },
    "513": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "514": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "516": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "519": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "520": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "521": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79C"
    },
    "524": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "525": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "526": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "528": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "529": {
      "op": "SWAP1"
    },
    "530": {
      "op": "ISZERO"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "540": {
      "op": "JUMP"
    },
    "541": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "542": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "543": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "544": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "545": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229"
    },
    "548": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "549": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "551": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "552": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "553": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D"
    },
    "558": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x238"
    },
    "561": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "562": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "564": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "567": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "568": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "569": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91B"
    },
    "572": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "573": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "574": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "576": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "577": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "580": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "581": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "582": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "583": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "584": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "585": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "586": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "587": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "588": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "589": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B3"
    },
    "592": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "593": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "594": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "595": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "596": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "597": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D"
    },
    "600": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "601": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "603": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "604": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "605": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "606": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "POP",
      "path": "2"
    },
    "607": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "610": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "613": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x272"
    },
    "621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "REVERT",
      "path": "2"
    },
    "626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x286"
    },
    "631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3832"
    },
    "640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB33"
    },
    "645": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x391E"
    },
    "659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "660": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "661": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "662": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "DUP1",
      "path": "2"
    },
    "663": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "664": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "667": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "668": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "670": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "DUP1",
      "path": "2"
    },
    "671": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "REVERT",
      "path": "2"
    },
    "672": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "677": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "681": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "683": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A26"
    },
    "686": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "687": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC7"
    },
    "691": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "692": {
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "693": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "694": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "695": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "696": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0"
    },
    "699": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "700": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "702": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "REVERT",
      "path": "2"
    },
    "704": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "709": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF"
    },
    "712": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "713": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "715": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AC3"
    },
    "718": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "719": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "720": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "722": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "724": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "725": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "726": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "727": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "729": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "730": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP4",
      "path": "2"
    },
    "731": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "732": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "734": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP5",
      "path": "2"
    },
    "736": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "737": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "738": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "739": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "740": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "741": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "742": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "743": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "744": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "745": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "746": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "747": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "748": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "749": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "751": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "MSTORE"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "761": {
      "op": "JUMP"
    },
    "762": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "763": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "764": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "DUP1",
      "path": "2"
    },
    "765": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "766": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "769": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "770": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "772": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "DUP1",
      "path": "2"
    },
    "773": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "REVERT",
      "path": "2"
    },
    "774": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "779": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x315"
    },
    "782": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "783": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "785": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AFA"
    },
    "788": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "789": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "790": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1031"
    },
    "793": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x326"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "12"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "12"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EB"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x107D"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "815": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "816": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "817": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "818": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "819": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B"
    },
    "822": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "823": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "825": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "826": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "REVERT",
      "path": "2"
    },
    "827": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "832": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A"
    },
    "835": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "836": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "838": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B86"
    },
    "841": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "842": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "843": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B3"
    },
    "846": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35B"
    },
    "854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "REVERT",
      "path": "2"
    },
    "859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A"
    },
    "867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "868": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "873": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMP",
      "path": "2"
    },
    "874": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "875": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1529"
    },
    "878": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "881": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "882": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "883": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B"
    },
    "886": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "887": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "889": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "890": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "REVERT",
      "path": "2"
    },
    "891": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "896": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A"
    },
    "899": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "900": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "902": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BDC"
    },
    "905": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "906": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "907": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174C"
    },
    "910": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "911": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "912": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "913": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "914": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "915": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39B"
    },
    "918": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "919": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "921": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "922": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "REVERT",
      "path": "2"
    },
    "923": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "928": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AA"
    },
    "931": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "932": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "934": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "937": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "938": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "939": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1785"
    },
    "942": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "943": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "946": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "947": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "950": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "951": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "952": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "953": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "954": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "955": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "956": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "957": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "958": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "959": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "960": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "961": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C08"
    },
    "964": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "967": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "968": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D1"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "973": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "12"
    },
    "977": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "984": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C2"
    },
    "1004": {
      "op": "JUMP"
    },
    "1005": {
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1007": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1008": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1015": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1016": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1017": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1018": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "POP",
      "path": "2"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1024": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1025": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1026": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1030": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1031": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40F"
    },
    "1034": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1035": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1037": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1039": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x423"
    },
    "1044": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41E"
    },
    "1047": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1048": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1050": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "1053": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1054": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1055": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1887"
    },
    "1058": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1062": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1063": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1066": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1067": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1068": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C89"
    },
    "1071": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43C"
    },
    "1079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x450"
    },
    "1089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44B"
    },
    "1092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3832"
    },
    "1098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C9"
    },
    "1103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9C"
    },
    "1116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1119": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1120": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1121": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x469"
    },
    "1124": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1127": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1128": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1134": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x478"
    },
    "1137": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1138": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1140": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CFE"
    },
    "1143": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1144": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1145": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D8F"
    },
    "1148": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x489"
    },
    "1156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x498"
    },
    "1169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "1175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EEF"
    },
    "1180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1181": {
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C3"
    },
    "1201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DIV",
      "path": "2"
    },
    "1215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1226": {
      "op": "SWAP4"
    },
    "1227": {
      "op": "DUP5"
    },
    "1228": {
      "op": "SIGNEXTEND"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "SWAP3"
    },
    "1234": {
      "op": "SIGNEXTEND"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "op": "MSTORE"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1244": {
      "op": "JUMP"
    },
    "1245": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E9"
    },
    "1252": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1255": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1256": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F8"
    },
    "1265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4E"
    },
    "1271": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2226"
    },
    "1276": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x509"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EB"
    },
    "1294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x518"
    },
    "1297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AFA"
    },
    "1303": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C43"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1309": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1313": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x529"
    },
    "1316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1322": {
      "op": "POP"
    },
    "1323": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "1326": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x538"
    },
    "1329": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1330": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1332": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "1335": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1336": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CDE"
    },
    "1340": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1344": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x549"
    },
    "1348": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1352": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1353": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1364": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D9D"
    },
    "1367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EAE"
    },
    "1372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x569"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57D"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35D1"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304B"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1408": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DD9"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1418": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1426": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1427": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1436": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1447": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1453": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1459": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1461": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1462": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1463": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1464": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1469": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1470": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1477": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1478": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D1"
    },
    "1484": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1485": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1492": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1495": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1496": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1497": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "LT",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F3"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1507": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1508": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1509": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1517": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1519": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1522": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1526": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1527": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1530": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1531": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1533": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1535": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1538": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1540": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1541": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1542": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1545": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1546": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1549": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1550": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1552": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "GT",
      "path": "2"
    },
    "1553": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x601"
    },
    "1556": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1557": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1558": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "1560": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1562": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1564": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1565": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1566": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1573": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1575": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1576": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1578": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1582": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1583": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1584": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1587": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1589": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1595": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1596": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1598": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1607": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1609": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1610": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1620": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17908,
        17930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17957
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17958,
        17959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "LT",
      "path": "2"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17950,
        17960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "MUL",
      "path": "2"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "ADD",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "ADD",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17950,
        17960
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "ADD",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x685"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "JUMP"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "SUB",
      "path": "2"
    },
    "1678": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "SUB",
      "path": "2"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1682": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        17933,
        17961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        17908,
        17961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        17908,
        17961
      ],
      "op": "POP",
      "path": "2"
    },
    "1687": {
      "branch": 128,
      "fn": "Governance.testHashing",
      "offset": [
        17974,
        17982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        17971,
        18164
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17971,
        18164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x711"
    },
    "1692": {
      "branch": 128,
      "fn": "Governance.testHashing",
      "offset": [
        17971,
        18164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        18002,
        18011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        18021,
        18028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        18021,
        18035
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        18017,
        18018
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        18017,
        18035
      ],
      "op": "LT",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70F"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18102
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        18103,
        18104
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1709": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "LT",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18095,
        18105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "MUL",
      "path": "2"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "ADD",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "ADD",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        18095,
        18105
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "ADD",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D4"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "SWAP1"
    },
    "1747": {
      "op": "JUMP"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1749": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1755": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "SUB",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "SUB",
      "path": "2"
    },
    "1758": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1760": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1761": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        18078,
        18106
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1764": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1766": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1767": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "ADD",
      "path": "2"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        18068,
        18107
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1771": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18062
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        18063,
        18064
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1773": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "LT",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FC"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FC"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18055,
        18065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "MUL",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1795": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "ADD",
      "path": "2"
    },
    "1798": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18065
      ],
      "op": "ADD",
      "path": "2"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "offset": [
        18055,
        18107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        18135,
        18138
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        18135,
        18138
      ],
      "op": "ADD",
      "path": "2"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69F"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        17998,
        18154
      ],
      "op": "POP",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        17971,
        18164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        18173,
        18187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        18217,
        18224
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1815": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "ADD",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x724"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1823": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E71"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18200,
        18225
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "SUB",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "SUB",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        18200,
        18225
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "ADD",
      "path": "2"
    },
    "1850": {
      "fn": "Governance.testHashing",
      "offset": [
        18190,
        18226
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        18173,
        18226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        18173,
        18226
      ],
      "op": "POP",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        18253,
        18259
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        18269,
        18279
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        18261,
        18267
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1889": {
      "fn": "Governance.testHashing",
      "offset": [
        18261,
        18279
      ],
      "op": "EQ",
      "path": "2"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18288
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "offset": [
        18289,
        18290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "LT",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18281,
        18291
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "MUL",
      "path": "2"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "ADD",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "ADD",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        18281,
        18291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        18293,
        18302
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78D"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1928": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EA7"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18241,
        18303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1933": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SUB",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        18241,
        18303
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        17898,
        18310
      ],
      "op": "POP",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        17898,
        18310
      ],
      "op": "POP",
      "path": "2"
    },
    "1944": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "POP",
      "path": "2"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "POP",
      "path": "2"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        17807,
        18310
      ],
      "op": "POP",
      "path": "2"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        17807,
        18310
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1948": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1951": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1952": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1954": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1955": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1967": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "1969": {
      "op": "DUP4"
    },
    "1970": {
      "op": "SWAP1"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4743,
        4747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1974": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4743,
        4747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4790,
        4800
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4790,
        4800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "AND",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "1994": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2000": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2002": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SUB",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2008": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "GAS",
      "path": "2"
    },
    "2009": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EA"
    },
    "2016": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2017": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2018": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2020": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2025": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2026": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2027": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2028": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2033": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2035": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2037": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "NOT",
      "path": "2"
    },
    "2038": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2040": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "AND",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2048": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2050": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2051": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2052": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80E"
    },
    "2056": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED8"
    },
    "2061": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2062": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4800
      ],
      "op": "AND",
      "path": "2"
    },
    "2072": {
      "branch": 129,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4800
      ],
      "op": "EQ",
      "path": "2"
    },
    "2073": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2074": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2075": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88C"
    },
    "2078": {
      "branch": 129,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2082": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2083": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2085": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2086": {
      "op": "PUSH4",
      "value": "0x1D828F83"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2095": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2096": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2098": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2099": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ADD",
      "path": "2"
    },
    "2100": {
      "op": "DUP5"
    },
    "2101": {
      "op": "SWAP1"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2112": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2113": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "AND",
      "path": "2"
    },
    "2114": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2115": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEC147C18"
    },
    "2120": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4828
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2126": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2128": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2129": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2130": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2131": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "SUB",
      "path": "2"
    },
    "2132": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2133": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2134": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "GAS",
      "path": "2"
    },
    "2135": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2137": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2139": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x868"
    },
    "2142": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2143": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2144": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2146": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2147": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2148": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2149": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2151": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "POP",
      "path": "2"
    },
    "2154": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "POP",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "POP",
      "path": "2"
    },
    "2156": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "POP",
      "path": "2"
    },
    "2157": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2159": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2160": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2161": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2163": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "NOT",
      "path": "2"
    },
    "2164": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2166": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2167": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ADD",
      "path": "2"
    },
    "2168": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "AND",
      "path": "2"
    },
    "2169": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2170": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ADD",
      "path": "2"
    },
    "2171": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2172": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2174": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2175": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "POP",
      "path": "2"
    },
    "2176": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2177": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "ADD",
      "path": "2"
    },
    "2178": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2179": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88C"
    },
    "2182": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2183": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2184": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EF5"
    },
    "2187": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4804,
        4836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2188": {
      "branch": 130,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2189": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2190": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2191": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x906"
    },
    "2194": {
      "branch": 130,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4882,
        4892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2198": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4882,
        4892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2199": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2201": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2202": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2204": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2205": {
      "op": "PUSH4",
      "value": "0x1245C6B"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2214": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2215": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2217": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2218": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ADD",
      "path": "2"
    },
    "2219": {
      "op": "DUP6"
    },
    "2220": {
      "op": "SWAP1"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2231": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2232": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "AND",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4871
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x49171AC"
    },
    "2239": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2245": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2247": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2248": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2249": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "SUB",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2252": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2253": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "GAS",
      "path": "2"
    },
    "2254": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2255": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2256": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2261": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2263": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2265": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2266": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2267": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2270": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2271": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "POP",
      "path": "2"
    },
    "2273": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "POP",
      "path": "2"
    },
    "2274": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "POP",
      "path": "2"
    },
    "2275": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "POP",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2278": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2282": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "NOT",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2285": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2286": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ADD",
      "path": "2"
    },
    "2287": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "AND",
      "path": "2"
    },
    "2288": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2289": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ADD",
      "path": "2"
    },
    "2290": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2293": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2294": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "POP",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "ADD",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2301": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2302": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2303": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F12"
    },
    "2306": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4840,
        4879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2307": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4892
      ],
      "op": "GT",
      "path": "2"
    },
    "2309": {
      "branch": 131,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4840,
        4892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4929
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x913"
    },
    "2315": {
      "branch": 131,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4929
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4914,
        4918
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "2319": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4914,
        4918
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2320": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4929
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4945,
        4950
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "2327": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4945,
        4950
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2328": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2329": {
      "op": "POP"
    },
    "2330": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        4679,
        4957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2331": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2334": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2337": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2338": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "2339": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92B"
    },
    "2342": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2343": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2345": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2346": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2351": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2354": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2356": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2360": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2361": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2362": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2364": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2365": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "2366": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2371": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2372": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2373": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x94E"
    },
    "2377": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "2381": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2386": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2389": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2391": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2392": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2393": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2395": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2396": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2398": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2400": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2401": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2402": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2404": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2408": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2409": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2411": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2412": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2414": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2415": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2416": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97A"
    },
    "2421": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2422": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "2425": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2426": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2427": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2428": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2429": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C7"
    },
    "2432": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2433": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2434": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2436": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "2437": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99C"
    },
    "2440": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2441": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2444": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2445": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2446": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2447": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2448": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2450": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2451": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2452": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2454": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2455": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2456": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C7"
    },
    "2459": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2460": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2461": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2463": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2464": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2467": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2468": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2470": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2472": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2473": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2476": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2477": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2478": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2480": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2482": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2483": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2484": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2486": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2487": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2488": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "GT",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AA"
    },
    "2493": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2495": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2496": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SUB",
      "path": "2"
    },
    "2497": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2499": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2500": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2501": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2502": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2503": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2504": {
      "op": "POP"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2509": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2510": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2511": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2512": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2513": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2514": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2515": {
      "op": "POP"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2519": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2520": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2521": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2522": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2523": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2529": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2532": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2534": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2535": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2536": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2537": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2545": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2546": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2547": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2548": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2570": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2578": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2581": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2592": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2593": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2595": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2596": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4428,
        4432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2600": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4459,
        4460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2602": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2603": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2605": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4477
      ],
      "op": "GT",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2B"
    },
    "2611": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2612": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2614": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2615": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2617": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2618": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2620": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2621": {
      "op": "PUSH4",
      "value": "0x1038D37"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2628": {
      "op": "SHL"
    },
    "2629": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2630": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2631": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2633": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2634": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2635": {
      "op": "DUP5"
    },
    "2636": {
      "op": "SWAP1"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2650": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "AND",
      "path": "2"
    },
    "2651": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2652": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "2657": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2658": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2659": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "AND",
      "path": "2"
    },
    "2660": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2661": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40E34DC0"
    },
    "2666": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2672": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2674": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2675": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2676": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SUB",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "GAS",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2683": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8A"
    },
    "2688": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2689": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2690": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2692": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2695": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2697": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2698": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2700": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2705": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2706": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2707": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2709": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "NOT",
      "path": "2"
    },
    "2710": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2712": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2714": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "AND",
      "path": "2"
    },
    "2715": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2716": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2717": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2718": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2720": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2721": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2722": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2723": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2724": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2725": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAE"
    },
    "2728": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2729": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2730": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F12"
    },
    "2733": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2735": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2737": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2738": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2739": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2744": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2747": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SHL",
      "path": "2"
    },
    "2748": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2752": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2753": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACC"
    },
    "2756": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2757": {
      "op": "DUP2"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "SWAP1"
    },
    "2763": {
      "op": "JUMP"
    },
    "2764": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2765": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2767": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2769": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2770": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2771": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2772": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SUB",
      "path": "2"
    },
    "2773": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2774": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2775": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "GAS",
      "path": "2"
    },
    "2776": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2779": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE9"
    },
    "2783": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2784": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2785": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2787": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2789": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2790": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2792": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2793": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2800": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2802": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2804": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "NOT",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2807": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2808": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2812": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2813": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2815": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2816": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2817": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0D"
    },
    "2823": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2824": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2825": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED8"
    },
    "2828": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2829": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "op": "SUB"
    },
    "2838": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "AND",
      "path": "2"
    },
    "2839": {
      "branch": 132,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "SUB",
      "path": "2"
    },
    "2840": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB23"
    },
    "2843": {
      "branch": 132,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4588,
        4592
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "2846": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2847": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2848": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "2854": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "ADD",
      "path": "2"
    },
    "2855": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2A"
    },
    "2858": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2859": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "POP",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4661,
        4666
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x0"
    },
    "2863": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "POP",
      "path": "2"
    },
    "2865": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2866": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7432,
        7445
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2870": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7447,
        7463
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7475,
        7502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7505,
        7554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB51"
    },
    "2876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7529,
        7553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2878": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 9
    },
    "2879": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2881": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2882": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2883": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2890": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2891": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2892": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2893": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2894": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2895": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2896": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7505,
        7554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7475,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7475,
        7554
      ],
      "op": "POP",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7564,
        7582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5B"
    },
    "2903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7564,
        7582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7564,
        7582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7564,
        7582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7592,
        7606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7592,
        7606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7592,
        7606
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7664,
        7683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2914": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7660,
        7661
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2915": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7660,
        7683
      ],
      "op": "LT",
      "path": "2"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE3"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2921": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7765
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xB73"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7737,
        7761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7763,
        7764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7736
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3175"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7717,
        7765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2931": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7717,
        7765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2932": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7709,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 11
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2939": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2948": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2949": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2954": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "2955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2956": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2957": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2959": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2960": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7709,
        7766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7709,
        7766
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2964": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7789,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA1"
    },
    "2972": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2973": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "2976": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2977": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2984": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2985": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2986": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "2987": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MUL",
      "path": "2"
    },
    "2988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "2997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3001": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3002": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3004": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3006": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3011": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3012": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3013": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCD"
    },
    "3016": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3017": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3021": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3031": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "LT",
      "path": "2"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBEF"
    },
    "3035": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3039": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MUL",
      "path": "2"
    },
    "3044": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3045": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3049": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3050": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3051": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3055": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3057": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3058": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3059": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3062": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3063": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3065": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3068": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3069": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3070": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3071": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3073": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3074": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3075": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3077": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3079": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3081": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3082": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3083": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3084": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "GT",
      "path": "2"
    },
    "3085": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFD"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3089": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3090": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3091": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SUB",
      "path": "2"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3094": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3095": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3096": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3097": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3098": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3099": {
      "op": "POP"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3103": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3104": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3105": {
      "op": "POP"
    },
    "3106": {
      "op": "POP"
    },
    "3107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3112": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3123": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3124": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3125": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3126": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3128": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3129": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3130": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3133": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3134": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3140": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3143": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3149": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3159": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3165": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3166": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3167": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3171": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3176": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "op": "SUB"
    },
    "3192": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3197": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3209": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3213": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3227": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3232": {
      "op": "SHL"
    },
    "3233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DIV",
      "path": "2"
    },
    "3235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "AND",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "ADD",
      "path": "2"
    },
    "3243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7856
      ],
      "op": "ADD",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7856
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7856
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7859,
        7874
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3252": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7874
      ],
      "op": "AND",
      "path": "2"
    },
    "3253": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7874
      ],
      "op": "GT",
      "path": "2"
    },
    "3254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCF"
    },
    "3259": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "POP",
      "path": "2"
    },
    "3261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7898,
        7904
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7904
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7904
      ],
      "op": "AND",
      "path": "2"
    },
    "3269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7884
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3272": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7895
      ],
      "op": "ADD",
      "path": "2"
    },
    "3273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7895
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3274": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7904
      ],
      "op": "AND",
      "path": "2"
    },
    "3278": {
      "branch": 134,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7878,
        7904
      ],
      "op": "EQ",
      "path": "2"
    },
    "3279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7820,
        7904
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7816,
        7956
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7816,
        7956
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDB"
    },
    "3284": {
      "branch": 134,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7816,
        7956
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3285": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7933,
        7940
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 12
    },
    "3286": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7933,
        7940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7933,
        7940
      ],
      "op": "ADD",
      "path": "2"
    },
    "3289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7933,
        7940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3290": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7933,
        7940
      ],
      "op": "POP",
      "path": "2"
    },
    "3291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7816,
        7956
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7979,
        7982
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x1"
    },
    "3294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7979,
        7982
      ],
      "op": "ADD",
      "path": "2"
    },
    "3295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB60"
    },
    "3298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3299": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3300": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7642,
        7994
      ],
      "op": "POP",
      "path": "2"
    },
    "3301": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3302": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8058,
        8059
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3304": {
      "branch": 135,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8051,
        8059
      ],
      "op": "SUB",
      "path": "2"
    },
    "3305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8047,
        8296
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD50"
    },
    "3308": {
      "branch": 135,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8047,
        8296
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8110,
        8111
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3318": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "ADD",
      "path": "2"
    },
    "3321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8075,
        8097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8075,
        8097
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3327": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3330": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "ADD",
      "path": "2"
    },
    "3331": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0B"
    },
    "3335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "3338": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8099,
        8112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3339": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3341": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "ADD",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3346": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SUB",
      "path": "2"
    },
    "3350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3351": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3352": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD03"
    },
    "3355": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8099,
        8112
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3360": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3361": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8171,
        8172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3365": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3367": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "ADD",
      "path": "2"
    },
    "3370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3371": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3372": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8075,
        8112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8075,
        8112
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8126,
        8155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8126,
        8155
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3380": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3382": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3383": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3384": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "ADD",
      "path": "2"
    },
    "3385": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3387": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8157,
        8173
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3390": {
      "op": "POP"
    },
    "3391": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 14
    },
    "3392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8262,
        8270
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "POP"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "op": "POP"
    },
    "3403": {
      "op": "POP"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "op": "POP"
    },
    "3407": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3408": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8047,
        8296
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3411": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8335,
        8356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8370,
        8375
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3422": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "GT",
      "path": "2"
    },
    "3423": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3424": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6B"
    },
    "3427": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6B"
    },
    "3431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3686"
    },
    "3434": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3436": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3438": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3439": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3440": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3442": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3444": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3446": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "MUL",
      "path": "2"
    },
    "3447": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ADD",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ADD",
      "path": "2"
    },
    "3452": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3454": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3455": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3456": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA4"
    },
    "3460": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3462": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ADD",
      "path": "2"
    },
    "3465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD91"
    },
    "3469": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "3472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3476": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3478": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "ADD",
      "path": "2"
    },
    "3479": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3480": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SUB",
      "path": "2"
    },
    "3484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD89"
    },
    "3489": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "POP",
      "path": "2"
    },
    "3492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8359,
        8376
      ],
      "op": "POP",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8335,
        8376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8335,
        8376
      ],
      "op": "POP",
      "path": "2"
    },
    "3496": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8386,
        8412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8429,
        8434
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "GT",
      "path": "2"
    },
    "3509": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3510": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC1"
    },
    "3513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC1"
    },
    "3517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3686"
    },
    "3520": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8415,
        8435
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "MUL",
      "path": "2"
    },
    "3533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ADD",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3537": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ADD",
      "path": "2"
    },
    "3538": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3541": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3542": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEA"
    },
    "3546": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ADD",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3554": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "MUL",
      "path": "2"
    },
    "3555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "ADD",
      "path": "2"
    },
    "3560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3561": {
      "op": "POP"
    },
    "3562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8415,
        8435
      ],
      "op": "POP",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8386,
        8435
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8386,
        8435
      ],
      "op": "POP",
      "path": "2"
    },
    "3566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8449,
        8458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8467,
        8486
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8463,
        8464
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3571": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8463,
        8486
      ],
      "op": "LT",
      "path": "2"
    },
    "3572": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3573": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB7"
    },
    "3576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8520,
        8568
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0xE03"
    },
    "3580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8540,
        8564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8566,
        8567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8520,
        8539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3175"
    },
    "3586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8520,
        8568
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8520,
        8568
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8512,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 16
    },
    "3591": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3592": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3593": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3600": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3601": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3603": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3604": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3605": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3606": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3611": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3613": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8512,
        8569
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8512,
        8569
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8592,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE31"
    },
    "3628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3629": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "3632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3633": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3638": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3643": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MUL",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3657": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3658": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3660": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3662": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3663": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3665": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3666": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3667": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5D"
    },
    "3672": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "3676": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3677": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3680": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEAA"
    },
    "3683": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3685": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3687": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "LT",
      "path": "2"
    },
    "3688": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7F"
    },
    "3691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3699": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MUL",
      "path": "2"
    },
    "3700": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3705": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEAA"
    },
    "3710": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3711": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3714": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3715": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3719": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3721": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3724": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3726": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3727": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3728": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3729": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3731": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3734": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3737": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3738": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3739": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3740": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "GT",
      "path": "2"
    },
    "3741": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8D"
    },
    "3744": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3745": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3746": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3747": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SUB",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3750": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3759": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3760": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3765": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3766": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3774": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3775": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3776": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3779": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3784": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3789": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3805": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3806": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3807": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3811": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3812": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3815": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3816": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3817": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3821": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3822": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3823": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3846": {
      "op": "SHL"
    },
    "3847": {
      "op": "SUB"
    },
    "3848": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3851": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3864": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3865": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3866": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3876": {
      "op": "SHL"
    },
    "3877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DIV",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "AND",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3896": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "ADD",
      "path": "2"
    },
    "3899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8659
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3901": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8659
      ],
      "op": "ADD",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8659
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8659
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8659
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8662,
        8677
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8677
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3908": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8677
      ],
      "op": "AND",
      "path": "2"
    },
    "3909": {
      "branch": 136,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8677
      ],
      "op": "GT",
      "path": "2"
    },
    "3910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5F"
    },
    "3915": {
      "branch": 136,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "POP",
      "path": "2"
    },
    "3917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8701,
        8707
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3918": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8707
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8707
      ],
      "op": "AND",
      "path": "2"
    },
    "3925": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8687
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3928": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8698
      ],
      "op": "ADD",
      "path": "2"
    },
    "3929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8698
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3933": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8707
      ],
      "op": "AND",
      "path": "2"
    },
    "3934": {
      "branch": 137,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8681,
        8707
      ],
      "op": "EQ",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8623,
        8707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8619,
        8891
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8619,
        8891
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFAF"
    },
    "3940": {
      "branch": 137,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8619,
        8891
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8745,
        8751
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 17
    },
    "3942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8733
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3943": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8734,
        8741
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "LT",
      "path": "2"
    },
    "3948": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF77"
    },
    "3951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF77"
    },
    "3955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "3958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8726,
        8742
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3959": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3960": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3962": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "MUL",
      "path": "2"
    },
    "3963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "ADD",
      "path": "2"
    },
    "3966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8742
      ],
      "op": "ADD",
      "path": "2"
    },
    "3967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8751
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3970": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8726,
        8751
      ],
      "op": "POP",
      "path": "2"
    },
    "3971": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8790,
        8796
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 18
    },
    "3972": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8778
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3973": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8779,
        8786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3974": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3975": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3976": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3977": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "LT",
      "path": "2"
    },
    "3978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF95"
    },
    "3981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF95"
    },
    "3985": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "3988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8769,
        8787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3989": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3992": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "MUL",
      "path": "2"
    },
    "3993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3995": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8787
      ],
      "op": "ADD",
      "path": "2"
    },
    "3997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8796
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8796
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8796
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8796
      ],
      "op": "POP",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8769,
        8796
      ],
      "op": "POP",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8824,
        8833
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 19
    },
    "4003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8824,
        8833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8824,
        8833
      ],
      "op": "ADD",
      "path": "2"
    },
    "4006": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8824,
        8833
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8824,
        8833
      ],
      "op": "POP",
      "path": "2"
    },
    "4008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8863,
        8868
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8855,
        8862
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4010": {
      "branch": 138,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8855,
        8868
      ],
      "op": "GT",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8870,
        8875
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xFB7"
    },
    "4014": {
      "branch": 138,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8852,
        8877
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8852,
        8877
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8914,
        8917
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x1"
    },
    "4018": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8914,
        8917
      ],
      "op": "ADD",
      "path": "2"
    },
    "4019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF0"
    },
    "4022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8445,
        8929
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4024": {
      "op": "POP"
    },
    "4025": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8946,
        8953
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 22
    },
    "4026": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8946,
        8953
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8955,
        8964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4028": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8955,
        8964
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7363,
        8972
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7363,
        8972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4039": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4040": {
      "offset": [
        23798,
        23815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCF"
    },
    "4043": {
      "offset": [
        23798,
        23813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "4046": {
      "jump": "i",
      "offset": [
        23798,
        23815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4047": {
      "fn": "Governance.createTaskType",
      "offset": [
        23798,
        23815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4048": {
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1017"
    },
    "4051": {
      "offset": [
        23790,
        23840
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4052": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4054": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4061": {
      "op": "SHL"
    },
    "4062": {
      "offset": [
        23790,
        23840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4066": {
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4068": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4069": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "ADD",
      "path": "2"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4075": {
      "op": "DUP3"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4101": {
      "op": "SHL"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4104": {
      "op": "DUP3"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "offset": [
        23790,
        23840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4113": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4114": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4115": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4116": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "SUB",
      "path": "2"
    },
    "4117": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "4119": {
      "fn": "Governance.createTaskType",
      "offset": [
        23790,
        23840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4120": {
      "fn": "Governance.createTaskType",
      "offset": [
        14324,
        14430
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0x1028"
    },
    "4123": {
      "fn": "Governance.createTaskType",
      "offset": [
        14340,
        14349
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.createTaskType",
      "offset": [
        14340,
        14349
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.createTaskType",
      "offset": [
        14351,
        14352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4127": {
      "fn": "Governance.createTaskType",
      "offset": [
        14354,
        14370
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4128": {
      "fn": "Governance.createTaskType",
      "offset": [
        14372,
        14382
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4129": {
      "fn": "Governance.createTaskType",
      "offset": [
        14384,
        14397
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.createTaskType",
      "offset": [
        14399,
        14412
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4131": {
      "fn": "Governance.createTaskType",
      "offset": [
        14414,
        14429
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4132": {
      "fn": "Governance.createTaskType",
      "offset": [
        14324,
        14339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31E6"
    },
    "4135": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14324,
        14430
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.createTaskType",
      "offset": [
        14324,
        14430
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4138": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4139": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4140": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4141": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4142": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4143": {
      "fn": "Governance.createTaskType",
      "offset": [
        14117,
        14437
      ],
      "op": "POP",
      "path": "2"
    },
    "4144": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        14117,
        14437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4145": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4146": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4148": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4155": {
      "op": "SHL"
    },
    "4156": {
      "op": "SUB"
    },
    "4157": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "4158": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 24
    },
    "4159": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "4160": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x105B"
    },
    "4163": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4164": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4166": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4175": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4176": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4178": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "4179": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100E"
    },
    "4182": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4183": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F2B"
    },
    "4186": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4187": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4188": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10735
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x2"
    },
    "4190": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4191": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4198": {
      "op": "SHL"
    },
    "4199": {
      "op": "SUB"
    },
    "4200": {
      "op": "NOT"
    },
    "4201": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "AND",
      "path": "2"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "AND",
      "path": "2"
    },
    "4214": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4215": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4216": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "OR",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10725,
        10752
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4220": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        10658,
        10759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4222": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4224": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4231": {
      "op": "SHL"
    },
    "4232": {
      "op": "SUB"
    },
    "4233": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "4234": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4235": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "4236": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10A7"
    },
    "4239": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4240": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4242": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4251": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4252": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4254": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "4255": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100E"
    },
    "4258": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4259": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F2B"
    },
    "4262": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4263": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 26,
      "value": "0x10B1"
    },
    "4267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3365"
    },
    "4272": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4274": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        16699,
        16708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4279": {
      "fn": "Governance.completeTask",
      "offset": [
        16716,
        16725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16716,
        16732
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        16714,
        16732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4283": {
      "fn": "Governance.completeTask",
      "offset": [
        16714,
        16732
      ],
      "op": "LT",
      "path": "2"
    },
    "4284": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4285": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1523"
    },
    "4288": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4289": {
      "fn": "Governance.completeTask",
      "offset": [
        16820,
        16829
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4293": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "ADD",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D1"
    },
    "4299": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4300": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4301": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F60"
    },
    "4304": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16809,
        16830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4305": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4308": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4313": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "SUB",
      "path": "2"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "SUB",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4318": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4320": {
      "fn": "Governance.completeTask",
      "offset": [
        16809,
        16830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4322": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4323": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4326": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "ADD",
      "path": "2"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "offset": [
        16799,
        16831
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4328": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4330": {
      "fn": "Governance.completeTask",
      "offset": [
        16782,
        16783
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4331": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4332": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4333": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "LT",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FA"
    },
    "4338": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4339": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FA"
    },
    "4342": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "4345": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16772,
        16784
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4346": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4348": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4350": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4351": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4355": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4356": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4359": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "MUL",
      "path": "2"
    },
    "4360": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16784
      ],
      "op": "ADD",
      "path": "2"
    },
    "4361": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4363": {
      "fn": "Governance.completeTask",
      "offset": [
        16772,
        16793
      ],
      "op": "ADD",
      "path": "2"
    },
    "4364": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4366": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4367": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4369": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "ADD",
      "path": "2"
    },
    "4370": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111B"
    },
    "4373": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4374": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4375": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FF0"
    },
    "4378": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16761,
        16794
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4379": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4380": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4382": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4385": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4387": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "SUB",
      "path": "2"
    },
    "4388": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "SUB",
      "path": "2"
    },
    "4389": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4390": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4391": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4394": {
      "fn": "Governance.completeTask",
      "offset": [
        16761,
        16794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4395": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4396": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4398": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4400": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "ADD",
      "path": "2"
    },
    "4401": {
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16795
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4402": {
      "branch": 139,
      "fn": "Governance.completeTask",
      "offset": [
        16751,
        16831
      ],
      "op": "SUB",
      "path": "2"
    },
    "4403": {
      "fn": "Governance.completeTask",
      "offset": [
        16748,
        17737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151B"
    },
    "4406": {
      "branch": 139,
      "fn": "Governance.completeTask",
      "offset": [
        16748,
        17737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        16947,
        16962
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 27
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4410": {
      "fn": "Governance.completeTask",
      "offset": [
        16928,
        16929
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4412": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4413": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "LT",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114A"
    },
    "4418": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4419": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114A"
    },
    "4422": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "4425": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16918,
        16930
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4426": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4430": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4431": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4432": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4434": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4435": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4436": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4437": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4439": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4440": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4441": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "MUL",
      "path": "2"
    },
    "4442": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16930
      ],
      "op": "ADD",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4445": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "ADD",
      "path": "2"
    },
    "4446": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4451": {
      "op": "SHL"
    },
    "4452": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4453": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "DIV",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4460": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16943
      ],
      "op": "AND",
      "path": "2"
    },
    "4461": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16962
      ],
      "op": "GT",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16962
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4463": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16962
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4464": {
      "branch": 140,
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        16962
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4465": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        17010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11AE"
    },
    "4468": {
      "branch": 140,
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        17010
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4469": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        17010
      ],
      "op": "POP",
      "path": "2"
    },
    "4470": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16994
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4472": {
      "fn": "Governance.completeTask",
      "offset": [
        16995,
        16996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4474": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4475": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4476": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "LT",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1188"
    },
    "4480": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1188"
    },
    "4484": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16985,
        16997
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4488": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4489": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4491": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4492": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4493": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4496": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4497": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4498": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4499": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4501": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4502": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4503": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "MUL",
      "path": "2"
    },
    "4504": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        16997
      ],
      "op": "ADD",
      "path": "2"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4507": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "ADD",
      "path": "2"
    },
    "4508": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4513": {
      "op": "SHL"
    },
    "4514": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4515": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "DIV",
      "path": "2"
    },
    "4516": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4522": {
      "fn": "Governance.completeTask",
      "offset": [
        16985,
        17010
      ],
      "op": "AND",
      "path": "2"
    },
    "4523": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        16981
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4524": {
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        17010
      ],
      "op": "GT",
      "path": "2"
    },
    "4525": {
      "branch": 141,
      "fn": "Governance.completeTask",
      "offset": [
        16966,
        17010
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4526": {
      "fn": "Governance.completeTask",
      "offset": [
        16918,
        17010
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4527": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F0"
    },
    "4530": {
      "branch": 141,
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4533": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4540": {
      "op": "SHL"
    },
    "4541": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4542": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4545": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4547": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "ADD",
      "path": "2"
    },
    "4549": {
      "op": "MSTORE"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4554": {
      "op": "DUP3"
    },
    "4555": {
      "op": "ADD"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4582": {
      "op": "DUP3"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "MSTORE"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "4591": {
      "op": "JUMP"
    },
    "4592": {
      "fn": "Governance.completeTask",
      "offset": [
        16910,
        17034
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4593": {
      "fn": "Governance.completeTask",
      "offset": [
        17087,
        17105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4595": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4597": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4598": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4599": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4602": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4603": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4605": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4607": {
      "fn": "Governance.completeTask",
      "offset": [
        17113,
        17122
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4608": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4609": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4610": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4612": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4613": {
      "fn": "Governance.completeTask",
      "offset": [
        17123,
        17129
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4614": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4620": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "AND",
      "path": "2"
    },
    "4621": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4622": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4623": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4625": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4626": {
      "fn": "Governance.completeTask",
      "offset": [
        17131,
        17136
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4627": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4628": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4629": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4631": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4632": {
      "fn": "Governance.completeTask",
      "offset": [
        17138,
        17139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4634": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4635": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SHL",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4638": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4640": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4641": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4643": {
      "fn": "Governance.completeTask",
      "offset": [
        17151,
        17152
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4645": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4646": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4647": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "LT",
      "path": "2"
    },
    "4648": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1233"
    },
    "4651": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4652": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1233"
    },
    "4655": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "4658": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17141,
        17153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4660": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4661": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4663": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4664": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4666": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4668": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4669": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4670": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4672": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "MUL",
      "path": "2"
    },
    "4673": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17153
      ],
      "op": "ADD",
      "path": "2"
    },
    "4674": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4676": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "ADD",
      "path": "2"
    },
    "4677": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4679": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4680": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4681": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4682": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4685": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "EXP",
      "path": "2"
    },
    "4686": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4687": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "DIV",
      "path": "2"
    },
    "4688": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4690": {
      "fn": "Governance.completeTask",
      "offset": [
        17141,
        17169
      ],
      "op": "AND",
      "path": "2"
    },
    "4691": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4693": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "AND",
      "path": "2"
    },
    "4694": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4695": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4696": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4698": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4699": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4701": {
      "fn": "Governance.completeTask",
      "offset": [
        17181,
        17182
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4703": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4704": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "LT",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126D"
    },
    "4709": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126D"
    },
    "4713": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "4716": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17171,
        17183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4718": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4720": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4721": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4722": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4723": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4725": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4726": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4727": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4728": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4730": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4731": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "MUL",
      "path": "2"
    },
    "4734": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4736": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17183
      ],
      "op": "ADD",
      "path": "2"
    },
    "4737": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4739": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "ADD",
      "path": "2"
    },
    "4740": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4747": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "DIV",
      "path": "2"
    },
    "4748": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4752": {
      "fn": "Governance.completeTask",
      "offset": [
        17171,
        17193
      ],
      "op": "AND",
      "path": "2"
    },
    "4753": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4754": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4755": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4758": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4759": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4760": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4761": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4763": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4764": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4766": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4767": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4768": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4771": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4772": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4773": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4774": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4778": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4780": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "ADD",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.completeTask",
      "offset": [
        17108,
        17206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4784": {
      "fn": "Governance.completeTask",
      "offset": [
        17284,
        17303
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0xB"
    },
    "4786": {
      "fn": "Governance.completeTask",
      "offset": [
        17284,
        17303
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.completeTask",
      "offset": [
        17250,
        17274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4789": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4790": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4797": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4798": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4799": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "4800": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "4802": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "4803": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "4804": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4805": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4806": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4808": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4809": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4810": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4811": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4812": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4813": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4814": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4815": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4816": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "4817": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4824": {
      "op": "SHL"
    },
    "4825": {
      "op": "SUB"
    },
    "4826": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4827": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4828": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4829": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4831": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4832": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4833": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "4834": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4835": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4836": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4837": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "4838": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "4839": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4840": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4841": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 31
    },
    "4842": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4843": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4845": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4846": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4847": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4848": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4850": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4851": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4856": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1302"
    },
    "4860": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17349
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4052"
    },
    "4865": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17323,
        17358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4867": {
      "op": "POP"
    },
    "4868": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4870": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4873": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4875": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4877": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4878": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4879": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4880": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4886": {
      "op": "NOT"
    },
    "4887": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4894": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4895": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4896": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "4897": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "4898": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4899": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4902": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4903": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4904": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4905": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4907": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4908": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4909": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4910": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4912": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4913": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4914": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4917": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4918": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4919": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4920": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4922": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4923": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4925": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4927": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4928": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4929": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4930": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4934": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4935": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4936": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4937": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4939": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4940": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4941": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4942": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4944": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4945": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4947": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4950": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4951": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4952": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4954": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4957": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4958": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "4959": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "ADD",
      "path": "2"
    },
    "4960": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4963": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4964": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "4966": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4971": {
      "op": "NOT"
    },
    "4972": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4973": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4974": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "4975": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4977": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4978": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "4979": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4983": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4984": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4985": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "4986": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4988": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MUL",
      "path": "2"
    },
    "4989": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4990": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4991": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4992": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "4993": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5003": {
      "op": "SHL"
    },
    "5004": {
      "op": "SUB"
    },
    "5005": {
      "op": "NOT"
    },
    "5006": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5011": {
      "op": "SHL"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "SUB"
    },
    "5020": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5021": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5022": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5023": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5024": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5025": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5026": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MUL",
      "path": "2"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "NOT"
    },
    "5034": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5035": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5040": {
      "op": "SHL"
    },
    "5041": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5044": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5045": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5047": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MUL",
      "path": "2"
    },
    "5048": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "5049": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "NOT"
    },
    "5061": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5071": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MUL",
      "path": "2"
    },
    "5072": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5080": {
      "op": "SHL"
    },
    "5081": {
      "op": "NOT"
    },
    "5082": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5085": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5091": {
      "op": "SHL"
    },
    "5092": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5093": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5094": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "AND",
      "path": "2"
    },
    "5096": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5097": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5098": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5099": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "MUL",
      "path": "2"
    },
    "5100": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "OR",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5102": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5103": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5104": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17395
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0xB"
    },
    "5106": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5107": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1401"
    },
    "5114": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5115": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5116": {
      "fn": "Governance.completeTask",
      "offset": [
        17323,
        17358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4127"
    },
    "5120": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17376,
        17398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5121": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5122": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5123": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5124": {
      "fn": "Governance.completeTask",
      "offset": [
        17376,
        17398
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "fn": "Governance.completeTask",
      "offset": [
        17500,
        17524
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0x1414"
    },
    "5129": {
      "fn": "Governance.completeTask",
      "offset": [
        17500,
        17524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "fn": "Governance.completeTask",
      "offset": [
        17500,
        17515
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.completeTask",
      "offset": [
        17518,
        17524
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "5136": {
      "fn": "Governance.completeTask",
      "offset": [
        17500,
        17524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4127"
    },
    "5139": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17500,
        17524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5140": {
      "fn": "Governance.completeTask",
      "offset": [
        17500,
        17524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5141": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5143": {
      "fn": "Governance.completeTask",
      "offset": [
        17463,
        17464
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5145": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5146": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5147": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "LT",
      "path": "2"
    },
    "5148": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1427"
    },
    "5151": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1427"
    },
    "5155": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5158": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17453,
        17465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5159": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5160": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5162": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5163": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5165": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5167": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5168": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5169": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5170": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5176": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5177": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "AND",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5179": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5180": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5182": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5183": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5184": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "MUL",
      "path": "2"
    },
    "5185": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5186": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17465
      ],
      "op": "ADD",
      "path": "2"
    },
    "5188": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5189": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5192": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5193": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17497
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.completeTask",
      "offset": [
        17453,
        17524
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17581
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x5"
    },
    "5197": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5198": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5199": {
      "fn": "Governance.completeTask",
      "offset": [
        17602,
        17603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5201": {
      "fn": "Governance.completeTask",
      "offset": [
        17602,
        17603
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.completeTask",
      "offset": [
        17582,
        17583
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.completeTask",
      "offset": [
        17582,
        17583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "LT",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1462"
    },
    "5210": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5211": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1462"
    },
    "5214": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5217": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17572,
        17584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5218": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5219": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5220": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5222": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5223": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5225": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5227": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5228": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5229": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5231": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "MUL",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17584
      ],
      "op": "ADD",
      "path": "2"
    },
    "5233": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5235": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "ADD",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5238": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5244": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "EXP",
      "path": "2"
    },
    "5245": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5246": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "DIV",
      "path": "2"
    },
    "5247": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5250": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17599
      ],
      "op": "AND",
      "path": "2"
    },
    "5251": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148C"
    },
    "5254": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17603
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5255": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5256": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x413F"
    },
    "5259": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17572,
        17603
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5260": {
      "fn": "Governance.completeTask",
      "offset": [
        17572,
        17603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5261": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5263": {
      "fn": "Governance.completeTask",
      "offset": [
        17552,
        17553
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5266": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5267": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "LT",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x149F"
    },
    "5271": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x149F"
    },
    "5275": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5278": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17542,
        17554
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5279": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5283": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5284": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5286": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5288": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5289": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5290": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5292": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "MUL",
      "path": "2"
    },
    "5293": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17554
      ],
      "op": "ADD",
      "path": "2"
    },
    "5294": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5296": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17569
      ],
      "op": "ADD",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5299": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5302": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "EXP",
      "path": "2"
    },
    "5303": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5304": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5309": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "MUL",
      "path": "2"
    },
    "5310": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "NOT",
      "path": "2"
    },
    "5311": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "AND",
      "path": "2"
    },
    "5312": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5313": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5314": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5317": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "AND",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "MUL",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "OR",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5321": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5322": {
      "fn": "Governance.completeTask",
      "offset": [
        17542,
        17603
      ],
      "op": "POP",
      "path": "2"
    },
    "5323": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 35,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "5356": {
      "fn": "Governance.completeTask",
      "offset": [
        17641,
        17647
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5357": {
      "fn": "Governance.completeTask",
      "offset": [
        17669,
        17670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5359": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "5361": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17667
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5362": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14FB"
    },
    "5365": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5366": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4162"
    },
    "5370": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17648,
        17670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5371": {
      "fn": "Governance.completeTask",
      "offset": [
        17648,
        17670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5372": {
      "fn": "Governance.completeTask",
      "offset": [
        17672,
        17681
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5373": {
      "fn": "Governance.completeTask",
      "offset": [
        17683,
        17698
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5374": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5376": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5377": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150D"
    },
    "5380": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5381": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5383": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5384": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5385": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4179"
    },
    "5388": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17627,
        17699
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5390": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5392": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5393": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5394": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5395": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SUB",
      "path": "2"
    },
    "5396": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.completeTask",
      "offset": [
        17627,
        17699
      ],
      "op": "LOG1",
      "path": "2"
    },
    "5398": {
      "fn": "Governance.completeTask",
      "offset": [
        17717,
        17722
      ],
      "op": "POP",
      "path": "2",
      "statement": 36
    },
    "5399": {
      "fn": "Governance.completeTask",
      "offset": [
        17717,
        17722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1523"
    },
    "5402": {
      "fn": "Governance.completeTask",
      "offset": [
        17717,
        17722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5403": {
      "fn": "Governance.completeTask",
      "offset": [
        16748,
        17737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5404": {
      "fn": "Governance.completeTask",
      "offset": [
        17760,
        17763
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x1"
    },
    "5406": {
      "fn": "Governance.completeTask",
      "offset": [
        17760,
        17763
      ],
      "op": "ADD",
      "path": "2"
    },
    "5407": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B6"
    },
    "5410": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5411": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.completeTask",
      "offset": [
        16695,
        17775
      ],
      "op": "POP",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "POP",
      "path": "2"
    },
    "5414": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "POP",
      "path": "2"
    },
    "5415": {
      "fn": "Governance.completeTask",
      "offset": [
        16515,
        17801
      ],
      "op": "POP",
      "path": "2"
    },
    "5416": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        16515,
        17801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5417": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5418": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5420": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5760,
        5774
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x9"
    },
    "5422": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5760,
        5774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5423": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5747,
        5757
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5424": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        5747,
        5774
      ],
      "op": "LT",
      "path": "2"
    },
    "5425": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156F"
    },
    "5428": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5431": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5438": {
      "op": "SHL"
    },
    "5439": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5443": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5445": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5446": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "ADD",
      "path": "2"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "MSTORE"
    },
    "5455": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5474": {
      "op": "SHL"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5477": {
      "op": "DUP3"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "MSTORE"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5482": {
      "op": "ADD"
    },
    "5483": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "5486": {
      "op": "JUMP"
    },
    "5487": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5739,
        5795
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5488": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x0"
    },
    "5490": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5491": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5492": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5495": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5497": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5498": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5500": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5501": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5502": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5504": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "ADD",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5510": {
      "op": "SHL"
    },
    "5511": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "DIV",
      "path": "2"
    },
    "5513": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5519": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5866
      ],
      "op": "AND",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5814,
        5829
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5521": {
      "branch": 143,
      "fn": "Governance.getWinningVote",
      "offset": [
        5814,
        5866
      ],
      "op": "GT",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15D3"
    },
    "5525": {
      "branch": 143,
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5526": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5528": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5535": {
      "op": "SHL"
    },
    "5536": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5537": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5540": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5542": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5543": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "ADD",
      "path": "2"
    },
    "5544": {
      "op": "MSTORE"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5549": {
      "op": "DUP3"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "MSTORE"
    },
    "5552": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5577": {
      "op": "DUP3"
    },
    "5578": {
      "op": "ADD"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "5586": {
      "op": "JUMP"
    },
    "5587": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5805,
        5890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6010,
        6029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6039,
        6064
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5591": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6074,
        6085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6101,
        6110
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5597": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5598": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5599": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5600": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5602": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5604": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5605": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5607": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5608": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6138
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5611": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6154
      ],
      "op": "ADD",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6154
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5613": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5616": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6117,
        6154
      ],
      "op": "AND",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6114,
        6154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5618": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6114,
        6154
      ],
      "op": "LT",
      "path": "2"
    },
    "5619": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1701"
    },
    "5623": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6246,
        6263
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6222
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5627": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6223,
        6233
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5634": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "ADD",
      "path": "2"
    },
    "5635": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5640": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "ADD",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6234
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5646": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6240
      ],
      "op": "ADD",
      "path": "2"
    },
    "5647": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6241,
        6242
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5648": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5650": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5651": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "LT",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161F"
    },
    "5655": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5656": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161F"
    },
    "5659": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5662": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5663": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5664": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5666": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5667": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5668": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "DIV",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "ADD",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "MOD",
      "path": "2"
    },
    "5674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5676": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "MUL",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5678": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5680": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "EXP",
      "path": "2"
    },
    "5684": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5685": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "DIV",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6243
      ],
      "op": "AND",
      "path": "2"
    },
    "5690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6263
      ],
      "op": "AND",
      "path": "2"
    },
    "5694": {
      "branch": 144,
      "fn": "Governance.getWinningVote",
      "offset": [
        6213,
        6263
      ],
      "op": "GT",
      "path": "2"
    },
    "5695": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x169F"
    },
    "5699": {
      "branch": 144,
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6312
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x8"
    },
    "5702": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5704": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6313,
        6323
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5705": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5709": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5710": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5711": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5712": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5715": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "ADD",
      "path": "2"
    },
    "5716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5718": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6324
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5721": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6330
      ],
      "op": "ADD",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6331,
        6332
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "LT",
      "path": "2"
    },
    "5727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x166A"
    },
    "5730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x166A"
    },
    "5734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5737": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6303,
        6333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5742": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "DIV",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "ADD",
      "path": "2"
    },
    "5746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "MOD",
      "path": "2"
    },
    "5749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "MUL",
      "path": "2"
    },
    "5752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5754": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "EXP",
      "path": "2"
    },
    "5759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "DIV",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6303,
        6333
      ],
      "op": "AND",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6283,
        6333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6283,
        6333
      ],
      "op": "AND",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6283,
        6333
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5770": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6283,
        6333
      ],
      "op": "POP",
      "path": "2"
    },
    "5771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6365,
        6366
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 41
    },
    "5772": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6351,
        6366
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6351,
        6366
      ],
      "op": "POP",
      "path": "2"
    },
    "5774": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6393,
        6394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5777": {
      "branch": 145,
      "fn": "Governance.getWinningVote",
      "offset": [
        6388,
        6394
      ],
      "op": "SUB",
      "path": "2"
    },
    "5778": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6384,
        6407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x169A"
    },
    "5781": {
      "branch": 145,
      "fn": "Governance.getWinningVote",
      "offset": [
        6384,
        6407
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5782": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6404,
        6405
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x0"
    },
    "5784": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6398,
        6405
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5785": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6398,
        6405
      ],
      "op": "POP",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6384,
        6407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16EF"
    },
    "5790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6476,
        6493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5793": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6452,
        6462
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5799": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5800": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5802": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "ADD",
      "path": "2"
    },
    "5803": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5804": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5805": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "ADD",
      "path": "2"
    },
    "5809": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6463
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5812": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6469
      ],
      "op": "ADD",
      "path": "2"
    },
    "5815": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6470,
        6471
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "LT",
      "path": "2"
    },
    "5820": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C7"
    },
    "5823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C7"
    },
    "5827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "5830": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6442,
        6472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5831": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5834": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5837": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "DIV",
      "path": "2"
    },
    "5838": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "ADD",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5841": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "MOD",
      "path": "2"
    },
    "5842": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5844": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "MUL",
      "path": "2"
    },
    "5845": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "EXP",
      "path": "2"
    },
    "5852": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5853": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "DIV",
      "path": "2"
    },
    "5854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6472
      ],
      "op": "AND",
      "path": "2"
    },
    "5858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6493
      ],
      "op": "AND",
      "path": "2"
    },
    "5862": {
      "branch": 146,
      "fn": "Governance.getWinningVote",
      "offset": [
        6442,
        6493
      ],
      "op": "SUB",
      "path": "2"
    },
    "5863": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6439,
        6532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16EF"
    },
    "5866": {
      "branch": 146,
      "fn": "Governance.getWinningVote",
      "offset": [
        6439,
        6532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6516,
        6517
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x1"
    },
    "5869": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6512,
        6517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6512,
        6517
      ],
      "op": "POP",
      "path": "2"
    },
    "5871": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6439,
        6532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5872": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 44
    },
    "5873": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F9"
    },
    "5876": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5877": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41B0"
    },
    "5880": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6156,
        6159
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5881": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5882": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5883": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "POP",
      "path": "2"
    },
    "5884": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6156,
        6159
      ],
      "op": "POP",
      "path": "2"
    },
    "5885": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15DA"
    },
    "5888": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6097,
        6542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5890": {
      "op": "POP"
    },
    "5891": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6559,
        6565
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 45
    },
    "5892": {
      "branch": 147,
      "fn": "Governance.getWinningVote",
      "offset": [
        6559,
        6565
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5893": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1743"
    },
    "5896": {
      "branch": 147,
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5897": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5899": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5908": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5911": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5913": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "ADD",
      "path": "2"
    },
    "5915": {
      "op": "MSTORE"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5920": {
      "op": "DUP3"
    },
    "5921": {
      "op": "ADD"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5945": {
      "op": "DUP3"
    },
    "5946": {
      "op": "ADD"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "5954": {
      "op": "JUMP"
    },
    "5955": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6551,
        6586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6603,
        6614
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 46
    },
    "5958": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6603,
        6614
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5652,
        6621
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        5652,
        6621
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5964": {
      "fn": "Governance.vote",
      "offset": [
        12638,
        13302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5965": {
      "offset": [
        23626,
        23657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5967": {
      "fn": "Governance.vote",
      "offset": [
        23626,
        23657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5974": {
      "op": "SHL"
    },
    "5975": {
      "offset": [
        23626,
        23657
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.vote",
      "offset": [
        23626,
        23657
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5979": {
      "offset": [
        23626,
        23657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5981": {
      "fn": "Governance.vote",
      "offset": [
        23626,
        23657
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.vote",
      "offset": [
        23626,
        23657
      ],
      "op": "ADD",
      "path": "2"
    },
    "5983": {
      "op": "MSTORE"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5988": {
      "op": "DUP3"
    },
    "5989": {
      "op": "ADD"
    },
    "5990": {
      "op": "MSTORE"
    },
    "5991": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "6008": {
      "op": "SHL"
    },
    "6009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6011": {
      "op": "DUP3"
    },
    "6012": {
      "op": "ADD"
    },
    "6013": {
      "op": "MSTORE"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6016": {
      "op": "ADD"
    },
    "6017": {
      "offset": [
        23626,
        23657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "6020": {
      "op": "JUMP"
    },
    "6021": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6022": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "6024": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6026": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6027": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6029": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6031": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6032": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6034": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6035": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6036": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6039": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6040": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A0"
    },
    "6043": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6044": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "6047": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6048": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6049": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6050": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6052": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6055": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6056": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6057": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6061": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6062": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6064": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6065": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6066": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6067": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6070": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6071": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6073": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6074": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6077": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6080": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6082": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6083": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CC"
    },
    "6087": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "6091": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6093": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6094": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6095": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1819"
    },
    "6098": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6099": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6102": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "LT",
      "path": "2"
    },
    "6103": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17EE"
    },
    "6106": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6110": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6111": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6112": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6113": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6114": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "6115": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6116": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6117": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6120": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6121": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1819"
    },
    "6125": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6129": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6130": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6131": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6133": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6136": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6138": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6140": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6141": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6142": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6143": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6148": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6152": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6153": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6154": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "GT",
      "path": "2"
    },
    "6156": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FC"
    },
    "6159": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6161": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6162": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SUB",
      "path": "2"
    },
    "6163": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6165": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6166": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6167": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6168": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6169": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "op": "POP"
    },
    "6173": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6175": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6176": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6177": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6178": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6180": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6181": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6182": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6183": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6185": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6186": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6187": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6190": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6191": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "6192": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6193": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6194": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6202": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6207": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6208": {
      "op": "POP"
    },
    "6209": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6213": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6215": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6216": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6220": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6223": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6224": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6225": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6226": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6233": {
      "op": "SHL"
    },
    "6234": {
      "op": "SUB"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6239": {
      "op": "SHL"
    },
    "6240": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6251": {
      "op": "SHL"
    },
    "6252": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6253": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6254": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6255": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6256": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6261": {
      "op": "SHL"
    },
    "6262": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6272": {
      "op": "SHL"
    },
    "6273": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6274": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6275": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6276": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6277": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6279": {
      "fn": "Governance.getTaskById",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6280": {
      "fn": "Governance.getTaskById",
      "offset": [
        5200,
        5211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188F"
    },
    "6283": {
      "fn": "Governance.getTaskById",
      "offset": [
        5200,
        5211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "6286": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5200,
        5211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.getTaskById",
      "offset": [
        5200,
        5211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6288": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x0"
    },
    "6290": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6292": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6293": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "6295": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6297": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6300": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6301": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "6309": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6310": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6311": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6312": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6314": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6319": {
      "fn": "Governance.getTaskById",
      "offset": [
        5230,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6320": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B8"
    },
    "6323": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6324": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "6327": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6328": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6329": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6330": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6332": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6333": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6335": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6336": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6337": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6338": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MUL",
      "path": "2"
    },
    "6339": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6341": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6342": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6344": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6345": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6346": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6347": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6348": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6350": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6351": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6352": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6353": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6354": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6355": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6356": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6357": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6358": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6360": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6361": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6362": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6363": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6364": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E4"
    },
    "6367": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6368": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "6371": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6372": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6373": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6374": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6375": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1931"
    },
    "6378": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6380": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6382": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "LT",
      "path": "2"
    },
    "6383": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1906"
    },
    "6386": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6390": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6392": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6393": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6394": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MUL",
      "path": "2"
    },
    "6395": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6396": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6397": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6398": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6400": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6401": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6402": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1931"
    },
    "6405": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6406": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6407": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6408": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6409": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6410": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6411": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6413": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6416": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6418": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6419": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6420": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6421": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6422": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6423": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6424": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6425": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6426": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6428": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6429": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6430": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6432": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6433": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6434": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6435": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "GT",
      "path": "2"
    },
    "6436": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1914"
    },
    "6439": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6440": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SUB",
      "path": "2"
    },
    "6443": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6445": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6446": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6447": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6448": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6450": {
      "op": "POP"
    },
    "6451": {
      "op": "POP"
    },
    "6452": {
      "op": "POP"
    },
    "6453": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6454": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6455": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6456": {
      "op": "POP"
    },
    "6457": {
      "op": "POP"
    },
    "6458": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6460": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6463": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6469": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6470": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6471": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6474": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6477": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6479": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6481": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6482": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6484": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6485": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6486": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6487": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6489": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6490": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6492": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6494": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6496": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6497": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6499": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6500": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6501": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6503": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6505": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6506": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6507": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6509": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6515": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6516": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6517": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6522": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6523": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6525": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6526": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6527": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6532": {
      "op": "SHL"
    },
    "6533": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "op": "SUB"
    },
    "6543": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6544": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6546": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6547": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6555": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6556": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6559": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6561": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6564": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6565": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6566": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6575": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6576": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6583": {
      "op": "SHL"
    },
    "6584": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "DIV",
      "path": "2"
    },
    "6586": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6587": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "AND",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6592": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6593": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "ADD",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6596": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6597": {
      "fn": "Governance.getTaskById",
      "offset": [
        5223,
        5244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6598": {
      "op": "POP"
    },
    "6599": {
      "op": "POP"
    },
    "6600": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9119,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9146,
        9159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9146,
        9159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9189,
        9198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9189,
        9205
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9186,
        9205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9186,
        9205
      ],
      "op": "LT",
      "path": "2"
    },
    "6613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6614": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE1"
    },
    "6617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9271,
        9286
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9234,
        9235
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "LT",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19ED"
    },
    "6629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19ED"
    },
    "6633": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "6636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9224,
        9236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6645": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "AND",
      "path": "2"
    },
    "6656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "MUL",
      "path": "2"
    },
    "6663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9236
      ],
      "op": "ADD",
      "path": "2"
    },
    "6666": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9268
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6673": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9286
      ],
      "op": "LT",
      "path": "2"
    },
    "6674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A51"
    },
    "6679": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "POP",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9331,
        9346
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9312,
        9313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "LT",
      "path": "2"
    },
    "6689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2C"
    },
    "6692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2C"
    },
    "6696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "6699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9302,
        9314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6703": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "MUL",
      "path": "2"
    },
    "6716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9314
      ],
      "op": "ADD",
      "path": "2"
    },
    "6717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "ADD",
      "path": "2"
    },
    "6720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6725": {
      "op": "SHL"
    },
    "6726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "DIV",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9327
      ],
      "op": "AND",
      "path": "2"
    },
    "6735": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9346
      ],
      "op": "GT",
      "path": "2"
    },
    "6736": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9302,
        9346
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6739": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A90"
    },
    "6743": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "POP",
      "path": "2"
    },
    "6745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9378,
        9393
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9360,
        9361
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6749": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "LT",
      "path": "2"
    },
    "6753": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6C"
    },
    "6756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6C"
    },
    "6760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "6763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9350,
        9362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6773": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "MUL",
      "path": "2"
    },
    "6780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9362
      ],
      "op": "ADD",
      "path": "2"
    },
    "6781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "ADD",
      "path": "2"
    },
    "6784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6789": {
      "op": "SHL"
    },
    "6790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "DIV",
      "path": "2"
    },
    "6792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9375
      ],
      "op": "AND",
      "path": "2"
    },
    "6799": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9350,
        9393
      ],
      "op": "GT",
      "path": "2"
    },
    "6800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9393
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACD"
    },
    "6806": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "POP",
      "path": "2"
    },
    "6808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9439,
        9440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9419,
        9420
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "LT",
      "path": "2"
    },
    "6817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAC"
    },
    "6820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAC"
    },
    "6824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "6827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9409,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "MUL",
      "path": "2"
    },
    "6844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "6845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "ADD",
      "path": "2"
    },
    "6848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6853": {
      "op": "SHL"
    },
    "6854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "DIV",
      "path": "2"
    },
    "6856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9436
      ],
      "op": "AND",
      "path": "2"
    },
    "6860": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9409,
        9440
      ],
      "op": "GT",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9224,
        9440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9221,
        9506
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9221,
        9506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD9"
    },
    "6866": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9221,
        9506
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9490
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "6868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9490
      ],
      "op": "ADD",
      "path": "2"
    },
    "6871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9490
      ],
      "op": "POP",
      "path": "2"
    },
    "6873": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9221,
        9506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9698,
        9701
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x1"
    },
    "6876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9698,
        9701
      ],
      "op": "ADD",
      "path": "2"
    },
    "6877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19CF"
    },
    "6880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6881": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6882": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9169,
        9713
      ],
      "op": "POP",
      "path": "2"
    },
    "6883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9770,
        9775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9777,
        9778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6886": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9770,
        9778
      ],
      "op": "SUB",
      "path": "2"
    },
    "6887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        9905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4D"
    },
    "6890": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        9905
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6893": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9833,
        9834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "ADD",
      "path": "2"
    },
    "6903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9794,
        9818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9794,
        9818
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "ADD",
      "path": "2"
    },
    "6913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "ADD",
      "path": "2"
    },
    "6921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SUB",
      "path": "2"
    },
    "6926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B01"
    },
    "6931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "POP",
      "path": "2"
    },
    "6934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9820,
        9835
      ],
      "op": "POP",
      "path": "2"
    },
    "6935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9794,
        9835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9794,
        9835
      ],
      "op": "POP",
      "path": "2"
    },
    "6937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x40"
    },
    "6939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "ADD",
      "path": "2"
    },
    "6944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "POP",
      "path": "2"
    },
    "6953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9858,
        9859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "LT",
      "path": "2"
    },
    "6960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3B"
    },
    "6963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3B"
    },
    "6967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "6970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9849,
        9860
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "MUL",
      "path": "2"
    },
    "6977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "ADD",
      "path": "2"
    },
    "6981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9860
      ],
      "op": "ADD",
      "path": "2"
    },
    "6982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9849,
        9865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9886,
        9894
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 51
    },
    "6984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6985": {
      "op": "POP"
    },
    "6986": {
      "op": "POP"
    },
    "6987": {
      "op": "POP"
    },
    "6988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        9905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9915,
        9938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6999": {
      "op": "SHL"
    },
    "7000": {
      "op": "SUB"
    },
    "7001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "GT",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B67"
    },
    "7007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B67"
    },
    "7011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3686"
    },
    "7014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "MUL",
      "path": "2"
    },
    "7027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ADD",
      "path": "2"
    },
    "7030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ADD",
      "path": "2"
    },
    "7032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9A"
    },
    "7040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ADD",
      "path": "2"
    },
    "7045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "ADD",
      "path": "2"
    },
    "7053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SUB",
      "path": "2"
    },
    "7058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B85"
    },
    "7063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "POP",
      "path": "2"
    },
    "7066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9941,
        9960
      ],
      "op": "POP",
      "path": "2"
    },
    "7068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9915,
        9960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9915,
        9960
      ],
      "op": "POP",
      "path": "2"
    },
    "7070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9970,
        9985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10003,
        10012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10019,
        10028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10019,
        10035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10016,
        10035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10016,
        10035
      ],
      "op": "LT",
      "path": "2"
    },
    "7079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D85"
    },
    "7083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10101,
        10116
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10064,
        10065
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "LT",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BBF"
    },
    "7095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BBF"
    },
    "7099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10054,
        10066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "DUP12",
      "path": "2"
    },
    "7121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "AND",
      "path": "2"
    },
    "7122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7123": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "MUL",
      "path": "2"
    },
    "7129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10066
      ],
      "op": "ADD",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7136": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7137": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7139": {
      "branch": 153,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10116
      ],
      "op": "LT",
      "path": "2"
    },
    "7140": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C23"
    },
    "7145": {
      "branch": 153,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7146": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "POP",
      "path": "2"
    },
    "7147": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10161,
        10176
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10141
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10142,
        10143
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7153": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "LT",
      "path": "2"
    },
    "7155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BFE"
    },
    "7158": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BFE"
    },
    "7162": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10132,
        10144
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7169": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7170": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7175": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "MUL",
      "path": "2"
    },
    "7182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10144
      ],
      "op": "ADD",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "ADD",
      "path": "2"
    },
    "7186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7191": {
      "op": "SHL"
    },
    "7192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7193": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "DIV",
      "path": "2"
    },
    "7194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10157
      ],
      "op": "AND",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10176
      ],
      "op": "GT",
      "path": "2"
    },
    "7202": {
      "branch": 154,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10132,
        10176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C62"
    },
    "7209": {
      "branch": 154,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "POP",
      "path": "2"
    },
    "7211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10208,
        10223
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10190,
        10191
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "LT",
      "path": "2"
    },
    "7219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3E"
    },
    "7222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3E"
    },
    "7226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10180,
        10192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "MUL",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10192
      ],
      "op": "ADD",
      "path": "2"
    },
    "7247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "ADD",
      "path": "2"
    },
    "7250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "7255": {
      "op": "SHL"
    },
    "7256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "DIV",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10205
      ],
      "op": "AND",
      "path": "2"
    },
    "7265": {
      "branch": 155,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10180,
        10223
      ],
      "op": "GT",
      "path": "2"
    },
    "7266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C9F"
    },
    "7272": {
      "branch": 155,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7273": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "POP",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10269,
        10270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10249,
        10250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "LT",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7E"
    },
    "7286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7E"
    },
    "7290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10239,
        10251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7300": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7305": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "MUL",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10251
      ],
      "op": "ADD",
      "path": "2"
    },
    "7311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "ADD",
      "path": "2"
    },
    "7314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7319": {
      "op": "SHL"
    },
    "7320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "DIV",
      "path": "2"
    },
    "7322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10266
      ],
      "op": "AND",
      "path": "2"
    },
    "7326": {
      "branch": 156,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10239,
        10270
      ],
      "op": "GT",
      "path": "2"
    },
    "7327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10054,
        10270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10051,
        10480
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10051,
        10480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7D"
    },
    "7332": {
      "branch": 156,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10051,
        10480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10331
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x5"
    },
    "7335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10332,
        10333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "LT",
      "path": "2"
    },
    "7340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB7"
    },
    "7343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB7"
    },
    "7347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10322,
        10334
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "MUL",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10334
      ],
      "op": "ADD",
      "path": "2"
    },
    "7366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10322,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD3"
    },
    "7374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "7378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DIV",
      "path": "2"
    },
    "7389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MUL",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7407": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFF"
    },
    "7418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "7422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4C"
    },
    "7429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "LT",
      "path": "2"
    },
    "7434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D21"
    },
    "7437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DIV",
      "path": "2"
    },
    "7445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MUL",
      "path": "2"
    },
    "7446": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4C"
    },
    "7456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "GT",
      "path": "2"
    },
    "7487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2F"
    },
    "7490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SUB",
      "path": "2"
    },
    "7494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "AND",
      "path": "2"
    },
    "7497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "ADD",
      "path": "2"
    },
    "7499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10310
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10311,
        10318
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "LT",
      "path": "2"
    },
    "7512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D63"
    },
    "7515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D63"
    },
    "7519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "7522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10303,
        10319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "MUL",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "ADD",
      "path": "2"
    },
    "7530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10319
      ],
      "op": "ADD",
      "path": "2"
    },
    "7531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10303,
        10343
      ],
      "op": "POP",
      "path": "2"
    },
    "7535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10371,
        10380
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "7536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10371,
        10380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10371,
        10380
      ],
      "op": "ADD",
      "path": "2"
    },
    "7539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10371,
        10380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10371,
        10380
      ],
      "op": "POP",
      "path": "2"
    },
    "7541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10413,
        10418
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10402,
        10409
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7543": {
      "branch": 157,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10402,
        10418
      ],
      "op": "LT",
      "path": "2"
    },
    "7544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10399,
        10466
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10442,
        10447
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x1D85"
    },
    "7548": {
      "branch": 157,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10399,
        10466
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10399,
        10466
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10503,
        10506
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x1"
    },
    "7552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10503,
        10506
      ],
      "op": "ADD",
      "path": "2"
    },
    "7553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA1"
    },
    "7556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9999,
        10518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7558": {
      "op": "POP"
    },
    "7559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10534,
        10541
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 56
    },
    "7560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10534,
        10541
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9048,
        10548
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7562": {
      "op": "POP"
    },
    "7563": {
      "op": "POP"
    },
    "7564": {
      "op": "POP"
    },
    "7565": {
      "op": "POP"
    },
    "7566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9048,
        10548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7567": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7568": {
      "offset": [
        23798,
        23815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D97"
    },
    "7571": {
      "offset": [
        23798,
        23813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "7574": {
      "jump": "i",
      "offset": [
        23798,
        23815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7575": {
      "branch": 158,
      "fn": "Governance.createProposal",
      "offset": [
        23798,
        23815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7576": {
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DDA"
    },
    "7579": {
      "branch": 158,
      "offset": [
        23790,
        23840
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7580": {
      "fn": "Governance.createProposal",
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7582": {
      "fn": "Governance.createProposal",
      "offset": [
        23790,
        23840
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7589": {
      "op": "SHL"
    },
    "7590": {
      "offset": [
        23790,
        23840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7591": {
      "fn": "Governance.createProposal",
      "offset": [
        23790,
        23840
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7594": {
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7596": {
      "fn": "Governance.createProposal",
      "offset": [
        23790,
        23840
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7597": {
      "fn": "Governance.createProposal",
      "offset": [
        23790,
        23840
      ],
      "op": "ADD",
      "path": "2"
    },
    "7598": {
      "op": "MSTORE"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7603": {
      "op": "DUP3"
    },
    "7604": {
      "op": "ADD"
    },
    "7605": {
      "op": "MSTORE"
    },
    "7606": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "7629": {
      "op": "SHL"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7632": {
      "op": "DUP3"
    },
    "7633": {
      "op": "ADD"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7637": {
      "op": "ADD"
    },
    "7638": {
      "offset": [
        23790,
        23840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "7641": {
      "op": "JUMP"
    },
    "7642": {
      "offset": [
        23790,
        23840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7643": {
      "fn": "Governance.createProposal",
      "offset": [
        13567,
        13568
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x1"
    },
    "7645": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13564
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7646": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13568
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7649": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13568
      ],
      "op": "AND",
      "path": "2"
    },
    "7650": {
      "branch": 159,
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13568
      ],
      "op": "GT",
      "path": "2"
    },
    "7651": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7652": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7653": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF3"
    },
    "7656": {
      "branch": 159,
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7657": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "POP",
      "path": "2"
    },
    "7658": {
      "fn": "Governance.createProposal",
      "offset": [
        13591,
        13594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "7661": {
      "fn": "Governance.createProposal",
      "offset": [
        13572,
        13588
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7662": {
      "fn": "Governance.createProposal",
      "offset": [
        13572,
        13594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7665": {
      "fn": "Governance.createProposal",
      "offset": [
        13572,
        13594
      ],
      "op": "AND",
      "path": "2"
    },
    "7666": {
      "branch": 160,
      "fn": "Governance.createProposal",
      "offset": [
        13572,
        13594
      ],
      "op": "LT",
      "path": "2"
    },
    "7667": {
      "fn": "Governance.createProposal",
      "offset": [
        13548,
        13594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7668": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3F"
    },
    "7671": {
      "branch": 160,
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7672": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7674": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7681": {
      "op": "SHL"
    },
    "7682": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7683": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7686": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7688": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7689": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "ADD",
      "path": "2"
    },
    "7690": {
      "op": "MSTORE"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7695": {
      "op": "DUP3"
    },
    "7696": {
      "op": "ADD"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "7742": {
      "op": "JUMP"
    },
    "7743": {
      "fn": "Governance.createProposal",
      "offset": [
        13540,
        13624
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7744": {
      "fn": "Governance.createProposal",
      "offset": [
        13652,
        13653
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 58,
      "value": "0x1"
    },
    "7746": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7748": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7750": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7751": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7753": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E52"
    },
    "7756": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7757": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4127"
    },
    "7761": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13634,
        13653
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7762": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7763": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7764": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.createProposal",
      "offset": [
        13634,
        13653
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7766": {
      "op": "POP"
    },
    "7767": {
      "op": "POP"
    },
    "7768": {
      "fn": "Governance.createProposal",
      "offset": [
        13724,
        13738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7770": {
      "fn": "Governance.createProposal",
      "offset": [
        13724,
        13738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.createProposal",
      "offset": [
        13684,
        13711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7773": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7774": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7775": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7776": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "7778": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7780": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7781": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7783": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7784": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7785": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13776
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x3"
    },
    "7787": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7788": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13776
      ],
      "op": "ADD",
      "path": "2"
    },
    "7789": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7790": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7791": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "7807": {
      "op": "NOT"
    },
    "7808": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "AND",
      "path": "2",
      "statement": 60
    },
    "7809": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "7816": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7822": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7823": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7824": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "AND",
      "path": "2"
    },
    "7825": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7826": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7827": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7828": {
      "fn": "Governance.createProposal",
      "offset": [
        13753,
        13792
      ],
      "op": "MUL",
      "path": "2"
    },
    "7829": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7837": {
      "op": "SHL"
    },
    "7838": {
      "op": "NOT"
    },
    "7839": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "AND",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7842": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7843": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "OR",
      "path": "2"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7848": {
      "op": "SHL"
    },
    "7849": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7850": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7851": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "AND",
      "path": "2"
    },
    "7852": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7854": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7855": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "MUL",
      "path": "2"
    },
    "7856": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "OR",
      "path": "2"
    },
    "7857": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7858": {
      "fn": "Governance.createProposal",
      "offset": [
        13806,
        13845
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7861": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13885
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 61
    },
    "7862": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13885
      ],
      "op": "ADD",
      "path": "2"
    },
    "7863": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7864": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7865": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7868": {
      "op": "NOT"
    },
    "7869": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "AND",
      "path": "2"
    },
    "7870": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7873": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7874": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "AND",
      "path": "2"
    },
    "7875": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "OR",
      "path": "2"
    },
    "7876": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7877": {
      "fn": "Governance.createProposal",
      "offset": [
        13859,
        13904
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7878": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7879": {
      "fn": "Governance.createProposal",
      "offset": [
        13918,
        13949
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x1ED1"
    },
    "7882": {
      "fn": "Governance.createProposal",
      "offset": [
        13940,
        13949
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7883": {
      "fn": "Governance.createProposal",
      "offset": [
        13940,
        13949
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7884": {
      "fn": "Governance.createProposal",
      "offset": [
        13714,
        13739
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7885": {
      "fn": "Governance.createProposal",
      "offset": [
        13918,
        13949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41C9"
    },
    "7888": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13918,
        13949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7889": {
      "fn": "Governance.createProposal",
      "offset": [
        13918,
        13949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7890": {
      "fn": "Governance.createProposal",
      "offset": [
        13918,
        13949
      ],
      "op": "POP",
      "path": "2"
    },
    "7891": {
      "fn": "Governance.createProposal",
      "offset": [
        13960,
        14072
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 63,
      "value": "0x1EE5"
    },
    "7894": {
      "fn": "Governance.createProposal",
      "offset": [
        13976,
        13985
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7895": {
      "fn": "Governance.createProposal",
      "offset": [
        13976,
        13985
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7896": {
      "fn": "Governance.createProposal",
      "offset": [
        13994,
        14008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7898": {
      "fn": "Governance.createProposal",
      "offset": [
        13994,
        14008
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7899": {
      "fn": "Governance.createProposal",
      "offset": [
        14011,
        14012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7901": {
      "fn": "Governance.createProposal",
      "offset": [
        14014,
        14024
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7902": {
      "fn": "Governance.createProposal",
      "offset": [
        14026,
        14039
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7903": {
      "fn": "Governance.createProposal",
      "offset": [
        14041,
        14054
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.createProposal",
      "offset": [
        14056,
        14071
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.createProposal",
      "offset": [
        13960,
        13975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31E6"
    },
    "7908": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13960,
        14072
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7909": {
      "fn": "Governance.createProposal",
      "offset": [
        13960,
        14072
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7910": {
      "fn": "Governance.createProposal",
      "offset": [
        13530,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7912": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7913": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7914": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7915": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7916": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7917": {
      "fn": "Governance.createProposal",
      "offset": [
        13348,
        14110
      ],
      "op": "POP",
      "path": "2"
    },
    "7918": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        13348,
        14110
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15456,
        15483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7922": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15486,
        15535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0A"
    },
    "7925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15510,
        15534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7927": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7928": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7930": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7931": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7932": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7937": {
      "op": "SHL"
    },
    "7938": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7939": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7940": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "7941": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7942": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7943": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "7944": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7945": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7946": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15486,
        15535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15456,
        15535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15456,
        15535
      ],
      "op": "POP",
      "path": "2"
    },
    "7949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15545,
        15563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F14"
    },
    "7952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15545,
        15563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "7955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15545,
        15563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15545,
        15563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        15587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        15587
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15706,
        15725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15702,
        15703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15702,
        15725
      ],
      "op": "LT",
      "path": "2"
    },
    "7964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7965": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221F"
    },
    "7968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15759,
        15807
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0x1F2B"
    },
    "7972": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15779,
        15803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15805,
        15806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15759,
        15778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3175"
    },
    "7978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15759,
        15807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15759,
        15807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7980": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15751,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 65
    },
    "7983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "8001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15751,
        15808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15751,
        15808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8010": {
      "op": "POP"
    },
    "8011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15831,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F59"
    },
    "8020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "8024": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MUL",
      "path": "2"
    },
    "8036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F85"
    },
    "8064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "8068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD2"
    },
    "8075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "LT",
      "path": "2"
    },
    "8080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA7"
    },
    "8083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MUL",
      "path": "2"
    },
    "8092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD2"
    },
    "8102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8110": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8115": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "GT",
      "path": "2"
    },
    "8133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB5"
    },
    "8136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SUB",
      "path": "2"
    },
    "8140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8147": {
      "op": "POP"
    },
    "8148": {
      "op": "POP"
    },
    "8149": {
      "op": "POP"
    },
    "8150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8153": {
      "op": "POP"
    },
    "8154": {
      "op": "POP"
    },
    "8155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8181": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8209": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8212": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8224": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8229": {
      "op": "SHL"
    },
    "8230": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8238": {
      "op": "SHL"
    },
    "8239": {
      "op": "SUB"
    },
    "8240": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8250": {
      "op": "SHL"
    },
    "8251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8256": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8259": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8261": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8262": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8268": {
      "op": "SHL"
    },
    "8269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8280": {
      "op": "SHL"
    },
    "8281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DIV",
      "path": "2"
    },
    "8283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8284": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "AND",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "8291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        15844
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8293": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15898
      ],
      "op": "ADD",
      "path": "2"
    },
    "8294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8295": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8296": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15898
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8297": {
      "op": "POP"
    },
    "8298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15901,
        15916
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15916
      ],
      "op": "AND",
      "path": "2"
    },
    "8301": {
      "branch": 161,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15916
      ],
      "op": "LT",
      "path": "2"
    },
    "8302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2084"
    },
    "8307": {
      "branch": 161,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8308": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "POP",
      "path": "2"
    },
    "8309": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15936,
        15942
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8310": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15926
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15932
      ],
      "op": "ADD",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15932
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15942
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8321": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15942
      ],
      "op": "AND",
      "path": "2"
    },
    "8322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15942
      ],
      "op": "EQ",
      "path": "2"
    },
    "8323": {
      "branch": 162,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15920,
        15942
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8324": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8325": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8326": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2099"
    },
    "8330": {
      "branch": 162,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "POP",
      "path": "2"
    },
    "8332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15965,
        15971
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15952
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8337": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15962
      ],
      "op": "ADD",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15962
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8339": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8342": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15971
      ],
      "op": "AND",
      "path": "2"
    },
    "8343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15971
      ],
      "op": "EQ",
      "path": "2"
    },
    "8344": {
      "branch": 163,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15946,
        15971
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8345": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15862,
        15971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8346": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15858,
        16412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8347": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15858,
        16412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2217"
    },
    "8350": {
      "branch": 163,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15858,
        16412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8351": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16184
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0xFFFF"
    },
    "8354": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16184
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8355": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16184
      ],
      "op": "AND",
      "path": "2"
    },
    "8356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8358": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16167
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8359": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16167
      ],
      "op": "ADD",
      "path": "2"
    },
    "8360": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8361": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16266,
        16282
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0xC"
    },
    "8363": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16266,
        16282
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8364": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16248,
        16282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B5"
    },
    "8367": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16248,
        16282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16248,
        16263
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8369": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16248,
        16282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4127"
    },
    "8372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16248,
        16282
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8373": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16248,
        16282
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8374": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16283
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8380": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16283
      ],
      "op": "AND",
      "path": "2"
    },
    "8381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8384": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16238
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8385": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16238
      ],
      "op": "ADD",
      "path": "2"
    },
    "8386": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16283
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x0"
    },
    "8389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8391": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8394": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8399": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8400": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8401": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8403": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16208
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8404": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16202,
        16208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8405": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8406": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8407": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8408": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E1"
    },
    "8411": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4052"
    },
    "8416": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16301,
        16323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8417": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8418": {
      "op": "POP"
    },
    "8419": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8421": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8422": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8423": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8427": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8428": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8429": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8431": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8437": {
      "op": "NOT"
    },
    "8438": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8439": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8448": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8449": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8450": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8451": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8453": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8455": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8457": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8461": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8462": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8464": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8465": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8466": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8467": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8469": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8471": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8472": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8474": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8475": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8476": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8479": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8481": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8482": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8486": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8487": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8488": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8489": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8491": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8492": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8493": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8494": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8496": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8497": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8498": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8499": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8502": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP12",
      "path": "2"
    },
    "8504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8509": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "8511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "ADD",
      "path": "2"
    },
    "8512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8515": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "8517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8518": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8523": {
      "op": "NOT"
    },
    "8524": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8536": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8537": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8540": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MUL",
      "path": "2"
    },
    "8541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8542": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8545": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8555": {
      "op": "SHL"
    },
    "8556": {
      "op": "SUB"
    },
    "8557": {
      "op": "NOT"
    },
    "8558": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8563": {
      "op": "SHL"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8570": {
      "op": "SHL"
    },
    "8571": {
      "op": "SUB"
    },
    "8572": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8573": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8576": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8578": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MUL",
      "path": "2"
    },
    "8579": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8584": {
      "op": "SHL"
    },
    "8585": {
      "op": "NOT"
    },
    "8586": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8587": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8592": {
      "op": "SHL"
    },
    "8593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8596": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8598": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MUL",
      "path": "2"
    },
    "8600": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8601": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8611": {
      "op": "SHL"
    },
    "8612": {
      "op": "NOT"
    },
    "8613": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8618": {
      "op": "SHL"
    },
    "8619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8621": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "8622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8623": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MUL",
      "path": "2"
    },
    "8624": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8632": {
      "op": "SHL"
    },
    "8633": {
      "op": "NOT"
    },
    "8634": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8635": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8636": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8638": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8643": {
      "op": "SHL"
    },
    "8644": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8645": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8646": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8647": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "AND",
      "path": "2"
    },
    "8648": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8649": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "MUL",
      "path": "2"
    },
    "8652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "OR",
      "path": "2"
    },
    "8653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8654": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8655": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16301,
        16323
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8658": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 69
    },
    "8659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8663": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8667": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8668": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8670": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8672": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "8705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220E"
    },
    "8709": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8710": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16367,
        16373
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8711": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16367,
        16373
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8712": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8713": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16383,
        16396
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8714": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4288"
    },
    "8717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16346,
        16397
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8719": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8721": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SUB",
      "path": "2"
    },
    "8725": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8726": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16346,
        16397
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15858,
        16412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16435,
        16438
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16435,
        16438
      ],
      "op": "ADD",
      "path": "2"
    },
    "8731": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F18"
    },
    "8734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8736": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15684,
        16450
      ],
      "op": "POP",
      "path": "2"
    },
    "8737": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15446,
        16509
      ],
      "op": "POP",
      "path": "2"
    },
    "8738": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15446,
        16509
      ],
      "op": "POP",
      "path": "2"
    },
    "8739": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15446,
        16509
      ],
      "op": "POP",
      "path": "2"
    },
    "8740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15381,
        16509
      ],
      "op": "POP",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        15381,
        16509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8743": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19190
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x2"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19190
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8748": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8749": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8754": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8756": {
      "op": "SHL"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8759": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8761": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ADD",
      "path": "2"
    },
    "8763": {
      "op": "DUP6"
    },
    "8764": {
      "op": "SWAP1"
    },
    "8765": {
      "op": "MSTORE"
    },
    "8766": {
      "fn": "Governance.submitVerification",
      "offset": [
        19210,
        19220
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8767": {
      "fn": "Governance.submitVerification",
      "offset": [
        19210,
        19220
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8774": {
      "op": "SHL"
    },
    "8775": {
      "op": "SUB"
    },
    "8776": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19190
      ],
      "op": "AND",
      "path": "2"
    },
    "8777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19198
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8786": {
      "op": "ADD"
    },
    "8787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8791": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8792": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8793": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8794": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "SUB",
      "path": "2"
    },
    "8795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8796": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8797": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "GAS",
      "path": "2"
    },
    "8798": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8799": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8800": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8801": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8802": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226F"
    },
    "8805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8806": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8807": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8809": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8810": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8811": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8812": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8814": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8815": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "POP",
      "path": "2"
    },
    "8817": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "POP",
      "path": "2"
    },
    "8818": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "POP",
      "path": "2"
    },
    "8819": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "POP",
      "path": "2"
    },
    "8820": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8822": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8823": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8824": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8826": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "NOT",
      "path": "2"
    },
    "8827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8830": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ADD",
      "path": "2"
    },
    "8831": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "AND",
      "path": "2"
    },
    "8832": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ADD",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8837": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "POP",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "ADD",
      "path": "2"
    },
    "8841": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8842": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2293"
    },
    "8845": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED8"
    },
    "8850": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19180,
        19206
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8851": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "op": "SUB"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19220
      ],
      "op": "AND",
      "path": "2"
    },
    "8861": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19220
      ],
      "op": "EQ",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C4"
    },
    "8867": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8871": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8873": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8874": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8876": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8879": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19238
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8883": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "ADD",
      "path": "2"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8891": {
      "op": "SHL"
    },
    "8892": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "DIV",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8897": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19249
      ],
      "op": "AND",
      "path": "2"
    },
    "8898": {
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8899": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        19224,
        19257
      ],
      "op": "EQ",
      "path": "2"
    },
    "8900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19180,
        19257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8901": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2310"
    },
    "8904": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8905": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8907": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8921": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "ADD",
      "path": "2"
    },
    "8923": {
      "op": "DUP2"
    },
    "8924": {
      "op": "SWAP1"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8928": {
      "op": "DUP3"
    },
    "8929": {
      "op": "ADD"
    },
    "8930": {
      "op": "MSTORE"
    },
    "8931": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8966": {
      "op": "DUP3"
    },
    "8967": {
      "op": "ADD"
    },
    "8968": {
      "op": "MSTORE"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8971": {
      "op": "ADD"
    },
    "8972": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "8975": {
      "op": "JUMP"
    },
    "8976": {
      "fn": "Governance.submitVerification",
      "offset": [
        19172,
        19294
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        19329,
        19330
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x0"
    },
    "8979": {
      "fn": "Governance.submitVerification",
      "offset": [
        19312,
        19319
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        19312,
        19326
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8981": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        19312,
        19330
      ],
      "op": "GT",
      "path": "2"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231E"
    },
    "8985": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8986": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8989": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8990": {
      "fn": "Governance.submitVerification",
      "offset": [
        19304,
        19331
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8991": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8994": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8998": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9001": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9003": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9005": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9006": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9007": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "9011": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9013": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9014": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9017": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9018": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19363,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2346"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9026": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9030": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9031": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9038": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9039": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MUL",
      "path": "2"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9043": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9048": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9052": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9053": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9054": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9055": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9056": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9057": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9058": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9059": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9060": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9062": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9063": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9065": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9066": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2372"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9070": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "9073": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9074": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9075": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9076": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23BF"
    },
    "9080": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9081": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9084": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "LT",
      "path": "2"
    },
    "9085": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2394"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9092": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9093": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9094": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9095": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MUL",
      "path": "2"
    },
    "9097": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9098": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9100": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9102": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9104": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23BF"
    },
    "9107": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9108": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9109": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9110": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9111": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9115": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9116": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9118": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9120": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9121": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9122": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9123": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9124": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9125": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9126": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9127": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9128": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9132": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9135": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9136": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "GT",
      "path": "2"
    },
    "9138": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23A2"
    },
    "9141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9142": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9143": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9144": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SUB",
      "path": "2"
    },
    "9145": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9147": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9148": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9149": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9150": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9151": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9152": {
      "op": "POP"
    },
    "9153": {
      "op": "POP"
    },
    "9154": {
      "op": "POP"
    },
    "9155": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9156": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9157": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9158": {
      "op": "POP"
    },
    "9159": {
      "op": "POP"
    },
    "9160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9172": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9174": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9175": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9179": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9183": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9184": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9190": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9193": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9194": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9195": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9197": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9203": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9205": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9209": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9210": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "9212": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9214": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9220": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9225": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9226": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9228": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9229": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9230": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9235": {
      "op": "SHL"
    },
    "9236": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9237": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9244": {
      "op": "SHL"
    },
    "9245": {
      "op": "SUB"
    },
    "9246": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "9249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9250": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9251": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "9256": {
      "op": "SHL"
    },
    "9257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9258": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9263": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9267": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9274": {
      "op": "SHL"
    },
    "9275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9277": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9278": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9279": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9281": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "9287": {
      "op": "SHL"
    },
    "9288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9289": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9290": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "DIV",
      "path": "2"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9293": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "AND",
      "path": "2"
    },
    "9294": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "9297": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9299": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "ADD",
      "path": "2"
    },
    "9300": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9301": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        19342,
        19377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9305": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "ADD",
      "path": "2"
    },
    "9307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9308": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19515
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9310": {
      "op": "POP"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9313": {
      "op": "SWAP3"
    },
    "9314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19519
      ],
      "op": "AND",
      "path": "2"
    },
    "9315": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19519
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9316": {
      "fn": "Governance.submitVerification",
      "offset": [
        19496,
        19701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24DC"
    },
    "9319": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        19496,
        19701
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        19539,
        19548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19558,
        19565
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9324": {
      "fn": "Governance.submitVerification",
      "offset": [
        19558,
        19572
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9325": {
      "fn": "Governance.submitVerification",
      "offset": [
        19554,
        19555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19554,
        19572
      ],
      "op": "LT",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9328": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24DA"
    },
    "9331": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19639
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 73
    },
    "9333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19640,
        19641
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9336": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "LT",
      "path": "2"
    },
    "9338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2485"
    },
    "9341": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2485"
    },
    "9345": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "9348": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19632,
        19642
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9349": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9350": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9352": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "MUL",
      "path": "2"
    },
    "9353": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9355": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "ADD",
      "path": "2"
    },
    "9356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "ADD",
      "path": "2"
    },
    "9357": {
      "fn": "Governance.submitVerification",
      "offset": [
        19632,
        19642
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9358": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9360": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9363": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "ADD",
      "path": "2"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x249F"
    },
    "9367": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9368": {
      "op": "DUP2"
    },
    "9369": {
      "op": "MSTORE"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9372": {
      "op": "ADD"
    },
    "9373": {
      "op": "SWAP1"
    },
    "9374": {
      "op": "JUMP"
    },
    "9375": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9376": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9378": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9379": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9381": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9382": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "SUB",
      "path": "2"
    },
    "9384": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "SUB",
      "path": "2"
    },
    "9385": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9386": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9387": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9388": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        19615,
        19643
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9393": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9394": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9396": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "ADD",
      "path": "2"
    },
    "9397": {
      "fn": "Governance.submitVerification",
      "offset": [
        19605,
        19644
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9398": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19599
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9399": {
      "fn": "Governance.submitVerification",
      "offset": [
        19600,
        19601
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9400": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9401": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9402": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9403": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "LT",
      "path": "2"
    },
    "9404": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C7"
    },
    "9407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9408": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C7"
    },
    "9411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "9414": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19592,
        19602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9418": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9419": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9420": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "MUL",
      "path": "2"
    },
    "9421": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9422": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9423": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9424": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "ADD",
      "path": "2"
    },
    "9425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19602
      ],
      "op": "ADD",
      "path": "2"
    },
    "9426": {
      "fn": "Governance.submitVerification",
      "offset": [
        19592,
        19644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19672,
        19675
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x1"
    },
    "9429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19672,
        19675
      ],
      "op": "ADD",
      "path": "2"
    },
    "9430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x246A"
    },
    "9433": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9434": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19691
      ],
      "op": "POP",
      "path": "2"
    },
    "9436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19496,
        19701
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19710,
        19724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9439": {
      "fn": "Governance.submitVerification",
      "offset": [
        19754,
        19761
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9440": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9442": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9445": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "ADD",
      "path": "2"
    },
    "9446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24EF"
    },
    "9449": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9450": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9451": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E71"
    },
    "9454": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19737,
        19762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9455": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9456": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9459": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9461": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9462": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9463": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "SUB",
      "path": "2"
    },
    "9464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "SUB",
      "path": "2"
    },
    "9465": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9466": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9467": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9468": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9470": {
      "fn": "Governance.submitVerification",
      "offset": [
        19737,
        19762
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9471": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9472": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9473": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9474": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9476": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "ADD",
      "path": "2"
    },
    "9477": {
      "fn": "Governance.submitVerification",
      "offset": [
        19727,
        19763
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9478": {
      "fn": "Governance.submitVerification",
      "offset": [
        19710,
        19763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        19710,
        19763
      ],
      "op": "POP",
      "path": "2"
    },
    "9480": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9482": {
      "fn": "Governance.submitVerification",
      "offset": [
        19811,
        19817
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9483": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19802
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9484": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19807
      ],
      "op": "ADD",
      "path": "2"
    },
    "9487": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19807
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9488": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19817
      ],
      "op": "EQ",
      "path": "2"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x251B"
    },
    "9492": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9493": {
      "fn": "Governance.submitVerification",
      "offset": [
        19824,
        19825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x251E"
    },
    "9498": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9499": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9500": {
      "fn": "Governance.submitVerification",
      "offset": [
        19820,
        19821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9502": {
      "fn": "Governance.submitVerification",
      "offset": [
        19796,
        19825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9503": {
      "fn": "Governance.submitVerification",
      "offset": [
        19871,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x20"
    },
    "9505": {
      "fn": "Governance.submitVerification",
      "offset": [
        19871,
        19883
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9506": {
      "fn": "Governance.submitVerification",
      "offset": [
        19871,
        19883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9507": {
      "fn": "Governance.submitVerification",
      "offset": [
        19871,
        19883
      ],
      "op": "ADD",
      "path": "2"
    },
    "9508": {
      "fn": "Governance.submitVerification",
      "offset": [
        19871,
        19883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9509": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9511": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9512": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9513": {
      "op": "DUP13"
    },
    "9514": {
      "op": "DUP2"
    },
    "9515": {
      "op": "MSTORE"
    },
    "9516": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9522": {
      "op": "SWAP1"
    },
    "9523": {
      "op": "SWAP3"
    },
    "9524": {
      "op": "AND"
    },
    "9525": {
      "op": "SWAP3"
    },
    "9526": {
      "op": "DUP3"
    },
    "9527": {
      "op": "ADD"
    },
    "9528": {
      "op": "SWAP3"
    },
    "9529": {
      "op": "SWAP1"
    },
    "9530": {
      "op": "SWAP3"
    },
    "9531": {
      "op": "MSTORE"
    },
    "9532": {
      "op": "SWAP1"
    },
    "9533": {
      "op": "DUP2"
    },
    "9534": {
      "op": "ADD"
    },
    "9535": {
      "op": "DUP10"
    },
    "9536": {
      "op": "SWAP1"
    },
    "9537": {
      "op": "MSTORE"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9540": {
      "op": "DUP2"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "DUP5"
    },
    "9543": {
      "op": "SWAP1"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9548": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9550": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "AND",
      "path": "2"
    },
    "9551": {
      "fn": "Governance.submitVerification",
      "offset": [
        19915,
        19916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19902,
        19916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9554": {
      "fn": "Governance.submitVerification",
      "offset": [
        19902,
        19916
      ],
      "op": "EQ",
      "path": "2"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9557": {
      "op": "DUP4"
    },
    "9558": {
      "op": "ADD"
    },
    "9559": {
      "op": "MSTORE"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19774,
        19825
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9561": {
      "op": "POP"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "9595": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9598": {
      "op": "ADD"
    },
    "9599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9601": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9602": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9603": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9604": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "SUB",
      "path": "2"
    },
    "9605": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19841,
        19917
      ],
      "op": "LOG1",
      "path": "2"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        19932,
        19943
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19946,
        19947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9610": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        19932,
        19947
      ],
      "op": "SUB",
      "path": "2"
    },
    "9611": {
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        22425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2841"
    },
    "9614": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        22425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9615": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9617": {
      "fn": "Governance.submitVerification",
      "offset": [
        20057,
        20058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9619": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20048
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9620": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "9622": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20056
      ],
      "op": "ADD",
      "path": "2"
    },
    "9623": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A1"
    },
    "9627": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9628": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9629": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4353"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20042,
        20058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9633": {
      "fn": "Governance.submitVerification",
      "offset": [
        20042,
        20058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9634": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9637": {
      "fn": "Governance.submitVerification",
      "offset": [
        20131,
        20148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        20131,
        20148
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        20131,
        20148
      ],
      "op": "ADD",
      "path": "2"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        20131,
        20148
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9642": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9644": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9645": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9652": {
      "op": "SHL"
    },
    "9653": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9654": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9655": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9658": {
      "op": "SWAP1"
    },
    "9659": {
      "op": "SWAP2"
    },
    "9660": {
      "op": "AND"
    },
    "9661": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9664": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ADD",
      "path": "2"
    },
    "9665": {
      "op": "MSTORE"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9672": {
      "op": "SHL"
    },
    "9673": {
      "op": "SUB"
    },
    "9674": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9675": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9676": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9677": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20058
      ],
      "op": "AND",
      "path": "2"
    },
    "9678": {
      "fn": "Governance.submitVerification",
      "offset": [
        20026,
        20058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9679": {
      "op": "POP"
    },
    "9680": {
      "fn": "Governance.submitVerification",
      "offset": [
        20072,
        20101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9682": {
      "fn": "Governance.submitVerification",
      "offset": [
        20072,
        20101
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9689": {
      "op": "SHL"
    },
    "9690": {
      "op": "SUB"
    },
    "9691": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9692": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9693": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "AND",
      "path": "2"
    },
    "9694": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9695": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20130
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9700": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20130
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9703": {
      "op": "ADD"
    },
    "9704": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9706": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9708": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9709": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9710": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9711": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "SUB",
      "path": "2"
    },
    "9712": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9713": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9714": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "GAS",
      "path": "2"
    },
    "9715": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9716": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9717": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9718": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9719": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2604"
    },
    "9722": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9723": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9724": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9726": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9727": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9728": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9729": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9731": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9732": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9733": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "POP",
      "path": "2"
    },
    "9734": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "POP",
      "path": "2"
    },
    "9735": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "POP",
      "path": "2"
    },
    "9736": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "POP",
      "path": "2"
    },
    "9737": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9739": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9740": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9741": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9743": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "NOT",
      "path": "2"
    },
    "9744": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9746": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9747": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ADD",
      "path": "2"
    },
    "9748": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "AND",
      "path": "2"
    },
    "9749": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9750": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ADD",
      "path": "2"
    },
    "9751": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9752": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9754": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9755": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "POP",
      "path": "2"
    },
    "9756": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9757": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "ADD",
      "path": "2"
    },
    "9758": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9759": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2628"
    },
    "9762": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9763": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9764": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED8"
    },
    "9767": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20112,
        20149
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9768": {
      "fn": "Governance.submitVerification",
      "offset": [
        20112,
        20149
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9769": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20228
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x2"
    },
    "9771": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20228
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9772": {
      "fn": "Governance.submitVerification",
      "offset": [
        20240,
        20252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9774": {
      "fn": "Governance.submitVerification",
      "offset": [
        20240,
        20252
      ],
      "op": "DUP10",
      "path": "2"
    },
    "9775": {
      "fn": "Governance.submitVerification",
      "offset": [
        20240,
        20252
      ],
      "op": "ADD",
      "path": "2"
    },
    "9776": {
      "fn": "Governance.submitVerification",
      "offset": [
        20240,
        20252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9777": {
      "fn": "Governance.submitVerification",
      "offset": [
        20254,
        20270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9779": {
      "fn": "Governance.submitVerification",
      "offset": [
        20254,
        20270
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9780": {
      "fn": "Governance.submitVerification",
      "offset": [
        20254,
        20270
      ],
      "op": "ADD",
      "path": "2"
    },
    "9781": {
      "fn": "Governance.submitVerification",
      "offset": [
        20254,
        20270
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9782": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9784": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9785": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9792": {
      "op": "SHL"
    },
    "9793": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9794": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9795": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9801": {
      "op": "SWAP1"
    },
    "9802": {
      "op": "SWAP3"
    },
    "9803": {
      "op": "AND"
    },
    "9804": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9806": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9807": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "ADD",
      "path": "2"
    },
    "9808": {
      "op": "MSTORE"
    },
    "9809": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "9813": {
      "op": "AND"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9816": {
      "op": "DUP3"
    },
    "9817": {
      "op": "ADD"
    },
    "9818": {
      "op": "MSTORE"
    },
    "9819": {
      "fn": "Governance.submitVerification",
      "offset": [
        20072,
        20150
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9820": {
      "fn": "Governance.submitVerification",
      "offset": [
        20072,
        20150
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9828": {
      "op": "SHL"
    },
    "9829": {
      "op": "SUB"
    },
    "9830": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20228
      ],
      "op": "AND",
      "path": "2"
    },
    "9831": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9832": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20239
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9837": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9840": {
      "op": "ADD"
    },
    "9841": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9843": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9845": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9846": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9847": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9848": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "SUB",
      "path": "2"
    },
    "9849": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9850": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9852": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9853": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9854": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9855": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9856": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9857": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9858": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268A"
    },
    "9861": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9862": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9864": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9865": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9866": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9867": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "POP",
      "path": "2"
    },
    "9868": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "GAS",
      "path": "2"
    },
    "9869": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "CALL",
      "path": "2"
    },
    "9870": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9871": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9872": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9873": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269E"
    },
    "9876": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9877": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9878": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9880": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9882": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9883": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9885": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9887": {
      "op": "POP"
    },
    "9888": {
      "op": "POP"
    },
    "9889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x2"
    },
    "9891": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9892": {
      "fn": "Governance.submitVerification",
      "offset": [
        20307,
        20324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9894": {
      "fn": "Governance.submitVerification",
      "offset": [
        20307,
        20324
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9895": {
      "fn": "Governance.submitVerification",
      "offset": [
        20307,
        20324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20307,
        20324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9897": {
      "fn": "Governance.submitVerification",
      "offset": [
        20326,
        20351
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9899": {
      "fn": "Governance.submitVerification",
      "offset": [
        20326,
        20351
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9900": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9902": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9903": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9910": {
      "op": "SHL"
    },
    "9911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9913": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9916": {
      "op": "SWAP1"
    },
    "9917": {
      "op": "SWAP3"
    },
    "9918": {
      "op": "AND"
    },
    "9919": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9921": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9922": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "ADD",
      "path": "2"
    },
    "9923": {
      "op": "MSTORE"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9926": {
      "op": "DUP3"
    },
    "9927": {
      "op": "ADD"
    },
    "9928": {
      "op": "MSTORE"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9935": {
      "op": "SHL"
    },
    "9936": {
      "op": "SUB"
    },
    "9937": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "AND",
      "path": "2"
    },
    "9940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20295
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9941": {
      "op": "POP"
    },
    "9942": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20306
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9948": {
      "op": "POP"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9951": {
      "op": "ADD"
    },
    "9952": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9953": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9955": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9957": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9958": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9959": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9960": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "SUB",
      "path": "2"
    },
    "9961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9964": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9965": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9966": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9967": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9968": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9969": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9970": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26FA"
    },
    "9973": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9976": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9978": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9979": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "POP",
      "path": "2"
    },
    "9980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "GAS",
      "path": "2"
    },
    "9981": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "CALL",
      "path": "2"
    },
    "9982": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9983": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270E"
    },
    "9988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9998": {
      "fn": "Governance.submitVerification",
      "offset": [
        20285,
        20352
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9999": {
      "op": "POP"
    },
    "10000": {
      "op": "POP"
    },
    "10001": {
      "op": "POP"
    },
    "10002": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x0"
    },
    "10004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "DUP11",
      "path": "2"
    },
    "10005": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10006": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10017": {
      "op": "POP"
    },
    "10018": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x272B"
    },
    "10021": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10022": {
      "fn": "Governance.submitVerification",
      "offset": [
        20436,
        20450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3587"
    },
    "10026": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20429,
        20450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10028": {
      "op": "POP"
    },
    "10029": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10031": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "ADD",
      "path": "2"
    },
    "10033": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10035": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10041": {
      "op": "NOT"
    },
    "10042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "AND",
      "path": "2"
    },
    "10043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10047": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10050": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "ADD",
      "path": "2"
    },
    "10051": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10052": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10053": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10054": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10056": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10057": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "ADD",
      "path": "2"
    },
    "10058": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10059": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10060": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10061": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10063": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10064": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10065": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "ADD",
      "path": "2"
    },
    "10066": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10067": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "10074": {
      "op": "SHL"
    },
    "10075": {
      "op": "SUB"
    },
    "10076": {
      "op": "NOT"
    },
    "10077": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "AND",
      "path": "2"
    },
    "10078": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20429,
        20450
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10080": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10083": {
      "op": "DUP2"
    },
    "10084": {
      "op": "SWAP1"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10091": {
      "op": "SHL"
    },
    "10092": {
      "op": "SUB"
    },
    "10093": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20554
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10094": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20554
      ],
      "op": "AND",
      "path": "2"
    },
    "10095": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10096": {
      "fn": "Governance.submitVerification",
      "offset": [
        20562,
        20567
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10097": {
      "fn": "Governance.submitVerification",
      "offset": [
        20562,
        20567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10098": {
      "op": "DUP4"
    },
    "10099": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10100": {
      "op": "DUP2"
    },
    "10101": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10102": {
      "fn": "Governance.submitVerification",
      "offset": [
        20562,
        20567
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10103": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20554
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10104": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "GAS",
      "path": "2"
    },
    "10105": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "CALL",
      "path": "2"
    },
    "10106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10108": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10109": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10115": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "EQ",
      "path": "2"
    },
    "10116": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A9"
    },
    "10119": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10120": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10122": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10123": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10124": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10125": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10127": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "NOT",
      "path": "2"
    },
    "10128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "ADD",
      "path": "2"
    },
    "10132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "AND",
      "path": "2"
    },
    "10133": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "ADD",
      "path": "2"
    },
    "10135": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10137": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10138": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10139": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10142": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "ADD",
      "path": "2"
    },
    "10148": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10149": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27AE"
    },
    "10152": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10153": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10154": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10157": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20536,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20503,
        20572
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10161": {
      "fn": "Governance.submitVerification",
      "offset": [
        20503,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20503,
        20572
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20503,
        20572
      ],
      "op": "POP",
      "path": "2"
    },
    "10164": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        20594,
        20598
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 79
    },
    "10165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27D0"
    },
    "10168": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10178": {
      "op": "SHL"
    },
    "10179": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10180": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10181": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10183": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "ADD",
      "path": "2"
    },
    "10184": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "10187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4387"
    },
    "10191": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20586,
        20623
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20623
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0x40"
    },
    "10195": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10196": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20695
      ],
      "op": "CALLER",
      "path": "2"
    },
    "10197": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10198": {
      "fn": "Governance.submitVerification",
      "offset": [
        20708,
        20713
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10199": {
      "fn": "Governance.submitVerification",
      "offset": [
        20708,
        20713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10200": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10202": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10204": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10205": {
      "fn": "Governance.submitVerification",
      "offset": [
        20708,
        20713
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10206": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20695
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10207": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "GAS",
      "path": "2"
    },
    "10208": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "CALL",
      "path": "2"
    },
    "10209": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10210": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "POP",
      "path": "2"
    },
    "10211": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "POP",
      "path": "2"
    },
    "10212": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "POP",
      "path": "2"
    },
    "10213": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10214": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10215": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10217": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "EQ",
      "path": "2"
    },
    "10219": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2810"
    },
    "10222": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10225": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10226": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10227": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "POP",
      "path": "2"
    },
    "10228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10230": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "NOT",
      "path": "2"
    },
    "10231": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10234": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "ADD",
      "path": "2"
    },
    "10235": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "AND",
      "path": "2"
    },
    "10236": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "ADD",
      "path": "2"
    },
    "10238": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10240": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10247": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10249": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10250": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "ADD",
      "path": "2"
    },
    "10251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10252": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2815"
    },
    "10255": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10256": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10260": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "POP",
      "path": "2"
    },
    "10261": {
      "fn": "Governance.submitVerification",
      "offset": [
        20685,
        20718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "fn": "Governance.submitVerification",
      "offset": [
        20670,
        20718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10264": {
      "fn": "Governance.submitVerification",
      "offset": [
        20670,
        20718
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10265": {
      "op": "POP"
    },
    "10266": {
      "fn": "Governance.submitVerification",
      "offset": [
        20670,
        20718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10267": {
      "op": "POP"
    },
    "10268": {
      "fn": "Governance.submitVerification",
      "offset": [
        20670,
        20718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10269": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 81,
      "value": "0x2838"
    },
    "10272": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10273": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10275": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10282": {
      "op": "SHL"
    },
    "10283": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "ADD",
      "path": "2"
    },
    "10288": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "10291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10292": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4387"
    },
    "10295": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20732,
        20769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10296": {
      "fn": "Governance.submitVerification",
      "offset": [
        20732,
        20769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10297": {
      "fn": "Governance.submitVerification",
      "offset": [
        19948,
        20781
      ],
      "op": "POP",
      "path": "2"
    },
    "10298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19948,
        20781
      ],
      "op": "POP",
      "path": "2"
    },
    "10299": {
      "fn": "Governance.submitVerification",
      "offset": [
        19948,
        20781
      ],
      "op": "POP",
      "path": "2"
    },
    "10300": {
      "fn": "Governance.submitVerification",
      "offset": [
        19948,
        20781
      ],
      "op": "POP",
      "path": "2"
    },
    "10301": {
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        22425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BAC"
    },
    "10304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        22425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10305": {
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        22425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10306": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20891
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20901
      ],
      "op": "ADD",
      "path": "2"
    },
    "10311": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10312": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10315": {
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20904
      ],
      "op": "AND",
      "path": "2"
    },
    "10316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20903,
        20904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10318": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        20885,
        20904
      ],
      "op": "SUB",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.submitVerification",
      "offset": [
        20882,
        21093
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2973"
    },
    "10322": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        20882,
        21093
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10323": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20954
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 82,
      "value": "0xFFFF"
    },
    "10326": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20954
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10327": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20954
      ],
      "op": "AND",
      "path": "2"
    },
    "10328": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10331": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20939
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20939
      ],
      "op": "ADD",
      "path": "2"
    },
    "10333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10334": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20990
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x60"
    },
    "10336": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20990
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10337": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20990
      ],
      "op": "ADD",
      "path": "2"
    },
    "10338": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20997
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20972,
        20997
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10343": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 84
    },
    "10344": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10345": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10346": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10348": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10350": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10351": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10353": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10354": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10355": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10356": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10357": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20929
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10358": {
      "fn": "Governance.submitVerification",
      "offset": [
        20923,
        20929
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10359": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10360": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10361": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10362": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2883"
    },
    "10365": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10366": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10367": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4052"
    },
    "10370": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21015,
        21038
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10371": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10372": {
      "op": "POP"
    },
    "10373": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10375": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10376": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10377": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10380": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10381": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10382": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10383": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10384": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10390": {
      "op": "NOT"
    },
    "10391": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10392": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10398": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10399": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10400": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10401": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10402": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10403": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10404": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10406": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10407": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10408": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10409": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10411": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10412": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10413": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10414": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10416": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10417": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10418": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10419": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10421": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10422": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10423": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10424": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "10426": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10427": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10428": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10429": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10431": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10432": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10433": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10434": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10435": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10436": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "10438": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10439": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10440": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10441": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10443": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10444": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10445": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10446": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10448": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10449": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10450": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10451": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10454": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10455": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10456": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10457": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10458": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10461": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10462": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "10463": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "ADD",
      "path": "2"
    },
    "10464": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10465": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10467": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10468": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "10469": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10470": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10475": {
      "op": "NOT"
    },
    "10476": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10477": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10478": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10479": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10480": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10481": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10482": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10483": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10487": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10488": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10489": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10490": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10491": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10492": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MUL",
      "path": "2"
    },
    "10493": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10494": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10495": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10496": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10497": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10507": {
      "op": "SHL"
    },
    "10508": {
      "op": "SUB"
    },
    "10509": {
      "op": "NOT"
    },
    "10510": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10515": {
      "op": "SHL"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10522": {
      "op": "SHL"
    },
    "10523": {
      "op": "SUB"
    },
    "10524": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10525": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10526": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10527": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10528": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10529": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10530": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MUL",
      "path": "2"
    },
    "10531": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10536": {
      "op": "SHL"
    },
    "10537": {
      "op": "NOT"
    },
    "10538": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10539": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10544": {
      "op": "SHL"
    },
    "10545": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10548": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10549": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10550": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10551": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MUL",
      "path": "2"
    },
    "10552": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10553": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10563": {
      "op": "SHL"
    },
    "10564": {
      "op": "NOT"
    },
    "10565": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10570": {
      "op": "SHL"
    },
    "10571": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10572": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10573": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10574": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10575": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MUL",
      "path": "2"
    },
    "10576": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10584": {
      "op": "SHL"
    },
    "10585": {
      "op": "NOT"
    },
    "10586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10588": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10589": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10590": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10595": {
      "op": "SHL"
    },
    "10596": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10597": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10598": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10599": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "AND",
      "path": "2"
    },
    "10600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10601": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10602": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "MUL",
      "path": "2"
    },
    "10604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "OR",
      "path": "2"
    },
    "10605": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10606": {
      "fn": "Governance.submitVerification",
      "offset": [
        21015,
        21038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10609": {
      "op": "SWAP3"
    },
    "10610": {
      "op": "POP"
    },
    "10611": {
      "fn": "Governance.submitVerification",
      "offset": [
        20882,
        21093
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10612": {
      "fn": "Governance.submitVerification",
      "offset": [
        21189,
        21195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10613": {
      "fn": "Governance.submitVerification",
      "offset": [
        21169,
        21175
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10614": {
      "fn": "Governance.submitVerification",
      "offset": [
        21169,
        21187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10616": {
      "fn": "Governance.submitVerification",
      "offset": [
        21169,
        21187
      ],
      "op": "ADD",
      "path": "2"
    },
    "10617": {
      "fn": "Governance.submitVerification",
      "offset": [
        21169,
        21187
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10618": {
      "branch": 172,
      "fn": "Governance.submitVerification",
      "offset": [
        21169,
        21195
      ],
      "op": "SUB",
      "path": "2"
    },
    "10619": {
      "fn": "Governance.submitVerification",
      "offset": [
        21166,
        22415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC6"
    },
    "10622": {
      "branch": 172,
      "fn": "Governance.submitVerification",
      "offset": [
        21166,
        22415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10623": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21245,
        21246
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10627": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21236
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10628": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10630": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21244
      ],
      "op": "ADD",
      "path": "2"
    },
    "10631": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2991"
    },
    "10635": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21246
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4353"
    },
    "10640": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21230,
        21246
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21230,
        21246
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10642": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10644": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10645": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21321,
        21337
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21321,
        21337
      ],
      "op": "ADD",
      "path": "2"
    },
    "10650": {
      "fn": "Governance.submitVerification",
      "offset": [
        21321,
        21337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10651": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10653": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10654": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10661": {
      "op": "SHL"
    },
    "10662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10663": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10664": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10667": {
      "op": "SWAP1"
    },
    "10668": {
      "op": "SWAP2"
    },
    "10669": {
      "op": "AND"
    },
    "10670": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10672": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10673": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ADD",
      "path": "2"
    },
    "10674": {
      "op": "MSTORE"
    },
    "10675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10679": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10681": {
      "op": "SHL"
    },
    "10682": {
      "op": "SUB"
    },
    "10683": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21246
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10684": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10685": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21246
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10686": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21246
      ],
      "op": "AND",
      "path": "2"
    },
    "10687": {
      "fn": "Governance.submitVerification",
      "offset": [
        21214,
        21246
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10688": {
      "op": "POP"
    },
    "10689": {
      "fn": "Governance.submitVerification",
      "offset": [
        21264,
        21291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10691": {
      "fn": "Governance.submitVerification",
      "offset": [
        21264,
        21291
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10698": {
      "op": "SHL"
    },
    "10699": {
      "op": "SUB"
    },
    "10700": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10701": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10702": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "AND",
      "path": "2"
    },
    "10703": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21312
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10704": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21320
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "10709": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10712": {
      "op": "ADD"
    },
    "10713": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10715": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10717": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10718": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10719": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10720": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "SUB",
      "path": "2"
    },
    "10721": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10722": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10723": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "GAS",
      "path": "2"
    },
    "10724": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "10725": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10726": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10727": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10728": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F5"
    },
    "10731": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10732": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10733": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10735": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10736": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10737": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10738": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10740": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10741": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10742": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "POP",
      "path": "2"
    },
    "10743": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "POP",
      "path": "2"
    },
    "10744": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "POP",
      "path": "2"
    },
    "10745": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "POP",
      "path": "2"
    },
    "10746": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10748": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10749": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10750": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10752": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "NOT",
      "path": "2"
    },
    "10753": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10755": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10756": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ADD",
      "path": "2"
    },
    "10757": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "AND",
      "path": "2"
    },
    "10758": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10759": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ADD",
      "path": "2"
    },
    "10760": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10761": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10763": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10764": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "POP",
      "path": "2"
    },
    "10765": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10766": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "ADD",
      "path": "2"
    },
    "10767": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10768": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A19"
    },
    "10771": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10772": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10773": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED8"
    },
    "10776": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21302,
        21338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10777": {
      "fn": "Governance.submitVerification",
      "offset": [
        21302,
        21338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10778": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21368
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x2"
    },
    "10780": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21368
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10781": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10784": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21396
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10785": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21396
      ],
      "op": "ADD",
      "path": "2"
    },
    "10786": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21396
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10787": {
      "fn": "Governance.submitVerification",
      "offset": [
        21398,
        21423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10789": {
      "fn": "Governance.submitVerification",
      "offset": [
        21398,
        21423
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10790": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10792": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10793": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10800": {
      "op": "SHL"
    },
    "10801": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10802": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10803": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10806": {
      "op": "SWAP1"
    },
    "10807": {
      "op": "SWAP3"
    },
    "10808": {
      "op": "AND"
    },
    "10809": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10811": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10812": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "ADD",
      "path": "2"
    },
    "10813": {
      "op": "MSTORE"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10816": {
      "op": "DUP3"
    },
    "10817": {
      "op": "ADD"
    },
    "10818": {
      "op": "MSTORE"
    },
    "10819": {
      "fn": "Governance.submitVerification",
      "offset": [
        21264,
        21339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10820": {
      "fn": "Governance.submitVerification",
      "offset": [
        21264,
        21339
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10821": {
      "op": "POP"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10828": {
      "op": "SHL"
    },
    "10829": {
      "op": "SUB"
    },
    "10830": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21368
      ],
      "op": "AND",
      "path": "2"
    },
    "10831": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10832": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21379
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10837": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10840": {
      "op": "ADD"
    },
    "10841": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10843": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10845": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10846": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10847": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10848": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "SUB",
      "path": "2"
    },
    "10849": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10850": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10852": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10853": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10854": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "10855": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10856": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10857": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10858": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A72"
    },
    "10861": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10862": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10864": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10865": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10866": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10867": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "POP",
      "path": "2"
    },
    "10868": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "GAS",
      "path": "2"
    },
    "10869": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "CALL",
      "path": "2"
    },
    "10870": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10871": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10872": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10873": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A86"
    },
    "10876": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10877": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10878": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10880": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10881": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10882": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10883": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10885": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10886": {
      "fn": "Governance.submitVerification",
      "offset": [
        21358,
        21424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10887": {
      "op": "POP"
    },
    "10888": {
      "op": "POP"
    },
    "10889": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x2"
    },
    "10891": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10892": {
      "fn": "Governance.submitVerification",
      "offset": [
        21472,
        21497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10894": {
      "fn": "Governance.submitVerification",
      "offset": [
        21472,
        21497
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10895": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10897": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10898": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10905": {
      "op": "SHL"
    },
    "10906": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10907": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10908": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10910": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10911": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "ADD",
      "path": "2"
    },
    "10912": {
      "op": "DUP16"
    },
    "10913": {
      "op": "SWAP1"
    },
    "10914": {
      "op": "MSTORE"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10917": {
      "op": "DUP2"
    },
    "10918": {
      "op": "ADD"
    },
    "10919": {
      "op": "SWAP2"
    },
    "10920": {
      "op": "SWAP1"
    },
    "10921": {
      "op": "SWAP2"
    },
    "10922": {
      "op": "MSTORE"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10929": {
      "op": "SHL"
    },
    "10930": {
      "op": "SUB"
    },
    "10931": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10932": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10933": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "AND",
      "path": "2"
    },
    "10934": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21452
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21463
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10941": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21463
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10942": {
      "op": "POP"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10945": {
      "op": "ADD"
    },
    "10946": {
      "fn": "Governance.submitVerification",
      "offset": [
        21442,
        21498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E0"
    },
    "10949": {
      "op": "JUMP"
    },
    "10950": {
      "fn": "Governance.submitVerification",
      "offset": [
        21166,
        22415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10951": {
      "fn": "Governance.submitVerification",
      "offset": [
        22130,
        22144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10953": {
      "fn": "Governance.submitVerification",
      "offset": [
        22130,
        22144
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10954": {
      "fn": "Governance.submitVerification",
      "offset": [
        22130,
        22144
      ],
      "op": "ADD",
      "path": "2"
    },
    "10955": {
      "fn": "Governance.submitVerification",
      "offset": [
        22130,
        22144
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10956": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10958": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 87
    },
    "10959": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10960": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10961": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10963": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10965": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10966": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10968": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10969": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10976": {
      "op": "SHL"
    },
    "10977": {
      "op": "SUB"
    },
    "10978": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10979": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22144
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10980": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22144
      ],
      "op": "AND",
      "path": "2"
    },
    "10981": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22144
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10982": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10983": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF0"
    },
    "10986": {
      "fn": "Governance.submitVerification",
      "offset": [
        22169,
        22183
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10987": {
      "fn": "Governance.submitVerification",
      "offset": [
        22114,
        22127
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10988": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3587"
    },
    "10991": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22162,
        22183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10992": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10993": {
      "op": "POP"
    },
    "10994": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10996": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10997": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "ADD",
      "path": "2"
    },
    "10998": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10999": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11000": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11006": {
      "op": "NOT"
    },
    "11007": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "AND",
      "path": "2"
    },
    "11008": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11009": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11010": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11012": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11014": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11015": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "ADD",
      "path": "2"
    },
    "11016": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11017": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11018": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11019": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11021": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11022": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "ADD",
      "path": "2"
    },
    "11023": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11024": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11025": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11026": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11028": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11029": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11030": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "ADD",
      "path": "2"
    },
    "11031": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11032": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "11039": {
      "op": "SHL"
    },
    "11040": {
      "op": "SUB"
    },
    "11041": {
      "op": "NOT"
    },
    "11042": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "AND",
      "path": "2"
    },
    "11043": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11044": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11045": {
      "fn": "Governance.submitVerification",
      "offset": [
        22162,
        22183
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11046": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B37"
    },
    "11049": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11051": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11058": {
      "op": "SHL"
    },
    "11059": {
      "op": "SUB"
    },
    "11060": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "11061": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11062": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11063": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11070": {
      "op": "SHL"
    },
    "11071": {
      "op": "SUB"
    },
    "11072": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22246
      ],
      "op": "AND",
      "path": "2"
    },
    "11073": {
      "fn": "Governance.submitVerification",
      "offset": [
        22254,
        22259
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11074": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11076": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11077": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11079": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11081": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11082": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11083": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11084": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "SUB",
      "path": "2"
    },
    "11085": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11086": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11087": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11088": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "GAS",
      "path": "2"
    },
    "11089": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "CALL",
      "path": "2"
    },
    "11090": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11091": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11092": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11093": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11094": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11095": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11096": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11098": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11099": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "EQ",
      "path": "2"
    },
    "11100": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B81"
    },
    "11103": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11104": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11106": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11107": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11108": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11109": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11111": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "NOT",
      "path": "2"
    },
    "11112": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "11114": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11115": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "ADD",
      "path": "2"
    },
    "11116": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "AND",
      "path": "2"
    },
    "11117": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11118": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "ADD",
      "path": "2"
    },
    "11119": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11121": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11122": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11123": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11124": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11125": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11126": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11128": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11130": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11131": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "ADD",
      "path": "2"
    },
    "11132": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11133": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B86"
    },
    "11136": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11137": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11138": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11140": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11141": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11142": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11143": {
      "fn": "Governance.submitVerification",
      "offset": [
        22234,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11144": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11145": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11146": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11147": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22264
      ],
      "op": "POP",
      "path": "2"
    },
    "11148": {
      "branch": 173,
      "fn": "Governance.submitVerification",
      "offset": [
        22340,
        22344
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 88
    },
    "11149": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA8"
    },
    "11152": {
      "branch": 173,
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11153": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11155": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11162": {
      "op": "SHL"
    },
    "11163": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11164": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11165": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11167": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "ADD",
      "path": "2"
    },
    "11168": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "11171": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11172": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4387"
    },
    "11175": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22332,
        22369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11176": {
      "fn": "Governance.submitVerification",
      "offset": [
        22332,
        22369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11177": {
      "fn": "Governance.submitVerification",
      "offset": [
        22008,
        22415
      ],
      "op": "POP",
      "path": "2"
    },
    "11178": {
      "fn": "Governance.submitVerification",
      "offset": [
        22008,
        22415
      ],
      "op": "POP",
      "path": "2"
    },
    "11179": {
      "fn": "Governance.submitVerification",
      "offset": [
        22008,
        22415
      ],
      "op": "POP",
      "path": "2"
    },
    "11180": {
      "fn": "Governance.submitVerification",
      "offset": [
        21166,
        22415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11181": {
      "branch": 174,
      "fn": "Governance.submitVerification",
      "offset": [
        22489,
        22503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11182": {
      "fn": "Governance.submitVerification",
      "offset": [
        22486,
        23217
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11183": {
      "fn": "Governance.submitVerification",
      "offset": [
        22486,
        23217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE5"
    },
    "11186": {
      "branch": 174,
      "fn": "Governance.submitVerification",
      "offset": [
        22486,
        23217
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11187": {
      "fn": "Governance.submitVerification",
      "offset": [
        22518,
        22545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11189": {
      "fn": "Governance.submitVerification",
      "offset": [
        22548,
        22597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BCD"
    },
    "11192": {
      "fn": "Governance.submitVerification",
      "offset": [
        22572,
        22596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11194": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11195": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11197": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11198": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11199": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11204": {
      "op": "SHL"
    },
    "11205": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11206": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11207": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "11208": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11209": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11210": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "11211": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11212": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11213": {
      "fn": "Governance.submitVerification",
      "offset": [
        22548,
        22597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11214": {
      "fn": "Governance.submitVerification",
      "offset": [
        22518,
        22597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11215": {
      "fn": "Governance.submitVerification",
      "offset": [
        22518,
        22597
      ],
      "op": "POP",
      "path": "2"
    },
    "11216": {
      "fn": "Governance.submitVerification",
      "offset": [
        22699,
        22708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11218": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11219": {
      "fn": "Governance.submitVerification",
      "offset": [
        22717,
        22736
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11220": {
      "fn": "Governance.submitVerification",
      "offset": [
        22713,
        22714
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11221": {
      "fn": "Governance.submitVerification",
      "offset": [
        22713,
        22736
      ],
      "op": "LT",
      "path": "2"
    },
    "11222": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11223": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C37"
    },
    "11226": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11227": {
      "fn": "Governance.submitVerification",
      "offset": [
        22820,
        22827
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11228": {
      "fn": "Governance.submitVerification",
      "offset": [
        22769,
        22817
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BE6"
    },
    "11231": {
      "fn": "Governance.submitVerification",
      "offset": [
        22789,
        22813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11233": {
      "fn": "Governance.submitVerification",
      "offset": [
        22815,
        22816
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11234": {
      "fn": "Governance.submitVerification",
      "offset": [
        22769,
        22788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3175"
    },
    "11237": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22769,
        22817
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11238": {
      "fn": "Governance.submitVerification",
      "offset": [
        22769,
        22817
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11239": {
      "branch": 175,
      "fn": "Governance.submitVerification",
      "offset": [
        22761,
        22827
      ],
      "op": "SUB",
      "path": "2"
    },
    "11240": {
      "fn": "Governance.submitVerification",
      "offset": [
        22757,
        23161
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C2F"
    },
    "11243": {
      "branch": 175,
      "fn": "Governance.submitVerification",
      "offset": [
        22757,
        23161
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11244": {
      "fn": "Governance.submitVerification",
      "offset": [
        22850,
        22867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11246": {
      "fn": "Governance.submitVerification",
      "offset": [
        22870,
        22921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF7"
    },
    "11249": {
      "fn": "Governance.submitVerification",
      "offset": [
        22896,
        22920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11251": {
      "fn": "Governance.submitVerification",
      "offset": [
        22870,
        22895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B7"
    },
    "11254": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22870,
        22921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11255": {
      "fn": "Governance.submitVerification",
      "offset": [
        22870,
        22921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11256": {
      "fn": "Governance.submitVerification",
      "offset": [
        22850,
        22921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11257": {
      "op": "POP"
    },
    "11258": {
      "fn": "Governance.submitVerification",
      "offset": [
        22946,
        22950
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11259": {
      "branch": 176,
      "fn": "Governance.submitVerification",
      "offset": [
        22946,
        22950
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11260": {
      "fn": "Governance.submitVerification",
      "offset": [
        22943,
        23143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C2D"
    },
    "11263": {
      "branch": 176,
      "fn": "Governance.submitVerification",
      "offset": [
        22943,
        23143
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11264": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23052
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x6"
    },
    "11266": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23097
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11267": {
      "fn": "Governance.submitVerification",
      "offset": [
        23111,
        23120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11268": {
      "fn": "Governance.submitVerification",
      "offset": [
        23111,
        23120
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11269": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11271": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11272": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11274": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11275": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C18"
    },
    "11278": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23106
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11279": {
      "fn": "Governance.submitVerification",
      "offset": [
        23104,
        23105
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11280": {
      "fn": "Governance.submitVerification",
      "offset": [
        23104,
        23105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11281": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11283": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23097
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "11284": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43B5"
    },
    "11287": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        23066,
        23106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11288": {
      "fn": "Governance.submitVerification",
      "offset": [
        23066,
        23106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11289": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11291": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "11292": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11293": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11294": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11296": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11297": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "ADD",
      "path": "2"
    },
    "11298": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11299": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11300": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11301": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11302": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11304": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "ADD",
      "path": "2"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11307": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23108
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11308": {
      "fn": "Governance.submitVerification",
      "offset": [
        23028,
        23120
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11309": {
      "fn": "Governance.submitVerification",
      "offset": [
        22943,
        23143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11310": {
      "fn": "Governance.submitVerification",
      "offset": [
        22828,
        23161
      ],
      "op": "POP",
      "path": "2"
    },
    "11311": {
      "fn": "Governance.submitVerification",
      "offset": [
        22757,
        23161
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11312": {
      "fn": "Governance.submitVerification",
      "offset": [
        23188,
        23191
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x1"
    },
    "11314": {
      "fn": "Governance.submitVerification",
      "offset": [
        23188,
        23191
      ],
      "op": "ADD",
      "path": "2"
    },
    "11315": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BD2"
    },
    "11318": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11319": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11320": {
      "fn": "Governance.submitVerification",
      "offset": [
        22695,
        23207
      ],
      "op": "POP",
      "path": "2"
    },
    "11321": {
      "fn": "Governance.submitVerification",
      "offset": [
        22504,
        23217
      ],
      "op": "POP",
      "path": "2"
    },
    "11322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19112,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19112,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11324": {
      "fn": "Governance.submitVerification",
      "offset": [
        19112,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11325": {
      "fn": "Governance.submitVerification",
      "offset": [
        19112,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19112,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11327": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11328": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11329": {
      "fn": "Governance.submitVerification",
      "offset": [
        19016,
        23224
      ],
      "op": "POP",
      "path": "2"
    },
    "11330": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        19016,
        23224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11332": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11334": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11341": {
      "op": "SHL"
    },
    "11342": {
      "op": "SUB"
    },
    "11343": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "11344": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "11345": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "11346": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C6D"
    },
    "11349": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11350": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11352": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11359": {
      "op": "SHL"
    },
    "11360": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11361": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11362": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11364": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "11365": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100E"
    },
    "11368": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11369": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F2B"
    },
    "11372": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11373": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11380": {
      "op": "SHL"
    },
    "11381": {
      "op": "SUB"
    },
    "11382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 91
    },
    "11383": {
      "branch": 184,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "12"
    },
    "11384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CD2"
    },
    "11387": {
      "branch": 184,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11397": {
      "op": "SHL"
    },
    "11398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "12"
    },
    "11406": {
      "op": "MSTORE"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11411": {
      "op": "DUP3"
    },
    "11412": {
      "op": "ADD"
    },
    "11413": {
      "op": "MSTORE"
    },
    "11414": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11449": {
      "op": "DUP3"
    },
    "11450": {
      "op": "ADD"
    },
    "11451": {
      "op": "MSTORE"
    },
    "11452": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11461": {
      "op": "SHL"
    },
    "11462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11464": {
      "op": "DUP3"
    },
    "11465": {
      "op": "ADD"
    },
    "11466": {
      "op": "MSTORE"
    },
    "11467": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11469": {
      "op": "ADD"
    },
    "11470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100E"
    },
    "11473": {
      "op": "JUMP"
    },
    "11474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 92,
      "value": "0x2CDB"
    },
    "11478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3365"
    },
    "11482": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "12"
    },
    "11485": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11486": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11487": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6743,
        6747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11489": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6759,
        6786
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11490": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6789,
        6838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CFA"
    },
    "11493": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6813,
        6837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11495": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11496": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11498": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11499": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11500": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11503": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11505": {
      "op": "SHL"
    },
    "11506": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11507": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11508": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "11509": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11510": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11511": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "11512": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11513": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11514": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6789,
        6838
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11515": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6759,
        6838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11516": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6759,
        6838
      ],
      "op": "POP",
      "path": "2"
    },
    "11517": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6848,
        6866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D04"
    },
    "11520": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6848,
        6866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3533"
    },
    "11523": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6848,
        6866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11524": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6848,
        6866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11525": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6992,
        7001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11527": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11528": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11529": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7006,
        7007
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11530": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7006,
        7029
      ],
      "op": "LT",
      "path": "2"
    },
    "11531": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11532": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EA3"
    },
    "11535": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11536": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7060
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0xA"
    },
    "11538": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11540": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7069,
        7116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D1E"
    },
    "11543": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7089,
        7113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11545": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7114,
        7115
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11546": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7069,
        7088
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3175"
    },
    "11549": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7069,
        7116
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11550": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7069,
        7116
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11551": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7061,
        7117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11553": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7061,
        7117
      ],
      "op": "SHR",
      "path": "2"
    },
    "11554": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11555": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11556": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11558": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11559": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11560": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11561": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11562": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11564": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11565": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11567": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7055,
        7118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11568": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11570": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11571": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11572": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "11575": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11576": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11578": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11579": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11580": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11581": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11583": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11584": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11585": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11586": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11587": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D4B"
    },
    "11590": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11591": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "11594": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11595": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11596": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11597": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11599": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11600": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11602": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11603": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11604": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11605": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MUL",
      "path": "2"
    },
    "11606": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11608": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11609": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11611": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11612": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11613": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11614": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11615": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11617": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11618": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11619": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11620": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11621": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11622": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11623": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11624": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11625": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11627": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11628": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11629": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11630": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11631": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D77"
    },
    "11634": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11635": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E21"
    },
    "11638": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11639": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11640": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11641": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11642": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC4"
    },
    "11645": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11646": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11647": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11649": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "LT",
      "path": "2"
    },
    "11650": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D99"
    },
    "11653": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11654": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11657": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11658": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11659": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11660": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11661": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MUL",
      "path": "2"
    },
    "11662": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11663": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11664": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11665": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11667": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11668": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11669": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC4"
    },
    "11672": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11673": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11674": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11675": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11676": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11677": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11678": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11680": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11681": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11683": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11685": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11686": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11687": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11688": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11689": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11690": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11691": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11692": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11693": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11695": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11696": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11697": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11699": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11700": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11701": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11702": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "GT",
      "path": "2"
    },
    "11703": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DA7"
    },
    "11706": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11707": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11708": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11709": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SUB",
      "path": "2"
    },
    "11710": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11712": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11713": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11714": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11715": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11716": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11717": {
      "op": "POP"
    },
    "11718": {
      "op": "POP"
    },
    "11719": {
      "op": "POP"
    },
    "11720": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11721": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11722": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11723": {
      "op": "POP"
    },
    "11724": {
      "op": "POP"
    },
    "11725": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11727": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11728": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11729": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11730": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11736": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11737": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11738": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11739": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11741": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11742": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11743": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11744": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11746": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11747": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11748": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11749": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11751": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11752": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11753": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11754": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11756": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11757": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11758": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11759": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11761": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11762": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11763": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11764": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11766": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11767": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11768": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11769": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11770": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11772": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11773": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11774": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "11776": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11777": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11778": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11779": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11782": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11783": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11784": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11785": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11789": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11790": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "11792": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11793": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11794": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11799": {
      "op": "SHL"
    },
    "11800": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11801": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11806": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11808": {
      "op": "SHL"
    },
    "11809": {
      "op": "SUB"
    },
    "11810": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11811": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "11813": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11814": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11815": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11818": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "11820": {
      "op": "SHL"
    },
    "11821": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11822": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11823": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11826": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11827": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11828": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11829": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "11831": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11832": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11833": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11836": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11838": {
      "op": "SHL"
    },
    "11839": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11840": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11841": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11842": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11843": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11844": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11845": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11848": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "11850": {
      "op": "SHL"
    },
    "11851": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11852": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DIV",
      "path": "2"
    },
    "11853": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11854": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "AND",
      "path": "2"
    },
    "11855": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "11858": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11859": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11860": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "11861": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7046,
        7118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11862": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7172
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11863": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7172
      ],
      "op": "ADD",
      "path": "2"
    },
    "11864": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7172
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11865": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7172
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11866": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7172
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11867": {
      "op": "POP"
    },
    "11868": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7175,
        7190
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "11869": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11870": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7190
      ],
      "op": "AND",
      "path": "2"
    },
    "11871": {
      "branch": 177,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7190
      ],
      "op": "LT",
      "path": "2"
    },
    "11872": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11873": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11874": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E76"
    },
    "11877": {
      "branch": 177,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11878": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "POP",
      "path": "2"
    },
    "11879": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7210,
        7216
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11880": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11881": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11883": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7206
      ],
      "op": "ADD",
      "path": "2"
    },
    "11884": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11885": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7216
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11891": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7216
      ],
      "op": "AND",
      "path": "2"
    },
    "11892": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7216
      ],
      "op": "EQ",
      "path": "2"
    },
    "11893": {
      "branch": 178,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7194,
        7216
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11894": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11895": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11896": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11897": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8B"
    },
    "11900": {
      "branch": 178,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11901": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "POP",
      "path": "2"
    },
    "11902": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7239,
        7245
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11903": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7226
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11904": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11907": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7236
      ],
      "op": "ADD",
      "path": "2"
    },
    "11908": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7236
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11909": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11912": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7245
      ],
      "op": "AND",
      "path": "2"
    },
    "11913": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7245
      ],
      "op": "EQ",
      "path": "2"
    },
    "11914": {
      "branch": 179,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7220,
        7245
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11915": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7136,
        7245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11916": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7132,
        7290
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11917": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7132,
        7290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E9B"
    },
    "11920": {
      "branch": 179,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7132,
        7290
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11921": {
      "op": "POP"
    },
    "11922": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7271,
        7275
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x1"
    },
    "11924": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7271,
        7275
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11925": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11926": {
      "op": "POP"
    },
    "11927": {
      "op": "POP"
    },
    "11928": {
      "op": "POP"
    },
    "11929": {
      "op": "POP"
    },
    "11930": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11931": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7132,
        7290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11932": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7313,
        7316
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 95,
      "value": "0x1"
    },
    "11934": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7313,
        7316
      ],
      "op": "ADD",
      "path": "2"
    },
    "11935": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D07"
    },
    "11938": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11939": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6988,
        7328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11940": {
      "op": "POP"
    },
    "11941": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7344,
        7349
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x0"
    },
    "11943": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7344,
        7349
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11944": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6668,
        7356
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11945": {
      "op": "POP"
    },
    "11946": {
      "op": "POP"
    },
    "11947": {
      "op": "POP"
    },
    "11948": {
      "op": "POP"
    },
    "11949": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6668,
        7356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11950": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11951": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10967,
        10976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11953": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11954": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10982,
        10991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11956": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10982,
        10998
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11957": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10980,
        10998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11958": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10980,
        10998
      ],
      "op": "LT",
      "path": "2"
    },
    "11959": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11960": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3047"
    },
    "11963": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11964": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11098,
        11107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11965": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11967": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11968": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11970": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "ADD",
      "path": "2"
    },
    "11971": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ECC"
    },
    "11974": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11975": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11976": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43F6"
    },
    "11979": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11081,
        11108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11980": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11981": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11983": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11984": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11986": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11987": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11988": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "SUB",
      "path": "2"
    },
    "11989": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "SUB",
      "path": "2"
    },
    "11990": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11991": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11992": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11993": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11995": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11081,
        11108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11996": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11997": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11998": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11999": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12001": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "ADD",
      "path": "2"
    },
    "12002": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11071,
        11109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12003": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12005": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11054,
        11055
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12006": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12007": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12008": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12009": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "LT",
      "path": "2"
    },
    "12010": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF5"
    },
    "12013": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12014": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF5"
    },
    "12017": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12020": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11044,
        11056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12021": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12022": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12023": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12025": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12026": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12028": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12030": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12031": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12032": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12034": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "MUL",
      "path": "2"
    },
    "12035": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11056
      ],
      "op": "ADD",
      "path": "2"
    },
    "12036": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12038": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11044,
        11065
      ],
      "op": "ADD",
      "path": "2"
    },
    "12039": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12041": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12042": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12044": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "ADD",
      "path": "2"
    },
    "12045": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F16"
    },
    "12048": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12049": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12050": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4412"
    },
    "12053": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11027,
        11066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12054": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12055": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12057": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12058": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12060": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12061": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12062": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "SUB",
      "path": "2"
    },
    "12063": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "SUB",
      "path": "2"
    },
    "12064": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12065": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12066": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12067": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12069": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11027,
        11066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12070": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12071": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12072": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12073": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12075": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "ADD",
      "path": "2"
    },
    "12076": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12077": {
      "branch": 180,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11017,
        11109
      ],
      "op": "SUB",
      "path": "2"
    },
    "12078": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        12062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303F"
    },
    "12081": {
      "branch": 180,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        12062
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12082": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11192,
        11219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12084": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12086": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11232,
        11233
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12087": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12088": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12089": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12090": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "LT",
      "path": "2"
    },
    "12091": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F46"
    },
    "12094": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12095": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F46"
    },
    "12098": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12101": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11222,
        11234
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12102": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12103": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12104": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12106": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12107": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12109": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12111": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12112": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12113": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12115": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "MUL",
      "path": "2"
    },
    "12116": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11222,
        11234
      ],
      "op": "ADD",
      "path": "2"
    },
    "12117": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11192,
        11234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12118": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11192,
        11234
      ],
      "op": "POP",
      "path": "2"
    },
    "12119": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11252,
        11286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12121": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12123": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11316,
        11317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12125": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12127": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12128": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11315
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12129": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12130": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11315
      ],
      "op": "POP",
      "path": "2"
    },
    "12131": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6C"
    },
    "12134": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11317
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12135": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12136": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4162"
    },
    "12139": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11299,
        11317
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12140": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11299,
        11317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12141": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12142": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12143": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12144": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "LT",
      "path": "2"
    },
    "12145": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F7C"
    },
    "12148": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12149": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F7C"
    },
    "12152": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12155": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11289,
        11318
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12156": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12157": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12158": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12160": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12161": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12163": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12165": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12166": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12167": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12169": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "MUL",
      "path": "2"
    },
    "12170": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11289,
        11318
      ],
      "op": "ADD",
      "path": "2"
    },
    "12171": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11252,
        11318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12172": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11252,
        11318
      ],
      "op": "POP",
      "path": "2"
    },
    "12173": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11447,
        11464
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 97
    },
    "12174": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11434,
        11464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12175": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11434,
        11464
      ],
      "op": "POP",
      "path": "2"
    },
    "12176": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11498
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 98,
      "value": "0x5"
    },
    "12178": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11516,
        11517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12180": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12182": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11515
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12183": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11515
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12184": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12185": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11515
      ],
      "op": "POP",
      "path": "2"
    },
    "12186": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA3"
    },
    "12189": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12190": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12191": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4162"
    },
    "12194": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11499,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12195": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11499,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12196": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12197": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12198": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12199": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "LT",
      "path": "2"
    },
    "12200": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB3"
    },
    "12203": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12204": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB3"
    },
    "12207": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12210": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11489,
        11518
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12211": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12212": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12213": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12215": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12216": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12218": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12220": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12221": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12222": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12224": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "MUL",
      "path": "2"
    },
    "12225": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "ADD",
      "path": "2"
    },
    "12226": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11489,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12228": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12230": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12231": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "ADD",
      "path": "2"
    },
    "12232": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12234": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FD3"
    },
    "12237": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12238": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12239": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3587"
    },
    "12242": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11482,
        11518
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12243": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12244": {
      "op": "POP"
    },
    "12245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12247": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "ADD",
      "path": "2"
    },
    "12248": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12249": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12254": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12256": {
      "op": "SHL"
    },
    "12257": {
      "op": "SUB"
    },
    "12258": {
      "op": "NOT"
    },
    "12259": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "AND",
      "path": "2"
    },
    "12260": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12261": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12262": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12004
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x5"
    },
    "12264": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12021
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12265": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12021
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12266": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF5"
    },
    "12269": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12270": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12272": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11482,
        11518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12273": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4162"
    },
    "12276": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        12005,
        12023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12277": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12005,
        12023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12278": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12279": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12280": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12281": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "LT",
      "path": "2"
    },
    "12282": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3005"
    },
    "12285": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12286": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3005"
    },
    "12289": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12292": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11995,
        12024
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12293": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12294": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12295": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12297": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12298": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12300": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12302": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12303": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12304": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12306": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "MUL",
      "path": "2"
    },
    "12307": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "ADD",
      "path": "2"
    },
    "12308": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11995,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12310": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12312": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12313": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "ADD",
      "path": "2"
    },
    "12314": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12316": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3025"
    },
    "12319": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12320": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12321": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3587"
    },
    "12324": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11988,
        12024
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12325": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12326": {
      "op": "POP"
    },
    "12327": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12329": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "ADD",
      "path": "2"
    },
    "12330": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12331": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12336": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12338": {
      "op": "SHL"
    },
    "12339": {
      "op": "SUB"
    },
    "12340": {
      "op": "NOT"
    },
    "12341": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "AND",
      "path": "2"
    },
    "12342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11988,
        12024
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12344": {
      "op": "POP"
    },
    "12345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12042,
        12047
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 100,
      "value": "0x3047"
    },
    "12348": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12042,
        12047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12349": {
      "op": "POP"
    },
    "12350": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12042,
        12047
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        12062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12352": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12085,
        12088
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x1"
    },
    "12354": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12085,
        12088
      ],
      "op": "ADD",
      "path": "2"
    },
    "12355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB1"
    },
    "12358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12359": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12360": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10963,
        12100
      ],
      "op": "POP",
      "path": "2"
    },
    "12361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10885,
        12106
      ],
      "op": "POP",
      "path": "2"
    },
    "12362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        10885,
        12106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12363": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12364": {
      "fn": "Governance.getVotes",
      "offset": [
        5318,
        5333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12366": {
      "fn": "Governance.getVotes",
      "offset": [
        5366,
        5380
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 102,
      "value": "0x9"
    },
    "12368": {
      "fn": "Governance.getVotes",
      "offset": [
        5366,
        5380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12369": {
      "fn": "Governance.getVotes",
      "offset": [
        5353,
        5363
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12370": {
      "branch": 181,
      "fn": "Governance.getVotes",
      "offset": [
        5353,
        5380
      ],
      "op": "LT",
      "path": "2"
    },
    "12371": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3091"
    },
    "12374": {
      "branch": 181,
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12375": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12377": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12384": {
      "op": "SHL"
    },
    "12385": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12386": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12389": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12391": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12392": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "ADD",
      "path": "2"
    },
    "12393": {
      "op": "MSTORE"
    },
    "12394": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "12396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12398": {
      "op": "DUP3"
    },
    "12399": {
      "op": "ADD"
    },
    "12400": {
      "op": "MSTORE"
    },
    "12401": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "12418": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "12420": {
      "op": "SHL"
    },
    "12421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12423": {
      "op": "DUP3"
    },
    "12424": {
      "op": "ADD"
    },
    "12425": {
      "op": "MSTORE"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12428": {
      "op": "ADD"
    },
    "12429": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100E"
    },
    "12432": {
      "op": "JUMP"
    },
    "12433": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12434": {
      "fn": "Governance.getVotes",
      "offset": [
        5411,
        5436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12436": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12437": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12438": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12439": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "12441": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12443": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12444": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12446": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12447": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5473
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12448": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12450": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5489
      ],
      "op": "ADD",
      "path": "2"
    },
    "12451": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5489
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12452": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12455": {
      "fn": "Governance.getVotes",
      "offset": [
        5452,
        5489
      ],
      "op": "AND",
      "path": "2"
    },
    "12456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12462": {
      "op": "SHL"
    },
    "12463": {
      "op": "SUB"
    },
    "12464": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12465": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "GT",
      "path": "2"
    },
    "12466": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12467": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "12470": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12471": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "12474": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3686"
    },
    "12477": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5439,
        5490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12478": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12479": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12481": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12482": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12483": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12484": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12485": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12486": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12487": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12489": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "MUL",
      "path": "2"
    },
    "12490": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12492": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ADD",
      "path": "2"
    },
    "12493": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12494": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ADD",
      "path": "2"
    },
    "12495": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12497": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12498": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12499": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12500": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E7"
    },
    "12503": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12504": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12505": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12507": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ADD",
      "path": "2"
    },
    "12508": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12510": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12511": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "MUL",
      "path": "2"
    },
    "12512": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12513": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "12514": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12515": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "12516": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "ADD",
      "path": "2"
    },
    "12517": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12518": {
      "op": "POP"
    },
    "12519": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12520": {
      "fn": "Governance.getVotes",
      "offset": [
        5439,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "12521": {
      "fn": "Governance.getVotes",
      "offset": [
        5411,
        5490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12522": {
      "fn": "Governance.getVotes",
      "offset": [
        5411,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "12523": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12525": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12526": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12527": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5538
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12528": {
      "fn": "Governance.getVotes",
      "offset": [
        5519,
        5520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12529": {
      "fn": "Governance.getVotes",
      "offset": [
        5519,
        5538
      ],
      "op": "LT",
      "path": "2"
    },
    "12530": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12531": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316E"
    },
    "12534": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12535": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5582
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 103,
      "value": "0x8"
    },
    "12537": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12539": {
      "fn": "Governance.getVotes",
      "offset": [
        5583,
        5593
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12540": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12541": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12542": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12544": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "ADD",
      "path": "2"
    },
    "12545": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12546": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12547": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12548": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12550": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "ADD",
      "path": "2"
    },
    "12551": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12553": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5594
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12554": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12556": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5600
      ],
      "op": "ADD",
      "path": "2"
    },
    "12557": {
      "fn": "Governance.getVotes",
      "offset": [
        5601,
        5602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12558": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "12560": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12561": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "LT",
      "path": "2"
    },
    "12562": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x311D"
    },
    "12565": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12566": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x311D"
    },
    "12569": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12572": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5573,
        5603
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12573": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12574": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "12576": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12577": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12578": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12579": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "DIV",
      "path": "2"
    },
    "12580": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "ADD",
      "path": "2"
    },
    "12581": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12582": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12583": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "MOD",
      "path": "2"
    },
    "12584": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12586": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "MUL",
      "path": "2"
    },
    "12587": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12588": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12589": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12590": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12593": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "EXP",
      "path": "2"
    },
    "12594": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12595": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "DIV",
      "path": "2"
    },
    "12596": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12599": {
      "fn": "Governance.getVotes",
      "offset": [
        5573,
        5603
      ],
      "op": "AND",
      "path": "2"
    },
    "12600": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12601": {
      "fn": "Governance.getVotes",
      "offset": [
        5568,
        5569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12602": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12603": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12604": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12605": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "LT",
      "path": "2"
    },
    "12606": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3149"
    },
    "12609": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12610": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3149"
    },
    "12613": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12616": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5558,
        5570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12617": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12618": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12621": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12622": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5603
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12623": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5603
      ],
      "op": "AND",
      "path": "2"
    },
    "12624": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12626": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12627": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12628": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "MUL",
      "path": "2"
    },
    "12629": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12630": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12631": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12632": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "ADD",
      "path": "2"
    },
    "12633": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12634": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12635": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5570
      ],
      "op": "ADD",
      "path": "2"
    },
    "12636": {
      "fn": "Governance.getVotes",
      "offset": [
        5558,
        5603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12637": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 104
    },
    "12638": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3166"
    },
    "12641": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12642": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41B0"
    },
    "12645": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5540,
        5543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12646": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12647": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12648": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "POP",
      "path": "2"
    },
    "12649": {
      "fn": "Governance.getVotes",
      "offset": [
        5540,
        5543
      ],
      "op": "POP",
      "path": "2"
    },
    "12650": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30ED"
    },
    "12653": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12654": {
      "fn": "Governance.getVotes",
      "offset": [
        5500,
        5614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12655": {
      "op": "POP"
    },
    "12656": {
      "fn": "Governance.getVotes",
      "offset": [
        5630,
        5639
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 105
    },
    "12657": {
      "fn": "Governance.getVotes",
      "offset": [
        5257,
        5646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12658": {
      "op": "POP"
    },
    "12659": {
      "op": "POP"
    },
    "12660": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        5257,
        5646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12661": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12662": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12664": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12665": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3198"
    },
    "12668": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3184"
    },
    "12671": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12672": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3436"
    },
    "12675": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12676": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12677": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "12678": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12679": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3193"
    },
    "12682": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12683": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12684": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12686": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12687": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43B5"
    },
    "12690": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12691": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12692": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34A4"
    },
    "12695": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12696": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12697": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 106
    },
    "12698": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12699": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12700": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12701": {
      "op": "POP"
    },
    "12702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12704": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12706": {
      "op": "SHL"
    },
    "12707": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12708": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "12709": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12711": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12712": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12713": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12714": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12715": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12716": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12717": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12718": {
      "branch": 182,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "12719": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31CB"
    },
    "12722": {
      "branch": 182,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12723": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12725": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12726": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "12731": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "12733": {
      "op": "SHL"
    },
    "12734": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12735": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12736": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12738": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "12739": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12741": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12742": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12743": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12744": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "12745": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12746": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12747": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12748": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 107,
      "value": "0xF"
    },
    "12750": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12751": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12753": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12754": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12755": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12756": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "12758": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12759": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12760": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12761": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "12762": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12764": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12765": {
      "op": "POP"
    },
    "12766": {
      "op": "POP"
    },
    "12767": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12769": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12770": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "12771": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12772": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12773": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12774": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12775": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12777": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12778": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12779": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 108,
      "value": "0x1"
    },
    "12781": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12782": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "ADD",
      "path": "2"
    },
    "12783": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12784": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12785": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12786": {
      "fn": "Governance._createTaskType",
      "offset": [
        14658,
        14681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12788": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12789": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12790": {
      "fn": "Governance._createTaskType",
      "offset": [
        14710,
        14726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12791": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12792": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12793": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12794": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12795": {
      "fn": "Governance._createTaskType",
      "offset": [
        14684,
        14700
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12796": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12797": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "LT",
      "path": "2"
    },
    "12798": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3209"
    },
    "12801": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12802": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3209"
    },
    "12805": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "12808": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14767,
        14793
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12809": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12810": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12812": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12813": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12814": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12815": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12817": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12818": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12819": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12820": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12822": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12823": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12824": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "MUL",
      "path": "2"
    },
    "12825": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "ADD",
      "path": "2"
    },
    "12826": {
      "fn": "Governance._createTaskType",
      "offset": [
        14767,
        14793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12827": {
      "op": "POP"
    },
    "12828": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14827
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 109,
      "value": "0x1"
    },
    "12830": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12831": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14827
      ],
      "op": "ADD",
      "path": "2"
    },
    "12832": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x322A"
    },
    "12835": {
      "fn": "Governance._createTaskType",
      "offset": [
        14829,
        14838
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12836": {
      "fn": "Governance._createTaskType",
      "offset": [
        14829,
        14838
      ],
      "op": "DUP13",
      "path": "2"
    },
    "12837": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14827
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12838": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41C9"
    },
    "12841": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14807,
        14838
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12842": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14838
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12843": {
      "fn": "Governance._createTaskType",
      "offset": [
        14807,
        14838
      ],
      "op": "POP",
      "path": "2"
    },
    "12844": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14878
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 110,
      "value": "0x0"
    },
    "12846": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12847": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12849": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14870
      ],
      "op": "ADD",
      "path": "2"
    },
    "12850": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12852": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12855": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "EXP",
      "path": "2"
    },
    "12856": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12857": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12858": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12859": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12861": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "MUL",
      "path": "2"
    },
    "12862": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "NOT",
      "path": "2"
    },
    "12863": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "AND",
      "path": "2"
    },
    "12864": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12865": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12866": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12867": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12868": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "MUL",
      "path": "2"
    },
    "12869": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "OR",
      "path": "2"
    },
    "12870": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12871": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12872": {
      "fn": "Governance._createTaskType",
      "offset": [
        14852,
        14878
      ],
      "op": "POP",
      "path": "2"
    },
    "12873": {
      "fn": "Governance._createTaskType",
      "offset": [
        14917,
        14928
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 111
    },
    "12874": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14903
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12875": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12877": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14914
      ],
      "op": "ADD",
      "path": "2"
    },
    "12878": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12880": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12883": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "EXP",
      "path": "2"
    },
    "12884": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12885": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12886": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12887": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12893": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "MUL",
      "path": "2"
    },
    "12894": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "NOT",
      "path": "2"
    },
    "12895": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "AND",
      "path": "2"
    },
    "12896": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12897": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12898": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12904": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "AND",
      "path": "2"
    },
    "12905": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "MUL",
      "path": "2"
    },
    "12906": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "OR",
      "path": "2"
    },
    "12907": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12908": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12909": {
      "fn": "Governance._createTaskType",
      "offset": [
        14892,
        14928
      ],
      "op": "POP",
      "path": "2"
    },
    "12910": {
      "fn": "Governance._createTaskType",
      "offset": [
        14972,
        14988
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 112
    },
    "12911": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12912": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12914": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14969
      ],
      "op": "ADD",
      "path": "2"
    },
    "12915": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "12917": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12920": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "EXP",
      "path": "2"
    },
    "12921": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12922": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12923": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12924": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12926": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "MUL",
      "path": "2"
    },
    "12927": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "NOT",
      "path": "2"
    },
    "12928": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "AND",
      "path": "2"
    },
    "12929": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12930": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12931": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12933": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "AND",
      "path": "2"
    },
    "12934": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "MUL",
      "path": "2"
    },
    "12935": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "OR",
      "path": "2"
    },
    "12936": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12937": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12938": {
      "fn": "Governance._createTaskType",
      "offset": [
        14942,
        14988
      ],
      "op": "POP",
      "path": "2"
    },
    "12939": {
      "fn": "Governance._createTaskType",
      "offset": [
        15026,
        15036
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 113
    },
    "12940": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12941": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12943": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15023
      ],
      "op": "ADD",
      "path": "2"
    },
    "12944": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "12946": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12949": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "EXP",
      "path": "2"
    },
    "12950": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12951": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12952": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12953": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12957": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "MUL",
      "path": "2"
    },
    "12958": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "NOT",
      "path": "2"
    },
    "12959": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "AND",
      "path": "2"
    },
    "12960": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12961": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12962": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12966": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "AND",
      "path": "2"
    },
    "12967": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "MUL",
      "path": "2"
    },
    "12968": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "OR",
      "path": "2"
    },
    "12969": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12970": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12971": {
      "fn": "Governance._createTaskType",
      "offset": [
        15002,
        15036
      ],
      "op": "POP",
      "path": "2"
    },
    "12972": {
      "fn": "Governance._createTaskType",
      "offset": [
        15077,
        15090
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 114
    },
    "12973": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15061
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12974": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12976": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15074
      ],
      "op": "ADD",
      "path": "2"
    },
    "12977": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "12979": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12982": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "EXP",
      "path": "2"
    },
    "12983": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12984": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12985": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12986": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12992": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "MUL",
      "path": "2"
    },
    "12993": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "NOT",
      "path": "2"
    },
    "12994": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "AND",
      "path": "2"
    },
    "12995": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12996": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12997": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "13003": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "AND",
      "path": "2"
    },
    "13004": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "MUL",
      "path": "2"
    },
    "13005": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "OR",
      "path": "2"
    },
    "13006": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13007": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13008": {
      "fn": "Governance._createTaskType",
      "offset": [
        15050,
        15090
      ],
      "op": "POP",
      "path": "2"
    },
    "13009": {
      "fn": "Governance._createTaskType",
      "offset": [
        15131,
        15144
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 115
    },
    "13010": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13011": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13013": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15128
      ],
      "op": "ADD",
      "path": "2"
    },
    "13014": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "13016": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "13019": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "EXP",
      "path": "2"
    },
    "13020": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13021": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13022": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13023": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "13029": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "MUL",
      "path": "2"
    },
    "13030": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "NOT",
      "path": "2"
    },
    "13031": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "AND",
      "path": "2"
    },
    "13032": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13033": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13034": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "13040": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "AND",
      "path": "2"
    },
    "13041": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "MUL",
      "path": "2"
    },
    "13042": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "OR",
      "path": "2"
    },
    "13043": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13044": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13045": {
      "fn": "Governance._createTaskType",
      "offset": [
        15104,
        15144
      ],
      "op": "POP",
      "path": "2"
    },
    "13046": {
      "fn": "Governance._createTaskType",
      "offset": [
        15187,
        15202
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 116
    },
    "13047": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15169
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13048": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13050": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15184
      ],
      "op": "ADD",
      "path": "2"
    },
    "13051": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "13053": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "13056": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "EXP",
      "path": "2"
    },
    "13057": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13058": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13059": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13060": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "13063": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "MUL",
      "path": "2"
    },
    "13064": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "NOT",
      "path": "2"
    },
    "13065": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "AND",
      "path": "2"
    },
    "13066": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13067": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13068": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "13071": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "AND",
      "path": "2"
    },
    "13072": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "MUL",
      "path": "2"
    },
    "13073": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "OR",
      "path": "2"
    },
    "13074": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13075": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13076": {
      "fn": "Governance._createTaskType",
      "offset": [
        15158,
        15202
      ],
      "op": "POP",
      "path": "2"
    },
    "13077": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 117,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "13110": {
      "fn": "Governance._createTaskType",
      "offset": [
        15267,
        15276
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13111": {
      "fn": "Governance._createTaskType",
      "offset": [
        15267,
        15276
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13112": {
      "fn": "Governance._createTaskType",
      "offset": [
        15278,
        15289
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13113": {
      "fn": "Governance._createTaskType",
      "offset": [
        15291,
        15307
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13114": {
      "fn": "Governance._createTaskType",
      "offset": [
        15309,
        15319
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13115": {
      "fn": "Governance._createTaskType",
      "offset": [
        15321,
        15334
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13116": {
      "fn": "Governance._createTaskType",
      "offset": [
        15336,
        15349
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13117": {
      "fn": "Governance._createTaskType",
      "offset": [
        15351,
        15366
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13118": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13120": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13121": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3351"
    },
    "13124": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "13125": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "13126": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13127": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13128": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13129": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13130": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13131": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13132": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13133": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4484"
    },
    "13136": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        15248,
        15367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13137": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13138": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13140": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13141": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13142": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13143": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SUB",
      "path": "2"
    },
    "13144": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13145": {
      "fn": "Governance._createTaskType",
      "offset": [
        15248,
        15367
      ],
      "op": "LOG1",
      "path": "2"
    },
    "13146": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13147": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13148": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13149": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13150": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13151": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13152": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13153": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13154": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13155": {
      "fn": "Governance._createTaskType",
      "offset": [
        14443,
        15374
      ],
      "op": "POP",
      "path": "2"
    },
    "13156": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        14443,
        15374
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13157": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13158": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13160": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13161": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13168": {
      "op": "SHL"
    },
    "13169": {
      "op": "SUB"
    },
    "13170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 118
    },
    "13171": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13172": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "13173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13179": {
      "op": "SHL"
    },
    "13180": {
      "op": "SUB"
    },
    "13181": {
      "op": "NOT"
    },
    "13182": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13183": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "13184": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13185": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "12"
    },
    "13186": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13187": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "13188": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "13189": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 119,
      "value": "0x40"
    },
    "13191": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13192": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13193": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "12"
    },
    "13194": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13195": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13196": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13197": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13198": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "13231": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13232": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13234": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13235": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "12"
    },
    "13236": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "13237": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "13238": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13239": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13240": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3351,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13242": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 120,
      "value": "0x33D2"
    },
    "13245": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3386,
        3391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13246": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 121
    },
    "13247": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "13249": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13250": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13251": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13256": {
      "op": "SHL"
    },
    "13257": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13258": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13259": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "DIV",
      "path": "1"
    },
    "13260": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13261": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13262": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SGT",
      "path": "1"
    },
    "13263": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13264": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13265": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5777,
        5899
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13266": {
      "branch": 183,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13267": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13268": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33F0"
    },
    "13271": {
      "branch": 183,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13272": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13274": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13275": {
      "op": "PUSH4",
      "value": "0x1ED95095"
    },
    "13280": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13282": {
      "op": "SHL"
    },
    "13283": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13284": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13285": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13287": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "ADD",
      "path": "1"
    },
    "13288": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13290": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13291": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13292": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13293": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SUB",
      "path": "1"
    },
    "13294": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13295": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "REVERT",
      "path": "1"
    },
    "13296": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13297": {
      "op": "POP"
    },
    "13298": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13299": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13300": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "13302": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13303": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3418,
        3435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13305": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 122
    },
    "13306": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13307": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13308": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "13310": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13311": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13312": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "ADD",
      "path": "1"
    },
    "13313": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13315": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13316": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13318": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13319": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13320": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13321": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13322": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 123
    },
    "13323": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13324": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13325": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 124
    },
    "13326": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13327": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13344": {
      "op": "NOT"
    },
    "13345": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "13346": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13347": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "ADD",
      "path": "1"
    },
    "13348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13352": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13354": {
      "op": "SHL"
    },
    "13355": {
      "op": "SUB"
    },
    "13356": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "13357": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13358": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13359": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13360": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "OR",
      "path": "1"
    },
    "13361": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13362": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13363": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13364": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13365": {
      "fn": "DoubleEndedQueue.popFront",
      "jump": "o",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13366": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13367": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13375": {
      "op": "SHL"
    },
    "13376": {
      "op": "SUB"
    },
    "13377": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 125
    },
    "13378": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "13379": {
      "branch": 185,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13380": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A0"
    },
    "13383": {
      "branch": 185,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13384": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13386": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13393": {
      "op": "SHL"
    },
    "13394": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13395": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13398": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13400": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13401": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "13402": {
      "op": "MSTORE"
    },
    "13403": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13405": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13407": {
      "op": "DUP3"
    },
    "13408": {
      "op": "ADD"
    },
    "13409": {
      "op": "MSTORE"
    },
    "13410": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "13443": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13445": {
      "op": "DUP3"
    },
    "13446": {
      "op": "ADD"
    },
    "13447": {
      "op": "MSTORE"
    },
    "13448": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13459": {
      "op": "SHL"
    },
    "13460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13462": {
      "op": "DUP3"
    },
    "13463": {
      "op": "ADD"
    },
    "13464": {
      "op": "MSTORE"
    },
    "13465": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13467": {
      "op": "ADD"
    },
    "13468": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100E"
    },
    "13471": {
      "op": "JUMP"
    },
    "13472": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13473": {
      "op": "POP"
    },
    "13474": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 126
    },
    "13475": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13476": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13477": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13479": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13496": {
      "op": "NOT"
    },
    "13497": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 127
    },
    "13498": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "13499": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13500": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13501": {
      "branch": 186,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13502": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D7"
    },
    "13505": {
      "branch": 186,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13506": {
      "op": "POP"
    },
    "13507": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13524": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13525": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "13526": {
      "branch": 187,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13527": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13528": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A0"
    },
    "13531": {
      "branch": 187,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13532": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13534": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13535": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13539": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13541": {
      "op": "SHL"
    },
    "13542": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13543": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13546": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13548": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13549": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "13550": {
      "op": "MSTORE"
    },
    "13551": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13555": {
      "op": "DUP3"
    },
    "13556": {
      "op": "ADD"
    },
    "13557": {
      "op": "MSTORE"
    },
    "13558": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "13591": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13593": {
      "op": "DUP3"
    },
    "13594": {
      "op": "ADD"
    },
    "13595": {
      "op": "MSTORE"
    },
    "13596": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "13604": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "13606": {
      "op": "SHL"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13609": {
      "op": "DUP3"
    },
    "13610": {
      "op": "ADD"
    },
    "13611": {
      "op": "MSTORE"
    },
    "13612": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13614": {
      "op": "ADD"
    },
    "13615": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100E"
    },
    "13618": {
      "op": "JUMP"
    },
    "13619": {
      "op": "JUMPDEST"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13622": {
      "op": "DUP1"
    },
    "13623": {
      "op": "MLOAD"
    },
    "13624": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13627": {
      "op": "DUP2"
    },
    "13628": {
      "op": "ADD"
    },
    "13629": {
      "op": "DUP3"
    },
    "13630": {
      "op": "MSTORE"
    },
    "13631": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13633": {
      "op": "DUP1"
    },
    "13634": {
      "op": "DUP3"
    },
    "13635": {
      "op": "MSTORE"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13640": {
      "op": "DUP4"
    },
    "13641": {
      "op": "ADD"
    },
    "13642": {
      "op": "DUP2"
    },
    "13643": {
      "op": "SWAP1"
    },
    "13644": {
      "op": "MSTORE"
    },
    "13645": {
      "op": "SWAP3"
    },
    "13646": {
      "op": "DUP3"
    },
    "13647": {
      "op": "ADD"
    },
    "13648": {
      "op": "DUP4"
    },
    "13649": {
      "op": "SWAP1"
    },
    "13650": {
      "op": "MSTORE"
    },
    "13651": {
      "op": "DUP2"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "DUP3"
    },
    "13654": {
      "op": "SWAP1"
    },
    "13655": {
      "op": "MSTORE"
    },
    "13656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13658": {
      "op": "DUP2"
    },
    "13659": {
      "op": "ADD"
    },
    "13660": {
      "op": "DUP3"
    },
    "13661": {
      "op": "SWAP1"
    },
    "13662": {
      "op": "MSTORE"
    },
    "13663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13665": {
      "op": "DUP2"
    },
    "13666": {
      "op": "ADD"
    },
    "13667": {
      "op": "DUP3"
    },
    "13668": {
      "op": "SWAP1"
    },
    "13669": {
      "op": "MSTORE"
    },
    "13670": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13672": {
      "op": "DUP2"
    },
    "13673": {
      "op": "ADD"
    },
    "13674": {
      "op": "DUP3"
    },
    "13675": {
      "op": "SWAP1"
    },
    "13676": {
      "op": "MSTORE"
    },
    "13677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13679": {
      "op": "DUP2"
    },
    "13680": {
      "op": "ADD"
    },
    "13681": {
      "op": "DUP3"
    },
    "13682": {
      "op": "SWAP1"
    },
    "13683": {
      "op": "MSTORE"
    },
    "13684": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13687": {
      "op": "DUP2"
    },
    "13688": {
      "op": "ADD"
    },
    "13689": {
      "op": "DUP3"
    },
    "13690": {
      "op": "SWAP1"
    },
    "13691": {
      "op": "MSTORE"
    },
    "13692": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13695": {
      "op": "DUP2"
    },
    "13696": {
      "op": "ADD"
    },
    "13697": {
      "op": "SWAP2"
    },
    "13698": {
      "op": "SWAP1"
    },
    "13699": {
      "op": "SWAP2"
    },
    "13700": {
      "op": "MSTORE"
    },
    "13701": {
      "op": "SWAP1"
    },
    "13702": {
      "jump": "o",
      "op": "JUMP"
    },
    "13703": {
      "op": "JUMPDEST"
    },
    "13704": {
      "op": "POP"
    },
    "13705": {
      "op": "DUP1"
    },
    "13706": {
      "op": "SLOAD"
    },
    "13707": {
      "op": "PUSH2",
      "value": "0x3593"
    },
    "13710": {
      "op": "SWAP1"
    },
    "13711": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "13714": {
      "jump": "i",
      "op": "JUMP"
    },
    "13715": {
      "op": "JUMPDEST"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13718": {
      "op": "DUP3"
    },
    "13719": {
      "op": "SSTORE"
    },
    "13720": {
      "op": "DUP1"
    },
    "13721": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13723": {
      "op": "LT"
    },
    "13724": {
      "op": "PUSH2",
      "value": "0x35A3"
    },
    "13727": {
      "op": "JUMPI"
    },
    "13728": {
      "op": "POP"
    },
    "13729": {
      "op": "POP"
    },
    "13730": {
      "jump": "o",
      "op": "JUMP"
    },
    "13731": {
      "op": "JUMPDEST"
    },
    "13732": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13734": {
      "op": "ADD"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13737": {
      "op": "SWAP1"
    },
    "13738": {
      "op": "DIV"
    },
    "13739": {
      "op": "SWAP1"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13742": {
      "op": "MSTORE"
    },
    "13743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13747": {
      "op": "KECCAK256"
    },
    "13748": {
      "op": "SWAP1"
    },
    "13749": {
      "op": "DUP2"
    },
    "13750": {
      "op": "ADD"
    },
    "13751": {
      "op": "SWAP1"
    },
    "13752": {
      "op": "PUSH2",
      "value": "0x2CDB"
    },
    "13755": {
      "op": "SWAP2"
    },
    "13756": {
      "op": "SWAP1"
    },
    "13757": {
      "op": "JUMPDEST"
    },
    "13758": {
      "op": "DUP1"
    },
    "13759": {
      "op": "DUP3"
    },
    "13760": {
      "op": "GT"
    },
    "13761": {
      "op": "ISZERO"
    },
    "13762": {
      "op": "PUSH2",
      "value": "0x34A0"
    },
    "13765": {
      "op": "JUMPI"
    },
    "13766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13768": {
      "op": "DUP2"
    },
    "13769": {
      "op": "SSTORE"
    },
    "13770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13772": {
      "op": "ADD"
    },
    "13773": {
      "op": "PUSH2",
      "value": "0x35BD"
    },
    "13776": {
      "op": "JUMP"
    },
    "13777": {
      "op": "JUMPDEST"
    },
    "13778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13782": {
      "op": "DUP3"
    },
    "13783": {
      "op": "DUP5"
    },
    "13784": {
      "op": "SUB"
    },
    "13785": {
      "op": "SLT"
    },
    "13786": {
      "op": "ISZERO"
    },
    "13787": {
      "op": "PUSH2",
      "value": "0x35E3"
    },
    "13790": {
      "op": "JUMPI"
    },
    "13791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13793": {
      "op": "DUP1"
    },
    "13794": {
      "op": "REVERT"
    },
    "13795": {
      "op": "JUMPDEST"
    },
    "13796": {
      "op": "POP"
    },
    "13797": {
      "op": "CALLDATALOAD"
    },
    "13798": {
      "op": "SWAP2"
    },
    "13799": {
      "op": "SWAP1"
    },
    "13800": {
      "op": "POP"
    },
    "13801": {
      "jump": "o",
      "op": "JUMP"
    },
    "13802": {
      "op": "JUMPDEST"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13805": {
      "op": "JUMPDEST"
    },
    "13806": {
      "op": "DUP4"
    },
    "13807": {
      "op": "DUP2"
    },
    "13808": {
      "op": "LT"
    },
    "13809": {
      "op": "ISZERO"
    },
    "13810": {
      "op": "PUSH2",
      "value": "0x3605"
    },
    "13813": {
      "op": "JUMPI"
    },
    "13814": {
      "op": "DUP2"
    },
    "13815": {
      "op": "DUP2"
    },
    "13816": {
      "op": "ADD"
    },
    "13817": {
      "op": "MLOAD"
    },
    "13818": {
      "op": "DUP4"
    },
    "13819": {
      "op": "DUP3"
    },
    "13820": {
      "op": "ADD"
    },
    "13821": {
      "op": "MSTORE"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13824": {
      "op": "ADD"
    },
    "13825": {
      "op": "PUSH2",
      "value": "0x35ED"
    },
    "13828": {
      "op": "JUMP"
    },
    "13829": {
      "op": "JUMPDEST"
    },
    "13830": {
      "op": "DUP4"
    },
    "13831": {
      "op": "DUP2"
    },
    "13832": {
      "op": "GT"
    },
    "13833": {
      "op": "ISZERO"
    },
    "13834": {
      "op": "PUSH2",
      "value": "0x1523"
    },
    "13837": {
      "op": "JUMPI"
    },
    "13838": {
      "op": "POP"
    },
    "13839": {
      "op": "POP"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13842": {
      "op": "SWAP2"
    },
    "13843": {
      "op": "ADD"
    },
    "13844": {
      "op": "MSTORE"
    },
    "13845": {
      "jump": "o",
      "op": "JUMP"
    },
    "13846": {
      "op": "JUMPDEST"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13849": {
      "op": "DUP2"
    },
    "13850": {
      "op": "MLOAD"
    },
    "13851": {
      "op": "DUP1"
    },
    "13852": {
      "op": "DUP5"
    },
    "13853": {
      "op": "MSTORE"
    },
    "13854": {
      "op": "PUSH2",
      "value": "0x362E"
    },
    "13857": {
      "op": "DUP2"
    },
    "13858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13860": {
      "op": "DUP7"
    },
    "13861": {
      "op": "ADD"
    },
    "13862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13864": {
      "op": "DUP7"
    },
    "13865": {
      "op": "ADD"
    },
    "13866": {
      "op": "PUSH2",
      "value": "0x35EA"
    },
    "13869": {
      "jump": "i",
      "op": "JUMP"
    },
    "13870": {
      "op": "JUMPDEST"
    },
    "13871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13873": {
      "op": "ADD"
    },
    "13874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13876": {
      "op": "NOT"
    },
    "13877": {
      "op": "AND"
    },
    "13878": {
      "op": "SWAP3"
    },
    "13879": {
      "op": "SWAP1"
    },
    "13880": {
      "op": "SWAP3"
    },
    "13881": {
      "op": "ADD"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13884": {
      "op": "ADD"
    },
    "13885": {
      "op": "SWAP3"
    },
    "13886": {
      "op": "SWAP2"
    },
    "13887": {
      "op": "POP"
    },
    "13888": {
      "op": "POP"
    },
    "13889": {
      "jump": "o",
      "op": "JUMP"
    },
    "13890": {
      "op": "JUMPDEST"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13893": {
      "op": "DUP2"
    },
    "13894": {
      "op": "MSTORE"
    },
    "13895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13897": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13902": {
      "op": "DUP4"
    },
    "13903": {
      "op": "ADD"
    },
    "13904": {
      "op": "DUP9"
    },
    "13905": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "13908": {
      "jump": "i",
      "op": "JUMP"
    },
    "13909": {
      "op": "JUMPDEST"
    },
    "13910": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13913": {
      "op": "SWAP7"
    },
    "13914": {
      "op": "SWAP1"
    },
    "13915": {
      "op": "SWAP7"
    },
    "13916": {
      "op": "AND"
    },
    "13917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13919": {
      "op": "DUP4"
    },
    "13920": {
      "op": "ADD"
    },
    "13921": {
      "op": "MSTORE"
    },
    "13922": {
      "op": "POP"
    },
    "13923": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13929": {
      "op": "SWAP4"
    },
    "13930": {
      "op": "DUP5"
    },
    "13931": {
      "op": "AND"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13934": {
      "op": "DUP3"
    },
    "13935": {
      "op": "ADD"
    },
    "13936": {
      "op": "MSTORE"
    },
    "13937": {
      "op": "SWAP2"
    },
    "13938": {
      "op": "DUP4"
    },
    "13939": {
      "op": "AND"
    },
    "13940": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13942": {
      "op": "DUP4"
    },
    "13943": {
      "op": "ADD"
    },
    "13944": {
      "op": "MSTORE"
    },
    "13945": {
      "op": "SWAP1"
    },
    "13946": {
      "op": "SWAP2"
    },
    "13947": {
      "op": "AND"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13950": {
      "op": "SWAP1"
    },
    "13951": {
      "op": "SWAP2"
    },
    "13952": {
      "op": "ADD"
    },
    "13953": {
      "op": "MSTORE"
    },
    "13954": {
      "op": "SWAP2"
    },
    "13955": {
      "op": "SWAP1"
    },
    "13956": {
      "op": "POP"
    },
    "13957": {
      "jump": "o",
      "op": "JUMP"
    },
    "13958": {
      "op": "JUMPDEST"
    },
    "13959": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13966": {
      "op": "SHL"
    },
    "13967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13969": {
      "op": "MSTORE"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13972": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13974": {
      "op": "MSTORE"
    },
    "13975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13979": {
      "op": "REVERT"
    },
    "13980": {
      "op": "JUMPDEST"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13983": {
      "op": "MLOAD"
    },
    "13984": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13986": {
      "op": "DUP3"
    },
    "13987": {
      "op": "ADD"
    },
    "13988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13990": {
      "op": "NOT"
    },
    "13991": {
      "op": "AND"
    },
    "13992": {
      "op": "DUP2"
    },
    "13993": {
      "op": "ADD"
    },
    "13994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14000": {
      "op": "SHL"
    },
    "14001": {
      "op": "SUB"
    },
    "14002": {
      "op": "DUP2"
    },
    "14003": {
      "op": "GT"
    },
    "14004": {
      "op": "DUP3"
    },
    "14005": {
      "op": "DUP3"
    },
    "14006": {
      "op": "LT"
    },
    "14007": {
      "op": "OR"
    },
    "14008": {
      "op": "ISZERO"
    },
    "14009": {
      "op": "PUSH2",
      "value": "0x36C4"
    },
    "14012": {
      "op": "JUMPI"
    },
    "14013": {
      "op": "PUSH2",
      "value": "0x36C4"
    },
    "14016": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "14019": {
      "jump": "i",
      "op": "JUMP"
    },
    "14020": {
      "op": "JUMPDEST"
    },
    "14021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14023": {
      "op": "MSTORE"
    },
    "14024": {
      "op": "SWAP2"
    },
    "14025": {
      "op": "SWAP1"
    },
    "14026": {
      "op": "POP"
    },
    "14027": {
      "jump": "o",
      "op": "JUMP"
    },
    "14028": {
      "op": "JUMPDEST"
    },
    "14029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14031": {
      "op": "DUP3"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14034": {
      "op": "DUP4"
    },
    "14035": {
      "op": "ADD"
    },
    "14036": {
      "op": "SLT"
    },
    "14037": {
      "op": "PUSH2",
      "value": "0x36DD"
    },
    "14040": {
      "op": "JUMPI"
    },
    "14041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14043": {
      "op": "DUP1"
    },
    "14044": {
      "op": "REVERT"
    },
    "14045": {
      "op": "JUMPDEST"
    },
    "14046": {
      "op": "DUP2"
    },
    "14047": {
      "op": "CALLDATALOAD"
    },
    "14048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14056": {
      "op": "SHL"
    },
    "14057": {
      "op": "SUB"
    },
    "14058": {
      "op": "DUP3"
    },
    "14059": {
      "op": "GT"
    },
    "14060": {
      "op": "ISZERO"
    },
    "14061": {
      "op": "PUSH2",
      "value": "0x36F8"
    },
    "14064": {
      "op": "JUMPI"
    },
    "14065": {
      "op": "PUSH2",
      "value": "0x36F8"
    },
    "14068": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "14071": {
      "jump": "i",
      "op": "JUMP"
    },
    "14072": {
      "op": "JUMPDEST"
    },
    "14073": {
      "op": "DUP2"
    },
    "14074": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14076": {
      "op": "SHL"
    },
    "14077": {
      "op": "PUSH2",
      "value": "0x3707"
    },
    "14080": {
      "op": "DUP3"
    },
    "14081": {
      "op": "DUP3"
    },
    "14082": {
      "op": "ADD"
    },
    "14083": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "14086": {
      "jump": "i",
      "op": "JUMP"
    },
    "14087": {
      "op": "JUMPDEST"
    },
    "14088": {
      "op": "SWAP3"
    },
    "14089": {
      "op": "DUP4"
    },
    "14090": {
      "op": "MSTORE"
    },
    "14091": {
      "op": "DUP5"
    },
    "14092": {
      "op": "DUP2"
    },
    "14093": {
      "op": "ADD"
    },
    "14094": {
      "op": "DUP3"
    },
    "14095": {
      "op": "ADD"
    },
    "14096": {
      "op": "SWAP3"
    },
    "14097": {
      "op": "DUP3"
    },
    "14098": {
      "op": "DUP2"
    },
    "14099": {
      "op": "ADD"
    },
    "14100": {
      "op": "SWAP1"
    },
    "14101": {
      "op": "DUP8"
    },
    "14102": {
      "op": "DUP6"
    },
    "14103": {
      "op": "GT"
    },
    "14104": {
      "op": "ISZERO"
    },
    "14105": {
      "op": "PUSH2",
      "value": "0x3721"
    },
    "14108": {
      "op": "JUMPI"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14111": {
      "op": "DUP1"
    },
    "14112": {
      "op": "REVERT"
    },
    "14113": {
      "op": "JUMPDEST"
    },
    "14114": {
      "op": "DUP4"
    },
    "14115": {
      "op": "DUP8"
    },
    "14116": {
      "op": "ADD"
    },
    "14117": {
      "op": "SWAP3"
    },
    "14118": {
      "op": "POP"
    },
    "14119": {
      "op": "JUMPDEST"
    },
    "14120": {
      "op": "DUP5"
    },
    "14121": {
      "op": "DUP4"
    },
    "14122": {
      "op": "LT"
    },
    "14123": {
      "op": "ISZERO"
    },
    "14124": {
      "op": "PUSH2",
      "value": "0x3740"
    },
    "14127": {
      "op": "JUMPI"
    },
    "14128": {
      "op": "DUP3"
    },
    "14129": {
      "op": "CALLDATALOAD"
    },
    "14130": {
      "op": "DUP3"
    },
    "14131": {
      "op": "MSTORE"
    },
    "14132": {
      "op": "SWAP2"
    },
    "14133": {
      "op": "DUP4"
    },
    "14134": {
      "op": "ADD"
    },
    "14135": {
      "op": "SWAP2"
    },
    "14136": {
      "op": "SWAP1"
    },
    "14137": {
      "op": "DUP4"
    },
    "14138": {
      "op": "ADD"
    },
    "14139": {
      "op": "SWAP1"
    },
    "14140": {
      "op": "PUSH2",
      "value": "0x3727"
    },
    "14143": {
      "op": "JUMP"
    },
    "14144": {
      "op": "JUMPDEST"
    },
    "14145": {
      "op": "SWAP8"
    },
    "14146": {
      "op": "SWAP7"
    },
    "14147": {
      "op": "POP"
    },
    "14148": {
      "op": "POP"
    },
    "14149": {
      "op": "POP"
    },
    "14150": {
      "op": "POP"
    },
    "14151": {
      "op": "POP"
    },
    "14152": {
      "op": "POP"
    },
    "14153": {
      "op": "POP"
    },
    "14154": {
      "jump": "o",
      "op": "JUMP"
    },
    "14155": {
      "op": "JUMPDEST"
    },
    "14156": {
      "op": "DUP1"
    },
    "14157": {
      "op": "ISZERO"
    },
    "14158": {
      "op": "ISZERO"
    },
    "14159": {
      "op": "DUP2"
    },
    "14160": {
      "op": "EQ"
    },
    "14161": {
      "op": "PUSH2",
      "value": "0x2CDB"
    },
    "14164": {
      "op": "JUMPI"
    },
    "14165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14167": {
      "op": "DUP1"
    },
    "14168": {
      "op": "REVERT"
    },
    "14169": {
      "op": "JUMPDEST"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14172": {
      "op": "DUP1"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14177": {
      "op": "DUP5"
    },
    "14178": {
      "op": "DUP7"
    },
    "14179": {
      "op": "SUB"
    },
    "14180": {
      "op": "SLT"
    },
    "14181": {
      "op": "ISZERO"
    },
    "14182": {
      "op": "PUSH2",
      "value": "0x376E"
    },
    "14185": {
      "op": "JUMPI"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14188": {
      "op": "DUP1"
    },
    "14189": {
      "op": "REVERT"
    },
    "14190": {
      "op": "JUMPDEST"
    },
    "14191": {
      "op": "DUP4"
    },
    "14192": {
      "op": "CALLDATALOAD"
    },
    "14193": {
      "op": "SWAP3"
    },
    "14194": {
      "op": "POP"
    },
    "14195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14197": {
      "op": "DUP5"
    },
    "14198": {
      "op": "ADD"
    },
    "14199": {
      "op": "CALLDATALOAD"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14204": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14206": {
      "op": "SHL"
    },
    "14207": {
      "op": "SUB"
    },
    "14208": {
      "op": "DUP2"
    },
    "14209": {
      "op": "GT"
    },
    "14210": {
      "op": "ISZERO"
    },
    "14211": {
      "op": "PUSH2",
      "value": "0x378B"
    },
    "14214": {
      "op": "JUMPI"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14217": {
      "op": "DUP1"
    },
    "14218": {
      "op": "REVERT"
    },
    "14219": {
      "op": "JUMPDEST"
    },
    "14220": {
      "op": "PUSH2",
      "value": "0x3797"
    },
    "14223": {
      "op": "DUP7"
    },
    "14224": {
      "op": "DUP3"
    },
    "14225": {
      "op": "DUP8"
    },
    "14226": {
      "op": "ADD"
    },
    "14227": {
      "op": "PUSH2",
      "value": "0x36CC"
    },
    "14230": {
      "jump": "i",
      "op": "JUMP"
    },
    "14231": {
      "op": "JUMPDEST"
    },
    "14232": {
      "op": "SWAP3"
    },
    "14233": {
      "op": "POP"
    },
    "14234": {
      "op": "POP"
    },
    "14235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14237": {
      "op": "DUP5"
    },
    "14238": {
      "op": "ADD"
    },
    "14239": {
      "op": "CALLDATALOAD"
    },
    "14240": {
      "op": "PUSH2",
      "value": "0x37A8"
    },
    "14243": {
      "op": "DUP2"
    },
    "14244": {
      "op": "PUSH2",
      "value": "0x374B"
    },
    "14247": {
      "jump": "i",
      "op": "JUMP"
    },
    "14248": {
      "op": "JUMPDEST"
    },
    "14249": {
      "op": "DUP1"
    },
    "14250": {
      "op": "SWAP2"
    },
    "14251": {
      "op": "POP"
    },
    "14252": {
      "op": "POP"
    },
    "14253": {
      "op": "SWAP3"
    },
    "14254": {
      "op": "POP"
    },
    "14255": {
      "op": "SWAP3"
    },
    "14256": {
      "op": "POP"
    },
    "14257": {
      "op": "SWAP3"
    },
    "14258": {
      "jump": "o",
      "op": "JUMP"
    },
    "14259": {
      "op": "JUMPDEST"
    },
    "14260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14262": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14265": {
      "op": "DUP1"
    },
    "14266": {
      "op": "DUP4"
    },
    "14267": {
      "op": "MSTORE"
    },
    "14268": {
      "op": "PUSH2",
      "value": "0x37C7"
    },
    "14271": {
      "op": "DUP2"
    },
    "14272": {
      "op": "DUP5"
    },
    "14273": {
      "op": "ADD"
    },
    "14274": {
      "op": "DUP13"
    },
    "14275": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "14278": {
      "jump": "i",
      "op": "JUMP"
    },
    "14279": {
      "op": "JUMPDEST"
    },
    "14280": {
      "op": "SWAP10"
    },
    "14281": {
      "op": "ISZERO"
    },
    "14282": {
      "op": "ISZERO"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14285": {
      "op": "DUP5"
    },
    "14286": {
      "op": "ADD"
    },
    "14287": {
      "op": "MSTORE"
    },
    "14288": {
      "op": "POP"
    },
    "14289": {
      "op": "POP"
    },
    "14290": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14296": {
      "op": "SWAP7"
    },
    "14297": {
      "op": "DUP8"
    },
    "14298": {
      "op": "AND"
    },
    "14299": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14301": {
      "op": "DUP3"
    },
    "14302": {
      "op": "ADD"
    },
    "14303": {
      "op": "MSTORE"
    },
    "14304": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14306": {
      "op": "SWAP6"
    },
    "14307": {
      "op": "SWAP1"
    },
    "14308": {
      "op": "SWAP6"
    },
    "14309": {
      "op": "AND"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14312": {
      "op": "DUP7"
    },
    "14313": {
      "op": "ADD"
    },
    "14314": {
      "op": "MSTORE"
    },
    "14315": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14319": {
      "op": "SWAP4"
    },
    "14320": {
      "op": "SWAP1"
    },
    "14321": {
      "op": "SWAP4"
    },
    "14322": {
      "op": "AND"
    },
    "14323": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14325": {
      "op": "DUP6"
    },
    "14326": {
      "op": "ADD"
    },
    "14327": {
      "op": "MSTORE"
    },
    "14328": {
      "op": "SWAP1"
    },
    "14329": {
      "op": "DUP5"
    },
    "14330": {
      "op": "AND"
    },
    "14331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14333": {
      "op": "DUP5"
    },
    "14334": {
      "op": "ADD"
    },
    "14335": {
      "op": "MSTORE"
    },
    "14336": {
      "op": "SWAP1"
    },
    "14337": {
      "op": "SWAP3"
    },
    "14338": {
      "op": "AND"
    },
    "14339": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14341": {
      "op": "DUP3"
    },
    "14342": {
      "op": "ADD"
    },
    "14343": {
      "op": "MSTORE"
    },
    "14344": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14347": {
      "op": "SWAP1"
    },
    "14348": {
      "op": "SWAP2"
    },
    "14349": {
      "op": "AND"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14352": {
      "op": "SWAP1"
    },
    "14353": {
      "op": "SWAP2"
    },
    "14354": {
      "op": "ADD"
    },
    "14355": {
      "op": "MSTORE"
    },
    "14356": {
      "op": "SWAP2"
    },
    "14357": {
      "op": "SWAP1"
    },
    "14358": {
      "op": "POP"
    },
    "14359": {
      "jump": "o",
      "op": "JUMP"
    },
    "14360": {
      "op": "JUMPDEST"
    },
    "14361": {
      "op": "DUP1"
    },
    "14362": {
      "op": "CALLDATALOAD"
    },
    "14363": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14369": {
      "op": "DUP2"
    },
    "14370": {
      "op": "AND"
    },
    "14371": {
      "op": "DUP2"
    },
    "14372": {
      "op": "EQ"
    },
    "14373": {
      "op": "PUSH2",
      "value": "0x382D"
    },
    "14376": {
      "op": "JUMPI"
    },
    "14377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14379": {
      "op": "DUP1"
    },
    "14380": {
      "op": "REVERT"
    },
    "14381": {
      "op": "JUMPDEST"
    },
    "14382": {
      "op": "SWAP2"
    },
    "14383": {
      "op": "SWAP1"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "jump": "o",
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14391": {
      "op": "DUP3"
    },
    "14392": {
      "op": "DUP5"
    },
    "14393": {
      "op": "SUB"
    },
    "14394": {
      "op": "SLT"
    },
    "14395": {
      "op": "ISZERO"
    },
    "14396": {
      "op": "PUSH2",
      "value": "0x3844"
    },
    "14399": {
      "op": "JUMPI"
    },
    "14400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14402": {
      "op": "DUP1"
    },
    "14403": {
      "op": "REVERT"
    },
    "14404": {
      "op": "JUMPDEST"
    },
    "14405": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "14408": {
      "op": "DUP3"
    },
    "14409": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "14412": {
      "jump": "i",
      "op": "JUMP"
    },
    "14413": {
      "op": "JUMPDEST"
    },
    "14414": {
      "op": "SWAP4"
    },
    "14415": {
      "op": "SWAP3"
    },
    "14416": {
      "op": "POP"
    },
    "14417": {
      "op": "POP"
    },
    "14418": {
      "op": "POP"
    },
    "14419": {
      "jump": "o",
      "op": "JUMP"
    },
    "14420": {
      "op": "JUMPDEST"
    },
    "14421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14423": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "14426": {
      "op": "DUP3"
    },
    "14427": {
      "op": "MLOAD"
    },
    "14428": {
      "op": "DUP2"
    },
    "14429": {
      "op": "DUP6"
    },
    "14430": {
      "op": "MSTORE"
    },
    "14431": {
      "op": "PUSH2",
      "value": "0x386A"
    },
    "14434": {
      "op": "DUP3"
    },
    "14435": {
      "op": "DUP7"
    },
    "14436": {
      "op": "ADD"
    },
    "14437": {
      "op": "DUP3"
    },
    "14438": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "14441": {
      "jump": "i",
      "op": "JUMP"
    },
    "14442": {
      "op": "JUMPDEST"
    },
    "14443": {
      "op": "SWAP2"
    },
    "14444": {
      "op": "POP"
    },
    "14445": {
      "op": "POP"
    },
    "14446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14448": {
      "op": "DUP4"
    },
    "14449": {
      "op": "ADD"
    },
    "14450": {
      "op": "MLOAD"
    },
    "14451": {
      "op": "PUSH2",
      "value": "0x3885"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14456": {
      "op": "DUP7"
    },
    "14457": {
      "op": "ADD"
    },
    "14458": {
      "op": "DUP3"
    },
    "14459": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14465": {
      "op": "AND"
    },
    "14466": {
      "op": "SWAP1"
    },
    "14467": {
      "op": "MSTORE"
    },
    "14468": {
      "op": "JUMP"
    },
    "14469": {
      "op": "JUMPDEST"
    },
    "14470": {
      "op": "POP"
    },
    "14471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14473": {
      "op": "DUP4"
    },
    "14474": {
      "op": "ADD"
    },
    "14475": {
      "op": "MLOAD"
    },
    "14476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14478": {
      "op": "DUP6"
    },
    "14479": {
      "op": "ADD"
    },
    "14480": {
      "op": "MSTORE"
    },
    "14481": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14483": {
      "op": "DUP4"
    },
    "14484": {
      "op": "ADD"
    },
    "14485": {
      "op": "MLOAD"
    },
    "14486": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14488": {
      "op": "DUP6"
    },
    "14489": {
      "op": "ADD"
    },
    "14490": {
      "op": "MSTORE"
    },
    "14491": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14493": {
      "op": "DUP4"
    },
    "14494": {
      "op": "ADD"
    },
    "14495": {
      "op": "MLOAD"
    },
    "14496": {
      "op": "PUSH2",
      "value": "0x38AE"
    },
    "14499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14501": {
      "op": "DUP7"
    },
    "14502": {
      "op": "ADD"
    },
    "14503": {
      "op": "DUP3"
    },
    "14504": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14506": {
      "op": "AND"
    },
    "14507": {
      "op": "SWAP1"
    },
    "14508": {
      "op": "MSTORE"
    },
    "14509": {
      "op": "JUMP"
    },
    "14510": {
      "op": "JUMPDEST"
    },
    "14511": {
      "op": "POP"
    },
    "14512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14514": {
      "op": "DUP4"
    },
    "14515": {
      "op": "ADD"
    },
    "14516": {
      "op": "MLOAD"
    },
    "14517": {
      "op": "PUSH2",
      "value": "0x38C5"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14522": {
      "op": "DUP7"
    },
    "14523": {
      "op": "ADD"
    },
    "14524": {
      "op": "DUP3"
    },
    "14525": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14529": {
      "op": "AND"
    },
    "14530": {
      "op": "SWAP1"
    },
    "14531": {
      "op": "MSTORE"
    },
    "14532": {
      "op": "JUMP"
    },
    "14533": {
      "op": "JUMPDEST"
    },
    "14534": {
      "op": "POP"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14537": {
      "op": "DUP4"
    },
    "14538": {
      "op": "ADD"
    },
    "14539": {
      "op": "MLOAD"
    },
    "14540": {
      "op": "PUSH2",
      "value": "0x38E0"
    },
    "14543": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14545": {
      "op": "DUP7"
    },
    "14546": {
      "op": "ADD"
    },
    "14547": {
      "op": "DUP3"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14552": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "14554": {
      "op": "SHL"
    },
    "14555": {
      "op": "SUB"
    },
    "14556": {
      "op": "AND"
    },
    "14557": {
      "op": "SWAP1"
    },
    "14558": {
      "op": "MSTORE"
    },
    "14559": {
      "op": "JUMP"
    },
    "14560": {
      "op": "JUMPDEST"
    },
    "14561": {
      "op": "POP"
    },
    "14562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14564": {
      "op": "DUP4"
    },
    "14565": {
      "op": "ADD"
    },
    "14566": {
      "op": "MLOAD"
    },
    "14567": {
      "op": "PUSH2",
      "value": "0x38F6"
    },
    "14570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14572": {
      "op": "DUP7"
    },
    "14573": {
      "op": "ADD"
    },
    "14574": {
      "op": "DUP3"
    },
    "14575": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14578": {
      "op": "AND"
    },
    "14579": {
      "op": "SWAP1"
    },
    "14580": {
      "op": "MSTORE"
    },
    "14581": {
      "op": "JUMP"
    },
    "14582": {
      "op": "JUMPDEST"
    },
    "14583": {
      "op": "POP"
    },
    "14584": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14587": {
      "op": "DUP4"
    },
    "14588": {
      "op": "DUP2"
    },
    "14589": {
      "op": "ADD"
    },
    "14590": {
      "op": "MLOAD"
    },
    "14591": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14594": {
      "op": "AND"
    },
    "14595": {
      "op": "SWAP1"
    },
    "14596": {
      "op": "DUP6"
    },
    "14597": {
      "op": "ADD"
    },
    "14598": {
      "op": "MSTORE"
    },
    "14599": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "14602": {
      "op": "DUP1"
    },
    "14603": {
      "op": "DUP5"
    },
    "14604": {
      "op": "ADD"
    },
    "14605": {
      "op": "MLOAD"
    },
    "14606": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14612": {
      "op": "DUP2"
    },
    "14613": {
      "op": "AND"
    },
    "14614": {
      "op": "DUP3"
    },
    "14615": {
      "op": "DUP8"
    },
    "14616": {
      "op": "ADD"
    },
    "14617": {
      "op": "MSTORE"
    },
    "14618": {
      "op": "PUSH2",
      "value": "0x1D85"
    },
    "14621": {
      "op": "JUMP"
    },
    "14622": {
      "op": "JUMPDEST"
    },
    "14623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14627": {
      "op": "DUP3"
    },
    "14628": {
      "op": "ADD"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14631": {
      "op": "DUP4"
    },
    "14632": {
      "op": "MSTORE"
    },
    "14633": {
      "op": "DUP1"
    },
    "14634": {
      "op": "DUP6"
    },
    "14635": {
      "op": "MLOAD"
    },
    "14636": {
      "op": "DUP1"
    },
    "14637": {
      "op": "DUP4"
    },
    "14638": {
      "op": "MSTORE"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14641": {
      "op": "DUP6"
    },
    "14642": {
      "op": "ADD"
    },
    "14643": {
      "op": "SWAP2"
    },
    "14644": {
      "op": "POP"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14647": {
      "op": "DUP2"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14650": {
      "op": "SHL"
    },
    "14651": {
      "op": "DUP7"
    },
    "14652": {
      "op": "ADD"
    },
    "14653": {
      "op": "ADD"
    },
    "14654": {
      "op": "SWAP3"
    },
    "14655": {
      "op": "POP"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14658": {
      "op": "DUP1"
    },
    "14659": {
      "op": "DUP9"
    },
    "14660": {
      "op": "ADD"
    },
    "14661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14663": {
      "op": "JUMPDEST"
    },
    "14664": {
      "op": "DUP4"
    },
    "14665": {
      "op": "DUP2"
    },
    "14666": {
      "op": "LT"
    },
    "14667": {
      "op": "ISZERO"
    },
    "14668": {
      "op": "PUSH2",
      "value": "0x3975"
    },
    "14671": {
      "op": "JUMPI"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "14674": {
      "op": "NOT"
    },
    "14675": {
      "op": "DUP9"
    },
    "14676": {
      "op": "DUP8"
    },
    "14677": {
      "op": "SUB"
    },
    "14678": {
      "op": "ADD"
    },
    "14679": {
      "op": "DUP6"
    },
    "14680": {
      "op": "MSTORE"
    },
    "14681": {
      "op": "PUSH2",
      "value": "0x3963"
    },
    "14684": {
      "op": "DUP7"
    },
    "14685": {
      "op": "DUP4"
    },
    "14686": {
      "op": "MLOAD"
    },
    "14687": {
      "op": "PUSH2",
      "value": "0x3854"
    },
    "14690": {
      "jump": "i",
      "op": "JUMP"
    },
    "14691": {
      "op": "JUMPDEST"
    },
    "14692": {
      "op": "SWAP6"
    },
    "14693": {
      "op": "POP"
    },
    "14694": {
      "op": "SWAP4"
    },
    "14695": {
      "op": "DUP3"
    },
    "14696": {
      "op": "ADD"
    },
    "14697": {
      "op": "SWAP4"
    },
    "14698": {
      "op": "SWAP1"
    },
    "14699": {
      "op": "DUP3"
    },
    "14700": {
      "op": "ADD"
    },
    "14701": {
      "op": "SWAP1"
    },
    "14702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14704": {
      "op": "ADD"
    },
    "14705": {
      "op": "PUSH2",
      "value": "0x3947"
    },
    "14708": {
      "op": "JUMP"
    },
    "14709": {
      "op": "JUMPDEST"
    },
    "14710": {
      "op": "POP"
    },
    "14711": {
      "op": "POP"
    },
    "14712": {
      "op": "DUP6"
    },
    "14713": {
      "op": "DUP5"
    },
    "14714": {
      "op": "SUB"
    },
    "14715": {
      "op": "DUP2"
    },
    "14716": {
      "op": "DUP8"
    },
    "14717": {
      "op": "ADD"
    },
    "14718": {
      "op": "MSTORE"
    },
    "14719": {
      "op": "DUP7"
    },
    "14720": {
      "op": "MLOAD"
    },
    "14721": {
      "op": "DUP1"
    },
    "14722": {
      "op": "DUP6"
    },
    "14723": {
      "op": "MSTORE"
    },
    "14724": {
      "op": "DUP8"
    },
    "14725": {
      "op": "DUP3"
    },
    "14726": {
      "op": "ADD"
    },
    "14727": {
      "op": "SWAP5"
    },
    "14728": {
      "op": "DUP3"
    },
    "14729": {
      "op": "ADD"
    },
    "14730": {
      "op": "SWAP4"
    },
    "14731": {
      "op": "POP"
    },
    "14732": {
      "op": "SWAP2"
    },
    "14733": {
      "op": "POP"
    },
    "14734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14736": {
      "op": "JUMPDEST"
    },
    "14737": {
      "op": "DUP3"
    },
    "14738": {
      "op": "DUP2"
    },
    "14739": {
      "op": "LT"
    },
    "14740": {
      "op": "ISZERO"
    },
    "14741": {
      "op": "PUSH2",
      "value": "0x39AC"
    },
    "14744": {
      "op": "JUMPI"
    },
    "14745": {
      "op": "DUP5"
    },
    "14746": {
      "op": "MLOAD"
    },
    "14747": {
      "op": "DUP5"
    },
    "14748": {
      "op": "MSTORE"
    },
    "14749": {
      "op": "SWAP4"
    },
    "14750": {
      "op": "DUP2"
    },
    "14751": {
      "op": "ADD"
    },
    "14752": {
      "op": "SWAP4"
    },
    "14753": {
      "op": "SWAP3"
    },
    "14754": {
      "op": "DUP2"
    },
    "14755": {
      "op": "ADD"
    },
    "14756": {
      "op": "SWAP3"
    },
    "14757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14759": {
      "op": "ADD"
    },
    "14760": {
      "op": "PUSH2",
      "value": "0x3990"
    },
    "14763": {
      "op": "JUMP"
    },
    "14764": {
      "op": "JUMPDEST"
    },
    "14765": {
      "op": "POP"
    },
    "14766": {
      "op": "SWAP2"
    },
    "14767": {
      "op": "SWAP8"
    },
    "14768": {
      "op": "SWAP7"
    },
    "14769": {
      "op": "POP"
    },
    "14770": {
      "op": "POP"
    },
    "14771": {
      "op": "POP"
    },
    "14772": {
      "op": "POP"
    },
    "14773": {
      "op": "POP"
    },
    "14774": {
      "op": "POP"
    },
    "14775": {
      "op": "POP"
    },
    "14776": {
      "jump": "o",
      "op": "JUMP"
    },
    "14777": {
      "op": "JUMPDEST"
    },
    "14778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14780": {
      "op": "DUP1"
    },
    "14781": {
      "op": "DUP4"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14784": {
      "op": "DUP5"
    },
    "14785": {
      "op": "ADD"
    },
    "14786": {
      "op": "SLT"
    },
    "14787": {
      "op": "PUSH2",
      "value": "0x39CB"
    },
    "14790": {
      "op": "JUMPI"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14793": {
      "op": "DUP1"
    },
    "14794": {
      "op": "REVERT"
    },
    "14795": {
      "op": "JUMPDEST"
    },
    "14796": {
      "op": "POP"
    },
    "14797": {
      "op": "DUP2"
    },
    "14798": {
      "op": "CALLDATALOAD"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14805": {
      "op": "SHL"
    },
    "14806": {
      "op": "SUB"
    },
    "14807": {
      "op": "DUP2"
    },
    "14808": {
      "op": "GT"
    },
    "14809": {
      "op": "ISZERO"
    },
    "14810": {
      "op": "PUSH2",
      "value": "0x39E2"
    },
    "14813": {
      "op": "JUMPI"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14816": {
      "op": "DUP1"
    },
    "14817": {
      "op": "REVERT"
    },
    "14818": {
      "op": "JUMPDEST"
    },
    "14819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14821": {
      "op": "DUP4"
    },
    "14822": {
      "op": "ADD"
    },
    "14823": {
      "op": "SWAP2"
    },
    "14824": {
      "op": "POP"
    },
    "14825": {
      "op": "DUP4"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14828": {
      "op": "DUP3"
    },
    "14829": {
      "op": "DUP6"
    },
    "14830": {
      "op": "ADD"
    },
    "14831": {
      "op": "ADD"
    },
    "14832": {
      "op": "GT"
    },
    "14833": {
      "op": "ISZERO"
    },
    "14834": {
      "op": "PUSH2",
      "value": "0x39FA"
    },
    "14837": {
      "op": "JUMPI"
    },
    "14838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14840": {
      "op": "DUP1"
    },
    "14841": {
      "op": "REVERT"
    },
    "14842": {
      "op": "JUMPDEST"
    },
    "14843": {
      "op": "SWAP3"
    },
    "14844": {
      "op": "POP"
    },
    "14845": {
      "op": "SWAP3"
    },
    "14846": {
      "op": "SWAP1"
    },
    "14847": {
      "op": "POP"
    },
    "14848": {
      "jump": "o",
      "op": "JUMP"
    },
    "14849": {
      "op": "JUMPDEST"
    },
    "14850": {
      "op": "DUP1"
    },
    "14851": {
      "op": "CALLDATALOAD"
    },
    "14852": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14856": {
      "op": "DUP2"
    },
    "14857": {
      "op": "AND"
    },
    "14858": {
      "op": "DUP2"
    },
    "14859": {
      "op": "EQ"
    },
    "14860": {
      "op": "PUSH2",
      "value": "0x382D"
    },
    "14863": {
      "op": "JUMPI"
    },
    "14864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14866": {
      "op": "DUP1"
    },
    "14867": {
      "op": "REVERT"
    },
    "14868": {
      "op": "JUMPDEST"
    },
    "14869": {
      "op": "DUP1"
    },
    "14870": {
      "op": "CALLDATALOAD"
    },
    "14871": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14874": {
      "op": "DUP2"
    },
    "14875": {
      "op": "AND"
    },
    "14876": {
      "op": "DUP2"
    },
    "14877": {
      "op": "EQ"
    },
    "14878": {
      "op": "PUSH2",
      "value": "0x382D"
    },
    "14881": {
      "op": "JUMPI"
    },
    "14882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14884": {
      "op": "DUP1"
    },
    "14885": {
      "op": "REVERT"
    },
    "14886": {
      "op": "JUMPDEST"
    },
    "14887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14889": {
      "op": "DUP1"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14892": {
      "op": "DUP1"
    },
    "14893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14895": {
      "op": "DUP1"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14898": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14900": {
      "op": "DUP9"
    },
    "14901": {
      "op": "DUP11"
    },
    "14902": {
      "op": "SUB"
    },
    "14903": {
      "op": "SLT"
    },
    "14904": {
      "op": "ISZERO"
    },
    "14905": {
      "op": "PUSH2",
      "value": "0x3A41"
    },
    "14908": {
      "op": "JUMPI"
    },
    "14909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14911": {
      "op": "DUP1"
    },
    "14912": {
      "op": "REVERT"
    },
    "14913": {
      "op": "JUMPDEST"
    },
    "14914": {
      "op": "DUP8"
    },
    "14915": {
      "op": "CALLDATALOAD"
    },
    "14916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14922": {
      "op": "SHL"
    },
    "14923": {
      "op": "SUB"
    },
    "14924": {
      "op": "DUP2"
    },
    "14925": {
      "op": "GT"
    },
    "14926": {
      "op": "ISZERO"
    },
    "14927": {
      "op": "PUSH2",
      "value": "0x3A57"
    },
    "14930": {
      "op": "JUMPI"
    },
    "14931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14933": {
      "op": "DUP1"
    },
    "14934": {
      "op": "REVERT"
    },
    "14935": {
      "op": "JUMPDEST"
    },
    "14936": {
      "op": "PUSH2",
      "value": "0x3A63"
    },
    "14939": {
      "op": "DUP11"
    },
    "14940": {
      "op": "DUP3"
    },
    "14941": {
      "op": "DUP12"
    },
    "14942": {
      "op": "ADD"
    },
    "14943": {
      "op": "PUSH2",
      "value": "0x39B9"
    },
    "14946": {
      "jump": "i",
      "op": "JUMP"
    },
    "14947": {
      "op": "JUMPDEST"
    },
    "14948": {
      "op": "SWAP1"
    },
    "14949": {
      "op": "SWAP9"
    },
    "14950": {
      "op": "POP"
    },
    "14951": {
      "op": "SWAP7"
    },
    "14952": {
      "op": "POP"
    },
    "14953": {
      "op": "POP"
    },
    "14954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14956": {
      "op": "DUP9"
    },
    "14957": {
      "op": "ADD"
    },
    "14958": {
      "op": "CALLDATALOAD"
    },
    "14959": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14961": {
      "op": "DUP2"
    },
    "14962": {
      "op": "AND"
    },
    "14963": {
      "op": "DUP2"
    },
    "14964": {
      "op": "EQ"
    },
    "14965": {
      "op": "PUSH2",
      "value": "0x3A7D"
    },
    "14968": {
      "op": "JUMPI"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14971": {
      "op": "DUP1"
    },
    "14972": {
      "op": "REVERT"
    },
    "14973": {
      "op": "JUMPDEST"
    },
    "14974": {
      "op": "SWAP5"
    },
    "14975": {
      "op": "POP"
    },
    "14976": {
      "op": "PUSH2",
      "value": "0x3A8B"
    },
    "14979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14981": {
      "op": "DUP10"
    },
    "14982": {
      "op": "ADD"
    },
    "14983": {
      "op": "PUSH2",
      "value": "0x3A01"
    },
    "14986": {
      "jump": "i",
      "op": "JUMP"
    },
    "14987": {
      "op": "JUMPDEST"
    },
    "14988": {
      "op": "SWAP4"
    },
    "14989": {
      "op": "POP"
    },
    "14990": {
      "op": "PUSH2",
      "value": "0x3A99"
    },
    "14993": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14995": {
      "op": "DUP10"
    },
    "14996": {
      "op": "ADD"
    },
    "14997": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "15000": {
      "jump": "i",
      "op": "JUMP"
    },
    "15001": {
      "op": "JUMPDEST"
    },
    "15002": {
      "op": "SWAP3"
    },
    "15003": {
      "op": "POP"
    },
    "15004": {
      "op": "PUSH2",
      "value": "0x3AA7"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15009": {
      "op": "DUP10"
    },
    "15010": {
      "op": "ADD"
    },
    "15011": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "15014": {
      "jump": "i",
      "op": "JUMP"
    },
    "15015": {
      "op": "JUMPDEST"
    },
    "15016": {
      "op": "SWAP2"
    },
    "15017": {
      "op": "POP"
    },
    "15018": {
      "op": "PUSH2",
      "value": "0x3AB5"
    },
    "15021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15023": {
      "op": "DUP10"
    },
    "15024": {
      "op": "ADD"
    },
    "15025": {
      "op": "PUSH2",
      "value": "0x3A14"
    },
    "15028": {
      "jump": "i",
      "op": "JUMP"
    },
    "15029": {
      "op": "JUMPDEST"
    },
    "15030": {
      "op": "SWAP1"
    },
    "15031": {
      "op": "POP"
    },
    "15032": {
      "op": "SWAP3"
    },
    "15033": {
      "op": "SWAP6"
    },
    "15034": {
      "op": "SWAP9"
    },
    "15035": {
      "op": "SWAP2"
    },
    "15036": {
      "op": "SWAP5"
    },
    "15037": {
      "op": "SWAP8"
    },
    "15038": {
      "op": "POP"
    },
    "15039": {
      "op": "SWAP3"
    },
    "15040": {
      "op": "SWAP6"
    },
    "15041": {
      "op": "POP"
    },
    "15042": {
      "jump": "o",
      "op": "JUMP"
    },
    "15043": {
      "op": "JUMPDEST"
    },
    "15044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15046": {
      "op": "DUP1"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15049": {
      "op": "DUP4"
    },
    "15050": {
      "op": "DUP6"
    },
    "15051": {
      "op": "SUB"
    },
    "15052": {
      "op": "SLT"
    },
    "15053": {
      "op": "ISZERO"
    },
    "15054": {
      "op": "PUSH2",
      "value": "0x3AD6"
    },
    "15057": {
      "op": "JUMPI"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15060": {
      "op": "DUP1"
    },
    "15061": {
      "op": "REVERT"
    },
    "15062": {
      "op": "JUMPDEST"
    },
    "15063": {
      "op": "POP"
    },
    "15064": {
      "op": "POP"
    },
    "15065": {
      "op": "DUP1"
    },
    "15066": {
      "op": "CALLDATALOAD"
    },
    "15067": {
      "op": "SWAP3"
    },
    "15068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15070": {
      "op": "SWAP1"
    },
    "15071": {
      "op": "SWAP2"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "CALLDATALOAD"
    },
    "15074": {
      "op": "SWAP2"
    },
    "15075": {
      "op": "POP"
    },
    "15076": {
      "jump": "o",
      "op": "JUMP"
    },
    "15077": {
      "op": "JUMPDEST"
    },
    "15078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15084": {
      "op": "SHL"
    },
    "15085": {
      "op": "SUB"
    },
    "15086": {
      "op": "DUP2"
    },
    "15087": {
      "op": "AND"
    },
    "15088": {
      "op": "DUP2"
    },
    "15089": {
      "op": "EQ"
    },
    "15090": {
      "op": "PUSH2",
      "value": "0x2CDB"
    },
    "15093": {
      "op": "JUMPI"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15096": {
      "op": "DUP1"
    },
    "15097": {
      "op": "REVERT"
    },
    "15098": {
      "op": "JUMPDEST"
    },
    "15099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15103": {
      "op": "DUP3"
    },
    "15104": {
      "op": "DUP5"
    },
    "15105": {
      "op": "SUB"
    },
    "15106": {
      "op": "SLT"
    },
    "15107": {
      "op": "ISZERO"
    },
    "15108": {
      "op": "PUSH2",
      "value": "0x3B0C"
    },
    "15111": {
      "op": "JUMPI"
    },
    "15112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15114": {
      "op": "DUP1"
    },
    "15115": {
      "op": "REVERT"
    },
    "15116": {
      "op": "JUMPDEST"
    },
    "15117": {
      "op": "DUP2"
    },
    "15118": {
      "op": "CALLDATALOAD"
    },
    "15119": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "15122": {
      "op": "DUP2"
    },
    "15123": {
      "op": "PUSH2",
      "value": "0x3AE5"
    },
    "15126": {
      "jump": "i",
      "op": "JUMP"
    },
    "15127": {
      "op": "JUMPDEST"
    },
    "15128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15130": {
      "op": "DUP3"
    },
    "15131": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15133": {
      "op": "DUP4"
    },
    "15134": {
      "op": "ADD"
    },
    "15135": {
      "op": "SLT"
    },
    "15136": {
      "op": "PUSH2",
      "value": "0x3B28"
    },
    "15139": {
      "op": "JUMPI"
    },
    "15140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15142": {
      "op": "DUP1"
    },
    "15143": {
      "op": "REVERT"
    },
    "15144": {
      "op": "JUMPDEST"
    },
    "15145": {
      "op": "DUP2"
    },
    "15146": {
      "op": "CALLDATALOAD"
    },
    "15147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15151": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15153": {
      "op": "SHL"
    },
    "15154": {
      "op": "SUB"
    },
    "15155": {
      "op": "DUP2"
    },
    "15156": {
      "op": "GT"
    },
    "15157": {
      "op": "ISZERO"
    },
    "15158": {
      "op": "PUSH2",
      "value": "0x3B41"
    },
    "15161": {
      "op": "JUMPI"
    },
    "15162": {
      "op": "PUSH2",
      "value": "0x3B41"
    },
    "15165": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "15168": {
      "jump": "i",
      "op": "JUMP"
    },
    "15169": {
      "op": "JUMPDEST"
    },
    "15170": {
      "op": "PUSH2",
      "value": "0x3B54"
    },
    "15173": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15175": {
      "op": "DUP3"
    },
    "15176": {
      "op": "ADD"
    },
    "15177": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15179": {
      "op": "NOT"
    },
    "15180": {
      "op": "AND"
    },
    "15181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15183": {
      "op": "ADD"
    },
    "15184": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "15187": {
      "jump": "i",
      "op": "JUMP"
    },
    "15188": {
      "op": "JUMPDEST"
    },
    "15189": {
      "op": "DUP2"
    },
    "15190": {
      "op": "DUP2"
    },
    "15191": {
      "op": "MSTORE"
    },
    "15192": {
      "op": "DUP5"
    },
    "15193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15195": {
      "op": "DUP4"
    },
    "15196": {
      "op": "DUP7"
    },
    "15197": {
      "op": "ADD"
    },
    "15198": {
      "op": "ADD"
    },
    "15199": {
      "op": "GT"
    },
    "15200": {
      "op": "ISZERO"
    },
    "15201": {
      "op": "PUSH2",
      "value": "0x3B69"
    },
    "15204": {
      "op": "JUMPI"
    },
    "15205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15207": {
      "op": "DUP1"
    },
    "15208": {
      "op": "REVERT"
    },
    "15209": {
      "op": "JUMPDEST"
    },
    "15210": {
      "op": "DUP2"
    },
    "15211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15213": {
      "op": "DUP6"
    },
    "15214": {
      "op": "ADD"
    },
    "15215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15217": {
      "op": "DUP4"
    },
    "15218": {
      "op": "ADD"
    },
    "15219": {
      "op": "CALLDATACOPY"
    },
    "15220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15222": {
      "op": "SWAP2"
    },
    "15223": {
      "op": "DUP2"
    },
    "15224": {
      "op": "ADD"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15227": {
      "op": "ADD"
    },
    "15228": {
      "op": "SWAP2"
    },
    "15229": {
      "op": "SWAP1"
    },
    "15230": {
      "op": "SWAP2"
    },
    "15231": {
      "op": "MSTORE"
    },
    "15232": {
      "op": "SWAP4"
    },
    "15233": {
      "op": "SWAP3"
    },
    "15234": {
      "op": "POP"
    },
    "15235": {
      "op": "POP"
    },
    "15236": {
      "op": "POP"
    },
    "15237": {
      "jump": "o",
      "op": "JUMP"
    },
    "15238": {
      "op": "JUMPDEST"
    },
    "15239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15241": {
      "op": "DUP1"
    },
    "15242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15246": {
      "op": "DUP5"
    },
    "15247": {
      "op": "DUP7"
    },
    "15248": {
      "op": "SUB"
    },
    "15249": {
      "op": "SLT"
    },
    "15250": {
      "op": "ISZERO"
    },
    "15251": {
      "op": "PUSH2",
      "value": "0x3B9B"
    },
    "15254": {
      "op": "JUMPI"
    },
    "15255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15257": {
      "op": "DUP1"
    },
    "15258": {
      "op": "REVERT"
    },
    "15259": {
      "op": "JUMPDEST"
    },
    "15260": {
      "op": "DUP4"
    },
    "15261": {
      "op": "CALLDATALOAD"
    },
    "15262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15268": {
      "op": "SHL"
    },
    "15269": {
      "op": "SUB"
    },
    "15270": {
      "op": "DUP2"
    },
    "15271": {
      "op": "GT"
    },
    "15272": {
      "op": "ISZERO"
    },
    "15273": {
      "op": "PUSH2",
      "value": "0x3BB1"
    },
    "15276": {
      "op": "JUMPI"
    },
    "15277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15279": {
      "op": "DUP1"
    },
    "15280": {
      "op": "REVERT"
    },
    "15281": {
      "op": "JUMPDEST"
    },
    "15282": {
      "op": "PUSH2",
      "value": "0x3BBD"
    },
    "15285": {
      "op": "DUP7"
    },
    "15286": {
      "op": "DUP3"
    },
    "15287": {
      "op": "DUP8"
    },
    "15288": {
      "op": "ADD"
    },
    "15289": {
      "op": "PUSH2",
      "value": "0x3B17"
    },
    "15292": {
      "jump": "i",
      "op": "JUMP"
    },
    "15293": {
      "op": "JUMPDEST"
    },
    "15294": {
      "op": "SWAP4"
    },
    "15295": {
      "op": "POP"
    },
    "15296": {
      "op": "POP"
    },
    "15297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15299": {
      "op": "DUP5"
    },
    "15300": {
      "op": "ADD"
    },
    "15301": {
      "op": "CALLDATALOAD"
    },
    "15302": {
      "op": "SWAP2"
    },
    "15303": {
      "op": "POP"
    },
    "15304": {
      "op": "PUSH2",
      "value": "0x3BD3"
    },
    "15307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15309": {
      "op": "DUP6"
    },
    "15310": {
      "op": "ADD"
    },
    "15311": {
      "op": "PUSH2",
      "value": "0x3818"
    },
    "15314": {
      "jump": "i",
      "op": "JUMP"
    },
    "15315": {
      "op": "JUMPDEST"
    },
    "15316": {
      "op": "SWAP1"
    },
    "15317": {
      "op": "POP"
    },
    "15318": {
      "op": "SWAP3"
    },
    "15319": {
      "op": "POP"
    },
    "15320": {
      "op": "SWAP3"
    },
    "15321": {
      "op": "POP"
    },
    "15322": {
      "op": "SWAP3"
    },
    "15323": {
      "jump": "o",
      "op": "JUMP"
    },
    "15324": {
      "op": "JUMPDEST"
    },
    "15325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15327": {
      "op": "DUP1"
    },
    "15328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15332": {
      "op": "DUP5"
    },
    "15333": {
      "op": "DUP7"
    },
    "15334": {
      "op": "SUB"
    },
    "15335": {
      "op": "SLT"
    },
    "15336": {
      "op": "ISZERO"
    },
    "15337": {
      "op": "PUSH2",
      "value": "0x3BF1"
    },
    "15340": {
      "op": "JUMPI"
    },
    "15341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15343": {
      "op": "DUP1"
    },
    "15344": {
      "op": "REVERT"
    },
    "15345": {
      "op": "JUMPDEST"
    },
    "15346": {
      "op": "POP"
    },
    "15347": {
      "op": "POP"
    },
    "15348": {
      "op": "DUP2"
    },
    "15349": {
      "op": "CALLDATALOAD"
    },
    "15350": {
      "op": "SWAP4"
    },
    "15351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15353": {
      "op": "DUP4"
    },
    "15354": {
      "op": "ADD"
    },
    "15355": {
      "op": "CALLDATALOAD"
    },
    "15356": {
      "op": "SWAP4"
    },
    "15357": {
      "op": "POP"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15360": {
      "op": "SWAP1"
    },
    "15361": {
      "op": "SWAP3"
    },
    "15362": {
      "op": "ADD"
    },
    "15363": {
      "op": "CALLDATALOAD"
    },
    "15364": {
      "op": "SWAP2"
    },
    "15365": {
      "op": "SWAP1"
    },
    "15366": {
      "op": "POP"
    },
    "15367": {
      "jump": "o",
      "op": "JUMP"
    },
    "15368": {
      "op": "JUMPDEST"
    },
    "15369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15371": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15374": {
      "op": "DUP1"
    },
    "15375": {
      "op": "DUP4"
    },
    "15376": {
      "op": "MSTORE"
    },
    "15377": {
      "op": "PUSH2",
      "value": "0x3C1C"
    },
    "15380": {
      "op": "DUP2"
    },
    "15381": {
      "op": "DUP5"
    },
    "15382": {
      "op": "ADD"
    },
    "15383": {
      "op": "DUP15"
    },
    "15384": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "15387": {
      "jump": "i",
      "op": "JUMP"
    },
    "15388": {
      "op": "JUMPDEST"
    },
    "15389": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15395": {
      "op": "SWAP13"
    },
    "15396": {
      "op": "DUP14"
    },
    "15397": {
      "op": "AND"
    },
    "15398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15400": {
      "op": "DUP6"
    },
    "15401": {
      "op": "ADD"
    },
    "15402": {
      "op": "MSTORE"
    },
    "15403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15405": {
      "op": "DUP5"
    },
    "15406": {
      "op": "ADD"
    },
    "15407": {
      "op": "SWAP12"
    },
    "15408": {
      "op": "SWAP1"
    },
    "15409": {
      "op": "SWAP12"
    },
    "15410": {
      "op": "MSTORE"
    },
    "15411": {
      "op": "POP"
    },
    "15412": {
      "op": "POP"
    },
    "15413": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15415": {
      "op": "DUP2"
    },
    "15416": {
      "op": "ADD"
    },
    "15417": {
      "op": "SWAP8"
    },
    "15418": {
      "op": "SWAP1"
    },
    "15419": {
      "op": "SWAP8"
    },
    "15420": {
      "op": "MSTORE"
    },
    "15421": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15423": {
      "op": "SWAP6"
    },
    "15424": {
      "op": "SWAP1"
    },
    "15425": {
      "op": "SWAP6"
    },
    "15426": {
      "op": "AND"
    },
    "15427": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15429": {
      "op": "DUP8"
    },
    "15430": {
      "op": "ADD"
    },
    "15431": {
      "op": "MSTORE"
    },
    "15432": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15436": {
      "op": "SWAP4"
    },
    "15437": {
      "op": "SWAP1"
    },
    "15438": {
      "op": "SWAP4"
    },
    "15439": {
      "op": "AND"
    },
    "15440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15442": {
      "op": "DUP7"
    },
    "15443": {
      "op": "ADD"
    },
    "15444": {
      "op": "MSTORE"
    },
    "15445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15449": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15451": {
      "op": "SHL"
    },
    "15452": {
      "op": "SUB"
    },
    "15453": {
      "op": "SWAP2"
    },
    "15454": {
      "op": "SWAP1"
    },
    "15455": {
      "op": "SWAP2"
    },
    "15456": {
      "op": "AND"
    },
    "15457": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15459": {
      "op": "DUP6"
    },
    "15460": {
      "op": "ADD"
    },
    "15461": {
      "op": "MSTORE"
    },
    "15462": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15465": {
      "op": "SWAP1"
    },
    "15466": {
      "op": "DUP2"
    },
    "15467": {
      "op": "AND"
    },
    "15468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15470": {
      "op": "DUP6"
    },
    "15471": {
      "op": "ADD"
    },
    "15472": {
      "op": "MSTORE"
    },
    "15473": {
      "op": "AND"
    },
    "15474": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15477": {
      "op": "DUP4"
    },
    "15478": {
      "op": "ADD"
    },
    "15479": {
      "op": "MSTORE"
    },
    "15480": {
      "op": "SWAP1"
    },
    "15481": {
      "op": "SWAP3"
    },
    "15482": {
      "op": "AND"
    },
    "15483": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15486": {
      "op": "SWAP1"
    },
    "15487": {
      "op": "SWAP3"
    },
    "15488": {
      "op": "ADD"
    },
    "15489": {
      "op": "SWAP2"
    },
    "15490": {
      "op": "SWAP1"
    },
    "15491": {
      "op": "SWAP2"
    },
    "15492": {
      "op": "MSTORE"
    },
    "15493": {
      "op": "SWAP2"
    },
    "15494": {
      "op": "SWAP1"
    },
    "15495": {
      "op": "POP"
    },
    "15496": {
      "jump": "o",
      "op": "JUMP"
    },
    "15497": {
      "op": "JUMPDEST"
    },
    "15498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15500": {
      "op": "DUP2"
    },
    "15501": {
      "op": "MSTORE"
    },
    "15502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15504": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "15507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15509": {
      "op": "DUP4"
    },
    "15510": {
      "op": "ADD"
    },
    "15511": {
      "op": "DUP5"
    },
    "15512": {
      "op": "PUSH2",
      "value": "0x3854"
    },
    "15515": {
      "jump": "i",
      "op": "JUMP"
    },
    "15516": {
      "op": "JUMPDEST"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15521": {
      "op": "DUP1"
    },
    "15522": {
      "op": "DUP4"
    },
    "15523": {
      "op": "ADD"
    },
    "15524": {
      "op": "DUP2"
    },
    "15525": {
      "op": "DUP5"
    },
    "15526": {
      "op": "MSTORE"
    },
    "15527": {
      "op": "DUP1"
    },
    "15528": {
      "op": "DUP6"
    },
    "15529": {
      "op": "MLOAD"
    },
    "15530": {
      "op": "DUP1"
    },
    "15531": {
      "op": "DUP4"
    },
    "15532": {
      "op": "MSTORE"
    },
    "15533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15535": {
      "op": "DUP7"
    },
    "15536": {
      "op": "ADD"
    },
    "15537": {
      "op": "SWAP2"
    },
    "15538": {
      "op": "POP"
    },
    "15539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15541": {
      "op": "DUP2"
    },
    "15542": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15544": {
      "op": "SHL"
    },
    "15545": {
      "op": "DUP8"
    },
    "15546": {
      "op": "ADD"
    },
    "15547": {
      "op": "ADD"
    },
    "15548": {
      "op": "SWAP3"
    },
    "15549": {
      "op": "POP"
    },
    "15550": {
      "op": "DUP4"
    },
    "15551": {
      "op": "DUP8"
    },
    "15552": {
      "op": "ADD"
    },
    "15553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15555": {
      "op": "JUMPDEST"
    },
    "15556": {
      "op": "DUP3"
    },
    "15557": {
      "op": "DUP2"
    },
    "15558": {
      "op": "LT"
    },
    "15559": {
      "op": "ISZERO"
    },
    "15560": {
      "op": "PUSH2",
      "value": "0x3CF1"
    },
    "15563": {
      "op": "JUMPI"
    },
    "15564": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15566": {
      "op": "NOT"
    },
    "15567": {
      "op": "DUP9"
    },
    "15568": {
      "op": "DUP7"
    },
    "15569": {
      "op": "SUB"
    },
    "15570": {
      "op": "ADD"
    },
    "15571": {
      "op": "DUP5"
    },
    "15572": {
      "op": "MSTORE"
    },
    "15573": {
      "op": "PUSH2",
      "value": "0x3CDF"
    },
    "15576": {
      "op": "DUP6"
    },
    "15577": {
      "op": "DUP4"
    },
    "15578": {
      "op": "MLOAD"
    },
    "15579": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "15582": {
      "jump": "i",
      "op": "JUMP"
    },
    "15583": {
      "op": "JUMPDEST"
    },
    "15584": {
      "op": "SWAP5"
    },
    "15585": {
      "op": "POP"
    },
    "15586": {
      "op": "SWAP3"
    },
    "15587": {
      "op": "DUP6"
    },
    "15588": {
      "op": "ADD"
    },
    "15589": {
      "op": "SWAP3"
    },
    "15590": {
      "op": "SWAP1"
    },
    "15591": {
      "op": "DUP6"
    },
    "15592": {
      "op": "ADD"
    },
    "15593": {
      "op": "SWAP1"
    },
    "15594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15596": {
      "op": "ADD"
    },
    "15597": {
      "op": "PUSH2",
      "value": "0x3CC3"
    },
    "15600": {
      "op": "JUMP"
    },
    "15601": {
      "op": "JUMPDEST"
    },
    "15602": {
      "op": "POP"
    },
    "15603": {
      "op": "SWAP3"
    },
    "15604": {
      "op": "SWAP8"
    },
    "15605": {
      "op": "SWAP7"
    },
    "15606": {
      "op": "POP"
    },
    "15607": {
      "op": "POP"
    },
    "15608": {
      "op": "POP"
    },
    "15609": {
      "op": "POP"
    },
    "15610": {
      "op": "POP"
    },
    "15611": {
      "op": "POP"
    },
    "15612": {
      "op": "POP"
    },
    "15613": {
      "jump": "o",
      "op": "JUMP"
    },
    "15614": {
      "op": "JUMPDEST"
    },
    "15615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15617": {
      "op": "DUP1"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15620": {
      "op": "DUP1"
    },
    "15621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15623": {
      "op": "DUP1"
    },
    "15624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15626": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15628": {
      "op": "DUP9"
    },
    "15629": {
      "op": "DUP11"
    },
    "15630": {
      "op": "SUB"
    },
    "15631": {
      "op": "SLT"
    },
    "15632": {
      "op": "ISZERO"
    },
    "15633": {
      "op": "PUSH2",
      "value": "0x3D19"
    },
    "15636": {
      "op": "JUMPI"
    },
    "15637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15639": {
      "op": "DUP1"
    },
    "15640": {
      "op": "REVERT"
    },
    "15641": {
      "op": "JUMPDEST"
    },
    "15642": {
      "op": "DUP8"
    },
    "15643": {
      "op": "CALLDATALOAD"
    },
    "15644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15648": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15650": {
      "op": "SHL"
    },
    "15651": {
      "op": "SUB"
    },
    "15652": {
      "op": "DUP2"
    },
    "15653": {
      "op": "GT"
    },
    "15654": {
      "op": "ISZERO"
    },
    "15655": {
      "op": "PUSH2",
      "value": "0x3D2F"
    },
    "15658": {
      "op": "JUMPI"
    },
    "15659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15661": {
      "op": "DUP1"
    },
    "15662": {
      "op": "REVERT"
    },
    "15663": {
      "op": "JUMPDEST"
    },
    "15664": {
      "op": "PUSH2",
      "value": "0x3D3B"
    },
    "15667": {
      "op": "DUP11"
    },
    "15668": {
      "op": "DUP3"
    },
    "15669": {
      "op": "DUP12"
    },
    "15670": {
      "op": "ADD"
    },
    "15671": {
      "op": "PUSH2",
      "value": "0x39B9"
    },
    "15674": {
      "jump": "i",
      "op": "JUMP"
    },
    "15675": {
      "op": "JUMPDEST"
    },
    "15676": {
      "op": "SWAP1"
    },
    "15677": {
      "op": "SWAP9"
    },
    "15678": {
      "op": "POP"
    },
    "15679": {
      "op": "SWAP7"
    },
    "15680": {
      "op": "POP"
    },
    "15681": {
      "op": "PUSH2",
      "value": "0x3A7D"
    },
    "15684": {
      "op": "SWAP1"
    },
    "15685": {
      "op": "POP"
    },
    "15686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15688": {
      "op": "DUP10"
    },
    "15689": {
      "op": "ADD"
    },
    "15690": {
      "op": "PUSH2",
      "value": "0x3A14"
    },
    "15693": {
      "jump": "i",
      "op": "JUMP"
    },
    "15694": {
      "op": "JUMPDEST"
    },
    "15695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15697": {
      "op": "DUP1"
    },
    "15698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15702": {
      "op": "DUP5"
    },
    "15703": {
      "op": "DUP7"
    },
    "15704": {
      "op": "SUB"
    },
    "15705": {
      "op": "SLT"
    },
    "15706": {
      "op": "ISZERO"
    },
    "15707": {
      "op": "PUSH2",
      "value": "0x3D63"
    },
    "15710": {
      "op": "JUMPI"
    },
    "15711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15713": {
      "op": "DUP1"
    },
    "15714": {
      "op": "REVERT"
    },
    "15715": {
      "op": "JUMPDEST"
    },
    "15716": {
      "op": "DUP4"
    },
    "15717": {
      "op": "CALLDATALOAD"
    },
    "15718": {
      "op": "SWAP3"
    },
    "15719": {
      "op": "POP"
    },
    "15720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15722": {
      "op": "DUP5"
    },
    "15723": {
      "op": "ADD"
    },
    "15724": {
      "op": "CALLDATALOAD"
    },
    "15725": {
      "op": "SWAP2"
    },
    "15726": {
      "op": "POP"
    },
    "15727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15729": {
      "op": "DUP5"
    },
    "15730": {
      "op": "ADD"
    },
    "15731": {
      "op": "CALLDATALOAD"
    },
    "15732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15738": {
      "op": "SHL"
    },
    "15739": {
      "op": "SUB"
    },
    "15740": {
      "op": "DUP2"
    },
    "15741": {
      "op": "GT"
    },
    "15742": {
      "op": "ISZERO"
    },
    "15743": {
      "op": "PUSH2",
      "value": "0x3D87"
    },
    "15746": {
      "op": "JUMPI"
    },
    "15747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15749": {
      "op": "DUP1"
    },
    "15750": {
      "op": "REVERT"
    },
    "15751": {
      "op": "JUMPDEST"
    },
    "15752": {
      "op": "PUSH2",
      "value": "0x3D93"
    },
    "15755": {
      "op": "DUP7"
    },
    "15756": {
      "op": "DUP3"
    },
    "15757": {
      "op": "DUP8"
    },
    "15758": {
      "op": "ADD"
    },
    "15759": {
      "op": "PUSH2",
      "value": "0x36CC"
    },
    "15762": {
      "jump": "i",
      "op": "JUMP"
    },
    "15763": {
      "op": "JUMPDEST"
    },
    "15764": {
      "op": "SWAP2"
    },
    "15765": {
      "op": "POP"
    },
    "15766": {
      "op": "POP"
    },
    "15767": {
      "op": "SWAP3"
    },
    "15768": {
      "op": "POP"
    },
    "15769": {
      "op": "SWAP3"
    },
    "15770": {
      "op": "POP"
    },
    "15771": {
      "op": "SWAP3"
    },
    "15772": {
      "jump": "o",
      "op": "JUMP"
    },
    "15773": {
      "op": "JUMPDEST"
    },
    "15774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15778": {
      "op": "DUP3"
    },
    "15779": {
      "op": "DUP5"
    },
    "15780": {
      "op": "SUB"
    },
    "15781": {
      "op": "SLT"
    },
    "15782": {
      "op": "ISZERO"
    },
    "15783": {
      "op": "PUSH2",
      "value": "0x3DAF"
    },
    "15786": {
      "op": "JUMPI"
    },
    "15787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15789": {
      "op": "DUP1"
    },
    "15790": {
      "op": "REVERT"
    },
    "15791": {
      "op": "JUMPDEST"
    },
    "15792": {
      "op": "DUP2"
    },
    "15793": {
      "op": "CALLDATALOAD"
    },
    "15794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15800": {
      "op": "SHL"
    },
    "15801": {
      "op": "SUB"
    },
    "15802": {
      "op": "DUP2"
    },
    "15803": {
      "op": "GT"
    },
    "15804": {
      "op": "ISZERO"
    },
    "15805": {
      "op": "PUSH2",
      "value": "0x3DC5"
    },
    "15808": {
      "op": "JUMPI"
    },
    "15809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15811": {
      "op": "DUP1"
    },
    "15812": {
      "op": "REVERT"
    },
    "15813": {
      "op": "JUMPDEST"
    },
    "15814": {
      "op": "PUSH2",
      "value": "0x3DD1"
    },
    "15817": {
      "op": "DUP5"
    },
    "15818": {
      "op": "DUP3"
    },
    "15819": {
      "op": "DUP6"
    },
    "15820": {
      "op": "ADD"
    },
    "15821": {
      "op": "PUSH2",
      "value": "0x3B17"
    },
    "15824": {
      "jump": "i",
      "op": "JUMP"
    },
    "15825": {
      "op": "JUMPDEST"
    },
    "15826": {
      "op": "SWAP5"
    },
    "15827": {
      "op": "SWAP4"
    },
    "15828": {
      "op": "POP"
    },
    "15829": {
      "op": "POP"
    },
    "15830": {
      "op": "POP"
    },
    "15831": {
      "op": "POP"
    },
    "15832": {
      "jump": "o",
      "op": "JUMP"
    },
    "15833": {
      "op": "JUMPDEST"
    },
    "15834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15836": {
      "op": "DUP1"
    },
    "15837": {
      "op": "DUP3"
    },
    "15838": {
      "op": "MSTORE"
    },
    "15839": {
      "op": "DUP3"
    },
    "15840": {
      "op": "MLOAD"
    },
    "15841": {
      "op": "DUP3"
    },
    "15842": {
      "op": "DUP3"
    },
    "15843": {
      "op": "ADD"
    },
    "15844": {
      "op": "DUP2"
    },
    "15845": {
      "op": "SWAP1"
    },
    "15846": {
      "op": "MSTORE"
    },
    "15847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15849": {
      "op": "SWAP2"
    },
    "15850": {
      "op": "SWAP1"
    },
    "15851": {
      "op": "DUP5"
    },
    "15852": {
      "op": "DUP3"
    },
    "15853": {
      "op": "ADD"
    },
    "15854": {
      "op": "SWAP1"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15857": {
      "op": "DUP6"
    },
    "15858": {
      "op": "ADD"
    },
    "15859": {
      "op": "SWAP1"
    },
    "15860": {
      "op": "DUP5"
    },
    "15861": {
      "op": "JUMPDEST"
    },
    "15862": {
      "op": "DUP2"
    },
    "15863": {
      "op": "DUP2"
    },
    "15864": {
      "op": "LT"
    },
    "15865": {
      "op": "ISZERO"
    },
    "15866": {
      "op": "PUSH2",
      "value": "0x3E15"
    },
    "15869": {
      "op": "JUMPI"
    },
    "15870": {
      "op": "DUP4"
    },
    "15871": {
      "op": "MLOAD"
    },
    "15872": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15875": {
      "op": "AND"
    },
    "15876": {
      "op": "DUP4"
    },
    "15877": {
      "op": "MSTORE"
    },
    "15878": {
      "op": "SWAP3"
    },
    "15879": {
      "op": "DUP5"
    },
    "15880": {
      "op": "ADD"
    },
    "15881": {
      "op": "SWAP3"
    },
    "15882": {
      "op": "SWAP2"
    },
    "15883": {
      "op": "DUP5"
    },
    "15884": {
      "op": "ADD"
    },
    "15885": {
      "op": "SWAP2"
    },
    "15886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15888": {
      "op": "ADD"
    },
    "15889": {
      "op": "PUSH2",
      "value": "0x3DF5"
    },
    "15892": {
      "op": "JUMP"
    },
    "15893": {
      "op": "JUMPDEST"
    },
    "15894": {
      "op": "POP"
    },
    "15895": {
      "op": "SWAP1"
    },
    "15896": {
      "op": "SWAP7"
    },
    "15897": {
      "op": "SWAP6"
    },
    "15898": {
      "op": "POP"
    },
    "15899": {
      "op": "POP"
    },
    "15900": {
      "op": "POP"
    },
    "15901": {
      "op": "POP"
    },
    "15902": {
      "op": "POP"
    },
    "15903": {
      "op": "POP"
    },
    "15904": {
      "jump": "o",
      "op": "JUMP"
    },
    "15905": {
      "op": "JUMPDEST"
    },
    "15906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15908": {
      "op": "DUP2"
    },
    "15909": {
      "op": "DUP2"
    },
    "15910": {
      "op": "SHR"
    },
    "15911": {
      "op": "SWAP1"
    },
    "15912": {
      "op": "DUP3"
    },
    "15913": {
      "op": "AND"
    },
    "15914": {
      "op": "DUP1"
    },
    "15915": {
      "op": "PUSH2",
      "value": "0x3E35"
    },
    "15918": {
      "op": "JUMPI"
    },
    "15919": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15921": {
      "op": "DUP3"
    },
    "15922": {
      "op": "AND"
    },
    "15923": {
      "op": "SWAP2"
    },
    "15924": {
      "op": "POP"
    },
    "15925": {
      "op": "JUMPDEST"
    },
    "15926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15928": {
      "op": "DUP3"
    },
    "15929": {
      "op": "LT"
    },
    "15930": {
      "op": "DUP2"
    },
    "15931": {
      "op": "SUB"
    },
    "15932": {
      "op": "PUSH2",
      "value": "0x3E55"
    },
    "15935": {
      "op": "JUMPI"
    },
    "15936": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15943": {
      "op": "SHL"
    },
    "15944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15946": {
      "op": "MSTORE"
    },
    "15947": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15949": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15951": {
      "op": "MSTORE"
    },
    "15952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15956": {
      "op": "REVERT"
    },
    "15957": {
      "op": "JUMPDEST"
    },
    "15958": {
      "op": "POP"
    },
    "15959": {
      "op": "SWAP2"
    },
    "15960": {
      "op": "SWAP1"
    },
    "15961": {
      "op": "POP"
    },
    "15962": {
      "jump": "o",
      "op": "JUMP"
    },
    "15963": {
      "op": "JUMPDEST"
    },
    "15964": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15971": {
      "op": "SHL"
    },
    "15972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15974": {
      "op": "MSTORE"
    },
    "15975": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15977": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15979": {
      "op": "MSTORE"
    },
    "15980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15984": {
      "op": "REVERT"
    },
    "15985": {
      "op": "JUMPDEST"
    },
    "15986": {
      "op": "DUP2"
    },
    "15987": {
      "op": "MLOAD"
    },
    "15988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15990": {
      "op": "SWAP1"
    },
    "15991": {
      "op": "DUP3"
    },
    "15992": {
      "op": "SWAP1"
    },
    "15993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15995": {
      "op": "DUP1"
    },
    "15996": {
      "op": "DUP7"
    },
    "15997": {
      "op": "ADD"
    },
    "15998": {
      "op": "DUP5"
    },
    "15999": {
      "op": "JUMPDEST"
    },
    "16000": {
      "op": "DUP4"
    },
    "16001": {
      "op": "DUP2"
    },
    "16002": {
      "op": "LT"
    },
    "16003": {
      "op": "ISZERO"
    },
    "16004": {
      "op": "PUSH2",
      "value": "0x3E9B"
    },
    "16007": {
      "op": "JUMPI"
    },
    "16008": {
      "op": "DUP2"
    },
    "16009": {
      "op": "MLOAD"
    },
    "16010": {
      "op": "DUP6"
    },
    "16011": {
      "op": "MSTORE"
    },
    "16012": {
      "op": "SWAP4"
    },
    "16013": {
      "op": "DUP3"
    },
    "16014": {
      "op": "ADD"
    },
    "16015": {
      "op": "SWAP4"
    },
    "16016": {
      "op": "SWAP1"
    },
    "16017": {
      "op": "DUP3"
    },
    "16018": {
      "op": "ADD"
    },
    "16019": {
      "op": "SWAP1"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16022": {
      "op": "ADD"
    },
    "16023": {
      "op": "PUSH2",
      "value": "0x3E7F"
    },
    "16026": {
      "op": "JUMP"
    },
    "16027": {
      "op": "JUMPDEST"
    },
    "16028": {
      "op": "POP"
    },
    "16029": {
      "op": "SWAP3"
    },
    "16030": {
      "op": "SWAP7"
    },
    "16031": {
      "op": "SWAP6"
    },
    "16032": {
      "op": "POP"
    },
    "16033": {
      "op": "POP"
    },
    "16034": {
      "op": "POP"
    },
    "16035": {
      "op": "POP"
    },
    "16036": {
      "op": "POP"
    },
    "16037": {
      "op": "POP"
    },
    "16038": {
      "jump": "o",
      "op": "JUMP"
    },
    "16039": {
      "op": "JUMPDEST"
    },
    "16040": {
      "op": "DUP5"
    },
    "16041": {
      "op": "DUP2"
    },
    "16042": {
      "op": "MSTORE"
    },
    "16043": {
      "op": "DUP4"
    },
    "16044": {
      "op": "ISZERO"
    },
    "16045": {
      "op": "ISZERO"
    },
    "16046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16048": {
      "op": "DUP3"
    },
    "16049": {
      "op": "ADD"
    },
    "16050": {
      "op": "MSTORE"
    },
    "16051": {
      "op": "DUP3"
    },
    "16052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16054": {
      "op": "DUP3"
    },
    "16055": {
      "op": "ADD"
    },
    "16056": {
      "op": "MSTORE"
    },
    "16057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16061": {
      "op": "DUP3"
    },
    "16062": {
      "op": "ADD"
    },
    "16063": {
      "op": "MSTORE"
    },
    "16064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16066": {
      "op": "PUSH2",
      "value": "0x3ECE"
    },
    "16069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16071": {
      "op": "DUP4"
    },
    "16072": {
      "op": "ADD"
    },
    "16073": {
      "op": "DUP5"
    },
    "16074": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "16077": {
      "jump": "i",
      "op": "JUMP"
    },
    "16078": {
      "op": "JUMPDEST"
    },
    "16079": {
      "op": "SWAP7"
    },
    "16080": {
      "op": "SWAP6"
    },
    "16081": {
      "op": "POP"
    },
    "16082": {
      "op": "POP"
    },
    "16083": {
      "op": "POP"
    },
    "16084": {
      "op": "POP"
    },
    "16085": {
      "op": "POP"
    },
    "16086": {
      "op": "POP"
    },
    "16087": {
      "jump": "o",
      "op": "JUMP"
    },
    "16088": {
      "op": "JUMPDEST"
    },
    "16089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16093": {
      "op": "DUP3"
    },
    "16094": {
      "op": "DUP5"
    },
    "16095": {
      "op": "SUB"
    },
    "16096": {
      "op": "SLT"
    },
    "16097": {
      "op": "ISZERO"
    },
    "16098": {
      "op": "PUSH2",
      "value": "0x3EEA"
    },
    "16101": {
      "op": "JUMPI"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16104": {
      "op": "DUP1"
    },
    "16105": {
      "op": "REVERT"
    },
    "16106": {
      "op": "JUMPDEST"
    },
    "16107": {
      "op": "DUP2"
    },
    "16108": {
      "op": "MLOAD"
    },
    "16109": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "16112": {
      "op": "DUP2"
    },
    "16113": {
      "op": "PUSH2",
      "value": "0x3AE5"
    },
    "16116": {
      "jump": "i",
      "op": "JUMP"
    },
    "16117": {
      "op": "JUMPDEST"
    },
    "16118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16122": {
      "op": "DUP3"
    },
    "16123": {
      "op": "DUP5"
    },
    "16124": {
      "op": "SUB"
    },
    "16125": {
      "op": "SLT"
    },
    "16126": {
      "op": "ISZERO"
    },
    "16127": {
      "op": "PUSH2",
      "value": "0x3F07"
    },
    "16130": {
      "op": "JUMPI"
    },
    "16131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16133": {
      "op": "DUP1"
    },
    "16134": {
      "op": "REVERT"
    },
    "16135": {
      "op": "JUMPDEST"
    },
    "16136": {
      "op": "DUP2"
    },
    "16137": {
      "op": "MLOAD"
    },
    "16138": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "16141": {
      "op": "DUP2"
    },
    "16142": {
      "op": "PUSH2",
      "value": "0x374B"
    },
    "16145": {
      "jump": "i",
      "op": "JUMP"
    },
    "16146": {
      "op": "JUMPDEST"
    },
    "16147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16151": {
      "op": "DUP3"
    },
    "16152": {
      "op": "DUP5"
    },
    "16153": {
      "op": "SUB"
    },
    "16154": {
      "op": "SLT"
    },
    "16155": {
      "op": "ISZERO"
    },
    "16156": {
      "op": "PUSH2",
      "value": "0x3F24"
    },
    "16159": {
      "op": "JUMPI"
    },
    "16160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16162": {
      "op": "DUP1"
    },
    "16163": {
      "op": "REVERT"
    },
    "16164": {
      "op": "JUMPDEST"
    },
    "16165": {
      "op": "POP"
    },
    "16166": {
      "op": "MLOAD"
    },
    "16167": {
      "op": "SWAP2"
    },
    "16168": {
      "op": "SWAP1"
    },
    "16169": {
      "op": "POP"
    },
    "16170": {
      "jump": "o",
      "op": "JUMP"
    },
    "16171": {
      "op": "JUMPDEST"
    },
    "16172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16174": {
      "op": "DUP1"
    },
    "16175": {
      "op": "DUP3"
    },
    "16176": {
      "op": "MSTORE"
    },
    "16177": {
      "op": "DUP2"
    },
    "16178": {
      "op": "DUP2"
    },
    "16179": {
      "op": "ADD"
    },
    "16180": {
      "op": "MSTORE"
    },
    "16181": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "16214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16216": {
      "op": "DUP3"
    },
    "16217": {
      "op": "ADD"
    },
    "16218": {
      "op": "MSTORE"
    },
    "16219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16221": {
      "op": "ADD"
    },
    "16222": {
      "op": "SWAP1"
    },
    "16223": {
      "jump": "o",
      "op": "JUMP"
    },
    "16224": {
      "op": "JUMPDEST"
    },
    "16225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16227": {
      "op": "DUP2"
    },
    "16228": {
      "op": "MSTORE"
    },
    "16229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16231": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "16234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16236": {
      "op": "DUP4"
    },
    "16237": {
      "op": "ADD"
    },
    "16238": {
      "op": "DUP5"
    },
    "16239": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "16242": {
      "jump": "i",
      "op": "JUMP"
    },
    "16243": {
      "op": "JUMPDEST"
    },
    "16244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16246": {
      "op": "DUP2"
    },
    "16247": {
      "op": "SLOAD"
    },
    "16248": {
      "op": "PUSH2",
      "value": "0x3F80"
    },
    "16251": {
      "op": "DUP2"
    },
    "16252": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "16255": {
      "jump": "i",
      "op": "JUMP"
    },
    "16256": {
      "op": "JUMPDEST"
    },
    "16257": {
      "op": "DUP1"
    },
    "16258": {
      "op": "DUP6"
    },
    "16259": {
      "op": "MSTORE"
    },
    "16260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16264": {
      "op": "DUP4"
    },
    "16265": {
      "op": "DUP2"
    },
    "16266": {
      "op": "AND"
    },
    "16267": {
      "op": "DUP1"
    },
    "16268": {
      "op": "ISZERO"
    },
    "16269": {
      "op": "PUSH2",
      "value": "0x3F9D"
    },
    "16272": {
      "op": "JUMPI"
    },
    "16273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16275": {
      "op": "DUP2"
    },
    "16276": {
      "op": "EQ"
    },
    "16277": {
      "op": "PUSH2",
      "value": "0x3FB7"
    },
    "16280": {
      "op": "JUMPI"
    },
    "16281": {
      "op": "PUSH2",
      "value": "0x3FE5"
    },
    "16284": {
      "op": "JUMP"
    },
    "16285": {
      "op": "JUMPDEST"
    },
    "16286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16288": {
      "op": "NOT"
    },
    "16289": {
      "op": "DUP6"
    },
    "16290": {
      "op": "AND"
    },
    "16291": {
      "op": "DUP9"
    },
    "16292": {
      "op": "DUP5"
    },
    "16293": {
      "op": "ADD"
    },
    "16294": {
      "op": "MSTORE"
    },
    "16295": {
      "op": "DUP4"
    },
    "16296": {
      "op": "ISZERO"
    },
    "16297": {
      "op": "ISZERO"
    },
    "16298": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16300": {
      "op": "SHL"
    },
    "16301": {
      "op": "DUP9"
    },
    "16302": {
      "op": "ADD"
    },
    "16303": {
      "op": "DUP4"
    },
    "16304": {
      "op": "ADD"
    },
    "16305": {
      "op": "SWAP6"
    },
    "16306": {
      "op": "POP"
    },
    "16307": {
      "op": "PUSH2",
      "value": "0x3FE5"
    },
    "16310": {
      "op": "JUMP"
    },
    "16311": {
      "op": "JUMPDEST"
    },
    "16312": {
      "op": "DUP7"
    },
    "16313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16315": {
      "op": "MSTORE"
    },
    "16316": {
      "op": "DUP3"
    },
    "16317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16319": {
      "op": "KECCAK256"
    },
    "16320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16322": {
      "op": "JUMPDEST"
    },
    "16323": {
      "op": "DUP6"
    },
    "16324": {
      "op": "DUP2"
    },
    "16325": {
      "op": "LT"
    },
    "16326": {
      "op": "ISZERO"
    },
    "16327": {
      "op": "PUSH2",
      "value": "0x3FDD"
    },
    "16330": {
      "op": "JUMPI"
    },
    "16331": {
      "op": "DUP2"
    },
    "16332": {
      "op": "SLOAD"
    },
    "16333": {
      "op": "DUP11"
    },
    "16334": {
      "op": "DUP3"
    },
    "16335": {
      "op": "ADD"
    },
    "16336": {
      "op": "DUP7"
    },
    "16337": {
      "op": "ADD"
    },
    "16338": {
      "op": "MSTORE"
    },
    "16339": {
      "op": "SWAP1"
    },
    "16340": {
      "op": "DUP4"
    },
    "16341": {
      "op": "ADD"
    },
    "16342": {
      "op": "SWAP1"
    },
    "16343": {
      "op": "DUP5"
    },
    "16344": {
      "op": "ADD"
    },
    "16345": {
      "op": "PUSH2",
      "value": "0x3FC2"
    },
    "16348": {
      "op": "JUMP"
    },
    "16349": {
      "op": "JUMPDEST"
    },
    "16350": {
      "op": "DUP10"
    },
    "16351": {
      "op": "ADD"
    },
    "16352": {
      "op": "DUP5"
    },
    "16353": {
      "op": "ADD"
    },
    "16354": {
      "op": "SWAP7"
    },
    "16355": {
      "op": "POP"
    },
    "16356": {
      "op": "POP"
    },
    "16357": {
      "op": "JUMPDEST"
    },
    "16358": {
      "op": "POP"
    },
    "16359": {
      "op": "POP"
    },
    "16360": {
      "op": "POP"
    },
    "16361": {
      "op": "POP"
    },
    "16362": {
      "op": "POP"
    },
    "16363": {
      "op": "SWAP3"
    },
    "16364": {
      "op": "SWAP2"
    },
    "16365": {
      "op": "POP"
    },
    "16366": {
      "op": "POP"
    },
    "16367": {
      "jump": "o",
      "op": "JUMP"
    },
    "16368": {
      "op": "JUMPDEST"
    },
    "16369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16371": {
      "op": "DUP2"
    },
    "16372": {
      "op": "MSTORE"
    },
    "16373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16375": {
      "op": "PUSH2",
      "value": "0x384D"
    },
    "16378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16380": {
      "op": "DUP4"
    },
    "16381": {
      "op": "ADD"
    },
    "16382": {
      "op": "DUP5"
    },
    "16383": {
      "op": "PUSH2",
      "value": "0x3F73"
    },
    "16386": {
      "jump": "i",
      "op": "JUMP"
    },
    "16387": {
      "op": "JUMPDEST"
    },
    "16388": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16390": {
      "op": "DUP3"
    },
    "16391": {
      "op": "GT"
    },
    "16392": {
      "op": "ISZERO"
    },
    "16393": {
      "op": "PUSH2",
      "value": "0x404D"
    },
    "16396": {
      "op": "JUMPI"
    },
    "16397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16399": {
      "op": "DUP2"
    },
    "16400": {
      "op": "DUP2"
    },
    "16401": {
      "op": "MSTORE"
    },
    "16402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16404": {
      "op": "DUP2"
    },
    "16405": {
      "op": "KECCAK256"
    },
    "16406": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16408": {
      "op": "DUP6"
    },
    "16409": {
      "op": "ADD"
    },
    "16410": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16412": {
      "op": "SHR"
    },
    "16413": {
      "op": "DUP2"
    },
    "16414": {
      "op": "ADD"
    },
    "16415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16417": {
      "op": "DUP7"
    },
    "16418": {
      "op": "LT"
    },
    "16419": {
      "op": "ISZERO"
    },
    "16420": {
      "op": "PUSH2",
      "value": "0x402A"
    },
    "16423": {
      "op": "JUMPI"
    },
    "16424": {
      "op": "POP"
    },
    "16425": {
      "op": "DUP1"
    },
    "16426": {
      "op": "JUMPDEST"
    },
    "16427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16429": {
      "op": "DUP6"
    },
    "16430": {
      "op": "ADD"
    },
    "16431": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16433": {
      "op": "SHR"
    },
    "16434": {
      "op": "DUP3"
    },
    "16435": {
      "op": "ADD"
    },
    "16436": {
      "op": "SWAP2"
    },
    "16437": {
      "op": "POP"
    },
    "16438": {
      "op": "JUMPDEST"
    },
    "16439": {
      "op": "DUP2"
    },
    "16440": {
      "op": "DUP2"
    },
    "16441": {
      "op": "LT"
    },
    "16442": {
      "op": "ISZERO"
    },
    "16443": {
      "op": "PUSH2",
      "value": "0x4049"
    },
    "16446": {
      "op": "JUMPI"
    },
    "16447": {
      "op": "DUP3"
    },
    "16448": {
      "op": "DUP2"
    },
    "16449": {
      "op": "SSTORE"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16452": {
      "op": "ADD"
    },
    "16453": {
      "op": "PUSH2",
      "value": "0x4036"
    },
    "16456": {
      "op": "JUMP"
    },
    "16457": {
      "op": "JUMPDEST"
    },
    "16458": {
      "op": "POP"
    },
    "16459": {
      "op": "POP"
    },
    "16460": {
      "op": "POP"
    },
    "16461": {
      "op": "JUMPDEST"
    },
    "16462": {
      "op": "POP"
    },
    "16463": {
      "op": "POP"
    },
    "16464": {
      "op": "POP"
    },
    "16465": {
      "jump": "o",
      "op": "JUMP"
    },
    "16466": {
      "op": "JUMPDEST"
    },
    "16467": {
      "op": "DUP2"
    },
    "16468": {
      "op": "MLOAD"
    },
    "16469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16475": {
      "op": "SHL"
    },
    "16476": {
      "op": "SUB"
    },
    "16477": {
      "op": "DUP2"
    },
    "16478": {
      "op": "GT"
    },
    "16479": {
      "op": "ISZERO"
    },
    "16480": {
      "op": "PUSH2",
      "value": "0x406B"
    },
    "16483": {
      "op": "JUMPI"
    },
    "16484": {
      "op": "PUSH2",
      "value": "0x406B"
    },
    "16487": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "16490": {
      "jump": "i",
      "op": "JUMP"
    },
    "16491": {
      "op": "JUMPDEST"
    },
    "16492": {
      "op": "PUSH2",
      "value": "0x407F"
    },
    "16495": {
      "op": "DUP2"
    },
    "16496": {
      "op": "PUSH2",
      "value": "0x4079"
    },
    "16499": {
      "op": "DUP5"
    },
    "16500": {
      "op": "SLOAD"
    },
    "16501": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "16504": {
      "jump": "i",
      "op": "JUMP"
    },
    "16505": {
      "op": "JUMPDEST"
    },
    "16506": {
      "op": "DUP5"
    },
    "16507": {
      "op": "PUSH2",
      "value": "0x4003"
    },
    "16510": {
      "jump": "i",
      "op": "JUMP"
    },
    "16511": {
      "op": "JUMPDEST"
    },
    "16512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16514": {
      "op": "DUP1"
    },
    "16515": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16517": {
      "op": "DUP4"
    },
    "16518": {
      "op": "GT"
    },
    "16519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16521": {
      "op": "DUP2"
    },
    "16522": {
      "op": "EQ"
    },
    "16523": {
      "op": "PUSH2",
      "value": "0x40B4"
    },
    "16526": {
      "op": "JUMPI"
    },
    "16527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16529": {
      "op": "DUP5"
    },
    "16530": {
      "op": "ISZERO"
    },
    "16531": {
      "op": "PUSH2",
      "value": "0x409C"
    },
    "16534": {
      "op": "JUMPI"
    },
    "16535": {
      "op": "POP"
    },
    "16536": {
      "op": "DUP6"
    },
    "16537": {
      "op": "DUP4"
    },
    "16538": {
      "op": "ADD"
    },
    "16539": {
      "op": "MLOAD"
    },
    "16540": {
      "op": "JUMPDEST"
    },
    "16541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16543": {
      "op": "NOT"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16546": {
      "op": "DUP7"
    },
    "16547": {
      "op": "SWAP1"
    },
    "16548": {
      "op": "SHL"
    },
    "16549": {
      "op": "SHR"
    },
    "16550": {
      "op": "NOT"
    },
    "16551": {
      "op": "AND"
    },
    "16552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16554": {
      "op": "DUP6"
    },
    "16555": {
      "op": "SWAP1"
    },
    "16556": {
      "op": "SHL"
    },
    "16557": {
      "op": "OR"
    },
    "16558": {
      "op": "DUP6"
    },
    "16559": {
      "op": "SSTORE"
    },
    "16560": {
      "op": "PUSH2",
      "value": "0x4049"
    },
    "16563": {
      "op": "JUMP"
    },
    "16564": {
      "op": "JUMPDEST"
    },
    "16565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16567": {
      "op": "DUP6"
    },
    "16568": {
      "op": "DUP2"
    },
    "16569": {
      "op": "MSTORE"
    },
    "16570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16572": {
      "op": "DUP2"
    },
    "16573": {
      "op": "KECCAK256"
    },
    "16574": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16576": {
      "op": "NOT"
    },
    "16577": {
      "op": "DUP7"
    },
    "16578": {
      "op": "AND"
    },
    "16579": {
      "op": "SWAP2"
    },
    "16580": {
      "op": "JUMPDEST"
    },
    "16581": {
      "op": "DUP3"
    },
    "16582": {
      "op": "DUP2"
    },
    "16583": {
      "op": "LT"
    },
    "16584": {
      "op": "ISZERO"
    },
    "16585": {
      "op": "PUSH2",
      "value": "0x40E3"
    },
    "16588": {
      "op": "JUMPI"
    },
    "16589": {
      "op": "DUP9"
    },
    "16590": {
      "op": "DUP7"
    },
    "16591": {
      "op": "ADD"
    },
    "16592": {
      "op": "MLOAD"
    },
    "16593": {
      "op": "DUP3"
    },
    "16594": {
      "op": "SSTORE"
    },
    "16595": {
      "op": "SWAP5"
    },
    "16596": {
      "op": "DUP5"
    },
    "16597": {
      "op": "ADD"
    },
    "16598": {
      "op": "SWAP5"
    },
    "16599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16601": {
      "op": "SWAP1"
    },
    "16602": {
      "op": "SWAP2"
    },
    "16603": {
      "op": "ADD"
    },
    "16604": {
      "op": "SWAP1"
    },
    "16605": {
      "op": "DUP5"
    },
    "16606": {
      "op": "ADD"
    },
    "16607": {
      "op": "PUSH2",
      "value": "0x40C4"
    },
    "16610": {
      "op": "JUMP"
    },
    "16611": {
      "op": "JUMPDEST"
    },
    "16612": {
      "op": "POP"
    },
    "16613": {
      "op": "DUP6"
    },
    "16614": {
      "op": "DUP3"
    },
    "16615": {
      "op": "LT"
    },
    "16616": {
      "op": "ISZERO"
    },
    "16617": {
      "op": "PUSH2",
      "value": "0x4101"
    },
    "16620": {
      "op": "JUMPI"
    },
    "16621": {
      "op": "DUP8"
    },
    "16622": {
      "op": "DUP6"
    },
    "16623": {
      "op": "ADD"
    },
    "16624": {
      "op": "MLOAD"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16627": {
      "op": "NOT"
    },
    "16628": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16630": {
      "op": "DUP9"
    },
    "16631": {
      "op": "SWAP1"
    },
    "16632": {
      "op": "SHL"
    },
    "16633": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "16635": {
      "op": "AND"
    },
    "16636": {
      "op": "SHR"
    },
    "16637": {
      "op": "NOT"
    },
    "16638": {
      "op": "AND"
    },
    "16639": {
      "op": "DUP2"
    },
    "16640": {
      "op": "SSTORE"
    },
    "16641": {
      "op": "JUMPDEST"
    },
    "16642": {
      "op": "POP"
    },
    "16643": {
      "op": "POP"
    },
    "16644": {
      "op": "POP"
    },
    "16645": {
      "op": "POP"
    },
    "16646": {
      "op": "POP"
    },
    "16647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16649": {
      "op": "SWAP1"
    },
    "16650": {
      "op": "DUP2"
    },
    "16651": {
      "op": "SHL"
    },
    "16652": {
      "op": "ADD"
    },
    "16653": {
      "op": "SWAP1"
    },
    "16654": {
      "op": "SSTORE"
    },
    "16655": {
      "op": "POP"
    },
    "16656": {
      "jump": "o",
      "op": "JUMP"
    },
    "16657": {
      "op": "JUMPDEST"
    },
    "16658": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16665": {
      "op": "SHL"
    },
    "16666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16668": {
      "op": "MSTORE"
    },
    "16669": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16671": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16673": {
      "op": "MSTORE"
    },
    "16674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16678": {
      "op": "REVERT"
    },
    "16679": {
      "op": "JUMPDEST"
    },
    "16680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16682": {
      "op": "DUP3"
    },
    "16683": {
      "op": "NOT"
    },
    "16684": {
      "op": "DUP3"
    },
    "16685": {
      "op": "GT"
    },
    "16686": {
      "op": "ISZERO"
    },
    "16687": {
      "op": "PUSH2",
      "value": "0x413A"
    },
    "16690": {
      "op": "JUMPI"
    },
    "16691": {
      "op": "PUSH2",
      "value": "0x413A"
    },
    "16694": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "16697": {
      "jump": "i",
      "op": "JUMP"
    },
    "16698": {
      "op": "JUMPDEST"
    },
    "16699": {
      "op": "POP"
    },
    "16700": {
      "op": "ADD"
    },
    "16701": {
      "op": "SWAP1"
    },
    "16702": {
      "jump": "o",
      "op": "JUMP"
    },
    "16703": {
      "op": "JUMPDEST"
    },
    "16704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16706": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16709": {
      "op": "DUP4"
    },
    "16710": {
      "op": "DUP2"
    },
    "16711": {
      "op": "AND"
    },
    "16712": {
      "op": "SWAP1"
    },
    "16713": {
      "op": "DUP4"
    },
    "16714": {
      "op": "AND"
    },
    "16715": {
      "op": "DUP2"
    },
    "16716": {
      "op": "DUP2"
    },
    "16717": {
      "op": "LT"
    },
    "16718": {
      "op": "ISZERO"
    },
    "16719": {
      "op": "PUSH2",
      "value": "0x415A"
    },
    "16722": {
      "op": "JUMPI"
    },
    "16723": {
      "op": "PUSH2",
      "value": "0x415A"
    },
    "16726": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "16729": {
      "jump": "i",
      "op": "JUMP"
    },
    "16730": {
      "op": "JUMPDEST"
    },
    "16731": {
      "op": "SUB"
    },
    "16732": {
      "op": "SWAP4"
    },
    "16733": {
      "op": "SWAP3"
    },
    "16734": {
      "op": "POP"
    },
    "16735": {
      "op": "POP"
    },
    "16736": {
      "op": "POP"
    },
    "16737": {
      "jump": "o",
      "op": "JUMP"
    },
    "16738": {
      "op": "JUMPDEST"
    },
    "16739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16741": {
      "op": "DUP3"
    },
    "16742": {
      "op": "DUP3"
    },
    "16743": {
      "op": "LT"
    },
    "16744": {
      "op": "ISZERO"
    },
    "16745": {
      "op": "PUSH2",
      "value": "0x4174"
    },
    "16748": {
      "op": "JUMPI"
    },
    "16749": {
      "op": "PUSH2",
      "value": "0x4174"
    },
    "16752": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "16755": {
      "jump": "i",
      "op": "JUMP"
    },
    "16756": {
      "op": "JUMPDEST"
    },
    "16757": {
      "op": "POP"
    },
    "16758": {
      "op": "SUB"
    },
    "16759": {
      "op": "SWAP1"
    },
    "16760": {
      "jump": "o",
      "op": "JUMP"
    },
    "16761": {
      "op": "JUMPDEST"
    },
    "16762": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16768": {
      "op": "DUP6"
    },
    "16769": {
      "op": "AND"
    },
    "16770": {
      "op": "DUP2"
    },
    "16771": {
      "op": "MSTORE"
    },
    "16772": {
      "op": "DUP4"
    },
    "16773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16775": {
      "op": "DUP3"
    },
    "16776": {
      "op": "ADD"
    },
    "16777": {
      "op": "MSTORE"
    },
    "16778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16782": {
      "op": "DUP3"
    },
    "16783": {
      "op": "ADD"
    },
    "16784": {
      "op": "MSTORE"
    },
    "16785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16787": {
      "op": "PUSH2",
      "value": "0x419F"
    },
    "16790": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16792": {
      "op": "DUP4"
    },
    "16793": {
      "op": "ADD"
    },
    "16794": {
      "op": "DUP6"
    },
    "16795": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "16798": {
      "jump": "i",
      "op": "JUMP"
    },
    "16799": {
      "op": "JUMPDEST"
    },
    "16800": {
      "op": "SWAP1"
    },
    "16801": {
      "op": "POP"
    },
    "16802": {
      "op": "DUP3"
    },
    "16803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16805": {
      "op": "DUP4"
    },
    "16806": {
      "op": "ADD"
    },
    "16807": {
      "op": "MSTORE"
    },
    "16808": {
      "op": "SWAP6"
    },
    "16809": {
      "op": "SWAP5"
    },
    "16810": {
      "op": "POP"
    },
    "16811": {
      "op": "POP"
    },
    "16812": {
      "op": "POP"
    },
    "16813": {
      "op": "POP"
    },
    "16814": {
      "op": "POP"
    },
    "16815": {
      "jump": "o",
      "op": "JUMP"
    },
    "16816": {
      "op": "JUMPDEST"
    },
    "16817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16821": {
      "op": "DUP3"
    },
    "16822": {
      "op": "ADD"
    },
    "16823": {
      "op": "PUSH2",
      "value": "0x41C2"
    },
    "16826": {
      "op": "JUMPI"
    },
    "16827": {
      "op": "PUSH2",
      "value": "0x41C2"
    },
    "16830": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "16833": {
      "jump": "i",
      "op": "JUMP"
    },
    "16834": {
      "op": "JUMPDEST"
    },
    "16835": {
      "op": "POP"
    },
    "16836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16838": {
      "op": "ADD"
    },
    "16839": {
      "op": "SWAP1"
    },
    "16840": {
      "jump": "o",
      "op": "JUMP"
    },
    "16841": {
      "op": "JUMPDEST"
    },
    "16842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16848": {
      "op": "SHL"
    },
    "16849": {
      "op": "SUB"
    },
    "16850": {
      "op": "DUP4"
    },
    "16851": {
      "op": "GT"
    },
    "16852": {
      "op": "ISZERO"
    },
    "16853": {
      "op": "PUSH2",
      "value": "0x41E0"
    },
    "16856": {
      "op": "JUMPI"
    },
    "16857": {
      "op": "PUSH2",
      "value": "0x41E0"
    },
    "16860": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "16863": {
      "jump": "i",
      "op": "JUMP"
    },
    "16864": {
      "op": "JUMPDEST"
    },
    "16865": {
      "op": "PUSH2",
      "value": "0x41F4"
    },
    "16868": {
      "op": "DUP4"
    },
    "16869": {
      "op": "PUSH2",
      "value": "0x41EE"
    },
    "16872": {
      "op": "DUP4"
    },
    "16873": {
      "op": "SLOAD"
    },
    "16874": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "16877": {
      "jump": "i",
      "op": "JUMP"
    },
    "16878": {
      "op": "JUMPDEST"
    },
    "16879": {
      "op": "DUP4"
    },
    "16880": {
      "op": "PUSH2",
      "value": "0x4003"
    },
    "16883": {
      "jump": "i",
      "op": "JUMP"
    },
    "16884": {
      "op": "JUMPDEST"
    },
    "16885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16887": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16889": {
      "op": "DUP5"
    },
    "16890": {
      "op": "GT"
    },
    "16891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16893": {
      "op": "DUP2"
    },
    "16894": {
      "op": "EQ"
    },
    "16895": {
      "op": "PUSH2",
      "value": "0x4228"
    },
    "16898": {
      "op": "JUMPI"
    },
    "16899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16901": {
      "op": "DUP6"
    },
    "16902": {
      "op": "ISZERO"
    },
    "16903": {
      "op": "PUSH2",
      "value": "0x4210"
    },
    "16906": {
      "op": "JUMPI"
    },
    "16907": {
      "op": "POP"
    },
    "16908": {
      "op": "DUP4"
    },
    "16909": {
      "op": "DUP3"
    },
    "16910": {
      "op": "ADD"
    },
    "16911": {
      "op": "CALLDATALOAD"
    },
    "16912": {
      "op": "JUMPDEST"
    },
    "16913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16915": {
      "op": "NOT"
    },
    "16916": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16918": {
      "op": "DUP8"
    },
    "16919": {
      "op": "SWAP1"
    },
    "16920": {
      "op": "SHL"
    },
    "16921": {
      "op": "SHR"
    },
    "16922": {
      "op": "NOT"
    },
    "16923": {
      "op": "AND"
    },
    "16924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16926": {
      "op": "DUP7"
    },
    "16927": {
      "op": "SWAP1"
    },
    "16928": {
      "op": "SHL"
    },
    "16929": {
      "op": "OR"
    },
    "16930": {
      "op": "DUP4"
    },
    "16931": {
      "op": "SSTORE"
    },
    "16932": {
      "op": "PUSH2",
      "value": "0x221F"
    },
    "16935": {
      "op": "JUMP"
    },
    "16936": {
      "op": "JUMPDEST"
    },
    "16937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16939": {
      "op": "DUP4"
    },
    "16940": {
      "op": "DUP2"
    },
    "16941": {
      "op": "MSTORE"
    },
    "16942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16944": {
      "op": "SWAP1"
    },
    "16945": {
      "op": "KECCAK256"
    },
    "16946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16948": {
      "op": "NOT"
    },
    "16949": {
      "op": "DUP7"
    },
    "16950": {
      "op": "AND"
    },
    "16951": {
      "op": "SWAP1"
    },
    "16952": {
      "op": "DUP4"
    },
    "16953": {
      "op": "JUMPDEST"
    },
    "16954": {
      "op": "DUP3"
    },
    "16955": {
      "op": "DUP2"
    },
    "16956": {
      "op": "LT"
    },
    "16957": {
      "op": "ISZERO"
    },
    "16958": {
      "op": "PUSH2",
      "value": "0x4259"
    },
    "16961": {
      "op": "JUMPI"
    },
    "16962": {
      "op": "DUP7"
    },
    "16963": {
      "op": "DUP6"
    },
    "16964": {
      "op": "ADD"
    },
    "16965": {
      "op": "CALLDATALOAD"
    },
    "16966": {
      "op": "DUP3"
    },
    "16967": {
      "op": "SSTORE"
    },
    "16968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16970": {
      "op": "SWAP5"
    },
    "16971": {
      "op": "DUP6"
    },
    "16972": {
      "op": "ADD"
    },
    "16973": {
      "op": "SWAP5"
    },
    "16974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16976": {
      "op": "SWAP1"
    },
    "16977": {
      "op": "SWAP3"
    },
    "16978": {
      "op": "ADD"
    },
    "16979": {
      "op": "SWAP2"
    },
    "16980": {
      "op": "ADD"
    },
    "16981": {
      "op": "PUSH2",
      "value": "0x4239"
    },
    "16984": {
      "op": "JUMP"
    },
    "16985": {
      "op": "JUMPDEST"
    },
    "16986": {
      "op": "POP"
    },
    "16987": {
      "op": "DUP7"
    },
    "16988": {
      "op": "DUP3"
    },
    "16989": {
      "op": "LT"
    },
    "16990": {
      "op": "ISZERO"
    },
    "16991": {
      "op": "PUSH2",
      "value": "0x4276"
    },
    "16994": {
      "op": "JUMPI"
    },
    "16995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16997": {
      "op": "NOT"
    },
    "16998": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "17000": {
      "op": "DUP9"
    },
    "17001": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17003": {
      "op": "SHL"
    },
    "17004": {
      "op": "AND"
    },
    "17005": {
      "op": "SHR"
    },
    "17006": {
      "op": "NOT"
    },
    "17007": {
      "op": "DUP5"
    },
    "17008": {
      "op": "DUP8"
    },
    "17009": {
      "op": "ADD"
    },
    "17010": {
      "op": "CALLDATALOAD"
    },
    "17011": {
      "op": "AND"
    },
    "17012": {
      "op": "DUP2"
    },
    "17013": {
      "op": "SSTORE"
    },
    "17014": {
      "op": "JUMPDEST"
    },
    "17015": {
      "op": "POP"
    },
    "17016": {
      "op": "POP"
    },
    "17017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17019": {
      "op": "DUP6"
    },
    "17020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17022": {
      "op": "SHL"
    },
    "17023": {
      "op": "ADD"
    },
    "17024": {
      "op": "DUP4"
    },
    "17025": {
      "op": "SSTORE"
    },
    "17026": {
      "op": "POP"
    },
    "17027": {
      "op": "POP"
    },
    "17028": {
      "op": "POP"
    },
    "17029": {
      "op": "POP"
    },
    "17030": {
      "op": "POP"
    },
    "17031": {
      "jump": "o",
      "op": "JUMP"
    },
    "17032": {
      "op": "JUMPDEST"
    },
    "17033": {
      "op": "DUP4"
    },
    "17034": {
      "op": "DUP2"
    },
    "17035": {
      "op": "MSTORE"
    },
    "17036": {
      "op": "DUP3"
    },
    "17037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17039": {
      "op": "DUP3"
    },
    "17040": {
      "op": "ADD"
    },
    "17041": {
      "op": "MSTORE"
    },
    "17042": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17046": {
      "op": "DUP3"
    },
    "17047": {
      "op": "ADD"
    },
    "17048": {
      "op": "MSTORE"
    },
    "17049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17051": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "17054": {
      "op": "DUP1"
    },
    "17055": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17057": {
      "op": "DUP5"
    },
    "17058": {
      "op": "ADD"
    },
    "17059": {
      "op": "MSTORE"
    },
    "17060": {
      "op": "PUSH2",
      "value": "0x42B1"
    },
    "17063": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "17066": {
      "op": "DUP5"
    },
    "17067": {
      "op": "ADD"
    },
    "17068": {
      "op": "DUP6"
    },
    "17069": {
      "op": "PUSH2",
      "value": "0x3F73"
    },
    "17072": {
      "jump": "i",
      "op": "JUMP"
    },
    "17073": {
      "op": "JUMPDEST"
    },
    "17074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17076": {
      "op": "DUP6"
    },
    "17077": {
      "op": "ADD"
    },
    "17078": {
      "op": "SLOAD"
    },
    "17079": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17085": {
      "op": "AND"
    },
    "17086": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17092": {
      "op": "DUP2"
    },
    "17093": {
      "op": "AND"
    },
    "17094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17096": {
      "op": "DUP7"
    },
    "17097": {
      "op": "ADD"
    },
    "17098": {
      "op": "MSTORE"
    },
    "17099": {
      "op": "POP"
    },
    "17100": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17102": {
      "op": "DUP6"
    },
    "17103": {
      "op": "ADD"
    },
    "17104": {
      "op": "SLOAD"
    },
    "17105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17107": {
      "op": "DUP6"
    },
    "17108": {
      "op": "ADD"
    },
    "17109": {
      "op": "MSTORE"
    },
    "17110": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "17112": {
      "op": "DUP6"
    },
    "17113": {
      "op": "ADD"
    },
    "17114": {
      "op": "SLOAD"
    },
    "17115": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17117": {
      "op": "DUP6"
    },
    "17118": {
      "op": "ADD"
    },
    "17119": {
      "op": "MSTORE"
    },
    "17120": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17122": {
      "op": "DUP6"
    },
    "17123": {
      "op": "ADD"
    },
    "17124": {
      "op": "SLOAD"
    },
    "17125": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17127": {
      "op": "DUP2"
    },
    "17128": {
      "op": "AND"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17131": {
      "op": "DUP7"
    },
    "17132": {
      "op": "ADD"
    },
    "17133": {
      "op": "MSTORE"
    },
    "17134": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "17136": {
      "op": "DUP2"
    },
    "17137": {
      "op": "SWAP1"
    },
    "17138": {
      "op": "SHR"
    },
    "17139": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "17143": {
      "op": "AND"
    },
    "17144": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17147": {
      "op": "DUP7"
    },
    "17148": {
      "op": "ADD"
    },
    "17149": {
      "op": "MSTORE"
    },
    "17150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17152": {
      "op": "DUP2"
    },
    "17153": {
      "op": "SWAP1"
    },
    "17154": {
      "op": "SHR"
    },
    "17155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17159": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "17161": {
      "op": "SHL"
    },
    "17162": {
      "op": "SUB"
    },
    "17163": {
      "op": "AND"
    },
    "17164": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "17167": {
      "op": "DUP7"
    },
    "17168": {
      "op": "ADD"
    },
    "17169": {
      "op": "MSTORE"
    },
    "17170": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17173": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17175": {
      "op": "DUP3"
    },
    "17176": {
      "op": "SWAP1"
    },
    "17177": {
      "op": "SHR"
    },
    "17178": {
      "op": "DUP2"
    },
    "17179": {
      "op": "AND"
    },
    "17180": {
      "op": "DUP5"
    },
    "17181": {
      "op": "DUP8"
    },
    "17182": {
      "op": "ADD"
    },
    "17183": {
      "op": "MSTORE"
    },
    "17184": {
      "op": "PUSH2",
      "value": "0x4335"
    },
    "17187": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "17190": {
      "op": "DUP8"
    },
    "17191": {
      "op": "ADD"
    },
    "17192": {
      "op": "DUP3"
    },
    "17193": {
      "op": "DUP5"
    },
    "17194": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17196": {
      "op": "SHR"
    },
    "17197": {
      "op": "AND"
    },
    "17198": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17201": {
      "op": "AND"
    },
    "17202": {
      "op": "SWAP1"
    },
    "17203": {
      "op": "MSTORE"
    },
    "17204": {
      "op": "JUMP"
    },
    "17205": {
      "op": "JUMPDEST"
    },
    "17206": {
      "op": "POP"
    },
    "17207": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17209": {
      "op": "DUP2"
    },
    "17210": {
      "op": "SWAP1"
    },
    "17211": {
      "op": "SHR"
    },
    "17212": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17218": {
      "op": "AND"
    },
    "17219": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "17222": {
      "op": "DUP7"
    },
    "17223": {
      "op": "ADD"
    },
    "17224": {
      "op": "MSTORE"
    },
    "17225": {
      "op": "POP"
    },
    "17226": {
      "op": "SWAP7"
    },
    "17227": {
      "op": "SWAP6"
    },
    "17228": {
      "op": "POP"
    },
    "17229": {
      "op": "POP"
    },
    "17230": {
      "op": "POP"
    },
    "17231": {
      "op": "POP"
    },
    "17232": {
      "op": "POP"
    },
    "17233": {
      "op": "POP"
    },
    "17234": {
      "jump": "o",
      "op": "JUMP"
    },
    "17235": {
      "op": "JUMPDEST"
    },
    "17236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17242": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "17244": {
      "op": "SHL"
    },
    "17245": {
      "op": "SUB"
    },
    "17246": {
      "op": "DUP1"
    },
    "17247": {
      "op": "DUP5"
    },
    "17248": {
      "op": "AND"
    },
    "17249": {
      "op": "DUP1"
    },
    "17250": {
      "op": "PUSH2",
      "value": "0x437B"
    },
    "17253": {
      "op": "JUMPI"
    },
    "17254": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17261": {
      "op": "SHL"
    },
    "17262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17264": {
      "op": "MSTORE"
    },
    "17265": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "17267": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17269": {
      "op": "MSTORE"
    },
    "17270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17274": {
      "op": "REVERT"
    },
    "17275": {
      "op": "JUMPDEST"
    },
    "17276": {
      "op": "SWAP3"
    },
    "17277": {
      "op": "AND"
    },
    "17278": {
      "op": "SWAP2"
    },
    "17279": {
      "op": "SWAP1"
    },
    "17280": {
      "op": "SWAP2"
    },
    "17281": {
      "op": "DIV"
    },
    "17282": {
      "op": "SWAP3"
    },
    "17283": {
      "op": "SWAP2"
    },
    "17284": {
      "op": "POP"
    },
    "17285": {
      "op": "POP"
    },
    "17286": {
      "jump": "o",
      "op": "JUMP"
    },
    "17287": {
      "op": "JUMPDEST"
    },
    "17288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17290": {
      "op": "DUP1"
    },
    "17291": {
      "op": "DUP3"
    },
    "17292": {
      "op": "MSTORE"
    },
    "17293": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17295": {
      "op": "SWAP1"
    },
    "17296": {
      "op": "DUP3"
    },
    "17297": {
      "op": "ADD"
    },
    "17298": {
      "op": "MSTORE"
    },
    "17299": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "17320": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "17322": {
      "op": "SHL"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17325": {
      "op": "DUP3"
    },
    "17326": {
      "op": "ADD"
    },
    "17327": {
      "op": "MSTORE"
    },
    "17328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17330": {
      "op": "ADD"
    },
    "17331": {
      "op": "SWAP1"
    },
    "17332": {
      "jump": "o",
      "op": "JUMP"
    },
    "17333": {
      "op": "JUMPDEST"
    },
    "17334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17336": {
      "op": "DUP1"
    },
    "17337": {
      "op": "DUP3"
    },
    "17338": {
      "op": "SLT"
    },
    "17339": {
      "op": "DUP1"
    },
    "17340": {
      "op": "ISZERO"
    },
    "17341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17347": {
      "op": "SHL"
    },
    "17348": {
      "op": "SUB"
    },
    "17349": {
      "op": "DUP5"
    },
    "17350": {
      "op": "SWAP1"
    },
    "17351": {
      "op": "SUB"
    },
    "17352": {
      "op": "DUP6"
    },
    "17353": {
      "op": "SGT"
    },
    "17354": {
      "op": "AND"
    },
    "17355": {
      "op": "ISZERO"
    },
    "17356": {
      "op": "PUSH2",
      "value": "0x43D7"
    },
    "17359": {
      "op": "JUMPI"
    },
    "17360": {
      "op": "PUSH2",
      "value": "0x43D7"
    },
    "17363": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "17366": {
      "jump": "i",
      "op": "JUMP"
    },
    "17367": {
      "op": "JUMPDEST"
    },
    "17368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17370": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17372": {
      "op": "SHL"
    },
    "17373": {
      "op": "DUP4"
    },
    "17374": {
      "op": "SWAP1"
    },
    "17375": {
      "op": "SUB"
    },
    "17376": {
      "op": "DUP5"
    },
    "17377": {
      "op": "SLT"
    },
    "17378": {
      "op": "DUP2"
    },
    "17379": {
      "op": "AND"
    },
    "17380": {
      "op": "ISZERO"
    },
    "17381": {
      "op": "PUSH2",
      "value": "0x43F0"
    },
    "17384": {
      "op": "JUMPI"
    },
    "17385": {
      "op": "PUSH2",
      "value": "0x43F0"
    },
    "17388": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "17391": {
      "jump": "i",
      "op": "JUMP"
    },
    "17392": {
      "op": "JUMPDEST"
    },
    "17393": {
      "op": "POP"
    },
    "17394": {
      "op": "POP"
    },
    "17395": {
      "op": "ADD"
    },
    "17396": {
      "op": "SWAP1"
    },
    "17397": {
      "jump": "o",
      "op": "JUMP"
    },
    "17398": {
      "op": "JUMPDEST"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17401": {
      "op": "DUP3"
    },
    "17402": {
      "op": "MLOAD"
    },
    "17403": {
      "op": "PUSH2",
      "value": "0x4408"
    },
    "17406": {
      "op": "DUP2"
    },
    "17407": {
      "op": "DUP5"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17410": {
      "op": "DUP8"
    },
    "17411": {
      "op": "ADD"
    },
    "17412": {
      "op": "PUSH2",
      "value": "0x35EA"
    },
    "17415": {
      "jump": "i",
      "op": "JUMP"
    },
    "17416": {
      "op": "JUMPDEST"
    },
    "17417": {
      "op": "SWAP2"
    },
    "17418": {
      "op": "SWAP1"
    },
    "17419": {
      "op": "SWAP2"
    },
    "17420": {
      "op": "ADD"
    },
    "17421": {
      "op": "SWAP3"
    },
    "17422": {
      "op": "SWAP2"
    },
    "17423": {
      "op": "POP"
    },
    "17424": {
      "op": "POP"
    },
    "17425": {
      "jump": "o",
      "op": "JUMP"
    },
    "17426": {
      "op": "JUMPDEST"
    },
    "17427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17429": {
      "op": "DUP1"
    },
    "17430": {
      "op": "DUP4"
    },
    "17431": {
      "op": "SLOAD"
    },
    "17432": {
      "op": "PUSH2",
      "value": "0x4420"
    },
    "17435": {
      "op": "DUP2"
    },
    "17436": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "17439": {
      "jump": "i",
      "op": "JUMP"
    },
    "17440": {
      "op": "JUMPDEST"
    },
    "17441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17443": {
      "op": "DUP3"
    },
    "17444": {
      "op": "DUP2"
    },
    "17445": {
      "op": "AND"
    },
    "17446": {
      "op": "DUP1"
    },
    "17447": {
      "op": "ISZERO"
    },
    "17448": {
      "op": "PUSH2",
      "value": "0x4438"
    },
    "17451": {
      "op": "JUMPI"
    },
    "17452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17454": {
      "op": "DUP2"
    },
    "17455": {
      "op": "EQ"
    },
    "17456": {
      "op": "PUSH2",
      "value": "0x444D"
    },
    "17459": {
      "op": "JUMPI"
    },
    "17460": {
      "op": "PUSH2",
      "value": "0x3E9B"
    },
    "17463": {
      "op": "JUMP"
    },
    "17464": {
      "op": "JUMPDEST"
    },
    "17465": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17467": {
      "op": "NOT"
    },
    "17468": {
      "op": "DUP5"
    },
    "17469": {
      "op": "AND"
    },
    "17470": {
      "op": "DUP8"
    },
    "17471": {
      "op": "MSTORE"
    },
    "17472": {
      "op": "DUP3"
    },
    "17473": {
      "op": "ISZERO"
    },
    "17474": {
      "op": "ISZERO"
    },
    "17475": {
      "op": "DUP4"
    },
    "17476": {
      "op": "MUL"
    },
    "17477": {
      "op": "DUP8"
    },
    "17478": {
      "op": "ADD"
    },
    "17479": {
      "op": "SWAP5"
    },
    "17480": {
      "op": "POP"
    },
    "17481": {
      "op": "PUSH2",
      "value": "0x3E9B"
    },
    "17484": {
      "op": "JUMP"
    },
    "17485": {
      "op": "JUMPDEST"
    },
    "17486": {
      "op": "DUP8"
    },
    "17487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17489": {
      "op": "MSTORE"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17492": {
      "op": "DUP1"
    },
    "17493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17495": {
      "op": "KECCAK256"
    },
    "17496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17498": {
      "op": "JUMPDEST"
    },
    "17499": {
      "op": "DUP6"
    },
    "17500": {
      "op": "DUP2"
    },
    "17501": {
      "op": "LT"
    },
    "17502": {
      "op": "ISZERO"
    },
    "17503": {
      "op": "PUSH2",
      "value": "0x4473"
    },
    "17506": {
      "op": "JUMPI"
    },
    "17507": {
      "op": "DUP2"
    },
    "17508": {
      "op": "SLOAD"
    },
    "17509": {
      "op": "DUP11"
    },
    "17510": {
      "op": "DUP3"
    },
    "17511": {
      "op": "ADD"
    },
    "17512": {
      "op": "MSTORE"
    },
    "17513": {
      "op": "SWAP1"
    },
    "17514": {
      "op": "DUP5"
    },
    "17515": {
      "op": "ADD"
    },
    "17516": {
      "op": "SWAP1"
    },
    "17517": {
      "op": "DUP3"
    },
    "17518": {
      "op": "ADD"
    },
    "17519": {
      "op": "PUSH2",
      "value": "0x445A"
    },
    "17522": {
      "op": "JUMP"
    },
    "17523": {
      "op": "JUMPDEST"
    },
    "17524": {
      "op": "POP"
    },
    "17525": {
      "op": "POP"
    },
    "17526": {
      "op": "POP"
    },
    "17527": {
      "op": "SWAP6"
    },
    "17528": {
      "op": "SWAP1"
    },
    "17529": {
      "op": "SWAP2"
    },
    "17530": {
      "op": "ADD"
    },
    "17531": {
      "op": "SWAP7"
    },
    "17532": {
      "op": "SWAP6"
    },
    "17533": {
      "op": "POP"
    },
    "17534": {
      "op": "POP"
    },
    "17535": {
      "op": "POP"
    },
    "17536": {
      "op": "POP"
    },
    "17537": {
      "op": "POP"
    },
    "17538": {
      "op": "POP"
    },
    "17539": {
      "jump": "o",
      "op": "JUMP"
    },
    "17540": {
      "op": "JUMPDEST"
    },
    "17541": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17543": {
      "op": "DUP2"
    },
    "17544": {
      "op": "MSTORE"
    },
    "17545": {
      "op": "DUP8"
    },
    "17546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17548": {
      "op": "DUP3"
    },
    "17549": {
      "op": "ADD"
    },
    "17550": {
      "op": "MSTORE"
    },
    "17551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17553": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17556": {
      "op": "DUP10"
    },
    "17557": {
      "op": "DUP12"
    },
    "17558": {
      "op": "DUP3"
    },
    "17559": {
      "op": "DUP6"
    },
    "17560": {
      "op": "ADD"
    },
    "17561": {
      "op": "CALLDATACOPY"
    },
    "17562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17564": {
      "op": "DUP11"
    },
    "17565": {
      "op": "DUP5"
    },
    "17566": {
      "op": "ADD"
    },
    "17567": {
      "op": "DUP3"
    },
    "17568": {
      "op": "ADD"
    },
    "17569": {
      "op": "MSTORE"
    },
    "17570": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17576": {
      "op": "SWAP9"
    },
    "17577": {
      "op": "DUP10"
    },
    "17578": {
      "op": "AND"
    },
    "17579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17581": {
      "op": "DUP5"
    },
    "17582": {
      "op": "ADD"
    },
    "17583": {
      "op": "MSTORE"
    },
    "17584": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17586": {
      "op": "SWAP8"
    },
    "17587": {
      "op": "SWAP1"
    },
    "17588": {
      "op": "SWAP8"
    },
    "17589": {
      "op": "AND"
    },
    "17590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17592": {
      "op": "DUP4"
    },
    "17593": {
      "op": "ADD"
    },
    "17594": {
      "op": "MSTORE"
    },
    "17595": {
      "op": "POP"
    },
    "17596": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "17600": {
      "op": "SWAP5"
    },
    "17601": {
      "op": "SWAP1"
    },
    "17602": {
      "op": "SWAP5"
    },
    "17603": {
      "op": "AND"
    },
    "17604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17606": {
      "op": "DUP6"
    },
    "17607": {
      "op": "ADD"
    },
    "17608": {
      "op": "MSTORE"
    },
    "17609": {
      "op": "SWAP2"
    },
    "17610": {
      "op": "DUP6"
    },
    "17611": {
      "op": "AND"
    },
    "17612": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17614": {
      "op": "DUP5"
    },
    "17615": {
      "op": "ADD"
    },
    "17616": {
      "op": "MSTORE"
    },
    "17617": {
      "op": "SWAP1"
    },
    "17618": {
      "op": "SWAP4"
    },
    "17619": {
      "op": "AND"
    },
    "17620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17622": {
      "op": "DUP3"
    },
    "17623": {
      "op": "ADD"
    },
    "17624": {
      "op": "MSTORE"
    },
    "17625": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17628": {
      "op": "SWAP1"
    },
    "17629": {
      "op": "SWAP3"
    },
    "17630": {
      "op": "AND"
    },
    "17631": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17633": {
      "op": "DUP4"
    },
    "17634": {
      "op": "ADD"
    },
    "17635": {
      "op": "MSTORE"
    },
    "17636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17638": {
      "op": "SWAP1"
    },
    "17639": {
      "op": "SWAP3"
    },
    "17640": {
      "op": "ADD"
    },
    "17641": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17643": {
      "op": "NOT"
    },
    "17644": {
      "op": "AND"
    },
    "17645": {
      "op": "ADD"
    },
    "17646": {
      "op": "ADD"
    },
    "17647": {
      "op": "SWAP2"
    },
    "17648": {
      "op": "SWAP1"
    },
    "17649": {
      "op": "POP"
    },
    "17650": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3d4be6215a847e3e8eaafa9ceca5839d58f42099",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport './WizardTower.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n    WizardTower wizardTower;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n    uint256 boardSeats = 3;\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    function isCallerOnBoard() public view returns (bool) {\n        for(uint256 i =1; i <= boardSeats;){\n            if(wizardsNFT.ownerOf(wizardTower.getWizardOnFloor(i)) == msg.sender ){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n    function isMyWizardOnBoard(uint256 _wizId) public view returns (bool) {\n        if(wizardsNFT.ownerOf(_wizId)==msg.sender && wizardTower.isOnTheTower(_wizId) && wizardTower.getFloorGivenWizard(_wizId) <=boardSeats){\n            return true;\n        }\n        return false;\n    }\n\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory, uint256[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            uint256[] memory myReturnUint= new uint256[](1);\n//            myReturn[0].NFTID=0;\n//            myReturn[0] = \"\";\n            return (myReturn, myReturnUint);\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        uint256[] memory myTaskIds = new uint256[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                myTaskIds[counter] = taskId;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return (myTasks, myTaskIds);\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft, address _wizardTower){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n        wizardTower = WizardTower(_wizardTower);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task memory myTask = tasks[_taskID];\n        uint256 count = 0;\n        bool deleteTaskFlag = true;\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            // myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n\n            if(myTask.refuterID==0){\n                myTask.refuterID=uint16(_wizId);\n                myTask.refuterHash=myHash;\n                tasks[_taskID] = myTask;\n                deleteTaskFlag = false;\n            }\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                // myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n\n            // delete task from double ended queue\n        if(deleteTaskFlag){\n            uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n//            Task memory myTask;\n\n            // delete task from doubleEndedQueue\n            for(uint256 i =0; i < totalTasksSubmitted; ){\n                if( uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i))==_taskID){\n                    bytes32 prevFront = DoubleEndedQueue.popFront(tasksWaitingConfirmation);\n                    if(i!=0){ // add back on if we weren't meant to remove front\n                        tasksWaitingConfirmation._data[int128(tasksWaitingConfirmation._begin + int(i))] = prevFront;\n                    }\n                }\n                unchecked{++i;}\n            }\n        }\n\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        // check caller against top 3 wizards on tower\n        require(isCallerOnBoard(), \"Must be on the board\");\n//        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "771:23163:2:-:0;;;2978:5;2951:32;;3039:6;3003:42;;3081:1;3060:22;;12314:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:13;1778:7;:22;889:23:12;679:10:6;889:9:12;:23::i;:::-;12415:10:2;:26;;-1:-1:-1;;;;;12415:26:2;;;-1:-1:-1;;;;;;12415:26:2;;;;;;;12451:11;:39;;;;;;;;;;;771:23163;;2101:173:12;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:177:27:-;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;771:23163:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}