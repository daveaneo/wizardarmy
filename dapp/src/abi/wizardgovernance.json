{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "10": "contracts/helpers/ReentrancyGuard.sol",
    "19": "contracts/libraries/Strings.sol",
    "2": "contracts/Governance.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "9": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        4852
      ],
      "Context": [
        2182
      ],
      "DoubleEndedQueue": [
        2161
      ],
      "ERC165": [
        2206
      ],
      "ERC2981Collection": [
        2290
      ],
      "ERC721": [
        3109
      ],
      "ERC721A": [
        4180
      ],
      "ERC721Enumerable": [
        8145
      ],
      "Governance": [
        1820
      ],
      "IERC165": [
        4336
      ],
      "IERC20": [
        4409
      ],
      "IERC2981": [
        7761
      ],
      "IERC721": [
        4525
      ],
      "IERC721Enumerable": [
        4556
      ],
      "IERC721Metadata": [
        7788
      ],
      "IERC721Receiver": [
        7806
      ],
      "Ownable": [
        4284
      ],
      "ReentrancyGuard": [
        4324
      ],
      "Strings": [
        5055
      ],
      "Wizards": [
        5892
      ]
    },
    "id": 1821,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 5893,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4410,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4337,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4526,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4557,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4181,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 3110,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 2207,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4285,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 2183,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4325,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 2291,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 5056,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 4853,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1821,
        "sourceUnit": 2162,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2161,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4324,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4284,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1820,
        "linearizedBaseContracts": [
          1820,
          4284,
          2182,
          4324
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$5892",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5892,
                "src": "829:7:2"
              },
              "referencedDeclaration": 5892,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$5892",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1126:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1264:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1259:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1287:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1280:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1341:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1335:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1373:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1366:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1366:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1399:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1392:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1428:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1421:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1457:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1450:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1820,
            "src": "1072:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1538:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1531:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1531:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1584:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1577:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1644:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1636:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1698:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1690:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1762:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1756:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1810:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1803:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1982:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1975:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1975:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2009:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2002:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2060:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2053:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2053:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2110:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2103:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1516:4:2",
            "nodeType": "StructDefinition",
            "scope": 1820,
            "src": "1509:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2223:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2216:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2216:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2248:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2241:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2241:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2283:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2280:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2273:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2305:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2298:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2332:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2325:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2325:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2361:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2354:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2354:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2197:8:2",
            "nodeType": "StructDefinition",
            "scope": 1820,
            "src": "2190:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2406:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2388:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2388:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2388:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2388:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2562:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2525:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1839,
                "src": "2525:29:2"
              },
              "referencedDeclaration": 1839,
              "src": "2525:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2739:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2702:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2711:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2702:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2722:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2722:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2762:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2754:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2754:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2816:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2783:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2792:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2783:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2803:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2803:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 108,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2842:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2827:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2827:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2902:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2894:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2894:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2921:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2924:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2921:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2954:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1820,
            "src": "2946:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2946:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2982:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 125,
            "name": "VerificationAssigned",
            "nameLocation": "3010:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3039:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3031:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3057:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3049:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3070:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3065:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 121,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "3065:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "3065:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:47:2"
            },
            "src": "3004:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 133,
            "name": "VerificationFailed",
            "nameLocation": "3089:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3116:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3108:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3141:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3133:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3167:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "3159:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:67:2"
            },
            "src": "3083:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 145,
            "name": "VerificationSucceeded",
            "nameLocation": "3186:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3216:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3208:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3234:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3226:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3268:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3260:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3279:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "3274:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3207:86:2"
            },
            "src": "3180:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 155,
            "name": "HashTesting",
            "nameLocation": "3305:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3325:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3317:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3336:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3331:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3359:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3351:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3379:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3373:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:78:2"
            },
            "src": "3299:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 171,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3406:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3432:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3425:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3449:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3442:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3442:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3468:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3462:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3493:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3486:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3522:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3515:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3544:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3537:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3566:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "3559:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:158:2"
            },
            "src": "3400:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 181,
            "name": "TaskCompleted",
            "nameLocation": "3594:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3616:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3608:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3634:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3626:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3649:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3642:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3667:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3659:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:65:2"
            },
            "src": "3588:85:2"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "4544:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 189,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4561:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 191,
                    "indexExpression": {
                      "id": 190,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4567:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4561:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "4554:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4479:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4499:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4491:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4490:17:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "4531:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 185,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4531:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4531:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:13:2"
            },
            "scope": 1820,
            "src": "4470:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "4666:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 196,
                          "src": "4684:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 204,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4697:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4684:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4713:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4676:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:56:2"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4758:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "4742:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 211,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4742:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 212,
                        "nodeType": "ArrayTypeName",
                        "src": "4742:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 217,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4783:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 219,
                          "indexExpression": {
                            "id": 218,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "4793:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4783:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4770:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 214,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4774:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 215,
                        "nodeType": "ArrayTypeName",
                        "src": "4774:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4742:79:2"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "4875:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 234,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "4889:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "id": 235,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4899:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4889:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 237,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4904:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 239,
                                "indexExpression": {
                                  "id": 238,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "4914:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4904:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4904:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4932:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4904:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4889:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "4889:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4850:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 228,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4853:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4853:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4850:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "initializationExpression": {
                    "assignments": [
                      224
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4843:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "4835:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4835:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 226,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4847:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4835:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4871:3:2",
                      "subExpression": {
                        "id": 231,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4871:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 233,
                    "nodeType": "ExpressionStatement",
                    "src": "4871:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4831:114:2"
                },
                {
                  "expression": {
                    "id": 247,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "4961:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 248,
                  "nodeType": "Return",
                  "src": "4954:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4597:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4614:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4606:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:20:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "4649:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4649:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4649:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4648:17:2"
            },
            "scope": 1820,
            "src": "4588:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "5060:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5078:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 259,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "5091:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5078:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5107:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5070:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 265,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5145:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5145:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 267,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5163:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 269,
                            "indexExpression": {
                              "id": 268,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "5173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5163:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5163:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5145:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5199:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5136:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:85:2"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5349:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5341:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5341:19:2"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5378:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5370:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5370:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 280,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5370:25:2"
                },
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5413:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 355,
                      "src": "5405:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5417:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5405:13:2"
                },
                {
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "5491:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 298,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5544:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 300,
                                "indexExpression": {
                                  "id": 299,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "5554:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5544:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5544:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "id": 302,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "5572:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5544:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 304,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5577:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5544:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 329,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5773:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "id": 330,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "5783:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5773:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 332,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5773:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 334,
                              "indexExpression": {
                                "id": 333,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "5801:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5773:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 335,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "5807:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5773:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 342,
                          "nodeType": "IfStatement",
                          "src": "5770:93:2",
                          "trueBody": {
                            "id": 341,
                            "nodeType": "Block",
                            "src": "5825:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 337,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 282,
                                    "src": "5843:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5847:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5843:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 340,
                                "nodeType": "ExpressionStatement",
                                "src": "5843:5:2"
                              }
                            ]
                          }
                        },
                        "id": 343,
                        "nodeType": "IfStatement",
                        "src": "5541:322:2",
                        "trueBody": {
                          "id": 328,
                          "nodeType": "Block",
                          "src": "5596:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 306,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "5614:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 307,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5634:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 309,
                                      "indexExpression": {
                                        "id": 308,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 252,
                                        "src": "5644:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5634:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 310,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5634:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 312,
                                  "indexExpression": {
                                    "id": 311,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 286,
                                    "src": "5662:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5634:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5614:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 314,
                              "nodeType": "ExpressionStatement",
                              "src": "5614:50:2"
                            },
                            {
                              "expression": {
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 315,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "5682:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 316,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 286,
                                  "src": "5696:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5682:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 318,
                              "nodeType": "ExpressionStatement",
                              "src": "5682:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 319,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "5719:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5724:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5719:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 327,
                              "nodeType": "IfStatement",
                              "src": "5715:23:2",
                              "trueBody": {
                                "id": 326,
                                "nodeType": "Block",
                                "src": "5727:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 322,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "5729:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 323,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5735:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5729:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 325,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5729:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "5445:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 290,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5448:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 292,
                        "indexExpression": {
                          "id": 291,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "5458:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5448:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5448:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5445:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "initializationExpression": {
                    "assignments": [
                      286
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5440:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "5432:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 288,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5442:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5432:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5487:3:2",
                      "subExpression": {
                        "id": 295,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "5487:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 297,
                    "nodeType": "ExpressionStatement",
                    "src": "5487:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5428:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "5890:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5895:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5890:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5898:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5882:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5882:35:2"
                },
                {
                  "expression": {
                    "id": 353,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 276,
                    "src": "5934:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 256,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "5927:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4992:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5015:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5007:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:20:2"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "5050:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5049:10:2"
            },
            "scope": 1820,
            "src": "4983:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "6080:607:2",
              "statements": [
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6098:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6090:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6090:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6144:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 365,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "6120:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2144,
                      "src": "6120:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6090:79:2"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6191:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "6179:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 370,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6179:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6179:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6179:18:2"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "6363:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 381,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "6377:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 382,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "6386:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 391,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 387,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 94,
                                      "src": "6420:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 388,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "6445:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 385,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2161,
                                      "src": "6400:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2098,
                                    "src": "6400:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6400:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6392:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6392:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6392:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6386:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "6377:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "6377:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 394,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6467:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "6467:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 396,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6506:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6506:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6467:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 399,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "6525:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "6525:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 401,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "6541:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6525:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6467:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 404,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "6551:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "6551:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 406,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "6570:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6551:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6467:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 412,
                        "nodeType": "IfStatement",
                        "src": "6463:158:2",
                        "trueBody": {
                          "id": 411,
                          "nodeType": "Block",
                          "src": "6577:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6602:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 362,
                              "id": 410,
                              "nodeType": "Return",
                              "src": "6595:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 416,
                        "nodeType": "UncheckedBlock",
                        "src": "6634:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6644:3:2",
                              "subExpression": {
                                "id": 413,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6646:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 415,
                            "nodeType": "ExpressionStatement",
                            "src": "6644:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "6337:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 379,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "6341:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6337:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "initializationExpression": {
                    "assignments": [
                      375
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6331:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "6323:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6323:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 377,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6334:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6323:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6319:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6675:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 362,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "6668:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6008:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6043:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6035:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6034:16:2"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "6074:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6074:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6073:6:2"
            },
            "scope": 1820,
            "src": "5999:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "6778:1278:2",
              "statements": [
                {
                  "assignments": [
                    432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 432,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6796:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "6788:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6842:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 433,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "6818:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2144,
                      "src": "6818:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6818:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6788:79:2"
                },
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6889:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "6877:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 439,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 438,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6877:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6877:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6877:18:2"
                },
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "6913:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "6905:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6905:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6905:14:2"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "6937:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "6929:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6929:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6943:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6929:15:2"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "6999:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 456,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7013:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 461,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7050:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 462,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "7076:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 459,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2161,
                                    "src": "7030:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2098,
                                  "src": "7030:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7030:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7022:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 457,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7022:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7022:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7013:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "7013:66:2"
                      },
                      {
                        "expression": {
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 467,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "7093:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 468,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7102:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 470,
                            "indexExpression": {
                              "id": 469,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "7108:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7102:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7093:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "7093:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 473,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7133:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7133:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 475,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7172:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7172:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7133:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 478,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7191:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "7191:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 480,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "7211:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7191:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7133:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 488,
                        "nodeType": "IfStatement",
                        "src": "7129:140:2",
                        "trueBody": {
                          "id": 487,
                          "nodeType": "Block",
                          "src": "7218:51:2",
                          "statements": [
                            {
                              "id": 486,
                              "nodeType": "UncheckedBlock",
                              "src": "7236:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7246:7:2",
                                    "subExpression": {
                                      "id": 483,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 446,
                                      "src": "7248:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 485,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7246:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 492,
                        "nodeType": "UncheckedBlock",
                        "src": "7282:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7292:3:2",
                              "subExpression": {
                                "id": 489,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "7294:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 491,
                            "nodeType": "ExpressionStatement",
                            "src": "7292:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 453,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "6973:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 454,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "6977:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6973:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 494,
                  "initializationExpression": {
                    "assignments": [
                      450
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6967:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "6959:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6959:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 452,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6970:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6959:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6955:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 495,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "7364:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7371:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7364:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 513,
                  "nodeType": "IfStatement",
                  "src": "7360:137:2",
                  "trueBody": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "7374:123:2",
                    "statements": [
                      {
                        "assignments": [
                          502
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 502,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "7402:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 512,
                            "src": "7388:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 500,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 499,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7388:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7388:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 501,
                              "nodeType": "ArrayTypeName",
                              "src": "7388:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 509,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7423:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7412:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 504,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 503,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 72,
                                  "src": "7416:4:2"
                                },
                                "referencedDeclaration": 72,
                                "src": "7416:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 505,
                              "nodeType": "ArrayTypeName",
                              "src": "7416:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7412:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7388:37:2"
                      },
                      {
                        "expression": {
                          "id": 510,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "7478:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "functionReturnParameters": 430,
                        "id": 511,
                        "nodeType": "Return",
                        "src": "7471:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "7515:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "7507:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7507:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7525:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7507:19:2"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "7550:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "7536:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 520,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 519,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7536:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7536:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 521,
                        "nodeType": "ArrayTypeName",
                        "src": "7536:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 527,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "7571:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7560:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 524,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 523,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72,
                            "src": "7564:4:2"
                          },
                          "referencedDeclaration": 72,
                          "src": "7564:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 525,
                        "nodeType": "ArrayTypeName",
                        "src": "7564:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7560:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7536:41:2"
                },
                {
                  "body": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "7631:395:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 537,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7645:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 542,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "7682:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 543,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "7708:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 540,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2161,
                                    "src": "7662:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2098,
                                  "src": "7662:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7662:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7654:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 538,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7654:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7654:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7645:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 547,
                        "nodeType": "ExpressionStatement",
                        "src": "7645:66:2"
                      },
                      {
                        "expression": {
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 548,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "7725:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 549,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "7734:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 551,
                            "indexExpression": {
                              "id": 550,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "7740:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7734:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7725:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "7725:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 554,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7765:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7765:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 556,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7804:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7804:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7765:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 559,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "7823:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 560,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "7823:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 561,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "7843:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7823:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7765:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 581,
                        "nodeType": "IfStatement",
                        "src": "7761:227:2",
                        "trueBody": {
                          "id": 580,
                          "nodeType": "Block",
                          "src": "7850:138:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 564,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 522,
                                    "src": "7868:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 566,
                                  "indexExpression": {
                                    "id": 565,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "7876:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7868:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 567,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "7887:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "7868:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 569,
                              "nodeType": "ExpressionStatement",
                              "src": "7868:25:2"
                            },
                            {
                              "id": 573,
                              "nodeType": "UncheckedBlock",
                              "src": "7911:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7921:9:2",
                                    "subExpression": {
                                      "id": 570,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 515,
                                      "src": "7923:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 572,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7921:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 574,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 515,
                                  "src": "7952:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 575,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "7960:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7952:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 579,
                              "nodeType": "IfStatement",
                              "src": "7949:25:2",
                              "trueBody": {
                                "id": 578,
                                "nodeType": "Block",
                                "src": "7966:8:2",
                                "statements": [
                                  {
                                    "id": 577,
                                    "nodeType": "Break",
                                    "src": "7967:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 585,
                        "nodeType": "UncheckedBlock",
                        "src": "8001:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8011:3:2",
                              "subExpression": {
                                "id": 582,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "8013:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 584,
                            "nodeType": "ExpressionStatement",
                            "src": "8011:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 534,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "7605:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 535,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "7609:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7605:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 587,
                  "initializationExpression": {
                    "assignments": [
                      531
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7599:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "7591:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7591:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 533,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7602:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7591:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7587:439:2"
                },
                {
                  "expression": {
                    "id": 588,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 522,
                    "src": "8042:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 589,
                  "nodeType": "Return",
                  "src": "8035:14:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "6703:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6732:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "6725:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6725:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6724:15:2"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "6763:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$72_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 426,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 72,
                        "src": "6763:4:2"
                      },
                      "referencedDeclaration": 72,
                      "src": "6763:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 428,
                    "nodeType": "ArrayTypeName",
                    "src": "6763:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$72_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:15:2"
            },
            "scope": 1820,
            "src": "6694:1362:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "8220:1412:2",
              "statements": [
                {
                  "assignments": [
                    600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "8238:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8230:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8230:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8230:13:2"
                },
                {
                  "body": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "8291:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 610,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8308:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 612,
                                      "indexExpression": {
                                        "id": 611,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 603,
                                        "src": "8318:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8308:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 613,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "8308:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 615,
                                  "indexExpression": {
                                    "id": 614,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "8345:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8308:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 616,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8355:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8355:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8308:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 619,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "8386:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 621,
                                    "indexExpression": {
                                      "id": 620,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 603,
                                      "src": "8396:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8386:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "8386:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 623,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8415:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8415:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8386:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8308:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 627,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "8434:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 629,
                                  "indexExpression": {
                                    "id": 628,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 603,
                                    "src": "8444:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8434:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 630,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "8434:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 631,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8462:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8462:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8434:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8308:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 635,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8493:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 637,
                                "indexExpression": {
                                  "id": 636,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 603,
                                  "src": "8503:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8493:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "8493:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8523:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8493:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8308:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 647,
                        "nodeType": "IfStatement",
                        "src": "8305:285:2",
                        "trueBody": {
                          "id": 646,
                          "nodeType": "Block",
                          "src": "8539:51:2",
                          "statements": [
                            {
                              "id": 645,
                              "nodeType": "UncheckedBlock",
                              "src": "8557:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8567:7:2",
                                    "subExpression": {
                                      "id": 642,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 600,
                                      "src": "8569:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 644,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8567:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 651,
                        "nodeType": "UncheckedBlock",
                        "src": "8772:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8782:3:2",
                              "subExpression": {
                                "id": 648,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 603,
                                "src": "8784:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 650,
                            "nodeType": "ExpressionStatement",
                            "src": "8782:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 606,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "8270:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 607,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8273:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8273:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8270:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "initializationExpression": {
                    "assignments": [
                      603
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8265:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 653,
                        "src": "8257:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8257:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 605,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8267:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8257:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8253:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 654,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "8854:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8861:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8854:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 677,
                  "nodeType": "IfStatement",
                  "src": "8850:139:2",
                  "trueBody": {
                    "id": 676,
                    "nodeType": "Block",
                    "src": "8864:125:2",
                    "statements": [
                      {
                        "assignments": [
                          661
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 661,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "8894:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 676,
                            "src": "8878:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 659,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8878:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 660,
                              "nodeType": "ArrayTypeName",
                              "src": "8878:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 667,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8917:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8904:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 662,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8908:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 663,
                              "nodeType": "ArrayTypeName",
                              "src": "8908:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8904:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8878:41:2"
                      },
                      {
                        "expression": {
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 668,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "8933:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 670,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8942:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8933:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8947:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "8933:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 673,
                        "nodeType": "ExpressionStatement",
                        "src": "8933:16:2"
                      },
                      {
                        "expression": {
                          "id": 674,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "8970:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 598,
                        "id": 675,
                        "nodeType": "Return",
                        "src": "8963:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9015:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8999:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 680,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8999:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 681,
                        "nodeType": "ArrayTypeName",
                        "src": "8999:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "9038:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9025:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 683,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9029:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 684,
                        "nodeType": "ArrayTypeName",
                        "src": "9029:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8999:45:2"
                },
                {
                  "assignments": [
                    690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 690,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9062:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "9054:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9054:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 692,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9072:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9054:19:2"
                },
                {
                  "body": {
                    "id": 758,
                    "nodeType": "Block",
                    "src": "9121:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 701,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "9138:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 703,
                                      "indexExpression": {
                                        "id": 702,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 694,
                                        "src": "9148:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9138:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "9138:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 706,
                                  "indexExpression": {
                                    "id": 705,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "9175:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9138:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 707,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9185:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9185:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9138:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 710,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9216:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 712,
                                    "indexExpression": {
                                      "id": 711,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "9226:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9216:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "9216:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 714,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9245:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9245:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9216:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9138:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 718,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "9264:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 720,
                                  "indexExpression": {
                                    "id": 719,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "9274:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9264:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 721,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "9264:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 722,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9292:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9292:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9264:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9138:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 726,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "9323:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 728,
                                "indexExpression": {
                                  "id": 727,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "9333:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9323:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "9323:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9353:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9323:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9138:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 753,
                        "nodeType": "IfStatement",
                        "src": "9135:429:2",
                        "trueBody": {
                          "id": 752,
                          "nodeType": "Block",
                          "src": "9369:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 733,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "9387:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 735,
                                  "indexExpression": {
                                    "id": 734,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "9395:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9387:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 736,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "9406:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 738,
                                    "indexExpression": {
                                      "id": 737,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "9416:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9406:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 739,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "9406:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "9387:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 741,
                              "nodeType": "ExpressionStatement",
                              "src": "9387:40:2"
                            },
                            {
                              "id": 745,
                              "nodeType": "UncheckedBlock",
                              "src": "9445:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 743,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9455:9:2",
                                    "subExpression": {
                                      "id": 742,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "9457:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 744,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9455:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 746,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 690,
                                  "src": "9486:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 747,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 600,
                                  "src": "9497:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9486:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 751,
                              "nodeType": "IfStatement",
                              "src": "9483:67:2",
                              "trueBody": {
                                "id": 750,
                                "nodeType": "Block",
                                "src": "9504:46:2",
                                "statements": [
                                  {
                                    "id": 749,
                                    "nodeType": "Break",
                                    "src": "9526:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 757,
                        "nodeType": "UncheckedBlock",
                        "src": "9577:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9587:3:2",
                              "subExpression": {
                                "id": 754,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 694,
                                "src": "9589:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 756,
                            "nodeType": "ExpressionStatement",
                            "src": "9587:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 697,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "9100:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 698,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "9103:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9103:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9100:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 759,
                  "initializationExpression": {
                    "assignments": [
                      694
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9095:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 759,
                        "src": "9087:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 696,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9097:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9087:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9083:519:2"
                },
                {
                  "expression": {
                    "id": 760,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 682,
                    "src": "9618:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 761,
                  "nodeType": "Return",
                  "src": "9611:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "8141:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "8172:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "8165:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8165:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8164:15:2"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "8203:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 595,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "8203:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 596,
                    "nodeType": "ArrayTypeName",
                    "src": "8203:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8202:17:2"
            },
            "scope": 1820,
            "src": "8132:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "9799:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 770,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "9809:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5892",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 772,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "9830:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 771,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5892,
                        "src": "9822:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5892_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9822:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5892",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "9809:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5892",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "9809:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 768,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 767,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4227,
                  "src": "9789:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9789:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "9751:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "9773:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "9765:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9765:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9764:15:2"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9799:0:2"
            },
            "scope": 1820,
            "src": "9742:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "10037:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "10084:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 793,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10128:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 795,
                                      "indexExpression": {
                                        "id": 794,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 783,
                                        "src": "10138:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10128:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "10128:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 791,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10111:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10111:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10111:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 790,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10101:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10101:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 802,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 779,
                                    "src": "10182:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 800,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10165:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 801,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10165:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10165:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 799,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10155:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10155:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10101:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 845,
                        "nodeType": "IfStatement",
                        "src": "10098:1048:2",
                        "trueBody": {
                          "id": 844,
                          "nodeType": "Block",
                          "src": "10194:952:2",
                          "statements": [
                            {
                              "assignments": [
                                808
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 808,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "10293:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 844,
                                  "src": "10276:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 807,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 806,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10276:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10276:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 812,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 809,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10306:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 811,
                                "indexExpression": {
                                  "id": 810,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "10316:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10306:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10276:42:2"
                            },
                            {
                              "assignments": [
                                815
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 815,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "10353:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 844,
                                  "src": "10336:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 814,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 813,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "10336:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "10336:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 822,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 816,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "10373:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 821,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 817,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "10383:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10383:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10400:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10383:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10373:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10336:66:2"
                            },
                            {
                              "expression": {
                                "id": 825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 823,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 808,
                                  "src": "10518:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 824,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "10531:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "10518:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 826,
                              "nodeType": "ExpressionStatement",
                              "src": "10518:30:2"
                            },
                            {
                              "expression": {
                                "id": 833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "10566:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 827,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "10573:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 832,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 831,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 828,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "10583:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 829,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "10583:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 830,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10600:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10583:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10573:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 834,
                              "nodeType": "ExpressionStatement",
                              "src": "10566:36:2"
                            },
                            {
                              "expression": {
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11072:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 835,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "11079:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 840,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 836,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "11089:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11089:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11106:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11089:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11079:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 842,
                              "nodeType": "ExpressionStatement",
                              "src": "11072:36:2"
                            },
                            {
                              "id": 843,
                              "nodeType": "Break",
                              "src": "11126:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 849,
                        "nodeType": "UncheckedBlock",
                        "src": "11159:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "11169:3:2",
                              "subExpression": {
                                "id": 846,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "11171:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 848,
                            "nodeType": "ExpressionStatement",
                            "src": "11169:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 786,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "10064:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 787,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "10066:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10066:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10064:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 851,
                  "initializationExpression": {
                    "assignments": [
                      783
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10059:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "10051:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10051:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 785,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10061:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10051:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10047:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "9978:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10017:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "10003:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10003:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10002:25:2"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10037:0:2"
            },
            "scope": 1820,
            "src": "9969:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 865,
              "nodeType": "Block",
              "src": "11423:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 859,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "11477:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5892",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 861,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "11498:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 860,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5892,
                        "src": "11490:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$5892_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11490:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$5892",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "11477:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$5892",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "11477:26:2"
                }
              ]
            },
            "documentation": {
              "id": 854,
              "nodeType": "StructuredDocumentation",
              "src": "11304:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 866,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "11418:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "11410:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11410:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11409:14:2"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11423:0:2"
            },
            "scope": 1820,
            "src": "11398:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "11638:7:2",
              "statements": []
            },
            "id": 870,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11618:2:2"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11638:0:2"
            },
            "scope": 1820,
            "src": "11611:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "11735:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 882,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "11753:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 883,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "11766:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11753:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11782:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11745:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11745:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "11745:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 891,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 874,
                              "src": "11838:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 889,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "11819:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5892",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2437,
                            "src": "11819:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11819:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 893,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11846:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11846:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11819:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11858:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11811:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11811:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "11811:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 900,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "11895:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 902,
                            "indexExpression": {
                              "id": 901,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "11914:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11895:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 904,
                          "indexExpression": {
                            "id": 903,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "11926:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11895:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11934:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11895:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11937:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11887:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11887:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "11887:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 911,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "11971:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11978:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11971:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 914,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "11983:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 915,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "11992:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 917,
                              "indexExpression": {
                                "id": 916,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "12002:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11992:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "11992:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "11983:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11971:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11963:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11963:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "11963:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 924,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12048:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12048:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 926,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "12066:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 928,
                            "indexExpression": {
                              "id": 927,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "12076:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12066:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "12066:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "12048:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12040:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12040:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "12040:61:2"
                },
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 933,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "12111:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 936,
                        "indexExpression": {
                          "id": 934,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "12130:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12111:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 937,
                      "indexExpression": {
                        "id": 935,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "12142:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12111:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 938,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "12151:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12159:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12151:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12111:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "12111:49:2"
                },
                {
                  "expression": {
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 943,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "12203:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 945,
                          "indexExpression": {
                            "id": 944,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "12213:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12203:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "12203:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 948,
                      "indexExpression": {
                        "id": 947,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "12231:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12203:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12241:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12203:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "12203:39:2"
                },
                {
                  "expression": {
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 952,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "12271:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 954,
                        "indexExpression": {
                          "id": 953,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "12281:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12271:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "12271:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12307:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12271:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "12271:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 878,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1810,
                  "src": "11724:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11724:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "11660:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "11673:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "11665:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11665:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "11693:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "11685:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "11708:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "11700:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11700:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11664:50:2"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11735:0:2"
            },
            "scope": 1820,
            "src": "11651:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "12543:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 978,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "12561:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12580:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12561:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 981,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "12585:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12604:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "12585:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12561:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12609:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12553:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12553:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "12553:84:2"
                },
                {
                  "expression": {
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 988,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12647:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12665:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12647:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "12647:19:2"
                },
                {
                  "assignments": [
                    994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 994,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "12714:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1036,
                      "src": "12697:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 992,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "12697:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "12697:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "baseExpression": {
                      "id": 995,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "12727:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 997,
                    "indexExpression": {
                      "id": 996,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "12737:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12727:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12697:55:2"
                },
                {
                  "expression": {
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 999,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "12766:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "12766:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1002,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "12792:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12766:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "12766:39:2"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1005,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "12819:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "12819:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1008,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "12845:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12819:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "12819:39:2"
                },
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1011,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "12872:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "12872:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1014,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "12901:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "12872:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "12872:45:2"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1017,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "12931:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "12931:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 962,
                      "src": "12953:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "12931:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "12931:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1024,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "12989:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1027,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "13007:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13000:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1025,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13000:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13000:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13024:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1030,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "13027:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1031,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "13039:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "13054:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "13069:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1023,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "12973:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12973:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "12973:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 974,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1819,
                  "src": "12533:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12533:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "12370:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "12401:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12385:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12385:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "12419:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12412:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12412:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "12444:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12437:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12437:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "12463:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12456:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12456:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "12485:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12478:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "12478:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "12507:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "12500:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12500:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12384:139:2"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12543:0:2"
            },
            "scope": 1820,
            "src": "12361:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "13327:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1055,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "13353:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13364:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1057,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "13367:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1058,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "13385:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1059,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "13397:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1060,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "13412:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1061,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "13427:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1054,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "13337:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13337:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "13337:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1051,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1819,
                  "src": "13317:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13317:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "13139:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13170:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13154:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13154:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13187:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13181:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13181:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13212:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13205:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13205:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13231:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13224:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13224:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13269:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13262:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13262:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1049,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13291:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "13284:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13284:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13153:154:2"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13327:0:2"
            },
            "scope": 1820,
            "src": "13130:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "13661:726:2",
              "statements": [
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "13679:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "13671:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13671:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1086,
                  "initialValue": {
                    "expression": {
                      "id": 1084,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13697:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "13697:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13671:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1087,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "13723:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "13723:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13723:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "13723:16:2"
                },
                {
                  "assignments": [
                    1094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1094,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "13766:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "13749:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1093,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1092,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "13749:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "13749:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1098,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1095,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "13780:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1097,
                    "indexExpression": {
                      "id": 1096,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "13790:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13780:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13749:57:2"
                },
                {
                  "expression": {
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1099,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "13820:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "13820:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1102,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1067,
                      "src": "13842:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13820:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "13820:31:2"
                },
                {
                  "expression": {
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1105,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "13865:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "13865:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13886:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13865:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "13865:26:2"
                },
                {
                  "expression": {
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1111,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "13905:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "13905:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1114,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "13930:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13905:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "13905:36:2"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "13955:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "13955:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1120,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "13985:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13955:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "13955:46:2"
                },
                {
                  "expression": {
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1123,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "14015:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14015:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1126,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "14039:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "14015:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "14015:34:2"
                },
                {
                  "expression": {
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1129,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "14063:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14063:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1132,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "14090:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14063:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "14063:40:2"
                },
                {
                  "expression": {
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1135,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "14117:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14117:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1138,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "14144:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14117:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "14117:40:2"
                },
                {
                  "expression": {
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1141,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "14171:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "14171:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1144,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "14200:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14171:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "14171:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1148,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "14280:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1149,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "14291:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1150,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "14304:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1151,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "14322:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1152,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "14334:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1153,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "14349:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1154,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "14364:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1147,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "14261:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14261:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "EmitStatement",
                  "src": "14256:124:2"
                }
              ]
            },
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "13465:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13497:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13481:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13481:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "13515:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13508:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13508:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13534:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13528:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13528:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13559:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13552:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13552:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13591:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13584:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13584:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13613:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13606:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13606:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13635:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13628:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13628:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13480:171:2"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13661:0:2"
            },
            "scope": 1820,
            "src": "13456:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "14459:1063:2",
              "statements": [
                {
                  "assignments": [
                    1164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1164,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "14477:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "14469:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14469:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1167,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "14523:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1165,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "14499:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2144,
                      "src": "14499:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14499:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14469:79:2"
                },
                {
                  "assignments": [
                    1172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "14570:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "14558:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1171,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1170,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "14558:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "14558:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14558:18:2"
                },
                {
                  "assignments": [
                    1175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1175,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "14594:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "14586:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14586:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1176,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14586:14:2"
                },
                {
                  "body": {
                    "id": 1257,
                    "nodeType": "Block",
                    "src": "14741:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1184,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "14755:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1189,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "14792:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1190,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1178,
                                    "src": "14818:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1187,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2161,
                                    "src": "14772:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2098,
                                  "src": "14772:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$1839_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14772:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14764:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1185,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14764:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14764:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14755:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1194,
                        "nodeType": "ExpressionStatement",
                        "src": "14755:66:2"
                      },
                      {
                        "expression": {
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1195,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "14835:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1196,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "14844:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1198,
                            "indexExpression": {
                              "id": 1197,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "14850:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14844:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "14835:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1200,
                        "nodeType": "ExpressionStatement",
                        "src": "14835:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1201,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "14875:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "14875:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1203,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14914:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14914:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14875:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1206,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "14933:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1207,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "14933:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1208,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1160,
                                "src": "14949:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14933:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14875:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1211,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1172,
                                "src": "14959:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "14959:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1213,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "14978:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14959:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14875:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1252,
                        "nodeType": "IfStatement",
                        "src": "14871:554:2",
                        "trueBody": {
                          "id": 1251,
                          "nodeType": "Block",
                          "src": "14985:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1216,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1172,
                                    "src": "15163:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1218,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "15163:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1221,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1160,
                                      "src": "15190:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15183:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1219,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15183:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15183:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "15163:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1224,
                              "nodeType": "ExpressionStatement",
                              "src": "15163:34:2"
                            },
                            {
                              "expression": {
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1225,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1172,
                                    "src": "15215:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1227,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "15215:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1230,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15261:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15261:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1232,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "15279:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15261:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15254:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1228,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15254:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15254:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "15215:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1236,
                              "nodeType": "ExpressionStatement",
                              "src": "15215:81:2"
                            },
                            {
                              "expression": {
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1237,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "15314:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1239,
                                  "indexExpression": {
                                    "id": 1238,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1175,
                                    "src": "15320:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15314:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1240,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "15330:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "15314:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1242,
                              "nodeType": "ExpressionStatement",
                              "src": "15314:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1244,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1160,
                                    "src": "15380:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1245,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1175,
                                    "src": "15388:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1246,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 106,
                                      "src": "15396:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1248,
                                    "indexExpression": {
                                      "id": 1247,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1175,
                                      "src": "15402:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15396:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$72_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1243,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "15359:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$72_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15359:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1250,
                              "nodeType": "EmitStatement",
                              "src": "15354:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1256,
                        "nodeType": "UncheckedBlock",
                        "src": "15438:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "15448:3:2",
                              "subExpression": {
                                "id": 1253,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "15450:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1255,
                            "nodeType": "ExpressionStatement",
                            "src": "15448:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1181,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "14715:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1182,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "14719:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14715:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1258,
                  "initializationExpression": {
                    "assignments": [
                      1178
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14709:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "14701:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14701:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1180,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14712:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14701:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "14697:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "14403:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "14442:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1260,
                  "src": "14434:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14434:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14433:16:2"
            },
            "returnParameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14459:0:2"
            },
            "scope": 1820,
            "src": "14394:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1397,
              "nodeType": "Block",
              "src": "15614:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1395,
                    "nodeType": "Block",
                    "src": "15747:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1280,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15785:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1282,
                                      "indexExpression": {
                                        "id": 1281,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1270,
                                        "src": "15795:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15785:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1283,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "15785:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1278,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15774:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15774:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15774:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1277,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15764:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15764:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1289,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "15833:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1287,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15822:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15822:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15822:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1286,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15812:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15812:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "15764:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1390,
                        "nodeType": "IfStatement",
                        "src": "15761:989:2",
                        "trueBody": {
                          "id": 1389,
                          "nodeType": "Block",
                          "src": "15845:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1294,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15931:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1296,
                                          "indexExpression": {
                                            "id": 1295,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1270,
                                            "src": "15941:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15931:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1297,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "15931:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1298,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15960:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15960:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15931:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1301,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15979:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15979:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1303,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15998:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1305,
                                          "indexExpression": {
                                            "id": 1304,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1270,
                                            "src": "16008:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15998:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1306,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "15998:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "15979:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "15931:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16025:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1293,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15923:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15923:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1311,
                              "nodeType": "ExpressionStatement",
                              "src": "15923:124:2"
                            },
                            {
                              "assignments": [
                                1314
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1314,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "16112:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1389,
                                  "src": "16100:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1313,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1312,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "16100:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "16100:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1333,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1316,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "16126:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1317,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1266,
                                    "src": "16136:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1318,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1264,
                                    "src": "16144:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16151:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1320,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16154:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1322,
                                      "indexExpression": {
                                        "id": 1321,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1270,
                                        "src": "16164:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16154:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1323,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "16154:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1324,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16184:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1326,
                                      "indexExpression": {
                                        "id": 1325,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1270,
                                        "src": "16194:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16184:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1327,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "16184:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1328,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16208:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16211:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16214:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16217:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1315,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "16121:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16121:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16100:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1337,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "16263:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1340,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "16297:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1339,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16289:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1338,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16289:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16289:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$1839_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1334,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2161,
                                    "src": "16237:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$2161_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1871,
                                  "src": "16237:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$1839_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16237:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1343,
                              "nodeType": "ExpressionStatement",
                              "src": "16237:81:2"
                            },
                            {
                              "expression": {
                                "id": 1348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1344,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "16336:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1346,
                                  "indexExpression": {
                                    "id": 1345,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "16342:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16336:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1347,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1314,
                                  "src": "16365:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16336:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1349,
                              "nodeType": "ExpressionStatement",
                              "src": "16336:35:2"
                            },
                            {
                              "expression": {
                                "id": 1352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1350,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "16389:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16410:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16389:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1353,
                              "nodeType": "ExpressionStatement",
                              "src": "16389:22:2"
                            },
                            {
                              "expression": {
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1354,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16466:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1356,
                                      "indexExpression": {
                                        "id": 1355,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1270,
                                        "src": "16476:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16466:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1357,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "16466:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1359,
                                  "indexExpression": {
                                    "id": 1358,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1266,
                                    "src": "16503:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16466:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1360,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16513:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1361,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16513:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16531:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16513:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16466:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1365,
                              "nodeType": "ExpressionStatement",
                              "src": "16466:71:2"
                            },
                            {
                              "expression": {
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1366,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "16555:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1368,
                                    "indexExpression": {
                                      "id": 1367,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1270,
                                      "src": "16565:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16555:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1369,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "16555:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1370,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16585:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1372,
                                      "indexExpression": {
                                        "id": 1371,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1270,
                                        "src": "16595:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16585:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1373,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "16585:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16615:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16585:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16555:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1377,
                              "nodeType": "ExpressionStatement",
                              "src": "16555:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1379,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1266,
                                    "src": "16654:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1380,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 108,
                                      "src": "16661:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16682:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "16661:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1383,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "16685:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1384,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16696:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16696:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1378,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "16640:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16640:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1387,
                              "nodeType": "EmitStatement",
                              "src": "16635:77:2"
                            },
                            {
                              "id": 1388,
                              "nodeType": "Break",
                              "src": "16730:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1394,
                        "nodeType": "UncheckedBlock",
                        "src": "16763:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16773:3:2",
                              "subExpression": {
                                "id": 1391,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1270,
                                "src": "16775:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1393,
                            "nodeType": "ExpressionStatement",
                            "src": "16773:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1273,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "15727:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1274,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "15729:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15729:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15727:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1396,
                  "initializationExpression": {
                    "assignments": [
                      1270
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15720:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1396,
                        "src": "15712:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15712:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1272,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15724:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15712:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15708:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "15537:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1262,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "15564:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "15550:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15550:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "15583:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "15575:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15575:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15597:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1398,
                  "src": "15590:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15590:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15549:55:2"
            },
            "returnParameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15614:0:2"
            },
            "scope": 1820,
            "src": "15528:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1467,
              "nodeType": "Block",
              "src": "16911:412:2",
              "statements": [
                {
                  "assignments": [
                    1409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1409,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "16934:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1467,
                      "src": "16921:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1408,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16921:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1416,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1412,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1403,
                          "src": "16963:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1414,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16971:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16963:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1410,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16946:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "16946:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16946:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16921:53:2"
                },
                {
                  "condition": {
                    "id": 1417,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1405,
                    "src": "16987:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1446,
                  "nodeType": "IfStatement",
                  "src": "16984:193:2",
                  "trueBody": {
                    "id": 1445,
                    "nodeType": "Block",
                    "src": "16997:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1443,
                          "nodeType": "Block",
                          "src": "17050:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1426,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1403,
                                    "src": "17068:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1428,
                                  "indexExpression": {
                                    "id": 1427,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1419,
                                    "src": "17076:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17068:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1432,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1403,
                                            "src": "17108:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1434,
                                          "indexExpression": {
                                            "id": 1433,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1419,
                                            "src": "17116:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17108:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1430,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "17091:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "17091:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17091:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1429,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "17081:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17081:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "17068:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1438,
                              "nodeType": "ExpressionStatement",
                              "src": "17068:52:2"
                            },
                            {
                              "id": 1442,
                              "nodeType": "UncheckedBlock",
                              "src": "17138:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "17148:3:2",
                                    "subExpression": {
                                      "id": 1439,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1419,
                                      "src": "17150:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1441,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17148:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1422,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1419,
                            "src": "17030:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1423,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1403,
                              "src": "17034:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17034:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17030:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1444,
                        "initializationExpression": {
                          "assignments": [
                            1419
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1419,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17023:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1444,
                              "src": "17015:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1418,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17015:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1421,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17027:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17015:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17011:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "17194:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1467,
                      "src": "17186:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1447,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17186:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1455,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1452,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "17230:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1450,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17213:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17213:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17213:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1449,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "17203:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17203:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17186:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1457,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "17266:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1458,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "17274:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1459,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1400,
                          "src": "17282:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "17274:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1461,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1403,
                          "src": "17294:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1463,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17302:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17294:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1464,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1409,
                        "src": "17306:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1456,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "17254:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17254:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1466,
                  "nodeType": "EmitStatement",
                  "src": "17249:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "16829:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1400,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "16849:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "16841:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16841:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "16878:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "16861:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1401,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "16861:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1402,
                    "nodeType": "ArrayTypeName",
                    "src": "16861:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "16892:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1468,
                  "src": "16887:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16887:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16840:61:2"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16911:0:2"
            },
            "scope": 1820,
            "src": "16820:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1773,
              "nodeType": "Block",
              "src": "18125:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1481,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1470,
                                "src": "18212:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1479,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "18193:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$5892",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2437,
                              "src": "18193:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18193:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1483,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18223:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18223:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18193:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1486,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "18237:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1488,
                              "indexExpression": {
                                "id": 1487,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "18243:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18237:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1489,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "18237:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1490,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1470,
                            "src": "18264:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18237:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18193:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18272:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18185:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18185:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "18185:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1497,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "18325:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18325:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18342:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18325:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18317:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18317:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1502,
                  "nodeType": "ExpressionStatement",
                  "src": "18317:27:2"
                },
                {
                  "assignments": [
                    1505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1505,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "18368:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "18355:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1504,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1503,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "18355:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "18355:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1506,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "18377:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1508,
                    "indexExpression": {
                      "id": 1507,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1472,
                      "src": "18383:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18377:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18355:36:2"
                },
                {
                  "assignments": [
                    1511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1511,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "18409:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "18401:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18401:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1513,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18417:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18401:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1514,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "18948:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "18948:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18967:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18948:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1546,
                  "nodeType": "IfStatement",
                  "src": "18945:205:2",
                  "trueBody": {
                    "id": 1545,
                    "nodeType": "Block",
                    "src": "18970:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1543,
                          "nodeType": "Block",
                          "src": "19023:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1526,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1475,
                                    "src": "19041:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1528,
                                  "indexExpression": {
                                    "id": 1527,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1519,
                                    "src": "19049:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19041:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1532,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1475,
                                            "src": "19081:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1534,
                                          "indexExpression": {
                                            "id": 1533,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1519,
                                            "src": "19089:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19081:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1530,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19064:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1531,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19064:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19064:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1529,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19054:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19054:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19041:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1538,
                              "nodeType": "ExpressionStatement",
                              "src": "19041:52:2"
                            },
                            {
                              "id": 1542,
                              "nodeType": "UncheckedBlock",
                              "src": "19111:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19121:3:2",
                                    "subExpression": {
                                      "id": 1539,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1519,
                                      "src": "19123:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1541,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19121:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1522,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1519,
                            "src": "19003:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1523,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "19007:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19007:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19003:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1544,
                        "initializationExpression": {
                          "assignments": [
                            1519
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1519,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18996:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1544,
                              "src": "18988:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1518,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18988:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1521,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19000:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18988:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "18984:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1548,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19167:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "19159:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1547,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19159:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1555,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1552,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "19203:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1550,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19186:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19186:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19186:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1549,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19176:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19176:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19159:53:2"
                },
                {
                  "assignments": [
                    1557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1557,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19231:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1773,
                      "src": "19223:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19223:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1565,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1558,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "19245:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "19245:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1560,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "19260:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19245:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19273:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19245:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19269:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19223:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1567,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "19312:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1568,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "19320:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "19320:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1570,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "19334:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1571,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "19343:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1572,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1557,
                          "src": "19351:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19364:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19351:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1566,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "19290:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19290:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1576,
                  "nodeType": "EmitStatement",
                  "src": "19285:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1577,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "19381:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19395:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19381:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1771,
                    "nodeType": "Block",
                    "src": "20242:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1660,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "20390:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "20390:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1662,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "20410:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "20390:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1769,
                          "nodeType": "Block",
                          "src": "21226:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1743
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1743,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21340:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1769,
                                  "src": "21332:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1742,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21332:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1746,
                              "initialValue": {
                                "expression": {
                                  "id": 1744,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1505,
                                  "src": "21348:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1745,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "21348:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21332:30:2"
                            },
                            {
                              "expression": {
                                "id": 1750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21380:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1747,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "21387:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1749,
                                  "indexExpression": {
                                    "id": 1748,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1472,
                                    "src": "21393:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21387:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1751,
                              "nodeType": "ExpressionStatement",
                              "src": "21380:21:2"
                            },
                            {
                              "assignments": [
                                1753,
                                1755
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1753,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21425:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1769,
                                  "src": "21420:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1752,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21420:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1755,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21444:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1769,
                                  "src": "21431:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1754,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21431:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1763,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21479:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1756,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4213,
                                        "src": "21452:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1757,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21452:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1758,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21452:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1759,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1743,
                                      "src": "21472:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21452:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21452:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21419:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1765,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1753,
                                    "src": "21558:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21564:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1764,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21550:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21550:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1768,
                              "nodeType": "ExpressionStatement",
                              "src": "21550:37:2"
                            }
                          ]
                        },
                        "id": 1770,
                        "nodeType": "IfStatement",
                        "src": "20387:1246:2",
                        "trueBody": {
                          "id": 1741,
                          "nodeType": "Block",
                          "src": "20417:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1665
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1665,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20443:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1741,
                                  "src": "20435:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1664,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20435:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1670,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1666,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1505,
                                    "src": "20451:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1667,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20451:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20466:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "20451:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20435:32:2"
                            },
                            {
                              "assignments": [
                                1672
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1672,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "20501:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1741,
                                  "src": "20485:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1671,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20485:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1681,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1677,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1505,
                                          "src": "20542:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1678,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "20542:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1675,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "20523:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$5892",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2437,
                                      "src": "20523:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20523:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20515:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1673,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20515:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20515:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20485:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1685,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1505,
                                      "src": "20601:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1686,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "20601:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1687,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20619:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1682,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20579:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5892",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5539,
                                  "src": "20579:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20579:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1689,
                              "nodeType": "ExpressionStatement",
                              "src": "20579:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1693,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1470,
                                    "src": "20685:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1694,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20693:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1690,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20663:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$5892",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5539,
                                  "src": "20663:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20663:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1696,
                              "nodeType": "ExpressionStatement",
                              "src": "20663:56:2"
                            },
                            {
                              "expression": {
                                "id": 1701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1697,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1505,
                                    "src": "20738:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1699,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20738:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20753:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20738:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1702,
                              "nodeType": "ExpressionStatement",
                              "src": "20738:16:2"
                            },
                            {
                              "expression": {
                                "id": 1706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20801:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1703,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20808:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1705,
                                  "indexExpression": {
                                    "id": 1704,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1472,
                                    "src": "20814:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20808:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1707,
                              "nodeType": "ExpressionStatement",
                              "src": "20801:21:2"
                            },
                            {
                              "assignments": [
                                1709,
                                1711
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1709,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20889:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1741,
                                  "src": "20884:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1708,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20884:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1711,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20908:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1741,
                                  "src": "20895:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1710,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20895:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1718,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20947:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1712,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1672,
                                      "src": "20916:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20916:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1714,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1665,
                                      "src": "20940:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20916:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20916:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20883:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1720,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1709,
                                    "src": "20976:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20982:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1719,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20968:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20968:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1723,
                              "nodeType": "ExpressionStatement",
                              "src": "20968:37:2"
                            },
                            {
                              "expression": {
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1724,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1709,
                                      "src": "21061:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1725,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1711,
                                      "src": "21067:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1726,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21060:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21105:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1727,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21075:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1728,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21075:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21075:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1730,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1665,
                                        "src": "21098:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21075:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21075:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21060:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1735,
                              "nodeType": "ExpressionStatement",
                              "src": "21060:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1737,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1709,
                                    "src": "21134:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21140:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1736,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21126:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21126:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1740,
                              "nodeType": "ExpressionStatement",
                              "src": "21126:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1772,
                  "nodeType": "IfStatement",
                  "src": "19377:2266:2",
                  "trueBody": {
                    "id": 1659,
                    "nodeType": "Block",
                    "src": "19397:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1581
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1581,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19483:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1659,
                            "src": "19475:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1580,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19475:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1586,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1582,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "19491:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1583,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19491:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19506:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19491:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19475:32:2"
                      },
                      {
                        "assignments": [
                          1588
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1588,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "19537:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1659,
                            "src": "19521:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1587,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19521:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1597,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1593,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1505,
                                    "src": "19580:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1594,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "19580:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1591,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "19561:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$5892",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2437,
                                "src": "19561:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19561:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19553:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19553:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19553:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19521:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1601,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1505,
                                "src": "19690:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "19690:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1603,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1505,
                                "src": "19704:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "19704:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1598,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19668:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5892",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5539,
                            "src": "19668:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19668:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "19668:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1610,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1505,
                                "src": "19757:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1611,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "19757:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1612,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "19776:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1607,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19735:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$5892",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5539,
                            "src": "19735:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19735:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1614,
                        "nodeType": "ExpressionStatement",
                        "src": "19735:67:2"
                      },
                      {
                        "expression": {
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1615,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "19817:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1617,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19817:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19832:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19817:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1620,
                        "nodeType": "ExpressionStatement",
                        "src": "19817:16:2"
                      },
                      {
                        "expression": {
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "19876:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1621,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19883:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1623,
                            "indexExpression": {
                              "id": 1622,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1472,
                              "src": "19889:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19883:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1625,
                        "nodeType": "ExpressionStatement",
                        "src": "19876:21:2"
                      },
                      {
                        "assignments": [
                          1627,
                          1629
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1627,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "19956:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1659,
                            "src": "19951:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1626,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19951:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1629,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "19975:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1659,
                            "src": "19962:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1628,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "19962:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1636,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20016:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1630,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "19983:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "19983:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1632,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1581,
                                "src": "20009:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "19983:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19983:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19950:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1638,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "20041:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20047:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20033:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20033:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1641,
                        "nodeType": "ExpressionStatement",
                        "src": "20033:37:2"
                      },
                      {
                        "expression": {
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1642,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1627,
                                "src": "20118:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1643,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "20124:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1644,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20117:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20162:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1645,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20132:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20132:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20132:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1648,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1581,
                                  "src": "20155:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20132:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20132:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20117:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1653,
                        "nodeType": "ExpressionStatement",
                        "src": "20117:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1655,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "20187:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20193:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1654,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20179:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20179:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1658,
                        "nodeType": "ExpressionStatement",
                        "src": "20179:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "18038:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "18065:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "18057:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18057:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1472,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "18081:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "18073:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18073:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "18107:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "18090:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1473,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1474,
                    "nodeType": "ArrayTypeName",
                    "src": "18090:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18056:59:2"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18125:0:2"
            },
            "scope": 1820,
            "src": "18029:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1782,
              "nodeType": "Block",
              "src": "21758:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21776:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21782:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21768:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21768:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1780,
                  "nodeType": "ExpressionStatement",
                  "src": "21768:30:2"
                },
                {
                  "id": 1781,
                  "nodeType": "PlaceholderStatement",
                  "src": "21808:1:2"
                }
              ]
            },
            "id": 1783,
            "name": "onlyAdmin",
            "nameLocation": "21746:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21755:2:2"
            },
            "src": "21737:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1791,
              "nodeType": "Block",
              "src": "21846:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21864:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21870:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21856:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21856:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1789,
                  "nodeType": "ExpressionStatement",
                  "src": "21856:30:2"
                },
                {
                  "id": 1790,
                  "nodeType": "PlaceholderStatement",
                  "src": "21896:1:2"
                }
              ]
            },
            "id": 1792,
            "name": "onlyNFTOwner",
            "nameLocation": "21831:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21843:2:2"
            },
            "src": "21822:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "21932:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21950:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21956:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21942:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21942:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1798,
                  "nodeType": "ExpressionStatement",
                  "src": "21942:31:2"
                },
                {
                  "id": 1799,
                  "nodeType": "PlaceholderStatement",
                  "src": "21983:1:2"
                }
              ]
            },
            "id": 1801,
            "name": "onlyLessee",
            "nameLocation": "21919:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21929:2:2"
            },
            "src": "21910:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "22019:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22059:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22065:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22051:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "22051:31:2"
                },
                {
                  "id": 1808,
                  "nodeType": "PlaceholderStatement",
                  "src": "22092:1:2"
                }
              ]
            },
            "id": 1810,
            "name": "onlyMember",
            "nameLocation": "22006:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22016:2:2"
            },
            "src": "21997:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "22150:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22168:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22173:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22160:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22160:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "22160:36:2"
                },
                {
                  "id": 1817,
                  "nodeType": "PlaceholderStatement",
                  "src": "22227:1:2"
                }
              ]
            },
            "id": 1819,
            "name": "onlyBoard",
            "nameLocation": "22138:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22147:2:2"
            },
            "src": "22129:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1821,
        "src": "743:21499:2",
        "usedErrors": [
          1830
        ]
      }
    ],
    "src": "0:22242:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b5060405162003e9838038062003e988339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b613d8d806200010b6000396000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063e95d23471161006f578063e95d234714610421578063f18c51d314610461578063f2fde38b14610481578063f4739bd9146104a1578063f713b7ed146104d1578063ff981099146104f157600080fd5b80638da5cb5b1461034957806390b293d814610371578063976217cd14610387578063b2bad544146103b4578063beca3a16146103e1578063d374a2171461040157600080fd5b806369d037381161010857806369d037381461027e578063715018a61461029e57806372e185ce146102b3578063826b8ebd146102d35780638a6655d6146102f35780638d9776721461031357600080fd5b8063013cf08b1461015b57806309265ce61461019557806310190ef1146101b75780634b50f16a146101eb57806361f9e9a8146102185780636215597b1461023857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004612eba565b61051e565b60405161018c959493929190612f2b565b60405180910390f35b3480156101a157600080fd5b506101b56101b0366004613034565b6105ea565b005b3480156101c357600080fd5b506101d76101d2366004612eba565b610730565b60405161018c989796959493929190613093565b3480156101f757600080fd5b5061020b610206366004613112565b61083a565b60405161018c91906131fe565b34801561022457600080fd5b506101b56102333660046132cd565b610c32565b34801561024457600080fd5b5061027061025336600461336a565b600360209081526000928352604080842090915290825290205481565b60405190815260200161018c565b34801561028a57600080fd5b506101b56102993660046133a1565b610c5a565b3480156102aa57600080fd5b506101b5610ca6565b3480156102bf57600080fd5b506101b56102ce36600461342d565b610cdc565b3480156102df57600080fd5b506102706102ee366004612eba565b611160565b3480156102ff57600080fd5b506101b561030e366004613483565b611376565b34801561031f57600080fd5b5061033361032e366004612eba565b6113af565b60405161018c9a999897969594939291906134af565b34801561035557600080fd5b506001546040516001600160a01b03909116815260200161018c565b34801561037d57600080fd5b50610270600a5481565b34801561039357600080fd5b506103a76103a2366004612eba565b6114b1565b60405161018c9190613530565b3480156103c057600080fd5b506103d46103cf366004613112565b6115f3565b60405161018c9190613543565b3480156103ed57600080fd5b506101b56103fc366004613598565b6119b9565b34801561040d57600080fd5b506101b561041c366004612eba565b611ace565b34801561042d57600080fd5b5060055461044790600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161018c565b34801561046d57600080fd5b506101b561047c3660046135e8565b611e0a565b34801561048d57600080fd5b506101b561049c3660046133a1565b6125b0565b3480156104ad57600080fd5b506104c16104bc366004612eba565b61264b565b604051901515815260200161018c565b3480156104dd57600080fd5b506101b56104ec366004613637565b61281b565b3480156104fd57600080fd5b5061051161050c366004612eba565b6129b8565b60405161018c9190613673565b600760205260009081526040902080548190610539906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610565906136bb565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105ff576105ff6136f5565b602002602001015160405160200161061991815260200190565b604051602081830303815290604052905081156106a55760005b83518110156106a35783818151811061064e5761064e6136f5565b602002602001015160405160200161066891815260200190565b60405160208183030381529060405280519060200120848281518110610690576106906136f5565b6020908102919091010152600101610633565b505b6000836040516020016106b8919061370b565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea8186831486600081518110610708576107086136f5565b6020026020010151856040516107219493929190613741565b60405180910390a15050505050565b6004818154811061074057600080fd5b9060005260206000209060030201600091509050806001018054610763906136bb565b80601f016020809104026020016040519081016040528092919081815260200182805461078f906136bb565b80156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000610857600554600f81810b600160801b909204900b0390565b9050610861612e1c565b600080805b848110156109e957610879600582612add565b600081815260096020526040908190208151610140810190925280549295509091829082906108a7906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546108d3906136bb565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519195504291161180156109d557508664ffffffffff168460e0015161ffff16145b156109e1578160010191505b600101610866565b5080600003610a3057604080516001808252818301909252600091816020015b610a11612e1c565b815260200190600190039081610a095790505b50979650505050505050565b600080826001600160401b03811115610a4b57610a4b612f6f565b604051908082528060200260200182016040528015610a8457816020015b610a71612e1c565b815260200190600190039081610a695790505b50905060005b86811015610a2457610a9d600582612add565b60008181526009602052604090819020815161014081019092528054929750909182908290610acb906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610af7906136bb565b8015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919750429116118015610bf957508864ffffffffff168660e0015161ffff16145b15610c2a5785828481518110610c1157610c116136f5565b6020026020010181905250826001019250838311610a24575b600101610a8a565b610c40565b60405180910390fd5b610c51878760008888888888612b4e565b50505050505050565b6001546001600160a01b03163314610c845760405162461bcd60e51b8152600401610c3790613772565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610cd05760405162461bcd60e51b8152600401610c3790613772565b610cda6000612ccd565b565b60005b60045481101561115a5783604051602001610cfa91906137a7565b6040516020818303038152906040528051906020012060048281548110610d2357610d236136f5565b9060005260206000209060030201600101604051602001610d449190613837565b6040516020818303038152906040528051906020012003611152574260048281548110610d7357610d736136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610dd7575060048181548110610db157610db16136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610e195760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610c37565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610e5c57610e5c6136f5565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610e9657610e966136f5565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610f349082613899565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a805460009061103890849061396e565b9091555061104b9050426201518061396e565b6004838154811061105e5761105e6136f5565b6000918252602080832064ffffffffff88168452600390920290910190526040902055600480546001919084908110611099576110996136f5565b906000526020600020906003020160020160149054906101000a900461ffff166110c39190613986565b600483815481106110d6576110d66136f5565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600a5461113291906139a9565b874260405161114494939291906139c0565b60405180910390a15061115a565b600101610cdf565b50505050565b600060085482106111a65760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c37565b600082815260076020526040902060030154600160501b900464ffffffffff16421161120a5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610c37565b6000806000805b60008681526007602052604090206001015461ffff1681101561132b57600086815260076020526040902083906002018260088110611252576112526136f5565b601091828204019190066002029054906101000a900461ffff1661ffff1611156112cd5760008681526007602052604090206002018160088110611298576112986136f5565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036112c857600091505b611319565b6000868152600760205260409020839060020182600881106112f1576112f16136f5565b601091828204019190066002029054906101000a900461ffff1661ffff160361131957600191505b80611323816139f7565b915050611211565b50801561136d5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610c37565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610c37565b6009602052600090815260409020805481906113ca906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546113f6906136bb565b80156114435780601f1061141857610100808354040283529160200191611443565b820191906000526020600020905b81548152906001019060200180831161142657829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6114b9612e1c565b60008281526009602052604090819020815161014081019092528054829082906114e2906136bb565b80601f016020809104026020016040519081016040528092919081815260200182805461150e906136bb565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b60045481101561170b574260048281548110611617576116176136f5565b6000918252602080832064ffffffffff8916845260039092029091019052604090205410801561167b57504260048281548110611656576116566136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156116ba57504260048281548110611696576116966136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156116f757506001600482815481106116d6576116d66136f5565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611703578160010191505b6001016115f9565b508060000361177757604080516001808252818301909252600091816020015b606081526020019060019003908161172b5790505090506040518060200160405280600081525081600081518110611765576117656136f5565b60209081029190910101529392505050565b6000816001600160401b0381111561179157611791612f6f565b6040519080825280602002602001820160405280156117c457816020015b60608152602001906001900390816117af5790505b5090506000805b6004548110156119af5742600482815481106117e9576117e96136f5565b6000918252602080832064ffffffffff8b16845260039092029091019052604090205410801561184d57504260048281548110611828576118286136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561188c57504260048281548110611868576118686136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156118c957506001600482815481106118a8576118a86136f5565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156119a757600481815481106118e1576118e16136f5565b906000526020600020906003020160010180546118fd906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611929906136bb565b80156119765780601f1061194b57610100808354040283529160200191611976565b820191906000526020600020905b81548152906001019060200180831161195957829003601f168201915b505050505083838151811061198d5761198d6136f5565b6020026020010181905250816001019150838210156119af575b6001016117cb565b5090949350505050565b60018561ffff161180156119d257506101018561ffff16105b611a1e5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610c37565b600160086000828254611a31919061396e565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611ab0888a83613a2d565b50611ac48888600854600089898989612b4e565b5050505050505050565b6000611ae9600554600f81810b600160801b909204900b0390565b9050611af3612e1c565b6000805b83811015611e0357611b0a600582612add565b60008181526009602052604090819020815161014081019092528054929450909182908290611b38906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611b64906136bb565b8015611bb15780601f10611b8657610100808354040283529160200191611bb1565b820191906000526020600020905b815481529060010190602001808311611b9457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611c63575084836020015164ffffffffff1614155b8015611c7857508483610100015161ffff1614155b15611dfb5761ffff851660e0840152600b54611c94904261396e565b64ffffffffff16610120840152600082815260096020526040902083518491908190611cc09082613899565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b949092169390930217909255600084815260099092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611df29188918691613aec565b60405180910390a15b600101611af7565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e779190613a10565b6001600160a01b0316148015611ea85750600082815260096020526040902060040154600160701b900461ffff1683145b611ef45760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610c37565b6000815111611f0257600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611f9d5760005b8351811015611f9b57838181518110611f4657611f466136f5565b6020026020010151604051602001611f6091815260200190565b60405160208183030381529060405280519060200120848281518110611f8857611f886136f5565b6020908102919091010152600101611f2b565b505b600083604051602001611fb0919061370b565b604051602081830303815290604052805190602001209050600081846002015414611fdc576000611fdf565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361234557600484015460009061206f90600290600160201b90046001600160501b0316613bb7565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156120db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ff9190613a10565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561216957600080fd5b505af115801561217d573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156121e557600080fd5b505af11580156121f9573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff00000000191690555060008881526009602052604081209061222f8282612e70565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146122ad576040519150601f19603f3d011682016040523d82523d6000602084013e6122b2565b606091505b5091509150816122d45760405162461bcd60e51b8152600401610c3790613beb565b60405133908590600081818185875af1925050503d8060008114612314576040519150601f19603f3d011682016040523d82523d6000602084013e612319565b606091505b5090925090508161233c5760405162461bcd60e51b8152600401610c3790613beb565b50505050610c51565b818460030154036124bc57600484015460009061237490600290600160201b90046001600160501b0316613bb7565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156123e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124049190613a10565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561246857600080fd5b505af115801561247c573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a591506044016121cb565b60048401546000878152600960205260408120600160201b9092046001600160501b031691906124ec8282612e70565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806125336001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d806000811461257d576040519150601f19603f3d011682016040523d82523d6000602084013e612582565b606091505b5091509150816125a45760405162461bcd60e51b8152600401610c3790613beb565b50505050505050505050565b6001546001600160a01b031633146125da5760405162461bcd60e51b8152600401610c3790613772565b6001600160a01b03811661263f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c37565b61264881612ccd565b50565b600080612667600554600f81810b600160801b909204900b0390565b9050612671612e1c565b60005b82811015612810576009600061268b600584612add565b60001c8152602001908152602001600020604051806101400160405290816000820180546126b8906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546126e4906136bb565b80156127315780601f1061270657610100808354040283529160200191612731565b820191906000526020600020905b81548152906001019060200180831161271457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519193504291161080156127e3575084826020015164ffffffffff1614155b80156127f857508482610100015161ffff1614155b1561280857506001949350505050565b600101612674565b506000949350505050565b60005b6004548110156129b457816040516020016128399190613c19565b6040516020818303038152906040528051906020012060048281548110612862576128626136f5565b90600052602060002090600302016001016040516020016128839190613c35565b60405160208183030381529060405280519060200120036129ac576000600482815481106128b3576128b36136f5565b906000526020600020906003020190506000600460016004805490506128d991906139a9565b815481106128e9576128e96136f5565b906000526020600020906003020190508091506004600160048054905061291091906139a9565b81548110612920576129206136f5565b906000526020600020906003020160006001820160006129409190612e70565b5060020180546001600160b01b031916905560048054612962906001906139a9565b81548110612972576129726136f5565b906000526020600020906003020160006001820160006129929190612e70565b5060020180546001600160b01b0319169055506129b49050565b60010161281e565b5050565b606060085482106129fe5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c37565b60008281526007602052604081206001015461ffff166001600160401b03811115612a2b57612a2b612f6f565b604051908082528060200260200182016040528015612a54578160200160208202803683370190505b50905060005b8151811015612ad65760008481526007602052604090206002018160088110612a8557612a856136f5565b601091828204019190066002029054906101000a900461ffff16828281518110612ab157612ab16136f5565b61ffff9092166020928302919091019091015280612ace816139f7565b915050612a5a565b5092915050565b600080612b00612aec84612d1f565b8554612afb9190600f0b613ca7565b612d8d565b8454909150600160801b9004600f90810b9082900b12612b3357604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b6004805460018101808355600083815291929083908110612b7157612b716136f5565b60009182526020909120600390910201905060018101612b928a8c83613a2d565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051612cb9989796959493929190613ce8565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160ff1b03821115612d895760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610c37565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612dc057506f7fffffffffffffffffffffffffffffff8213155b612d895760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610c37565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b508054612e7c906136bb565b6000825580601f10612e8c575050565b601f01602090049060005260206000209081019061264891905b80821115612d895760008155600101612ea6565b600060208284031215612ecc57600080fd5b5035919050565b60005b83811015612eee578181015183820152602001612ed6565b8381111561115a5750506000910152565b60008151808452612f17816020860160208601612ed3565b601f01601f19169290920160200192915050565b60a081526000612f3e60a0830188612eff565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612fad57612fad612f6f565b604052919050565b600082601f830112612fc657600080fd5b813560206001600160401b03821115612fe157612fe1612f6f565b8160051b612ff0828201612f85565b928352848101820192828101908785111561300a57600080fd5b83870192505b8483101561302957823582529183019190830190613010565b979650505050505050565b60008060006060848603121561304957600080fd5b8335925060208401356001600160401b0381111561306657600080fd5b61307286828701612fb5565b9250506040840135801515811461308857600080fd5b809150509250925092565b60006101008083526130a78184018c612eff565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461310d57600080fd5b919050565b60006020828403121561312457600080fd5b61312d826130f8565b9392505050565b6000610140825181855261314a82860182612eff565b9150506020830151613165602086018264ffffffffff169052565b506040830151604085015260608301516060850152608083015161318e608086018260ff169052565b5060a08301516131a560a086018262ffffff169052565b5060c08301516131c060c08601826001600160501b03169052565b5060e08301516131d660e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff8116828701526119af565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561325357603f19888603018452613241858351613134565b94509285019290850190600101613225565b5092979650505050505050565b60008083601f84011261327257600080fd5b5081356001600160401b0381111561328957600080fd5b6020830191508360208285010111156132a157600080fd5b9250929050565b803562ffffff8116811461310d57600080fd5b803561ffff8116811461310d57600080fd5b600080600080600080600060c0888a0312156132e857600080fd5b87356001600160401b038111156132fe57600080fd5b61330a8a828b01613260565b909850965050602088013560ff8116811461332457600080fd5b9450613332604089016132a8565b9350613340606089016130f8565b925061334e608089016130f8565b915061335c60a089016132bb565b905092959891949750929550565b6000806040838503121561337d57600080fd5b50508035926020909101359150565b6001600160a01b038116811461264857600080fd5b6000602082840312156133b357600080fd5b813561312d8161338c565b600082601f8301126133cf57600080fd5b81356001600160401b038111156133e8576133e8612f6f565b6133fb601f8201601f1916602001612f85565b81815284602083860101111561341057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561344257600080fd5b83356001600160401b0381111561345857600080fd5b613464868287016133be565b9350506020840135915061347a604085016130f8565b90509250925092565b60008060006060848603121561349857600080fd5b505081359360208301359350604090920135919050565b60006101408083526134c38184018e612eff565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061312d6020830184613134565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561325357603f19888603018452613586858351612eff565b9450928501929085019060010161356a565b600080600080600080600060c0888a0312156135b357600080fd5b87356001600160401b038111156135c957600080fd5b6135d58a828b01613260565b90985096506133249050602089016132bb565b6000806000606084860312156135fd57600080fd5b833592506020840135915060408401356001600160401b0381111561362157600080fd5b61362d86828701612fb5565b9150509250925092565b60006020828403121561364957600080fd5b81356001600160401b0381111561365f57600080fd5b61366b848285016133be565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156136af57835161ffff168352928401929184019160010161368f565b50909695505050505050565b600181811c908216806136cf57607f821691505b6020821081036136ef57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561373557815185529382019390820190600101613719565b50929695505050505050565b84815283151560208201528260408201526080606082015260006137686080830184612eff565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061312d6020830184612eff565b600081546137c7816136bb565b8085526020600183811680156137e457600181146137fe5761382c565b60ff1985168884015283151560051b88018301955061382c565b866000528260002060005b858110156138245781548a8201860152908301908401613809565b890184019650505b505050505092915050565b60208152600061312d60208301846137ba565b601f82111561389457600081815260208120601f850160051c810160208610156138715750805b601f850160051c820191505b818110156138905782815560010161387d565b5050505b505050565b81516001600160401b038111156138b2576138b2612f6f565b6138c6816138c084546136bb565b8461384a565b602080601f8311600181146138fb57600084156138e35750858301515b600019600386901b1c1916600185901b178555613890565b600085815260208120601f198616915b8281101561392a5788860151825594840194600190910190840161390b565b50858210156139485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000821982111561398157613981613958565b500190565b600061ffff838116908316818110156139a1576139a1613958565b039392505050565b6000828210156139bb576139bb613958565b500390565b64ffffffffff851681528360208201526080604082015260006139e66080830185612eff565b905082606083015295945050505050565b600060018201613a0957613a09613958565b5060010190565b600060208284031215613a2257600080fd5b815161312d8161338c565b6001600160401b03831115613a4457613a44612f6f565b613a5883613a5283546136bb565b8361384a565b6000601f841160018114613a8c5760008515613a745750838201355b600019600387901b1c1916600186901b178355611e03565b600083815260209020601f19861690835b82811015613abd5786850135825560209485019460019092019101613a9d565b5086821015613ada5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613b156101a08401856137ba565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613b996101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613bdf57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613c2b818460208701612ed3565b9190910192915050565b6000808354613c43816136bb565b60018281168015613c5b5760018114613c7057613735565b60ff1984168752821515830287019450613735565b8760005260208060002060005b85811015613c965781548a820152908401908201613c7d565b505050959091019695505050505050565b600080821280156001600160ff1b0384900385131615613cc957613cc9613958565b600160ff1b8390038412811615613ce257613ce2613958565b50500190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea264697066735822122072d6bd61082ee417919e3c343dbe96baad1aa35bb37f19c1b97204c17074061c64736f6c634300080f0033",
  "bytecodeSha1": "f0cc2ea3e452c20fc00dcf814ac6d5545616c1c2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "159": [
            26367,
            26392,
            false
          ],
          "160": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "158": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "156": [
            4843,
            4860,
            false
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "151": [
            6467,
            6521,
            false
          ],
          "152": [
            6525,
            6547,
            false
          ],
          "153": [
            6551,
            6576,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "139": [
            14875,
            14929,
            false
          ],
          "140": [
            14933,
            14955,
            false
          ],
          "141": [
            14959,
            14984,
            false
          ]
        },
        "Governance.completeTask": {
          "118": [
            15764,
            15844,
            false
          ],
          "119": [
            15931,
            15975,
            false
          ],
          "120": [
            15979,
            16023,
            true
          ]
        },
        "Governance.createProposal": {
          "137": [
            12561,
            12581,
            false
          ],
          "138": [
            12585,
            12607,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "154": [
            10101,
            10193,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "127": [
            8308,
            8370,
            false
          ],
          "128": [
            8386,
            8430,
            false
          ],
          "129": [
            8434,
            8477,
            false
          ],
          "130": [
            8493,
            8524,
            false
          ],
          "131": [
            8854,
            8862,
            false
          ],
          "132": [
            9138,
            9200,
            false
          ],
          "133": [
            9216,
            9260,
            false
          ],
          "134": [
            9264,
            9307,
            false
          ],
          "135": [
            9323,
            9354,
            false
          ],
          "136": [
            9486,
            9502,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "112": [
            7133,
            7187,
            false
          ],
          "113": [
            7191,
            7217,
            false
          ],
          "114": [
            7364,
            7372,
            false
          ],
          "115": [
            7765,
            7819,
            false
          ],
          "116": [
            7823,
            7849,
            false
          ],
          "117": [
            7952,
            7965,
            false
          ]
        },
        "Governance.getVotes": {
          "155": [
            4684,
            4711,
            true
          ]
        },
        "Governance.getWinningVote": {
          "121": [
            5078,
            5105,
            true
          ],
          "122": [
            5145,
            5197,
            true
          ],
          "123": [
            5544,
            5594,
            false
          ],
          "124": [
            5719,
            5725,
            false
          ],
          "125": [
            5773,
            5824,
            false
          ],
          "126": [
            5890,
            5896,
            true
          ]
        },
        "Governance.submitVerification": {
          "142": [
            18193,
            18233,
            false
          ],
          "143": [
            18237,
            18270,
            true
          ],
          "144": [
            18325,
            18343,
            true
          ],
          "145": [
            18948,
            18968,
            false
          ],
          "146": [
            19245,
            19266,
            true
          ],
          "147": [
            19381,
            19396,
            false
          ],
          "148": [
            20041,
            20045,
            true
          ],
          "149": [
            20390,
            20416,
            false
          ],
          "150": [
            21558,
            21562,
            true
          ]
        },
        "Governance.testHashing": {
          "111": [
            16987,
            16995,
            false
          ]
        }
      },
      "20": {},
      "3": {},
      "9": {
        "Ownable.transferOwnership": {
          "157": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "110": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "108": [
            35401,
            35488
          ],
          "109": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "94": [
            4839,
            4882
          ],
          "95": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "4": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "21": [
            2207,
            2237
          ],
          "22": [
            2271,
            2297
          ]
        }
      },
      "10": {},
      "19": {},
      "2": {
        "Governance._createTaskType": {
          "96": [
            13723,
            13739
          ],
          "97": [
            13820,
            13851
          ],
          "98": [
            13865,
            13891
          ],
          "99": [
            13905,
            13941
          ],
          "100": [
            13955,
            14001
          ],
          "101": [
            14015,
            14049
          ],
          "102": [
            14063,
            14103
          ],
          "103": [
            14117,
            14157
          ],
          "104": [
            14171,
            14215
          ],
          "105": [
            14256,
            14380
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "81": [
            6377,
            6449
          ],
          "82": [
            6595,
            6606
          ],
          "83": [
            6644,
            6647
          ],
          "84": [
            6668,
            6680
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "56": [
            14755,
            14821
          ],
          "57": [
            14835,
            14857
          ],
          "58": [
            15163,
            15197
          ],
          "59": [
            15215,
            15296
          ],
          "60": [
            15314,
            15336
          ],
          "61": [
            15354,
            15410
          ],
          "62": [
            15448,
            15451
          ]
        },
        "Governance.completeTask": {
          "19": [
            15923,
            16047
          ],
          "20": [
            16237,
            16318
          ],
          "23": [
            16336,
            16371
          ],
          "24": [
            16389,
            16411
          ],
          "25": [
            16466,
            16537
          ],
          "26": [
            16555,
            16616
          ],
          "27": [
            16635,
            16712
          ],
          "28": [
            16730,
            16735
          ],
          "29": [
            16773,
            16776
          ]
        },
        "Governance.createProposal": {
          "49": [
            12553,
            12637
          ],
          "50": [
            12647,
            12666
          ],
          "51": [
            12766,
            12805
          ],
          "52": [
            12819,
            12858
          ],
          "53": [
            12872,
            12917
          ],
          "54": [
            12931,
            12962
          ],
          "55": [
            12973,
            13085
          ]
        },
        "Governance.createTaskType": {
          "15": [
            13337,
            13443
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "85": [
            10518,
            10548
          ],
          "86": [
            10566,
            10602
          ],
          "87": [
            11072,
            11108
          ],
          "88": [
            11126,
            11131
          ],
          "89": [
            11169,
            11172
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "40": [
            8567,
            8574
          ],
          "41": [
            8782,
            8785
          ],
          "42": [
            8933,
            8949
          ],
          "43": [
            8963,
            8978
          ],
          "44": [
            9387,
            9427
          ],
          "45": [
            9455,
            9464
          ],
          "46": [
            9526,
            9531
          ],
          "47": [
            9587,
            9590
          ],
          "48": [
            9611,
            9625
          ]
        },
        "Governance.getTaskById": {
          "39": [
            4554,
            4575
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "5": [
            7013,
            7079
          ],
          "6": [
            7093,
            7115
          ],
          "7": [
            7246,
            7253
          ],
          "8": [
            7292,
            7295
          ],
          "9": [
            7645,
            7711
          ],
          "10": [
            7725,
            7747
          ],
          "11": [
            7868,
            7893
          ],
          "12": [
            7921,
            7930
          ],
          "13": [
            7967,
            7972
          ],
          "14": [
            8011,
            8014
          ]
        },
        "Governance.getVotes": {
          "90": [
            4676,
            4732
          ],
          "91": [
            4889,
            4934
          ],
          "92": [
            4871,
            4874
          ],
          "93": [
            4954,
            4970
          ]
        },
        "Governance.getWinningVote": {
          "30": [
            5070,
            5126
          ],
          "31": [
            5136,
            5221
          ],
          "32": [
            5614,
            5664
          ],
          "33": [
            5682,
            5697
          ],
          "34": [
            5729,
            5736
          ],
          "35": [
            5843,
            5848
          ],
          "36": [
            5487,
            5490
          ],
          "37": [
            5882,
            5917
          ],
          "38": [
            5927,
            5945
          ]
        },
        "Governance.setNFTAddress": {
          "17": [
            9809,
            9836
          ]
        },
        "Governance.submitVerification": {
          "63": [
            18185,
            18307
          ],
          "64": [
            18317,
            18344
          ],
          "65": [
            19041,
            19093
          ],
          "66": [
            19121,
            19124
          ],
          "67": [
            19285,
            19366
          ],
          "68": [
            19668,
            19721
          ],
          "69": [
            19735,
            19802
          ],
          "70": [
            19817,
            19833
          ],
          "71": [
            19876,
            19897
          ],
          "72": [
            20033,
            20070
          ],
          "73": [
            20117,
            20165
          ],
          "74": [
            20179,
            20216
          ],
          "75": [
            20579,
            20645
          ],
          "76": [
            20663,
            20719
          ],
          "77": [
            21380,
            21401
          ],
          "78": [
            21550,
            21587
          ]
        },
        "Governance.testHashing": {
          "1": [
            17068,
            17120
          ],
          "2": [
            17148,
            17151
          ],
          "3": [
            17249,
            17316
          ]
        }
      },
      "20": {},
      "3": {
        "Context._msgSender": {
          "16": [
            672,
            689
          ]
        }
      },
      "9": {
        "Ownable._setOwner": {
          "106": [
            2193,
            2210
          ],
          "107": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "79": [
            1982,
            2055
          ],
          "80": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063e95d23471161006f578063e95d234714610421578063f18c51d314610461578063f2fde38b14610481578063f4739bd9146104a1578063f713b7ed146104d1578063ff981099146104f157600080fd5b80638da5cb5b1461034957806390b293d814610371578063976217cd14610387578063b2bad544146103b4578063beca3a16146103e1578063d374a2171461040157600080fd5b806369d037381161010857806369d037381461027e578063715018a61461029e57806372e185ce146102b3578063826b8ebd146102d35780638a6655d6146102f35780638d9776721461031357600080fd5b8063013cf08b1461015b57806309265ce61461019557806310190ef1146101b75780634b50f16a146101eb57806361f9e9a8146102185780636215597b1461023857600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004612eba565b61051e565b60405161018c959493929190612f2b565b60405180910390f35b3480156101a157600080fd5b506101b56101b0366004613034565b6105ea565b005b3480156101c357600080fd5b506101d76101d2366004612eba565b610730565b60405161018c989796959493929190613093565b3480156101f757600080fd5b5061020b610206366004613112565b61083a565b60405161018c91906131fe565b34801561022457600080fd5b506101b56102333660046132cd565b610c32565b34801561024457600080fd5b5061027061025336600461336a565b600360209081526000928352604080842090915290825290205481565b60405190815260200161018c565b34801561028a57600080fd5b506101b56102993660046133a1565b610c5a565b3480156102aa57600080fd5b506101b5610ca6565b3480156102bf57600080fd5b506101b56102ce36600461342d565b610cdc565b3480156102df57600080fd5b506102706102ee366004612eba565b611160565b3480156102ff57600080fd5b506101b561030e366004613483565b611376565b34801561031f57600080fd5b5061033361032e366004612eba565b6113af565b60405161018c9a999897969594939291906134af565b34801561035557600080fd5b506001546040516001600160a01b03909116815260200161018c565b34801561037d57600080fd5b50610270600a5481565b34801561039357600080fd5b506103a76103a2366004612eba565b6114b1565b60405161018c9190613530565b3480156103c057600080fd5b506103d46103cf366004613112565b6115f3565b60405161018c9190613543565b3480156103ed57600080fd5b506101b56103fc366004613598565b6119b9565b34801561040d57600080fd5b506101b561041c366004612eba565b611ace565b34801561042d57600080fd5b5060055461044790600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b60208201520161018c565b34801561046d57600080fd5b506101b561047c3660046135e8565b611e0a565b34801561048d57600080fd5b506101b561049c3660046133a1565b6125b0565b3480156104ad57600080fd5b506104c16104bc366004612eba565b61264b565b604051901515815260200161018c565b3480156104dd57600080fd5b506101b56104ec366004613637565b61281b565b3480156104fd57600080fd5b5061051161050c366004612eba565b6129b8565b60405161018c9190613673565b600760205260009081526040902080548190610539906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610565906136bb565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105ff576105ff6136f5565b602002602001015160405160200161061991815260200190565b604051602081830303815290604052905081156106a55760005b83518110156106a35783818151811061064e5761064e6136f5565b602002602001015160405160200161066891815260200190565b60405160208183030381529060405280519060200120848281518110610690576106906136f5565b6020908102919091010152600101610633565b505b6000836040516020016106b8919061370b565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea8186831486600081518110610708576107086136f5565b6020026020010151856040516107219493929190613741565b60405180910390a15050505050565b6004818154811061074057600080fd5b9060005260206000209060030201600091509050806001018054610763906136bb565b80601f016020809104026020016040519081016040528092919081815260200182805461078f906136bb565b80156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b60606000610857600554600f81810b600160801b909204900b0390565b9050610861612e1c565b600080805b848110156109e957610879600582612add565b600081815260096020526040908190208151610140810190925280549295509091829082906108a7906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546108d3906136bb565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519195504291161180156109d557508664ffffffffff168460e0015161ffff16145b156109e1578160010191505b600101610866565b5080600003610a3057604080516001808252818301909252600091816020015b610a11612e1c565b815260200190600190039081610a095790505b50979650505050505050565b600080826001600160401b03811115610a4b57610a4b612f6f565b604051908082528060200260200182016040528015610a8457816020015b610a71612e1c565b815260200190600190039081610a695790505b50905060005b86811015610a2457610a9d600582612add565b60008181526009602052604090819020815161014081019092528054929750909182908290610acb906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610af7906136bb565b8015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919750429116118015610bf957508864ffffffffff168660e0015161ffff16145b15610c2a5785828481518110610c1157610c116136f5565b6020026020010181905250826001019250838311610a24575b600101610a8a565b610c40565b60405180910390fd5b610c51878760008888888888612b4e565b50505050505050565b6001546001600160a01b03163314610c845760405162461bcd60e51b8152600401610c3790613772565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610cd05760405162461bcd60e51b8152600401610c3790613772565b610cda6000612ccd565b565b60005b60045481101561115a5783604051602001610cfa91906137a7565b6040516020818303038152906040528051906020012060048281548110610d2357610d236136f5565b9060005260206000209060030201600101604051602001610d449190613837565b6040516020818303038152906040528051906020012003611152574260048281548110610d7357610d736136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610dd7575060048181548110610db157610db16136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b610e195760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610c37565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610e5c57610e5c6136f5565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610e9657610e966136f5565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610f349082613899565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a805460009061103890849061396e565b9091555061104b9050426201518061396e565b6004838154811061105e5761105e6136f5565b6000918252602080832064ffffffffff88168452600390920290910190526040902055600480546001919084908110611099576110996136f5565b906000526020600020906003020160020160149054906101000a900461ffff166110c39190613986565b600483815481106110d6576110d66136f5565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600a5461113291906139a9565b874260405161114494939291906139c0565b60405180910390a15061115a565b600101610cdf565b50505050565b600060085482106111a65760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c37565b600082815260076020526040902060030154600160501b900464ffffffffff16421161120a5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610c37565b6000806000805b60008681526007602052604090206001015461ffff1681101561132b57600086815260076020526040902083906002018260088110611252576112526136f5565b601091828204019190066002029054906101000a900461ffff1661ffff1611156112cd5760008681526007602052604090206002018160088110611298576112986136f5565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036112c857600091505b611319565b6000868152600760205260409020839060020182600881106112f1576112f16136f5565b601091828204019190066002029054906101000a900461ffff1661ffff160361131957600191505b80611323816139f7565b915050611211565b50801561136d5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610c37565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610c37565b6009602052600090815260409020805481906113ca906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546113f6906136bb565b80156114435780601f1061141857610100808354040283529160200191611443565b820191906000526020600020905b81548152906001019060200180831161142657829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6114b9612e1c565b60008281526009602052604090819020815161014081019092528054829082906114e2906136bb565b80601f016020809104026020016040519081016040528092919081815260200182805461150e906136bb565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b60045481101561170b574260048281548110611617576116176136f5565b6000918252602080832064ffffffffff8916845260039092029091019052604090205410801561167b57504260048281548110611656576116566136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156116ba57504260048281548110611696576116966136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156116f757506001600482815481106116d6576116d66136f5565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611703578160010191505b6001016115f9565b508060000361177757604080516001808252818301909252600091816020015b606081526020019060019003908161172b5790505090506040518060200160405280600081525081600081518110611765576117656136f5565b60209081029190910101529392505050565b6000816001600160401b0381111561179157611791612f6f565b6040519080825280602002602001820160405280156117c457816020015b60608152602001906001900390816117af5790505b5090506000805b6004548110156119af5742600482815481106117e9576117e96136f5565b6000918252602080832064ffffffffff8b16845260039092029091019052604090205410801561184d57504260048281548110611828576118286136f5565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561188c57504260048281548110611868576118686136f5565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156118c957506001600482815481106118a8576118a86136f5565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156119a757600481815481106118e1576118e16136f5565b906000526020600020906003020160010180546118fd906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611929906136bb565b80156119765780601f1061194b57610100808354040283529160200191611976565b820191906000526020600020905b81548152906001019060200180831161195957829003601f168201915b505050505083838151811061198d5761198d6136f5565b6020026020010181905250816001019150838210156119af575b6001016117cb565b5090949350505050565b60018561ffff161180156119d257506101018561ffff16105b611a1e5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610c37565b600160086000828254611a31919061396e565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611ab0888a83613a2d565b50611ac48888600854600089898989612b4e565b5050505050505050565b6000611ae9600554600f81810b600160801b909204900b0390565b9050611af3612e1c565b6000805b83811015611e0357611b0a600582612add565b60008181526009602052604090819020815161014081019092528054929450909182908290611b38906136bb565b80601f0160208091040260200160405190810160405280929190818152602001828054611b64906136bb565b8015611bb15780601f10611b8657610100808354040283529160200191611bb1565b820191906000526020600020905b815481529060010190602001808311611b9457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611c63575084836020015164ffffffffff1614155b8015611c7857508483610100015161ffff1614155b15611dfb5761ffff851660e0840152600b54611c94904261396e565b64ffffffffff16610120840152600082815260096020526040902083518491908190611cc09082613899565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b949092169390930217909255600084815260099092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df26891611df29188918691613aec565b60405180910390a15b600101611af7565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e779190613a10565b6001600160a01b0316148015611ea85750600082815260096020526040902060040154600160701b900461ffff1683145b611ef45760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610c37565b6000815111611f0257600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611f9d5760005b8351811015611f9b57838181518110611f4657611f466136f5565b6020026020010151604051602001611f6091815260200190565b60405160208183030381529060405280519060200120848281518110611f8857611f886136f5565b6020908102919091010152600101611f2b565b505b600083604051602001611fb0919061370b565b604051602081830303815290604052805190602001209050600081846002015414611fdc576000611fdf565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361234557600484015460009061206f90600290600160201b90046001600160501b0316613bb7565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156120db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ff9190613a10565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561216957600080fd5b505af115801561217d573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b1580156121e557600080fd5b505af11580156121f9573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff00000000191690555060008881526009602052604081209061222f8282612e70565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146122ad576040519150601f19603f3d011682016040523d82523d6000602084013e6122b2565b606091505b5091509150816122d45760405162461bcd60e51b8152600401610c3790613beb565b60405133908590600081818185875af1925050503d8060008114612314576040519150601f19603f3d011682016040523d82523d6000602084013e612319565b606091505b5090925090508161233c5760405162461bcd60e51b8152600401610c3790613beb565b50505050610c51565b818460030154036124bc57600484015460009061237490600290600160201b90046001600160501b0316613bb7565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156123e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124049190613a10565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561246857600080fd5b505af115801561247c573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a591506044016121cb565b60048401546000878152600960205260408120600160201b9092046001600160501b031691906124ec8282612e70565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806125336001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d806000811461257d576040519150601f19603f3d011682016040523d82523d6000602084013e612582565b606091505b5091509150816125a45760405162461bcd60e51b8152600401610c3790613beb565b50505050505050505050565b6001546001600160a01b031633146125da5760405162461bcd60e51b8152600401610c3790613772565b6001600160a01b03811661263f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c37565b61264881612ccd565b50565b600080612667600554600f81810b600160801b909204900b0390565b9050612671612e1c565b60005b82811015612810576009600061268b600584612add565b60001c8152602001908152602001600020604051806101400160405290816000820180546126b8906136bb565b80601f01602080910402602001604051908101604052809291908181526020018280546126e4906136bb565b80156127315780601f1061270657610100808354040283529160200191612731565b820191906000526020600020905b81548152906001019060200180831161271457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90048216610120918201528201519193504291161080156127e3575084826020015164ffffffffff1614155b80156127f857508482610100015161ffff1614155b1561280857506001949350505050565b600101612674565b506000949350505050565b60005b6004548110156129b457816040516020016128399190613c19565b6040516020818303038152906040528051906020012060048281548110612862576128626136f5565b90600052602060002090600302016001016040516020016128839190613c35565b60405160208183030381529060405280519060200120036129ac576000600482815481106128b3576128b36136f5565b906000526020600020906003020190506000600460016004805490506128d991906139a9565b815481106128e9576128e96136f5565b906000526020600020906003020190508091506004600160048054905061291091906139a9565b81548110612920576129206136f5565b906000526020600020906003020160006001820160006129409190612e70565b5060020180546001600160b01b031916905560048054612962906001906139a9565b81548110612972576129726136f5565b906000526020600020906003020160006001820160006129929190612e70565b5060020180546001600160b01b0319169055506129b49050565b60010161281e565b5050565b606060085482106129fe5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610c37565b60008281526007602052604081206001015461ffff166001600160401b03811115612a2b57612a2b612f6f565b604051908082528060200260200182016040528015612a54578160200160208202803683370190505b50905060005b8151811015612ad65760008481526007602052604090206002018160088110612a8557612a856136f5565b601091828204019190066002029054906101000a900461ffff16828281518110612ab157612ab16136f5565b61ffff9092166020928302919091019091015280612ace816139f7565b915050612a5a565b5092915050565b600080612b00612aec84612d1f565b8554612afb9190600f0b613ca7565b612d8d565b8454909150600160801b9004600f90810b9082900b12612b3357604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b6004805460018101808355600083815291929083908110612b7157612b716136f5565b60009182526020909120600390910201905060018101612b928a8c83613a2d565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a604051612cb9989796959493929190613ce8565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160ff1b03821115612d895760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610c37565b5090565b60006f7fffffffffffffffffffffffffffffff198212801590612dc057506f7fffffffffffffffffffffffffffffff8213155b612d895760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610c37565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b508054612e7c906136bb565b6000825580601f10612e8c575050565b601f01602090049060005260206000209081019061264891905b80821115612d895760008155600101612ea6565b600060208284031215612ecc57600080fd5b5035919050565b60005b83811015612eee578181015183820152602001612ed6565b8381111561115a5750506000910152565b60008151808452612f17816020860160208601612ed3565b601f01601f19169290920160200192915050565b60a081526000612f3e60a0830188612eff565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612fad57612fad612f6f565b604052919050565b600082601f830112612fc657600080fd5b813560206001600160401b03821115612fe157612fe1612f6f565b8160051b612ff0828201612f85565b928352848101820192828101908785111561300a57600080fd5b83870192505b8483101561302957823582529183019190830190613010565b979650505050505050565b60008060006060848603121561304957600080fd5b8335925060208401356001600160401b0381111561306657600080fd5b61307286828701612fb5565b9250506040840135801515811461308857600080fd5b809150509250925092565b60006101008083526130a78184018c612eff565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461310d57600080fd5b919050565b60006020828403121561312457600080fd5b61312d826130f8565b9392505050565b6000610140825181855261314a82860182612eff565b9150506020830151613165602086018264ffffffffff169052565b506040830151604085015260608301516060850152608083015161318e608086018260ff169052565b5060a08301516131a560a086018262ffffff169052565b5060c08301516131c060c08601826001600160501b03169052565b5060e08301516131d660e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff8116828701526119af565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561325357603f19888603018452613241858351613134565b94509285019290850190600101613225565b5092979650505050505050565b60008083601f84011261327257600080fd5b5081356001600160401b0381111561328957600080fd5b6020830191508360208285010111156132a157600080fd5b9250929050565b803562ffffff8116811461310d57600080fd5b803561ffff8116811461310d57600080fd5b600080600080600080600060c0888a0312156132e857600080fd5b87356001600160401b038111156132fe57600080fd5b61330a8a828b01613260565b909850965050602088013560ff8116811461332457600080fd5b9450613332604089016132a8565b9350613340606089016130f8565b925061334e608089016130f8565b915061335c60a089016132bb565b905092959891949750929550565b6000806040838503121561337d57600080fd5b50508035926020909101359150565b6001600160a01b038116811461264857600080fd5b6000602082840312156133b357600080fd5b813561312d8161338c565b600082601f8301126133cf57600080fd5b81356001600160401b038111156133e8576133e8612f6f565b6133fb601f8201601f1916602001612f85565b81815284602083860101111561341057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561344257600080fd5b83356001600160401b0381111561345857600080fd5b613464868287016133be565b9350506020840135915061347a604085016130f8565b90509250925092565b60008060006060848603121561349857600080fd5b505081359360208301359350604090920135919050565b60006101408083526134c38184018e612eff565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061312d6020830184613134565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561325357603f19888603018452613586858351612eff565b9450928501929085019060010161356a565b600080600080600080600060c0888a0312156135b357600080fd5b87356001600160401b038111156135c957600080fd5b6135d58a828b01613260565b90985096506133249050602089016132bb565b6000806000606084860312156135fd57600080fd5b833592506020840135915060408401356001600160401b0381111561362157600080fd5b61362d86828701612fb5565b9150509250925092565b60006020828403121561364957600080fd5b81356001600160401b0381111561365f57600080fd5b61366b848285016133be565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156136af57835161ffff168352928401929184019160010161368f565b50909695505050505050565b600181811c908216806136cf57607f821691505b6020821081036136ef57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561373557815185529382019390820190600101613719565b50929695505050505050565b84815283151560208201528260408201526080606082015260006137686080830184612eff565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061312d6020830184612eff565b600081546137c7816136bb565b8085526020600183811680156137e457600181146137fe5761382c565b60ff1985168884015283151560051b88018301955061382c565b866000528260002060005b858110156138245781548a8201860152908301908401613809565b890184019650505b505050505092915050565b60208152600061312d60208301846137ba565b601f82111561389457600081815260208120601f850160051c810160208610156138715750805b601f850160051c820191505b818110156138905782815560010161387d565b5050505b505050565b81516001600160401b038111156138b2576138b2612f6f565b6138c6816138c084546136bb565b8461384a565b602080601f8311600181146138fb57600084156138e35750858301515b600019600386901b1c1916600185901b178555613890565b600085815260208120601f198616915b8281101561392a5788860151825594840194600190910190840161390b565b50858210156139485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000821982111561398157613981613958565b500190565b600061ffff838116908316818110156139a1576139a1613958565b039392505050565b6000828210156139bb576139bb613958565b500390565b64ffffffffff851681528360208201526080604082015260006139e66080830185612eff565b905082606083015295945050505050565b600060018201613a0957613a09613958565b5060010190565b600060208284031215613a2257600080fd5b815161312d8161338c565b6001600160401b03831115613a4457613a44612f6f565b613a5883613a5283546136bb565b8361384a565b6000601f841160018114613a8c5760008515613a745750838201355b600019600387901b1c1916600186901b178355611e03565b600083815260209020601f19861690835b82811015613abd5786850135825560209485019460019092019101613a9d565b5086821015613ada5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152826020820152606060408201526000610140806060840152613b156101a08401856137ba565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c811684870152613b996101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b0380841680613bdf57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613c2b818460208701612ed3565b9190910192915050565b6000808354613c43816136bb565b60018281168015613c5b5760018114613c7057613735565b60ff1984168752821515830287019450613735565b8760005260208060002060005b85811015613c965781548a820152908401908201613c7d565b505050959091019695505050505050565b600080821280156001600160ff1b0384900385131615613cc957613cc9613958565b600160ff1b8390038412811615613ce257613ce2613958565b50500190565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea264697066735822122072d6bd61082ee417919e3c343dbe96baad1aa35bb37f19c1b97204c17074061c64736f6c634300080f0033",
  "deployedSourceMap": "743:21499:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:46;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;16820:503;;;;;;;;;;-1:-1:-1;16820:503:2;;;;;:::i;:::-;;:::i;:::-;;2388:27;;;;;;;;;;-1:-1:-1;2388:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;6694:1362::-;;;;;;;;;;-1:-1:-1;6694:1362:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13130:320::-;;;;;;;;;;-1:-1:-1;13130:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8654:25:21;;;8642:2;8627:18;957:75:2;8508:177:21;9742:101:2;;;;;;;;;;-1:-1:-1;9742:101:2;;;;;:::i;:::-;;:::i;1652:94:9:-;;;;;;;;;;;;;:::i;15528:1286:2:-;;;;;;;;;;-1:-1:-1;15528:1286:2;;;;;:::i;:::-;;:::i;4983:969::-;;;;;;;;;;-1:-1:-1;4983:969:2;;;;;:::i;:::-;;:::i;11651:664::-;;;;;;;;;;-1:-1:-1;11651:664:2;;;;;:::i;:::-;;:::i;2783:38::-;;;;;;;;;;-1:-1:-1;2783:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:9:-;;;;;;;;;;-1:-1:-1;1074:6:9;;1001:87;;-1:-1:-1;;;;;1074:6:9;;;11571:51:21;;11559:2;11544:18;1001:87:9;11425:203:21;2827:34:2;;;;;;;;;;;;;;;;4470:112;;;;;;;;;;-1:-1:-1;4470:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8132:1500::-;;;;;;;;;;-1:-1:-1;8132:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12361:762::-;;;;;;;;;;-1:-1:-1;12361:762:2;;;;;:::i;:::-;;:::i;14394:1128::-;;;;;;;;;;-1:-1:-1;14394:1128:2;;;;;:::i;:::-;;:::i;2525:61::-;;;;;;;;;;-1:-1:-1;2525:61:2;;;;;;;;;-1:-1:-1;;;2525:61:2;;;;;;;;;;13669:2:21;13658:22;;;13640:41;;13717:22;;;;13712:2;13697:18;;13690:50;13613:18;2525:61:2;13470:276:21;18029:3620:2;;;;;;;;;;-1:-1:-1;18029:3620:2;;;;;:::i;:::-;;:::i;1901:192:9:-;;;;;;;;;;-1:-1:-1;1901:192:9;;;;;:::i;:::-;;:::i;5999:688:2:-;;;;;;;;;;-1:-1:-1;5999:688:2;;;;;:::i;:::-;;:::i;:::-;;;14405:14:21;;14398:22;14380:41;;14368:2;14353:18;5999:688:2;14240:187:21;9969:1221:2;;;;;;;;;;-1:-1:-1;9969:1221:2;;;;;:::i;:::-;;:::i;4588:389::-;;;;;;;;;;-1:-1:-1;4588:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2702:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2702:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2702:46:2;;;;;;-1:-1:-1;;;2702:46:2;;;;:::o;16820:503::-;16921:22;16963:7;16971:1;16963:10;;;;;;;;:::i;:::-;;;;;;;16946:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;16946:28:2;;;;;;;;;;;;;16921:53;;16987:8;16984:193;;;17015:9;17011:156;17034:7;:14;17030:1;:18;17011:156;;;17108:7;17116:1;17108:10;;;;;;;;:::i;:::-;;;;;;;17091:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;17091:28:2;;;;;;;;;;;;;17081:39;;;;;;17068:7;17076:1;17068:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;17148:3;;17011:156;;;;16984:193;17186:14;17230:7;17213:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;17203:36;;;;;;17186:53;;17254:62;17266:6;17282:10;17274:6;:18;17294:7;17302:1;17294:10;;;;;;;;:::i;:::-;;;;;;;17306:9;17254:62;;;;;;;;;:::i;:::-;;;;;;;;16911:412;;16820:503;;;:::o;2388:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;2388:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;-1:-1:-1;;;2388:27:2;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;;2388:27:2;;;;;:::o;6694:1362::-;6763:13;6788:27;6818:49;6842:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6818:49:2;6788:79;;6877:18;;:::i;:::-;6905:14;;;6955:352;6977:19;6973:1;:23;6955:352;;;7030:48;7050:24;7076:1;7030:19;:48::i;:::-;7022:57;7102:13;;;:5;:13;;;;;;;7093:22;;;;;;;;;;7022:57;;-1:-1:-1;7093:22:2;;;;7102:13;;7093:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7093:22:2;;;-1:-1:-1;;7093:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7093:22:2;;-1:-1:-1;;;;;7093:22:2;;;;;-1:-1:-1;;;7093:22:2;;;;;;;;;;-1:-1:-1;;;7093:22:2;;;;;;;-1:-1:-1;;;7093:22:2;;;;;;;;;7133:36;;;;;-1:-1:-1;7172:15:2;7133:54;;;:84;;;;;7211:6;7191:26;;:6;:17;;;:26;;;7133:84;7129:140;;;7246:7;;;;;7129:140;7292:3;;6955:352;;;;7364:5;7371:1;7364:8;7360:137;;7412:13;;;7423:1;7412:13;;;;;;;;;7388:22;;7412:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;7388:37:2;6694:1362;-1:-1:-1;;;;;;;6694:1362:2:o;7360:137::-;7507:15;7536:21;7571:5;-1:-1:-1;;;;;7560:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7536:41;;7591:9;7587:439;7609:19;7605:1;:23;7587:439;;;7662:48;7682:24;7708:1;7662:19;:48::i;:::-;7654:57;7734:13;;;:5;:13;;;;;;;7725:22;;;;;;;;;;7654:57;;-1:-1:-1;7725:22:2;;;;7734:13;;7725:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7725:22:2;;;-1:-1:-1;;7725:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7725:22:2;;-1:-1:-1;;;;;7725:22:2;;;;;-1:-1:-1;;;7725:22:2;;;;;;;;;;-1:-1:-1;;;7725:22:2;;;;;;;-1:-1:-1;;;7725:22:2;;;;;;;;;7765:36;;;;;-1:-1:-1;7804:15:2;7765:54;;;:84;;;;;7843:6;7823:26;;:6;:17;;;:26;;;7765:84;7761:227;;;7887:6;7868:7;7876;7868:16;;;;;;;;:::i;:::-;;;;;;:25;;;;7921:9;;;;;7960:5;7952:7;:13;7967:5;7949:25;;8011:3;;7587:439;;13130:320;22160:36;;;;;;;;;;;13337:106:::1;13353:9;;13364:1;13367:16;13385:10;13397:13;13412;13427:15;13337;:106::i;:::-;13130:320:::0;;;;;;;:::o;9742:101::-;1074:6:9;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;9809:10:2::1;:27:::0;;-1:-1:-1;;;;;;9809:27:2::1;-1:-1:-1::0;;;;;9809:27:2;;;::::1;::::0;;;::::1;::::0;;9742:101::o;1652:94:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;15528:1286:2:-;15712:9;15708:1080;15729:9;:16;15727:18;;15708:1080;;;15833:9;15822:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15812:32;;;;;;15785:9;15795:1;15785:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;15774:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;15764:44;;;;;;:80;15761:989;;15960:15;15931:9;15941:1;15931:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15931:25:2;;;;:44;;;;:92;;;15998:9;16008:1;15998:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15998:25:2;;;;15979:15;:44;;15931:92;15923:124;;;;-1:-1:-1;;;15923:124:2;;19377:2:21;15923:124:2;;;19359:21:21;19416:2;19396:18;;;19389:30;-1:-1:-1;;;19435:18:21;;;19428:49;19494:18;;15923:124:2;19175:343:21;15923:124:2;16100:18;16121:98;;;;;;;;16126:9;16121:98;;;;16136:6;16121:98;;;;;;16144:5;16121:98;;;;16151:1;16121:98;;;;;;16154:9;16164:1;16154:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;16121:98;;;;;;16184:9;16194:1;16184:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;16184:22:2;;;;16121:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;16297:19;;16263:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;16336::2;;:5;:26;;;:35;;;;-1:-1:-1;16336:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;16336:35:2;;;;;;;;;;-1:-1:-1;;16336:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16336:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;16336:35:2;-1:-1:-1;;;;;;;;16336:35:2;;;;;;;-1:-1:-1;;;;16336:35:2;;-1:-1:-1;;;16336:35:2;;;;;;-1:-1:-1;;;;16336:35:2;-1:-1:-1;;;16336:35:2;;;;;-1:-1:-1;;;;16336:35:2;;;;;-1:-1:-1;;;16336:35:2;;;;;;;;;;;;16389:19;:22;;-1:-1:-1;;16389:22:2;;16336:35;;16389:22;:::i;:::-;;;;-1:-1:-1;16513:24:2;;-1:-1:-1;16513:15:2;16531:6;16513:24;:::i;:::-;16466:9;16476:1;16466:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;16585:9;:12;;16615:1;;16585:9;16595:1;;16585:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;16555:9;16565:1;16555:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;16640:72;16654:6;16682:1;16661:19;;:22;;;;:::i;:::-;16685:9;16696:15;16640:72;;;;;;;;;:::i;:::-;;;;;;;;16730:5;;;15761:989;16773:3;;15708:1080;;;;15528:1286;;;:::o;4983:969::-;5050:7;5091:14;;5078:10;:27;5070:56;;;;-1:-1:-1;;;5070:56:2;;22878:2:21;5070:56:2;;;22860:21:21;22917:2;22897:18;;;22890:30;-1:-1:-1;;;22936:18:21;;;22929:46;22992:18;;5070:56:2;22676:340:21;5070:56:2;5163:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5163:34:2;;;;5145:15;:52;5136:85;;;;-1:-1:-1;;;5136:85:2;;23223:2:21;5136:85:2;;;23205:21:21;23262:2;23242:18;;;23235:30;-1:-1:-1;;;23281:18:21;;;23274:49;23340:18;;5136:85:2;23021:343:21;5136:85:2;5341:19;5370:25;5405:11;5432:9;5428:445;5448:21;;;;:9;:21;;;;;:37;;;;;5445:40;;5428:445;;;5544:21;;;;:9;:21;;;;;5577:17;;5544:27;;5572:1;5544:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5541:322;;;5634:21;;;;:9;:21;;;;;:27;;5662:1;5634:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5614:50;;;;5696:1;5682:15;;5719:3;5724:1;5719:6;5715:23;;5735:1;5729:7;;5715:23;5541:322;;;5773:21;;;;:9;:21;;;;;5807:17;;5773:27;;5801:1;5773:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5770:93;;5847:1;5843:5;;5770:93;5487:3;;;;:::i;:::-;;;;5428:445;;;-1:-1:-1;5890:6:2;;5882:35;;;;-1:-1:-1;;;5882:35:2;;23711:2:21;5882:35:2;;;23693:21:21;23750:2;23730:18;;;23723:30;-1:-1:-1;;;23769:18:21;;;23762:46;23825:18;;5882:35:2;23509:340:21;5882:35:2;-1:-1:-1;5934:11:2;;4983:969;-1:-1:-1;;;4983:969:2:o;11651:664::-;22051:31;;-1:-1:-1;;;22051:31:2;;24056:2:21;22051:31:2;;;24038:21:21;24095:2;24075:18;;;24068:30;-1:-1:-1;;;24114:18:21;;;24107:44;24168:18;;22051:31:2;23854:338:21;2783:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2783:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2783:38:2;-1:-1:-1;2783:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;-1:-1:-1;;;2783:38:2;;;;;;-1:-1:-1;;;2783:38:2;;;;;:::o;4470:112::-;4531:11;;:::i;:::-;4561:14;;;;:5;:14;;;;;;;4554:21;;;;;;;;;;;;4561:14;;4554:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;-1:-1:-1;;4554:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4554:21:2;;-1:-1:-1;;;;;4554:21:2;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;-1:-1:-1;;;4554:21:2;;;;;;;;;;;;-1:-1:-1;;4470:112:2:o;8132:1500::-;8203:15;8230:13;;8253:544;8273:9;:16;8270:19;;8253:544;;;8355:15;8308:9;8318:1;8308:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;8415:15;8386:9;8396:1;8386:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8386:25:2;;;;:44;;8308:122;:169;;;;;8462:15;8434:9;8444:1;8434:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;8434:25:2;;;;:43;8308:169;:216;;;;;8523:1;8493:9;8503:1;8493:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;8493:27:2;;;;:31;8308:216;8305:285;;;8567:7;;;;;8305:285;8782:3;;8253:544;;;;8854:5;8861:1;8854:8;8850:139;;8904:15;;;8917:1;8904:15;;;;;;;;;8878:24;;8904:15;;;;;;;;;;;;;;;;;;;;8878:41;;8933:16;;;;;;;;;;;;:8;8942:1;8933:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;8970:8;8132:1500;-1:-1:-1;;;8132:1500:2:o;8850:139::-;8999:23;9038:5;-1:-1:-1;;;;;9025:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8999:45;;9054:15;9087:9;9083:519;9103:9;:16;9100:19;;9083:519;;;9185:15;9138:9;9148:1;9138:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9245:15;9216:9;9226:1;9216:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9216:25:2;;;;:44;;9138:122;:169;;;;;9292:15;9264:9;9274:1;9264:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9264:25:2;;;;:43;9138:169;:216;;;;;9353:1;9323:9;9333:1;9323:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9323:27:2;;;;:31;9138:216;9135:429;;;9406:9;9416:1;9406:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;9387:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;9395;9387:16;;;;;;;;:::i;:::-;;;;;;:40;;;;9455:9;;;;;9497:5;9486:7;:16;9483:67;9526:5;9483:67;;9587:3;;9083:519;;;-1:-1:-1;9618:7:2;;8132:1500;-1:-1:-1;;;;8132:1500:2:o;12361:762::-;12580:1:::1;12561:16;:20;;;:46;;;;;12604:3;12585:16;:22;;;12561:46;12553:84;;;::::0;-1:-1:-1;;;12553:84:2;;25806:2:21;12553:84:2::1;::::0;::::1;25788:21:21::0;25845:2;25825:18;;;25818:30;25884:27;25864:18;;;25857:55;25929:18;;12553:84:2::1;25604:349:21::0;12553:84:2::1;12665:1;12647:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;12737:14:2::1;::::0;12697:27:::1;12727:25:::0;;;:9:::1;:25;::::0;;;;12766:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;12819:39:2;12766;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;12819:39:2;;;;;-1:-1:-1;;;12819:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;12872:26:2;::::1;:45:::0;;-1:-1:-1;;12872:45:2::1;;::::0;::::1;;::::0;;12727:25;12931:31:::1;12953:9:::0;;12727:25;12931:31:::1;:::i;:::-;;12973:112;12989:9;;13007:14;;13024:1;13027:10;13039:13;13054;13069:15;12973;:112::i;:::-;12543:580;12361:762:::0;;;;;;;:::o;14394:1128::-;14469:27;14499:49;14523:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;14499:49:2;14469:79;;14558:18;;:::i;:::-;14586:14;;14697:766;14719:19;14715:1;:23;14697:766;;;14772:48;14792:24;14818:1;14772:19;:48::i;:::-;14764:57;14844:13;;;:5;:13;;;;;;;14835:22;;;;;;;;;;14764:57;;-1:-1:-1;14835:22:2;;;;14844:13;;14835:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14835:22:2;;;-1:-1:-1;;14835:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14835:22:2;;-1:-1:-1;;;;;14835:22:2;;;;;-1:-1:-1;;;14835:22:2;;;;;;;;;;-1:-1:-1;;;14835:22:2;;;;;;;-1:-1:-1;;;14835:22:2;;;;;;;;;14875:36;;;;;-1:-1:-1;14914:15:2;14875:54;;;:80;;;;;14949:6;14933;:12;;;:22;;;;14875:80;:109;;;;;14978:6;14959;:16;;;:25;;;;14875:109;14871:554;;;15163:34;;;:17;;;:34;15279:16;;15261:34;;:15;:34;:::i;:::-;15215:81;;:36;;;:81;15314:13;;;;:5;:13;;;;;:22;;15215:6;;15314:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;15314:22:2;;;;;;;;;;-1:-1:-1;;15314:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15314:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;15314:22:2;-1:-1:-1;;;;;;;;15314:22:2;;;;;;;-1:-1:-1;;;;15314:22:2;;-1:-1:-1;;;15314:22:2;;;;;;-1:-1:-1;;;;15314:22:2;-1:-1:-1;;;15314:22:2;;;;;-1:-1:-1;;;;15314:22:2;;;;;-1:-1:-1;;;15314:22:2;;;;;;;;;;;;-1:-1:-1;15396:13:2;;;:5;:13;;;;;;;15359:51;;;;;;15380:6;;15396:13;;15359:51;:::i;:::-;;;;;;;;14871:554;15448:3;;14697:766;;;;14459:1063;;;14394:1128;:::o;18029:3620::-;18193:10;;:26;;-1:-1:-1;;;18193:26:2;;;;;8654:25:21;;;18223:10:2;;-1:-1:-1;;;;;18193:10:2;;:18;;8627::21;;18193:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18193:40:2;;:77;;;;-1:-1:-1;18237:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;18237:25:2;;;;:33;;18193:77;18185:122;;;;-1:-1:-1;;;18185:122:2;;28833:2:21;18185:122:2;;;28815:21:21;;;28852:18;;;28845:30;28911:34;28891:18;;;28884:62;28963:18;;18185:122:2;28631:356:21;18185:122:2;18342:1;18325:7;:14;:18;18317:27;;;;;;18355:19;18377:14;;;:5;:14;;;;;18948:16;;;;18377:14;;18355:19;-1:-1:-1;;;18948:16:2;;;;:20;18945:205;;18988:9;18984:156;19007:7;:14;19003:1;:18;18984:156;;;19081:7;19089:1;19081:10;;;;;;;;:::i;:::-;;;;;;;19064:28;;;;;;16053:19:21;;16097:2;16088:12;;15924:182;19064:28:2;;;;;;;;;;;;;19054:39;;;;;;19041:7;19049:1;19041:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19121:3;;18984:156;;;;18945:205;19159:14;19203:7;19186:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19176:36;;;;;;19159:53;;19223:19;19260:6;19245;:11;;;:21;:29;;19273:1;19245:29;;;19269:1;19245:29;19320:12;;;;;19290:76;;;29244:25:21;;;19320:12:2;;;;29300:2:21;29285:18;;29278:53;29347:18;;29340:34;;;29405:2;29390:18;;29383:34;;;19223:51:2;;;;;19351:14;;;29448:3:21;29433:19;;29426:51;19223::2;-1:-1:-1;19290:76:2;;29231:3:21;29216:19;19290:76:2;;;;;;;19381:11;19395:1;19381:15;19377:2266;;19491:14;;;;19475:13;;19491:16;;19506:1;;-1:-1:-1;;;19491:14:2;;-1:-1:-1;;;;;19491:14:2;:16;:::i;:::-;19561:10;;19580:17;;;;;19561:37;;-1:-1:-1;;;19561:37:2;;-1:-1:-1;;;19580:17:2;;;;;19561:37;;;29938:38:21;;;;-1:-1:-1;;;;;19475:32:2;;;;;-1:-1:-1;19521:29:2;;-1:-1:-1;;;;;19561:10:2;;;;:18;;29911::21;;19561:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19668:10;;;19690:12;;;19704:16;;;;;19668:53;;-1:-1:-1;;;19668:53:2;;19690:12;;;;19668:53;;;30159:44:21;;;;19668:10:2;19704:16;;;;30219:18:21;;;30212:49;19521:78:2;;-1:-1:-1;;;;;;19668:10:2;;:21;;30132:18:21;;19668:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19735:10:2;;19757:17;;;;;19776:25;;19735:67;;-1:-1:-1;;;19735:67:2;;-1:-1:-1;;;19757:17:2;;;;;19735:67;;;30445:38:21;;;;30499:18;;;30492:34;;;;-1:-1:-1;;;;;19735:10:2;;;;-1:-1:-1;19735:21:2;;-1:-1:-1;30418:18:21;;19735:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19817:14:2;;;:16;;-1:-1:-1;;19817:16:2;;;-1:-1:-1;19832:1:2;19883:14;;;:5;:14;;;;;;19876:21;19883:14;19832:1;19876:21;:::i;:::-;-1:-1:-1;19876:21:2;;;;;-1:-1:-1;;19876:21:2;;;-1:-1:-1;19876:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19876:21:2;;;19983:36;;-1:-1:-1;;;;;;;19983:18:2;;;20009:5;;-1:-1:-1;19983:36:2;-1:-1:-1;19983:36:2;20009:5;19983:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19950:69;;;;20041:4;20033:37;;;;-1:-1:-1;;;20033:37:2;;;;;;;:::i;:::-;20132:33;;:10;;20155:5;;20132:33;;;;20155:5;20132:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20117:48:2;;-1:-1:-1;20117:48:2;-1:-1:-1;20117:48:2;20179:37;;;;-1:-1:-1;;;20179:37:2;;;;;;;:::i;:::-;19397:831;;;;19377:2266;;;20410:6;20390;:18;;;:26;20387:1246;;20451:14;;;;20435:13;;20451:16;;20466:1;;-1:-1:-1;;;20451:14:2;;-1:-1:-1;;;;;20451:14:2;:16;:::i;:::-;20523:10;;20542:16;;;;;20523:36;;-1:-1:-1;;;20523:36:2;;-1:-1:-1;;;20542:16:2;;;;;20523:36;;;29938:38:21;;;;-1:-1:-1;;;;;20435:32:2;;;;;-1:-1:-1;20485:27:2;;-1:-1:-1;;;;;20523:10:2;;;;:18;;29911::21;;20523:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20579:10;;20601:16;;;;;20619:25;;20579:66;;-1:-1:-1;;;20579:66:2;;-1:-1:-1;;;20601:16:2;;;;;20579:66;;;30445:38:21;;;;30499:18;;;30492:34;;;;20485:75:2;;-1:-1:-1;;;;;;20579:10:2;;:21;;30418:18:21;;20579:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20663:10:2;;20693:25;;20663:56;;-1:-1:-1;;;20663:56:2;;;;;31270:25:21;;;31311:18;;;31304:34;;;;-1:-1:-1;;;;;20663:10:2;;;;-1:-1:-1;20663:21:2;;-1:-1:-1;31243:18:21;;20663:56:2;31096:248:21;20387:1246:2;21348:14;;;;21332:13;21387:14;;;:5;:14;;;;;-1:-1:-1;;;21348:14:2;;;-1:-1:-1;;;;;21348:14:2;;21387;21380:21;21387:14;21332:13;21380:21;:::i;:::-;-1:-1:-1;21380:21:2;;;;;-1:-1:-1;;21380:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21380:21:2;;;;21452:7;1074:6:9;;-1:-1:-1;;;;;1074:6:9;;1001:87;21452:7:2;-1:-1:-1;;;;;21452:12:2;21472:5;21452:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21419:63;;;;21558:4;21550:37;;;;-1:-1:-1;;;21550:37:2;;;;;;;:::i;:::-;21226:407;;;18125:3524;;;;18029:3620;;;:::o;1901:192:9:-;1074:6;;-1:-1:-1;;;;;1074:6:9;679:10:3;1221:23:9;1213:68;;;;-1:-1:-1;;;1213:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:9;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:9;;31551:2:21;1982:73:9::1;::::0;::::1;31533:21:21::0;31590:2;31570:18;;;31563:30;31629:34;31609:18;;;31602:62;-1:-1:-1;;;31680:18:21;;;31673:36;31726:19;;1982:73:9::1;31349:402:21::0;1982:73:9::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;5999:688:2:-;6074:4;6090:27;6120:49;6144:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6120:49:2;6090:79;;6179:18;;:::i;:::-;6323:9;6319:340;6341:19;6337:1;:23;6319:340;;;6386:5;:63;6400:47;6420:24;6445:1;6400:19;:47::i;:::-;6392:56;;6386:63;;;;;;;;;;;6377:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;-1:-1:-1;;6377:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6377:72:2;;-1:-1:-1;;;;;6377:72:2;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;-1:-1:-1;;;6377:72:2;;;;;;;;;6467:36;;;;;-1:-1:-1;6506:15:2;6467:54;;;:80;;;;;6541:6;6525;:12;;;:22;;;;6467:80;:109;;;;;6570:6;6551;:16;;;:25;;;;6467:109;6463:158;;;-1:-1:-1;6602:4:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;6463:158::-;6644:3;;6319:340;;;-1:-1:-1;6675:5:2;;5999:688;-1:-1:-1;;;;5999:688:2:o;9969:1221::-;10051:9;10047:1137;10066:9;:16;10064:18;;10047:1137;;;10182:9;10165:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;10155:38;;;;;;10128:9;10138:1;10128:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10111:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;10101:50;;;;;;:92;10098:1048;;10276:27;10306:9;10316:1;10306:12;;;;;;;;:::i;:::-;;;;;;;;;;;10276:42;;10336:34;10373:9;10400:1;10383:9;:16;;;;:18;;;;:::i;:::-;10373:29;;;;;;;;:::i;:::-;;;;;;;;;;;10336:66;;10531:17;10518:30;;10573:9;10600:1;10583:9;:16;;;;:18;;;;:::i;:::-;10573:29;;;;;;;;:::i;:::-;;;;;;;;;;;;10566:36;;;;;;;;:::i;:::-;-1:-1:-1;10566:36:2;;;;-1:-1:-1;;;;;;10566:36:2;;;11079:9;11089:16;;:18;;10566:36;;11089:18;:::i;:::-;11079:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11072:36;;;;;;;;:::i;:::-;-1:-1:-1;11072:36:2;;;;-1:-1:-1;;;;;;11072:36:2;;;-1:-1:-1;11126:5:2;;-1:-1:-1;11126:5:2;10098:1048;11169:3;;10047:1137;;;;9969:1221;:::o;4588:389::-;4649:15;4697:14;;4684:10;:27;4676:56;;;;-1:-1:-1;;;4676:56:2;;22878:2:21;4676:56:2;;;22860:21:21;22917:2;22897:18;;;22890:30;-1:-1:-1;;;22936:18:21;;;22929:46;22992:18;;4676:56:2;22676:340:21;4676:56:2;4742:25;4783:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;4770:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4770:51:2;;4742:79;;4835:9;4831:114;4853:9;:16;4850:1;:19;4831:114;;;4904:21;;;;:9;:21;;;;;:27;;4932:1;4904:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4889:9;4899:1;4889:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4871:3;;;;:::i;:::-;;;;4831:114;;;-1:-1:-1;4961:9:2;4588:389;-1:-1:-1;;4588:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;13456:931:2:-;13697:9;:16;;13723;;;;;;13671:23;13723:16;;;13697;;:9;:16;;13780:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;13820:20:2;;;:31;13842:9;;13820:20;:31;:::i;:::-;;13886:5;13865:11;:18;;;:26;;;;;;;;;;;;;;;;;;13930:11;13905;:22;;;:36;;;;;;;;;;;;;;;;;;13985:16;13955:11;:27;;;:46;;;;;;;;;;;;;;;;;;14039:10;14015:11;:21;;;:34;;;;;;;;;;;;;;;;;;14090:13;14063:11;:24;;;:40;;;;;;;;;;;;;;;;;;14144:13;14117:11;:24;;;:40;;;;;;;;;;;;;;;;;;14200:15;14171:11;:26;;;:44;;;;;;;;;;;;;;;;;;14261:119;14280:9;;14291:11;14304:16;14322:10;14334:13;14349;14364:15;14261:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;13661:726;;13456:931;;;;;;;;:::o;2101:173:9:-;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;34289:2:21;35401:87:0;;;34271:21:21;34328:2;34308:18;;;34301:30;34367:34;34347:18;;;34340:62;-1:-1:-1;;;34418:18:21;;;34411:38;34466:19;;35401:87:0;34087:404:21;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;34698:2:21;26359:106:0;;;34680:21:21;34737:2;34717:18;;;34710:30;34776:34;34756:18;;;34749:62;-1:-1:-1;;;34827:18:21;;;34820:37;34874:19;;26359:106:0;34496:403:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:21;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:21;;14:180;-1:-1:-1;14:180:21:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:21;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:21;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:21:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:21;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:21:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:21;1729:40;;-1:-1:-1;;;;;1784:34:21;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:21:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:21;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:21:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:21;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:21;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:21:o;4225:165::-;4292:20;;4352:12;4341:24;;4331:35;;4321:63;;4380:1;4377;4370:12;4321:63;4225:165;;;:::o;4395:184::-;4453:6;4506:2;4494:9;4485:7;4481:23;4477:32;4474:52;;;4522:1;4519;4512:12;4474:52;4545:28;4563:9;4545:28;:::i;:::-;4535:38;4395:184;-1:-1:-1;;;4395:184:21:o;4695:1175::-;4742:3;4770:6;4811:5;4805:12;4838:2;4833:3;4826:15;4862:45;4903:2;4898:3;4894:12;4880;4862:45;:::i;:::-;4850:57;;;4955:4;4948:5;4944:16;4938:23;4970:49;5013:4;5008:3;5004:14;4988;896:12;885:24;873:37;;820:96;4970:49;;5068:4;5061:5;5057:16;5051:23;5044:4;5039:3;5035:14;5028:47;5124:4;5117:5;5113:16;5107:23;5100:4;5095:3;5091:14;5084:47;5179:4;5172:5;5168:16;5162:23;5194:48;5236:4;5231:3;5227:14;5211;3274:4;3263:16;3251:29;;3207:75;5194:48;;5290:4;5283:5;5279:16;5273:23;5305:49;5348:4;5343:3;5339:14;5323;3363:8;3352:20;3340:33;;3287:92;5305:49;;5402:4;5395:5;5391:16;5385:23;5417:49;5460:4;5455:3;5451:14;5435;-1:-1:-1;;;;;4649:34:21;4637:47;;4584:106;5417:49;;5514:4;5507:5;5503:16;5497:23;5529:49;5572:4;5567:3;5563:14;5547;801:6;790:18;778:31;;725:90;5529:49;-1:-1:-1;5597:6:21;5640:14;;;5634:21;801:6;790:18;5698:12;;;778:31;5730:6;5773:14;;;5767:21;896:12;885:24;;5831:12;;;873:37;5797:47;820:96;5875:828;6057:4;6086:2;6126;6115:9;6111:18;6156:2;6145:9;6138:21;6179:6;6214;6208:13;6245:6;6237;6230:22;6283:2;6272:9;6268:18;6261:25;;6345:2;6335:6;6332:1;6328:14;6317:9;6313:30;6309:39;6295:53;;6383:2;6375:6;6371:15;6404:1;6414:260;6428:6;6425:1;6422:13;6414:260;;;6521:2;6517:7;6505:9;6497:6;6493:22;6489:36;6484:3;6477:49;6549:45;6587:6;6578;6572:13;6549:45;:::i;:::-;6539:55;-1:-1:-1;6652:12:21;;;;6617:15;;;;6450:1;6443:9;6414:260;;;-1:-1:-1;6691:6:21;;5875:828;-1:-1:-1;;;;;;;5875:828:21:o;6708:348::-;6760:8;6770:6;6824:3;6817:4;6809:6;6805:17;6801:27;6791:55;;6842:1;6839;6832:12;6791:55;-1:-1:-1;6865:20:21;;-1:-1:-1;;;;;6897:30:21;;6894:50;;;6940:1;6937;6930:12;6894:50;6977:4;6969:6;6965:17;6953:29;;7029:3;7022:4;7013:6;7005;7001:19;6997:30;6994:39;6991:59;;;7046:1;7043;7036:12;6991:59;6708:348;;;;;:::o;7061:161::-;7128:20;;7188:8;7177:20;;7167:31;;7157:59;;7212:1;7209;7202:12;7227:159;7294:20;;7354:6;7343:18;;7333:29;;7323:57;;7376:1;7373;7366:12;7391:859;7501:6;7509;7517;7525;7533;7541;7549;7602:3;7590:9;7581:7;7577:23;7573:33;7570:53;;;7619:1;7616;7609:12;7570:53;7659:9;7646:23;-1:-1:-1;;;;;7684:6:21;7681:30;7678:50;;;7724:1;7721;7714:12;7678:50;7763:59;7814:7;7805:6;7794:9;7790:22;7763:59;:::i;:::-;7841:8;;-1:-1:-1;7737:85:21;-1:-1:-1;;7926:2:21;7911:18;;7898:32;7970:4;7959:16;;7949:27;;7939:55;;7990:1;7987;7980:12;7939:55;8013:5;-1:-1:-1;8037:37:21;8070:2;8055:18;;8037:37;:::i;:::-;8027:47;;8093:37;8126:2;8115:9;8111:18;8093:37;:::i;:::-;8083:47;;8149:38;8182:3;8171:9;8167:19;8149:38;:::i;:::-;8139:48;;8206:38;8239:3;8228:9;8224:19;8206:38;:::i;:::-;8196:48;;7391:859;;;;;;;;;;:::o;8255:248::-;8323:6;8331;8384:2;8372:9;8363:7;8359:23;8355:32;8352:52;;;8400:1;8397;8390:12;8352:52;-1:-1:-1;;8423:23:21;;;8493:2;8478:18;;;8465:32;;-1:-1:-1;8255:248:21:o;8690:131::-;-1:-1:-1;;;;;8765:31:21;;8755:42;;8745:70;;8811:1;8808;8801:12;8826:247;8885:6;8938:2;8926:9;8917:7;8913:23;8909:32;8906:52;;;8954:1;8951;8944:12;8906:52;8993:9;8980:23;9012:31;9037:5;9012:31;:::i;9078:531::-;9121:5;9174:3;9167:4;9159:6;9155:17;9151:27;9141:55;;9192:1;9189;9182:12;9141:55;9228:6;9215:20;-1:-1:-1;;;;;9250:2:21;9247:26;9244:52;;;9276:18;;:::i;:::-;9320:55;9363:2;9344:13;;-1:-1:-1;;9340:27:21;9369:4;9336:38;9320:55;:::i;:::-;9400:2;9391:7;9384:19;9446:3;9439:4;9434:2;9426:6;9422:15;9418:26;9415:35;9412:55;;;9463:1;9460;9453:12;9412:55;9528:2;9521:4;9513:6;9509:17;9502:4;9493:7;9489:18;9476:55;9576:1;9551:16;;;9569:4;9547:27;9540:38;;;;9555:7;9078:531;-1:-1:-1;;;9078:531:21:o;9614:462::-;9700:6;9708;9716;9769:2;9757:9;9748:7;9744:23;9740:32;9737:52;;;9785:1;9782;9775:12;9737:52;9825:9;9812:23;-1:-1:-1;;;;;9850:6:21;9847:30;9844:50;;;9890:1;9887;9880:12;9844:50;9913;9955:7;9946:6;9935:9;9931:22;9913:50;:::i;:::-;9903:60;;;10010:2;9999:9;9995:18;9982:32;9972:42;;10033:37;10066:2;10055:9;10051:18;10033:37;:::i;:::-;10023:47;;9614:462;;;;;:::o;10081:316::-;10158:6;10166;10174;10227:2;10215:9;10206:7;10202:23;10198:32;10195:52;;;10243:1;10240;10233:12;10195:52;-1:-1:-1;;10266:23:21;;;10336:2;10321:18;;10308:32;;-1:-1:-1;10387:2:21;10372:18;;;10359:32;;10081:316;-1:-1:-1;10081:316:21:o;10402:1018::-;10750:4;10779:3;10809:2;10798:9;10791:21;10829:45;10870:2;10859:9;10855:18;10847:6;10829:45;:::i;:::-;10893:12;10941:15;;;10936:2;10921:18;;10914:43;10988:2;10973:18;;10966:34;;;;-1:-1:-1;;11031:2:21;11016:18;;11009:34;;;;11092:4;11080:17;;;;11074:3;11059:19;;11052:46;11147:8;11135:21;;;;11129:3;11114:19;;11107:50;-1:-1:-1;;;;;11194:35:21;;;;11188:3;11173:19;;11166:64;11249:6;11292:15;;;11286:3;11271:19;;11264:44;11345:15;11339:3;11324:19;;11317:44;11398:15;;;11392:3;11377:19;;;11370:44;;;;10821:53;10402:1018;-1:-1:-1;10402:1018:21:o;11633:245::-;11802:2;11791:9;11784:21;11765:4;11822:50;11868:2;11857:9;11853:18;11845:6;11822:50;:::i;11883:803::-;12045:4;12074:2;12114;12103:9;12099:18;12144:2;12133:9;12126:21;12167:6;12202;12196:13;12233:6;12225;12218:22;12271:2;12260:9;12256:18;12249:25;;12333:2;12323:6;12320:1;12316:14;12305:9;12301:30;12297:39;12283:53;;12371:2;12363:6;12359:15;12392:1;12402:255;12416:6;12413:1;12410:13;12402:255;;;12509:2;12505:7;12493:9;12485:6;12481:22;12477:36;12472:3;12465:49;12537:40;12570:6;12561;12555:13;12537:40;:::i;:::-;12527:50;-1:-1:-1;12635:12:21;;;;12600:15;;;;12438:1;12431:9;12402:255;;12691:774;12802:6;12810;12818;12826;12834;12842;12850;12903:3;12891:9;12882:7;12878:23;12874:33;12871:53;;;12920:1;12917;12910:12;12871:53;12960:9;12947:23;-1:-1:-1;;;;;12985:6:21;12982:30;12979:50;;;13025:1;13022;13015:12;12979:50;13064:59;13115:7;13106:6;13095:9;13091:22;13064:59;:::i;:::-;13142:8;;-1:-1:-1;13038:85:21;-1:-1:-1;13196:37:21;;-1:-1:-1;13229:2:21;13214:18;;13196:37;:::i;13751:484::-;13853:6;13861;13869;13922:2;13910:9;13901:7;13897:23;13893:32;13890:52;;;13938:1;13935;13928:12;13890:52;13974:9;13961:23;13951:33;;14031:2;14020:9;14016:18;14003:32;13993:42;;14086:2;14075:9;14071:18;14058:32;-1:-1:-1;;;;;14105:6:21;14102:30;14099:50;;;14145:1;14142;14135:12;14099:50;14168:61;14221:7;14212:6;14201:9;14197:22;14168:61;:::i;:::-;14158:71;;;13751:484;;;;;:::o;14432:322::-;14501:6;14554:2;14542:9;14533:7;14529:23;14525:32;14522:52;;;14570:1;14567;14560:12;14522:52;14610:9;14597:23;-1:-1:-1;;;;;14635:6:21;14632:30;14629:50;;;14675:1;14672;14665:12;14629:50;14698;14740:7;14731:6;14720:9;14716:22;14698:50;:::i;:::-;14688:60;14432:322;-1:-1:-1;;;;14432:322:21:o;14759:643::-;14928:2;14980:21;;;15050:13;;14953:18;;;15072:22;;;14899:4;;14928:2;15151:15;;;;15125:2;15110:18;;;14899:4;15194:182;15208:6;15205:1;15202:13;15194:182;;;15273:13;;15288:6;15269:26;15257:39;;15351:15;;;;15316:12;;;;15230:1;15223:9;15194:182;;;-1:-1:-1;15393:3:21;;14759:643;-1:-1:-1;;;;;;14759:643:21:o;15407:380::-;15486:1;15482:12;;;;15529;;;15550:61;;15604:4;15596:6;15592:17;15582:27;;15550:61;15657:2;15649:6;15646:14;15626:18;15623:38;15620:161;;15703:10;15698:3;15694:20;15691:1;15684:31;15738:4;15735:1;15728:15;15766:4;15763:1;15756:15;15620:161;;15407:380;;;:::o;15792:127::-;15853:10;15848:3;15844:20;15841:1;15834:31;15884:4;15881:1;15874:15;15908:4;15905:1;15898:15;16111:543;16329:13;;16272:3;;16303;;16382:4;16409:15;;;16272:3;16452:175;16466:6;16463:1;16460:13;16452:175;;;16529:13;;16515:28;;16565:14;;;;16602:15;;;;16488:1;16481:9;16452:175;;;-1:-1:-1;16643:5:21;;16111:543;-1:-1:-1;;;;;;16111:543:21:o;16659:443::-;16884:6;16873:9;16866:25;16941:6;16934:14;16927:22;16922:2;16911:9;16907:18;16900:50;16986:6;16981:2;16970:9;16966:18;16959:34;17029:3;17024:2;17013:9;17009:18;17002:31;16847:4;17050:46;17091:3;17080:9;17076:19;17068:6;17050:46;:::i;:::-;17042:54;16659:443;-1:-1:-1;;;;;;16659:443:21:o;17456:356::-;17658:2;17640:21;;;17677:18;;;17670:30;17736:34;17731:2;17716:18;;17709:62;17803:2;17788:18;;17456:356::o;17817:220::-;17966:2;17955:9;17948:21;17929:4;17986:45;18027:2;18016:9;18012:18;18004:6;17986:45;:::i;18168:772::-;18218:3;18259:5;18253:12;18288:36;18314:9;18288:36;:::i;:::-;18333:19;;;18371:4;18394:1;18411:18;;;18438:146;;;;18598:1;18593:341;;;;18404:530;;18438:146;-1:-1:-1;;18480:24:21;;18466:12;;;18459:46;18552:14;;18545:22;18542:1;18538:30;18529:40;;18525:49;;;-1:-1:-1;18438:146:21;;18593:341;18624:5;18621:1;18614:16;18671:2;18668:1;18658:16;18696:1;18710:174;18724:6;18721:1;18718:13;18710:174;;;18811:14;;18793:11;;;18789:20;;18782:44;18854:16;;;;18739:10;;18710:174;;;18908:11;;18904:20;;;-1:-1:-1;;18404:530:21;;;;;;18168:772;;;;:::o;18945:225::-;19091:2;19080:9;19073:21;19054:4;19111:53;19160:2;19149:9;19145:18;19137:6;19111:53;:::i;19523:545::-;19625:2;19620:3;19617:11;19614:448;;;19661:1;19686:5;19682:2;19675:17;19731:4;19727:2;19717:19;19801:2;19789:10;19785:19;19782:1;19778:27;19772:4;19768:38;19837:4;19825:10;19822:20;19819:47;;;-1:-1:-1;19860:4:21;19819:47;19915:2;19910:3;19906:12;19903:1;19899:20;19893:4;19889:31;19879:41;;19970:82;19988:2;19981:5;19978:13;19970:82;;;20033:17;;;20014:1;20003:13;19970:82;;;19974:3;;;19614:448;19523:545;;;:::o;20244:1352::-;20370:3;20364:10;-1:-1:-1;;;;;20389:6:21;20386:30;20383:56;;;20419:18;;:::i;:::-;20448:97;20538:6;20498:38;20530:4;20524:11;20498:38;:::i;:::-;20492:4;20448:97;:::i;:::-;20600:4;;20664:2;20653:14;;20681:1;20676:663;;;;21383:1;21400:6;21397:89;;;-1:-1:-1;21452:19:21;;;21446:26;21397:89;-1:-1:-1;;20201:1:21;20197:11;;;20193:24;20189:29;20179:40;20225:1;20221:11;;;20176:57;21499:81;;20646:944;;20676:663;18115:1;18108:14;;;18152:4;18139:18;;-1:-1:-1;;20712:20:21;;;20830:236;20844:7;20841:1;20838:14;20830:236;;;20933:19;;;20927:26;20912:42;;21025:27;;;;20993:1;20981:14;;;;20860:19;;20830:236;;;20834:3;21094:6;21085:7;21082:19;21079:201;;;21155:19;;;21149:26;-1:-1:-1;;21238:1:21;21234:14;;;21250:3;21230:24;21226:37;21222:42;21207:58;21192:74;;21079:201;-1:-1:-1;;;;;21326:1:21;21310:14;;;21306:22;21293:36;;-1:-1:-1;20244:1352:21:o;21601:127::-;21662:10;21657:3;21653:20;21650:1;21643:31;21693:4;21690:1;21683:15;21717:4;21714:1;21707:15;21733:128;21773:3;21804:1;21800:6;21797:1;21794:13;21791:39;;;21810:18;;:::i;:::-;-1:-1:-1;21846:9:21;;21733:128::o;21866:217::-;21905:4;21934:6;21990:10;;;;21960;;22012:12;;;22009:38;;;22027:18;;:::i;:::-;22064:13;;21866:217;-1:-1:-1;;;21866:217:21:o;22088:125::-;22128:4;22156:1;22153;22150:8;22147:34;;;22161:18;;:::i;:::-;-1:-1:-1;22198:9:21;;22088:125::o;22218:453::-;22462:12;22454:6;22450:25;22439:9;22432:44;22512:6;22507:2;22496:9;22492:18;22485:34;22555:3;22550:2;22539:9;22535:18;22528:31;22413:4;22576:46;22617:3;22606:9;22602:19;22594:6;22576:46;:::i;:::-;22568:54;;22658:6;22653:2;22642:9;22638:18;22631:34;22218:453;;;;;;;:::o;23369:135::-;23408:3;23429:17;;;23426:43;;23449:18;;:::i;:::-;-1:-1:-1;23496:1:21;23485:13;;23369:135::o;24197:251::-;24267:6;24320:2;24308:9;24299:7;24295:23;24291:32;24288:52;;;24336:1;24333;24326:12;24288:52;24368:9;24362:16;24387:31;24412:5;24387:31;:::i;25958:1206::-;-1:-1:-1;;;;;26077:3:21;26074:27;26071:53;;;26104:18;;:::i;:::-;26133:94;26223:3;26183:38;26215:4;26209:11;26183:38;:::i;:::-;26177:4;26133:94;:::i;:::-;26253:1;26278:2;26273:3;26270:11;26295:1;26290:616;;;;26950:1;26967:3;26964:93;;;-1:-1:-1;27023:19:21;;;27010:33;26964:93;-1:-1:-1;;20201:1:21;20197:11;;;20193:24;20189:29;20179:40;20225:1;20221:11;;;20176:57;27070:78;;26263:895;;26290:616;18115:1;18108:14;;;18152:4;18139:18;;-1:-1:-1;;26326:17:21;;;26427:9;26449:229;26463:7;26460:1;26457:14;26449:229;;;26552:19;;;26539:33;26524:49;;26659:4;26644:20;;;;26612:1;26600:14;;;;26479:12;26449:229;;;26453:3;26706;26697:7;26694:16;26691:159;;;26830:1;26826:6;26820:3;26814;26811:1;26807:11;26803:21;26799:34;26795:39;26782:9;26777:3;26773:19;26760:33;26756:79;26748:6;26741:95;26691:159;;;26893:1;26887:3;26884:1;26880:11;26876:19;26870:4;26863:33;26263:895;;25958:1206;;;:::o;27304:1322::-;27526:6;27515:9;27508:25;27569:6;27564:2;27553:9;27549:18;27542:34;27612:2;27607;27596:9;27592:18;27585:30;27489:4;27634:6;27676:2;27671;27660:9;27656:18;27649:30;27702:54;27751:3;27740:9;27736:19;27728:6;27702:54;:::i;:::-;27845:4;27833:17;;27827:24;27280:12;27264:29;896:12;885:24;;27908:3;27893:19;;873:37;-1:-1:-1;27968:4:21;27956:17;;27950:24;27944:3;27929:19;;27922:53;28030:4;28018:17;;28012:24;28006:3;27991:19;;27984:53;28081:4;28069:17;;28063:24;28128:4;28113:20;;28150:3;28135:19;;3251:29;28190:1;28186:17;;;28205:8;28182:32;28231:3;28216:19;;3340:33;28271:2;28267:18;;;-1:-1:-1;;;;;28263:47:21;28327:3;28312:19;;4637:47;28351:6;28392:3;28388:19;;;28384:28;;28414:18;;;778:31;28442:68;28505:3;28494:9;28490:19;28485:2;28473:9;28468:3;28464:19;28460:28;801:6;790:18;778:31;;725:90;28442:68;-1:-1:-1;28545:3:21;28541:19;;;28562:12;28537:38;28592:3;28577:19;;873:37;-1:-1:-1;28614:6:21;27304:1322;-1:-1:-1;;;;;;27304:1322:21:o;29488:300::-;29527:1;-1:-1:-1;;;;;29602:2:21;29599:1;29595:10;29624:3;29614:134;;29670:10;29665:3;29661:20;29658:1;29651:31;29705:4;29702:1;29695:15;29733:4;29730:1;29723:15;29614:134;29766:10;;29762:20;;;;;29488:300;-1:-1:-1;;29488:300:21:o;30747:344::-;30949:2;30931:21;;;30988:2;30968:18;;;30961:30;-1:-1:-1;;;31022:2:21;31007:18;;31000:50;31082:2;31067:18;;30747:344::o;31756:276::-;31887:3;31925:6;31919:13;31941:53;31987:6;31982:3;31975:4;31967:6;31963:17;31941:53;:::i;:::-;32010:16;;;;;31756:276;-1:-1:-1;;31756:276:21:o;32037:842::-;32165:3;32194:1;32227:6;32221:13;32257:36;32283:9;32257:36;:::i;:::-;32312:1;32329:18;;;32356:133;;;;32503:1;32498:356;;;;32322:532;;32356:133;-1:-1:-1;;32389:24:21;;32377:37;;32462:14;;32455:22;32443:35;;32434:45;;;-1:-1:-1;32356:133:21;;32498:356;32529:6;32526:1;32519:17;32559:4;32604:2;32601:1;32591:16;32629:1;32643:165;32657:6;32654:1;32651:13;32643:165;;;32735:14;;32722:11;;;32715:35;32778:16;;;;32672:10;;32643:165;;;-1:-1:-1;;;32828:16:21;;;;;32870:3;-1:-1:-1;;;;;;32037:842:21:o;32884:265::-;32923:3;32951:9;;;32976:10;;-1:-1:-1;;;;;32995:27:21;;;32988:35;;32972:52;32969:78;;;33027:18;;:::i;:::-;-1:-1:-1;;;33074:19:21;;;33067:27;;33059:36;;33056:62;;;33098:18;;:::i;:::-;-1:-1:-1;;33134:9:21;;32884:265::o;33154:928::-;33467:3;33456:9;33449:22;33508:6;33502:3;33491:9;33487:19;33480:35;33430:4;33534:3;33587:6;33579;33574:2;33563:9;33559:18;33546:48;33643:1;33614:22;;;33610:31;;33603:42;33735:12;33785:15;;;33778:4;33763:20;;33756:45;33849:4;33837:17;;;;33832:2;33817:18;;33810:45;-1:-1:-1;33903:8:21;33891:21;;;;33886:2;33871:18;;33864:49;33950:15;;;33944:3;33929:19;;33922:44;34003:15;;;33997:3;33982:19;;33975:44;34068:6;34056:19;;;34050:3;34035:19;;34028:48;33706:2;33685:15;;;-1:-1:-1;;33681:29:21;33666:45;33662:54;;;-1:-1:-1;33154:928:21:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    22242
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE95D2347 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D03738 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x156 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3034 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3093 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x3112 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x31FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x32CD JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A1 JUMP JUMPDEST PUSH2 0xC5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0xCA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x342D JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x3483 JUMP JUMPDEST PUSH2 0x1376 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3112 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x3598 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x1ACE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x447 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x35E8 JUMP JUMPDEST PUSH2 0x1E0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x33A1 JUMP JUMPDEST PUSH2 0x25B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x264B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x3637 JUMP JUMPDEST PUSH2 0x281B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x511 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x3673 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x539 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x565 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x587 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x595 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5FF JUMPI PUSH2 0x5FF PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x619 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6A3 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x668 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x690 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x633 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x370B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x763 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78F SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x857 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x861 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x879 PUSH1 0x5 DUP3 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x8A7 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D3 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x920 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x920 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x903 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0x9D5 JUMPI POP DUP7 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x9E1 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x866 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xA30 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA11 PUSH2 0x2E1C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA09 JUMPI SWAP1 POP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4B PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA84 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA71 PUSH2 0x2E1C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA69 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xA24 JUMPI PUSH2 0xA9D PUSH1 0x5 DUP3 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP8 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xACB SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF7 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP8 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xBF9 JUMPI POP DUP9 PUSH5 0xFFFFFFFFFF AND DUP7 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC2A JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC11 JUMPI PUSH2 0xC11 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP DUP4 DUP4 GT PUSH2 0xA24 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2B4E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH2 0xCDA PUSH1 0x0 PUSH2 0x2CCD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x115A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x37A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD23 JUMPI PUSH2 0xD23 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x3837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1152 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD73 JUMPI PUSH2 0xD73 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xDD7 JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDB1 JUMPI PUSH2 0xDB1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE96 JUMPI PUSH2 0xE96 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xF34 SWAP1 DUP3 PUSH2 0x3899 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1038 SWAP1 DUP5 SWAP1 PUSH2 0x396E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x104B SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x396E JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x105E JUMPI PUSH2 0x105E PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1099 JUMPI PUSH2 0x1099 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x3986 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10D6 JUMPI PUSH2 0x10D6 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x39A9 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1144 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x115A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCDF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x120A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x132B JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x1252 JUMPI PUSH2 0x1252 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x1298 JUMPI PUSH2 0x1298 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x12C8 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1319 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1323 DUP2 PUSH2 0x39F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1211 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x136D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x13CA SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13F6 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1443 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1418 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1443 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1426 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x14B9 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x14E2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x150E SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x155B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x155B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x153E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x170B JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1617 JUMPI PUSH2 0x1617 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x167B JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1656 JUMPI PUSH2 0x1656 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16BA JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1696 JUMPI PUSH2 0x1696 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x16F7 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16D6 JUMPI PUSH2 0x16D6 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1703 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x15F9 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x1777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x172B JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1765 JUMPI PUSH2 0x1765 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1791 JUMPI PUSH2 0x1791 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x17AF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x19AF JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x17E9 JUMPI PUSH2 0x17E9 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x184D JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1828 JUMPI PUSH2 0x1828 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x188C JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x18C9 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18A8 JUMPI PUSH2 0x18A8 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x19A7 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18E1 JUMPI PUSH2 0x18E1 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x18FD SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1929 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1976 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x194B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1976 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1959 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x19AF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x17CB JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x19D2 JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1A1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x396E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1AB0 DUP9 DUP11 DUP4 PUSH2 0x3A2D JUMP JUMPDEST POP PUSH2 0x1AC4 DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2B4E JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE9 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AF3 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1B0A PUSH1 0x5 DUP3 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1B38 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B64 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BB1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B86 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BB1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B94 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x1C63 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1C78 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DFB JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x1C94 SWAP1 TIMESTAMP PUSH2 0x396E JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1CC0 SWAP1 DUP3 PUSH2 0x3899 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x1DF2 SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x3AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1AF7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E77 SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1EA8 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x1EF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1F02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x1F9D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1F9B JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F46 JUMPI PUSH2 0x1F46 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F60 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1F2B JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FB0 SWAP2 SWAP1 PUSH2 0x370B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1FDC JUMPI PUSH1 0x0 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x2345 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x206F SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3BB7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20FF SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x217D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x222F DUP3 DUP3 PUSH2 0x2E70 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x22D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2314 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x233C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST POP POP POP POP PUSH2 0xC51 JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x24BC JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2374 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x3BB7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2404 SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x24EC DUP3 DUP3 PUSH2 0x2E70 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x2533 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x257D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3BEB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x263F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x2648 DUP2 PUSH2 0x2CCD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2667 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2671 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2810 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x268B PUSH1 0x5 DUP5 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x26B8 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26E4 SWAP1 PUSH2 0x36BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2731 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2706 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2731 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2714 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x27E3 JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x27F8 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2808 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2674 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x29B4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2839 SWAP2 SWAP1 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2862 JUMPI PUSH2 0x2862 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2883 SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x29AC JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28B3 JUMPI PUSH2 0x28B3 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x28D9 SWAP2 SWAP1 PUSH2 0x39A9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2910 SWAP2 SWAP1 PUSH2 0x39A9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2920 JUMPI PUSH2 0x2920 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2940 SWAP2 SWAP1 PUSH2 0x2E70 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0x2962 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x39A9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2972 JUMPI PUSH2 0x2972 PUSH2 0x36F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2992 SWAP2 SWAP1 PUSH2 0x2E70 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x29B4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x281E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x29FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A2B JUMPI PUSH2 0x2A2B PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A54 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2AD6 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2A85 JUMPI PUSH2 0x2A85 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB1 JUMPI PUSH2 0x2AB1 PUSH2 0x36F5 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2ACE DUP2 PUSH2 0x39F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A5A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B00 PUSH2 0x2AEC DUP5 PUSH2 0x2D1F JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2AFB SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3CA7 JUMP JUMPDEST PUSH2 0x2D8D JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x2B33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2B71 JUMPI PUSH2 0x2B71 PUSH2 0x36F5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x2B92 DUP11 DUP13 DUP4 PUSH2 0x3A2D JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2CB9 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2D89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC37 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x2DC0 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2D89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2E7C SWAP1 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2E8C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2648 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D89 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EEE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2ED6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x115A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2F17 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2ED3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F3E PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAD PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2FE1 JUMPI PUSH2 0x2FE1 PUSH2 0x2F6F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2FF0 DUP3 DUP3 ADD PUSH2 0x2F85 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x300A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3029 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x3010 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3072 DUP7 DUP3 DUP8 ADD PUSH2 0x2FB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x30A7 DUP2 DUP5 ADD DUP13 PUSH2 0x2EFF JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x312D DUP3 PUSH2 0x30F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x314A DUP3 DUP7 ADD DUP3 PUSH2 0x2EFF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3165 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x318E PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31A5 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x31C0 PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x31D6 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3253 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3241 DUP6 DUP4 MLOAD PUSH2 0x3134 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3225 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x32A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x32E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x32FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330A DUP11 DUP3 DUP12 ADD PUSH2 0x3260 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x3332 PUSH1 0x40 DUP10 ADD PUSH2 0x32A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x3340 PUSH1 0x60 DUP10 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x334E PUSH1 0x80 DUP10 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x335C PUSH1 0xA0 DUP10 ADD PUSH2 0x32BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x337D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x312D DUP2 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33E8 JUMPI PUSH2 0x33E8 PUSH2 0x2F6F JUMP JUMPDEST PUSH2 0x33FB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2F85 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3464 DUP7 DUP3 DUP8 ADD PUSH2 0x33BE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x347A PUSH1 0x40 DUP6 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x34C3 DUP2 DUP5 ADD DUP15 PUSH2 0x2EFF JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x312D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3253 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3586 DUP6 DUP4 MLOAD PUSH2 0x2EFF JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x356A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x35B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x35C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D5 DUP11 DUP3 DUP12 ADD PUSH2 0x3260 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x3324 SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x32BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x362D DUP7 DUP3 DUP8 ADD PUSH2 0x2FB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x365F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x366B DUP5 DUP3 DUP6 ADD PUSH2 0x33BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36AF JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x368F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x36CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x36EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3735 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3719 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3768 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2EFF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x312D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x37C7 DUP2 PUSH2 0x36BB JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x37E4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x37FE JUMPI PUSH2 0x382C JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x382C JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3824 JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3809 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x312D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3894 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3871 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3890 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x387D JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x38B2 JUMPI PUSH2 0x38B2 PUSH2 0x2F6F JUMP JUMPDEST PUSH2 0x38C6 DUP2 PUSH2 0x38C0 DUP5 SLOAD PUSH2 0x36BB JUMP JUMPDEST DUP5 PUSH2 0x384A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38FB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x38E3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3890 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x392A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x390B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3948 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3981 JUMPI PUSH2 0x3981 PUSH2 0x3958 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x39A1 JUMPI PUSH2 0x39A1 PUSH2 0x3958 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x39BB JUMPI PUSH2 0x39BB PUSH2 0x3958 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x39E6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2EFF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3A09 JUMPI PUSH2 0x3A09 PUSH2 0x3958 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x312D DUP2 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x3A44 JUMPI PUSH2 0x3A44 PUSH2 0x2F6F JUMP JUMPDEST PUSH2 0x3A58 DUP4 PUSH2 0x3A52 DUP4 SLOAD PUSH2 0x36BB JUMP JUMPDEST DUP4 PUSH2 0x384A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3A8C JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x3A74 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3ABD JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A9D JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x3ADA JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3B15 PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x3B99 PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x3BDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3C2B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2ED3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x3C43 DUP2 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3C5B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3C70 JUMPI PUSH2 0x3735 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3735 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3C96 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3C7D JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3CC9 JUMPI PUSH2 0x3CC9 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3CE2 JUMPI PUSH2 0x3CE2 PUSH2 0x3958 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xD6BD61082EE417919E3C343DBE96BAAD1AA35B 0xB3 PUSH32 0x19C1B97204C17074061C64736F6C634300080F00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x421"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x461"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x481"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A1"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F1"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x349"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x387"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B4"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E1"
    },
    "166": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x401"
    },
    "177": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "REVERT",
      "path": "2"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "GT",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3"
    },
    "237": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3"
    },
    "248": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x313"
    },
    "259": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "REVERT",
      "path": "2"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x195"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B7"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "308": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218"
    },
    "319": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "EQ",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x238"
    },
    "330": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "REVERT",
      "path": "2"
    },
    "335": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x156"
    },
    "340": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "STOP",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "345": {
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "DUP1",
      "path": "2"
    },
    "346": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        22242
      ],
      "op": "REVERT",
      "path": "2"
    },
    "347": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "349": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "351": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "354": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "REVERT",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B"
    },
    "364": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "367": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "370": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "373": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51E"
    },
    "378": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "382": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "386": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "387": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2B"
    },
    "395": {
      "fn": null,
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "399": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "400": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        2702,
        2748
      ],
      "op": "RETURN",
      "path": "2"
    },
    "405": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "407": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "409": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "412": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "413": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "416": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "REVERT",
      "path": "2"
    },
    "417": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "422": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "425": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "426": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "428": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3034"
    },
    "431": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "432": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EA"
    },
    "436": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "STOP",
      "path": "2"
    },
    "439": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "441": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "442": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "443": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3"
    },
    "446": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "447": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "450": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "451": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7"
    },
    "456": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "465": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x730"
    },
    "470": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "474": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "475": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "478": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "484": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "485": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3093"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F7"
    },
    "498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "REVERT",
      "path": "2"
    },
    "503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206"
    },
    "511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3112"
    },
    "517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83A"
    },
    "522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31FE"
    },
    "535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "536": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "537": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "538": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "539": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "540": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224"
    },
    "543": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "544": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "546": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "REVERT",
      "path": "2"
    },
    "548": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "553": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "557": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "559": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32CD"
    },
    "562": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "563": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "564": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC32"
    },
    "567": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "568": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "569": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "570": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "571": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "575": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "576": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "578": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "579": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "585": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "588": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "589": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "591": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x336A"
    },
    "594": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "595": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "598": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "600": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "601": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "605": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "606": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "607": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "610": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "617": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "623": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "625": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "627": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "628": {
      "op": "SWAP1"
    },
    "629": {
      "op": "DUP2"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "637": {
      "op": "JUMP"
    },
    "638": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "640": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "641": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "642": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28A"
    },
    "645": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "646": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "648": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "REVERT",
      "path": "2"
    },
    "650": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "655": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299"
    },
    "658": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "659": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "661": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33A1"
    },
    "664": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "665": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "666": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5A"
    },
    "669": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AA"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "9"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "9"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "9"
    },
    "684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA6"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "691": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "692": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "693": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "694": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "695": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "698": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "699": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "REVERT",
      "path": "2"
    },
    "703": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "708": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "712": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "714": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342D"
    },
    "717": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "718": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDC"
    },
    "722": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF"
    },
    "730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "DUP1",
      "path": "2"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "REVERT",
      "path": "2"
    },
    "735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "749": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "750": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1160"
    },
    "754": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "755": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "756": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "757": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "758": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "759": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "765": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "REVERT",
      "path": "2"
    },
    "767": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "772": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E"
    },
    "775": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "776": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "778": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3483"
    },
    "781": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMP",
      "path": "2"
    },
    "782": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "783": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1376"
    },
    "786": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMP",
      "path": "2"
    },
    "787": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "788": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "789": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "790": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "794": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "795": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "797": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "REVERT",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x333"
    },
    "804": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E"
    },
    "807": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "808": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "810": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "813": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "814": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "815": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13AF"
    },
    "818": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "819": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "820": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "822": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "826": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "829": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "833": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "835": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "836": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34AF"
    },
    "840": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "843": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "844": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x355"
    },
    "848": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "9"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "9"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "858": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "872": {
      "op": "DUP2"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18C"
    },
    "880": {
      "op": "JUMP"
    },
    "881": {
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "882": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37D"
    },
    "888": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "891": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "REVERT",
      "path": "2"
    },
    "893": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "894": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "POP",
      "path": "2"
    },
    "895": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270"
    },
    "898": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "900": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "901": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "902": {
      "fn": "Ownable.owner",
      "offset": [
        2827,
        2861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "903": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "907": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x393"
    },
    "910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "REVERT",
      "path": "2"
    },
    "915": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "920": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A2"
    },
    "923": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "924": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "926": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "929": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B1"
    },
    "934": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "938": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "939": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "942": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "943": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "944": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3530"
    },
    "947": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0"
    },
    "955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "REVERT",
      "path": "2"
    },
    "960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CF"
    },
    "968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3112"
    },
    "974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F3"
    },
    "979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3543"
    },
    "992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "993": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "994": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "995": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "DUP1",
      "path": "2"
    },
    "996": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "997": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED"
    },
    "1000": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1003": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1005": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1010": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FC"
    },
    "1013": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1014": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1016": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3598"
    },
    "1019": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1020": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1021": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B9"
    },
    "1024": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40D"
    },
    "1032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "1051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACE"
    },
    "1056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1057": {
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42D"
    },
    "1064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DIV",
      "path": "2"
    },
    "1091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2525,
        2586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1102": {
      "op": "SWAP4"
    },
    "1103": {
      "op": "DUP5"
    },
    "1104": {
      "op": "SIGNEXTEND"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "SWAP2"
    },
    "1108": {
      "op": "SWAP1"
    },
    "1109": {
      "op": "SWAP3"
    },
    "1110": {
      "op": "SIGNEXTEND"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "offset": [
        2525,
        2586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1120": {
      "op": "JUMP"
    },
    "1121": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1122": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46D"
    },
    "1128": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1131": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1132": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1138": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47C"
    },
    "1141": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1142": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1144": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35E8"
    },
    "1147": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1148": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E0A"
    },
    "1152": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x48D"
    },
    "1160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1166": {
      "op": "POP"
    },
    "1167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B5"
    },
    "1170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x49C"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x33A1"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25B0"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1185": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AD"
    },
    "1192": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1193": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1195": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1198": {
      "op": "POP"
    },
    "1199": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C1"
    },
    "1202": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "1205": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1206": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1208": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "1211": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x264B"
    },
    "1216": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1221": {
      "op": "SWAP1"
    },
    "1222": {
      "op": "ISZERO"
    },
    "1223": {
      "op": "ISZERO"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1235": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "1240": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1241": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1243": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1244": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "1250": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EC"
    },
    "1253": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1254": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1256": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3637"
    },
    "1259": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1260": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1261": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281B"
    },
    "1264": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1275": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x511"
    },
    "1282": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50C"
    },
    "1285": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EBA"
    },
    "1291": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1292": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1293": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29B8"
    },
    "1296": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1300": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "1304": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1305": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3673"
    },
    "1309": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1310": {
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1313": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1318": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1319": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1323": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1327": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1329": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x539"
    },
    "1332": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "1336": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1338": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1341": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1344": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1351": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1353": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1356": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1357": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1359": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1365": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1366": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1369": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1370": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1371": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x565"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1388": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1389": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1391": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "LT",
      "path": "2"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x587"
    },
    "1395": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1402": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1403": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MUL",
      "path": "2"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1407": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1418": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1422": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1425": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1427": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1430": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1438": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1439": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1442": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1443": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "GT",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x595"
    },
    "1448": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1451": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SUB",
      "path": "2"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "op": "POP"
    },
    "1463": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1470": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "ADD",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1476": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1487": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "offset": [
        2702,
        2748
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1502": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "offset": [
        2702,
        2748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DIV",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "AND",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2702,
        2748
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2702,
        2748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.testHashing",
      "offset": [
        16921,
        16943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1517": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16970
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        16971,
        16972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1520": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "LT",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1527": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1531": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1534": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16963,
        16973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1535": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1538": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "MUL",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1541": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "ADD",
      "path": "2"
    },
    "1542": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "ADD",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        16963,
        16973
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1544": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1546": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1549": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "ADD",
      "path": "2"
    },
    "1550": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x619"
    },
    "1553": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "SWAP1"
    },
    "1560": {
      "op": "JUMP"
    },
    "1561": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1564": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1565": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1567": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1568": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "SUB",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "SUB",
      "path": "2"
    },
    "1571": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        16946,
        16974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        16921,
        16974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1578": {
      "fn": "Governance.testHashing",
      "offset": [
        16921,
        16974
      ],
      "op": "POP",
      "path": "2"
    },
    "1579": {
      "branch": 111,
      "fn": "Governance.testHashing",
      "offset": [
        16987,
        16995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.testHashing",
      "offset": [
        16984,
        17177
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.testHashing",
      "offset": [
        16984,
        17177
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A5"
    },
    "1584": {
      "branch": 111,
      "fn": "Governance.testHashing",
      "offset": [
        16984,
        17177
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.testHashing",
      "offset": [
        17015,
        17024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.testHashing",
      "offset": [
        17034,
        17041
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1589": {
      "fn": "Governance.testHashing",
      "offset": [
        17034,
        17048
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        17030,
        17031
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        17030,
        17048
      ],
      "op": "LT",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1593": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A3"
    },
    "1596": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17115
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        17116,
        17117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "LT",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64E"
    },
    "1606": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1607": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64E"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1613": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17108,
        17118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1614": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1615": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1617": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "MUL",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1620": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "ADD",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "ADD",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17108,
        17118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "ADD",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x668"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1633": {
      "op": "DUP2"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "SWAP1"
    },
    "1639": {
      "op": "JUMP"
    },
    "1640": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "SUB",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "SUB",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        17091,
        17119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "ADD",
      "path": "2"
    },
    "1662": {
      "fn": "Governance.testHashing",
      "offset": [
        17081,
        17120
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17075
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        17076,
        17077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1666": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "LT",
      "path": "2"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17068,
        17078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1683": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "MUL",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1687": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "ADD",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17078
      ],
      "op": "ADD",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.testHashing",
      "offset": [
        17068,
        17120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1692": {
      "fn": "Governance.testHashing",
      "offset": [
        17148,
        17151
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1694": {
      "fn": "Governance.testHashing",
      "offset": [
        17148,
        17151
      ],
      "op": "ADD",
      "path": "2"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x633"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17011,
        17167
      ],
      "op": "POP",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        16984,
        17177
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1702": {
      "fn": "Governance.testHashing",
      "offset": [
        17186,
        17200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        17230,
        17237
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "ADD",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B8"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x370B"
    },
    "1719": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17213,
        17238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1720": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1727": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "SUB",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "SUB",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1735": {
      "fn": "Governance.testHashing",
      "offset": [
        17213,
        17238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1738": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1741": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "ADD",
      "path": "2"
    },
    "1742": {
      "fn": "Governance.testHashing",
      "offset": [
        17203,
        17239
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        17186,
        17239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        17186,
        17239
      ],
      "op": "POP",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1778": {
      "fn": "Governance.testHashing",
      "offset": [
        17266,
        17272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        17282,
        17292
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        17274,
        17280
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        17274,
        17292
      ],
      "op": "EQ",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17301
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.testHashing",
      "offset": [
        17302,
        17303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "LT",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17294,
        17304
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "MUL",
      "path": "2"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "ADD",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "ADD",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        17294,
        17304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        17306,
        17315
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x721"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1817": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3741"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17254,
        17316
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1825": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SUB",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1833": {
      "fn": "Governance.testHashing",
      "offset": [
        17254,
        17316
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        16911,
        17323
      ],
      "op": "POP",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        16911,
        17323
      ],
      "op": "POP",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "POP",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "POP",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        17323
      ],
      "op": "POP",
      "path": "2"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        16820,
        17323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1840": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x740"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1854": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1858": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1860": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1863": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1865": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1869": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1873": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1877": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1880": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1883": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x763"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1892": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1898": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1913": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1919": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1923": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78F"
    },
    "1930": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1935": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DC"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1960": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1961": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1963": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DC"
    },
    "1968": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1970": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1971": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1972": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1976": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1977": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1979": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1981": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1982": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1983": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1991": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1992": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1993": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1995": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1996": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1997": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "GT",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BF"
    },
    "2002": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SUB",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2008": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2009": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2018": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2019": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2020": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2028": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2038": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2041": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2054": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2066": {
      "op": "SHL"
    },
    "2067": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2068": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2077": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2078": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2079": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2087": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2088": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2089": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2090": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2091": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2092": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2101": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2102": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2105": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6763,
        6776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6818,
        6867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x857"
    },
    "2114": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2116": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 4
    },
    "2117": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2119": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2120": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2121": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2128": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2129": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2130": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2131": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2132": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2133": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2134": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6818,
        6867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2137": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6788,
        6867
      ],
      "op": "POP",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "2141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "2144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        6877,
        6895
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6877,
        6895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2149": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6905,
        6919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6977,
        6996
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        6974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6973,
        6996
      ],
      "op": "LT",
      "path": "2"
    },
    "2154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E9"
    },
    "2158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7078
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x879"
    },
    "2162": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7050,
        7074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7076,
        7077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2165": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ADD"
    },
    "2168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7030,
        7078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7030,
        7078
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "2173": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2180": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2184": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2187": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2191": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2192": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2194": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7022,
        7079
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2202": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7102,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "2214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2219": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2220": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MUL",
      "path": "2"
    },
    "2226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2229": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2231": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2232": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2238": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2240": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2247": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D3"
    },
    "2254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "2258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x920"
    },
    "2265": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2266": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "LT",
      "path": "2"
    },
    "2270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F5"
    },
    "2273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2274": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2278": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MUL",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2285": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2287": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x920"
    },
    "2292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2294": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2300": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2301": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2303": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "GT",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2327": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SUB",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2341": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2356": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2361": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2371": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2372": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2381": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2390": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2393": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2402": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2403": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2404": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2413": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2421": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2433": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2434": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2442": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2446": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2447": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2448": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2452": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2453": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2460": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2463": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DIV",
      "path": "2"
    },
    "2473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "AND",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2478": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2480": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "ADD",
      "path": "2"
    },
    "2481": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7093,
        7115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "ADD",
      "path": "2"
    },
    "2484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7169
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7172,
        7187
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "AND",
      "path": "2"
    },
    "2491": {
      "branch": 112,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7187
      ],
      "op": "GT",
      "path": "2"
    },
    "2492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D5"
    },
    "2497": {
      "branch": 112,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "POP",
      "path": "2"
    },
    "2499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7211,
        7217
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "AND",
      "path": "2"
    },
    "2507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7197
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2510": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "ADD",
      "path": "2"
    },
    "2511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2515": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "AND",
      "path": "2"
    },
    "2516": {
      "branch": 113,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7191,
        7217
      ],
      "op": "EQ",
      "path": "2"
    },
    "2517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7133,
        7217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E1"
    },
    "2522": {
      "branch": 113,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "2524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "ADD",
      "path": "2"
    },
    "2527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7246,
        7253
      ],
      "op": "POP",
      "path": "2"
    },
    "2529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7129,
        7269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7292,
        7295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "2532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7292,
        7295
      ],
      "op": "ADD",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "2536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2537": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2538": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6955,
        7307
      ],
      "op": "POP",
      "path": "2"
    },
    "2539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7364,
        7369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7371,
        7372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2542": {
      "branch": 114,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7364,
        7372
      ],
      "op": "SUB",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA30"
    },
    "2546": {
      "branch": 114,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7497
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2547": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2549": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7423,
        7424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2554": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA11"
    },
    "2573": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "2576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2577": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2578": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "ADD",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SUB",
      "path": "2"
    },
    "2588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA09"
    },
    "2593": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "POP",
      "path": "2"
    },
    "2596": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7412,
        7425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7388,
        7425
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "2599": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        6694,
        8056
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        6694,
        8056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7360,
        7497
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7507,
        7522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2611": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7536,
        7557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7571,
        7576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "GT",
      "path": "2"
    },
    "2623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA4B"
    },
    "2627": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA4B"
    },
    "2631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6F"
    },
    "2634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2636": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2638": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2644": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "MUL",
      "path": "2"
    },
    "2647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2651": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2657": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA84"
    },
    "2660": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2661": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2662": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2664": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2665": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2666": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA71"
    },
    "2669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "2672": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2674": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2675": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2676": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2682": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2683": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA69"
    },
    "2689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2690": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "POP",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7560,
        7577
      ],
      "op": "POP",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7536,
        7577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7536,
        7577
      ],
      "op": "POP",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7591,
        7600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7609,
        7628
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2700": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7605,
        7606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7605,
        7628
      ],
      "op": "LT",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA24"
    },
    "2706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7662,
        7710
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0xA9D"
    },
    "2710": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7682,
        7706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7708,
        7709
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7662,
        7681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ADD"
    },
    "2716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7662,
        7710
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2717": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7662,
        7710
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7654,
        7711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2720": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 10
    },
    "2721": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2722": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2727": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2728": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2731": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2736": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2739": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2740": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2741": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2742": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2743": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2744": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2746": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7654,
        7711
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2747": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7654,
        7711
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2751": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2752": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7734,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2755": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACB"
    },
    "2758": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2759": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "2762": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2763": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2764": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2765": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2770": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2771": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2772": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "2773": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MUL",
      "path": "2"
    },
    "2774": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2776": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2779": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2788": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2789": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2793": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF7"
    },
    "2802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "2806": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2807": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB44"
    },
    "2813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2815": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2817": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "LT",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB19"
    },
    "2821": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2822": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2825": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "2829": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MUL",
      "path": "2"
    },
    "2830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2835": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2836": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB44"
    },
    "2840": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2841": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2846": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2848": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2851": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2854": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2855": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2858": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2863": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2865": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2870": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "GT",
      "path": "2"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB27"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SUB",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2914": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2915": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2917": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2919": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2921": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2922": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2925": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2931": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2932": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2938": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2940": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2957": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2960": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2962": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "2983": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2990": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "2997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "3001": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "3009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3011": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3012": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "3013": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DIV",
      "path": "2"
    },
    "3021": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3026": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "ADD",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7725,
        7747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3031": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7801
      ],
      "op": "ADD",
      "path": "2"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3033": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3034": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7801
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "3035": {
      "op": "POP"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7804,
        7819
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3037": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7819
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3038": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7819
      ],
      "op": "AND",
      "path": "2"
    },
    "3039": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7819
      ],
      "op": "GT",
      "path": "2"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF9"
    },
    "3045": {
      "branch": 115,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3046": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "POP",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7843,
        7849
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3048": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7849
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7849
      ],
      "op": "AND",
      "path": "2"
    },
    "3055": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7829
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3058": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7840
      ],
      "op": "ADD",
      "path": "2"
    },
    "3059": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7840
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3060": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3063": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7849
      ],
      "op": "AND",
      "path": "2"
    },
    "3064": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7849
      ],
      "op": "EQ",
      "path": "2"
    },
    "3065": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7765,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3066": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7761,
        7988
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7761,
        7988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2A"
    },
    "3070": {
      "branch": 116,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7761,
        7988
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3071": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7887,
        7893
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 11
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7875
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3073": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7876,
        7883
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3074": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3075": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3076": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3077": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "LT",
      "path": "2"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC11"
    },
    "3081": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3082": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC11"
    },
    "3085": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7868,
        7884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3089": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3090": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "MUL",
      "path": "2"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3095": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "ADD",
      "path": "2"
    },
    "3096": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7884
      ],
      "op": "ADD",
      "path": "2"
    },
    "3097": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7893
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3098": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3099": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7893
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3100": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7868,
        7893
      ],
      "op": "POP",
      "path": "2"
    },
    "3101": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7921,
        7930
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "3102": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7921,
        7930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3104": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7921,
        7930
      ],
      "op": "ADD",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7921,
        7930
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7921,
        7930
      ],
      "op": "POP",
      "path": "2"
    },
    "3107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7960,
        7965
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3108": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7952,
        7959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3109": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7952,
        7965
      ],
      "op": "GT",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7967,
        7972
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xA24"
    },
    "3113": {
      "branch": 117,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7949,
        7974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3114": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7949,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3115": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8011,
        8014
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x1"
    },
    "3117": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8011,
        8014
      ],
      "op": "ADD",
      "path": "2"
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8A"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7587,
        8026
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3122": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3123": {
      "offset": [
        22160,
        22196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC40"
    },
    "3126": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3127": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3130": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3132": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3133": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "SUB",
      "path": "2"
    },
    "3134": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3136": {
      "fn": "Governance.createTaskType",
      "offset": [
        22160,
        22196
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3137": {
      "fn": "Governance.createTaskType",
      "offset": [
        13337,
        13443
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0xC51"
    },
    "3140": {
      "fn": "Governance.createTaskType",
      "offset": [
        13353,
        13362
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3141": {
      "fn": "Governance.createTaskType",
      "offset": [
        13353,
        13362
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3142": {
      "fn": "Governance.createTaskType",
      "offset": [
        13364,
        13365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3144": {
      "fn": "Governance.createTaskType",
      "offset": [
        13367,
        13383
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.createTaskType",
      "offset": [
        13385,
        13395
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.createTaskType",
      "offset": [
        13397,
        13410
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.createTaskType",
      "offset": [
        13412,
        13425
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3148": {
      "fn": "Governance.createTaskType",
      "offset": [
        13427,
        13442
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3149": {
      "fn": "Governance.createTaskType",
      "offset": [
        13337,
        13352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4E"
    },
    "3152": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13337,
        13443
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3153": {
      "fn": "Governance.createTaskType",
      "offset": [
        13337,
        13443
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3155": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3157": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3158": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3159": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.createTaskType",
      "offset": [
        13130,
        13450
      ],
      "op": "POP",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        13130,
        13450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3162": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3163": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3165": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "op": "SUB"
    },
    "3174": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3175": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 16
    },
    "3176": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3177": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC84"
    },
    "3180": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3181": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3183": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3192": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3193": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3195": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3196": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC37"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3200": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3772"
    },
    "3203": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3204": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3205": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9819
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x2"
    },
    "3207": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3208": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "op": "SUB"
    },
    "3217": {
      "op": "NOT"
    },
    "3218": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "AND",
      "path": "2"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3225": {
      "op": "SHL"
    },
    "3226": {
      "op": "SUB"
    },
    "3227": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3228": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3230": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "AND",
      "path": "2"
    },
    "3231": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3232": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3233": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3234": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "OR",
      "path": "2"
    },
    "3235": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        9809,
        9836
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        9742,
        9843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3239": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3241": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "3251": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3252": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "3253": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD0"
    },
    "3256": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3257": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3259": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3268": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3269": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3271": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "3272": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC37"
    },
    "3275": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3276": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3772"
    },
    "3279": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3280": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 18,
      "value": "0xCDA"
    },
    "3284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CCD"
    },
    "3289": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3291": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3292": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3293": {
      "fn": "Governance.completeTask",
      "offset": [
        15712,
        15721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3295": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3296": {
      "fn": "Governance.completeTask",
      "offset": [
        15729,
        15738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3298": {
      "fn": "Governance.completeTask",
      "offset": [
        15729,
        15745
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3299": {
      "fn": "Governance.completeTask",
      "offset": [
        15727,
        15745
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3300": {
      "fn": "Governance.completeTask",
      "offset": [
        15727,
        15745
      ],
      "op": "LT",
      "path": "2"
    },
    "3301": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3302": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x115A"
    },
    "3305": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.completeTask",
      "offset": [
        15833,
        15842
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3307": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3309": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3310": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3312": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "ADD",
      "path": "2"
    },
    "3313": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCFA"
    },
    "3316": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3318": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37A7"
    },
    "3321": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15822,
        15843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3322": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3323": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3325": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3326": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3328": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3329": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3330": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "SUB",
      "path": "2"
    },
    "3331": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "SUB",
      "path": "2"
    },
    "3332": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3333": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3335": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3337": {
      "fn": "Governance.completeTask",
      "offset": [
        15822,
        15843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3338": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3339": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3340": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3341": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3343": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "ADD",
      "path": "2"
    },
    "3344": {
      "fn": "Governance.completeTask",
      "offset": [
        15812,
        15844
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3347": {
      "fn": "Governance.completeTask",
      "offset": [
        15795,
        15796
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3348": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3349": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3350": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3351": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "LT",
      "path": "2"
    },
    "3352": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD23"
    },
    "3355": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3356": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD23"
    },
    "3359": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3362": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15785,
        15797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3363": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3364": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3365": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3367": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3368": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3370": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3372": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3376": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "MUL",
      "path": "2"
    },
    "3377": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15797
      ],
      "op": "ADD",
      "path": "2"
    },
    "3378": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3380": {
      "fn": "Governance.completeTask",
      "offset": [
        15785,
        15806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3381": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3383": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3384": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3386": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "ADD",
      "path": "2"
    },
    "3387": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD44"
    },
    "3390": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3391": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3837"
    },
    "3395": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15774,
        15807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3396": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3399": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3400": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3402": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3403": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3404": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "SUB",
      "path": "2"
    },
    "3405": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "SUB",
      "path": "2"
    },
    "3406": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3407": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3408": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3411": {
      "fn": "Governance.completeTask",
      "offset": [
        15774,
        15807
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3412": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3413": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3414": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3415": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3417": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "3418": {
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15808
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3419": {
      "branch": 118,
      "fn": "Governance.completeTask",
      "offset": [
        15764,
        15844
      ],
      "op": "SUB",
      "path": "2"
    },
    "3420": {
      "fn": "Governance.completeTask",
      "offset": [
        15761,
        16750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1152"
    },
    "3423": {
      "branch": 118,
      "fn": "Governance.completeTask",
      "offset": [
        15761,
        16750
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3424": {
      "fn": "Governance.completeTask",
      "offset": [
        15960,
        15975
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 19
    },
    "3425": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3427": {
      "fn": "Governance.completeTask",
      "offset": [
        15941,
        15942
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3429": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3430": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3431": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "LT",
      "path": "2"
    },
    "3432": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD73"
    },
    "3435": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3436": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD73"
    },
    "3439": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3442": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15931,
        15943
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3443": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3444": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3446": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3447": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3448": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3449": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3451": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3452": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3453": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3454": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3456": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "MUL",
      "path": "2"
    },
    "3459": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15943
      ],
      "op": "ADD",
      "path": "2"
    },
    "3460": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3462": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "ADD",
      "path": "2"
    },
    "3463": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3468": {
      "op": "SHL"
    },
    "3469": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "DIV",
      "path": "2"
    },
    "3471": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3477": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15956
      ],
      "op": "AND",
      "path": "2"
    },
    "3478": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15975
      ],
      "op": "GT",
      "path": "2"
    },
    "3479": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3480": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3481": {
      "branch": 119,
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        15975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3482": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        16023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD7"
    },
    "3485": {
      "branch": 119,
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        16023
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        16023
      ],
      "op": "POP",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3489": {
      "fn": "Governance.completeTask",
      "offset": [
        16008,
        16009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3491": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3492": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3493": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "LT",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB1"
    },
    "3497": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB1"
    },
    "3501": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3504": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15998,
        16010
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3508": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3509": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3510": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3511": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3513": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3514": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3515": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3516": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3518": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3519": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3520": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "MUL",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16010
      ],
      "op": "ADD",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3524": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "ADD",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "DIV",
      "path": "2"
    },
    "3533": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3539": {
      "fn": "Governance.completeTask",
      "offset": [
        15998,
        16023
      ],
      "op": "AND",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.completeTask",
      "offset": [
        15979,
        15994
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3541": {
      "fn": "Governance.completeTask",
      "offset": [
        15979,
        16023
      ],
      "op": "GT",
      "path": "2"
    },
    "3542": {
      "branch": 120,
      "fn": "Governance.completeTask",
      "offset": [
        15979,
        16023
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3543": {
      "fn": "Governance.completeTask",
      "offset": [
        15931,
        16023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3544": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE19"
    },
    "3547": {
      "branch": 120,
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3550": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3559": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3562": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3564": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3565": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "ADD",
      "path": "2"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "MSTORE"
    },
    "3574": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3599": {
      "op": "DUP3"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "3608": {
      "op": "JUMP"
    },
    "3609": {
      "fn": "Governance.completeTask",
      "offset": [
        15923,
        16047
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.completeTask",
      "offset": [
        16100,
        16118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3612": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3614": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3616": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3619": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3622": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3624": {
      "fn": "Governance.completeTask",
      "offset": [
        16126,
        16135
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3625": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3626": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3627": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3629": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.completeTask",
      "offset": [
        16136,
        16142
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3631": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3637": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "AND",
      "path": "2"
    },
    "3638": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3639": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3640": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3642": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3643": {
      "fn": "Governance.completeTask",
      "offset": [
        16144,
        16149
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3645": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3646": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3648": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3649": {
      "fn": "Governance.completeTask",
      "offset": [
        16151,
        16152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3651": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SHL",
      "path": "2"
    },
    "3653": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3654": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3655": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3657": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3658": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3660": {
      "fn": "Governance.completeTask",
      "offset": [
        16164,
        16165
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3662": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3663": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3664": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "LT",
      "path": "2"
    },
    "3665": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5C"
    },
    "3668": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5C"
    },
    "3672": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3675": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16154,
        16166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3677": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3680": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3681": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3683": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3685": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3686": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3687": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3689": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "MUL",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16166
      ],
      "op": "ADD",
      "path": "2"
    },
    "3691": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3693": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "ADD",
      "path": "2"
    },
    "3694": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3696": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3699": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3702": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "EXP",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3704": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "DIV",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3707": {
      "fn": "Governance.completeTask",
      "offset": [
        16154,
        16182
      ],
      "op": "AND",
      "path": "2"
    },
    "3708": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3710": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "AND",
      "path": "2"
    },
    "3711": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3712": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3715": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16193
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3718": {
      "fn": "Governance.completeTask",
      "offset": [
        16194,
        16195
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3719": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3720": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3721": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3722": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "LT",
      "path": "2"
    },
    "3723": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE96"
    },
    "3726": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3727": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE96"
    },
    "3730": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "3733": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16184,
        16196
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3734": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3735": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3737": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3738": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3739": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3740": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3742": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3743": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3744": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3745": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3747": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3749": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3750": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "MUL",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3753": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16196
      ],
      "op": "ADD",
      "path": "2"
    },
    "3754": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3756": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "ADD",
      "path": "2"
    },
    "3757": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3764": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "DIV",
      "path": "2"
    },
    "3765": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3769": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16206
      ],
      "op": "AND",
      "path": "2"
    },
    "3770": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3771": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3772": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3773": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3774": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3775": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3776": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3778": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3780": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3782": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3783": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3785": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3786": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3788": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3789": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3790": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3791": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3793": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3795": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "ADD",
      "path": "2"
    },
    "3798": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3799": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.completeTask",
      "offset": [
        16121,
        16219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.completeTask",
      "offset": [
        16297,
        16316
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0xA"
    },
    "3803": {
      "fn": "Governance.completeTask",
      "offset": [
        16297,
        16316
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3804": {
      "fn": "Governance.completeTask",
      "offset": [
        16263,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3806": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3807": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3814": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3815": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3816": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "3817": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "3819": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "3820": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 21
    },
    "3821": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3822": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3823": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "3825": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3826": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3827": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3828": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3829": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3830": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3831": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3832": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3833": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 22
    },
    "3834": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3835": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3852": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3853": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3854": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3855": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3857": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3858": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3859": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "3860": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "3861": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3862": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3863": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "3864": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "3865": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3866": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3867": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 23
    },
    "3868": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3869": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3871": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3872": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3874": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3875": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3881": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3883": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF34"
    },
    "3886": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3887": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16362
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3888": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3899"
    },
    "3891": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16336,
        16371
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3896": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3898": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3899": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3901": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3905": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3906": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3912": {
      "op": "NOT"
    },
    "3913": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "3914": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3920": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3921": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3922": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "3923": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "3924": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3925": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3926": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3928": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3929": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3933": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3934": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3938": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3939": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3940": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3943": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3944": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3945": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3948": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3949": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3950": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3951": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3953": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3954": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3955": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3956": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3957": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3958": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3960": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3961": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3962": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3963": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3965": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3966": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3967": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3968": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3970": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3971": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3972": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3973": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3976": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3977": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3978": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3979": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3980": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3983": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3984": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "3985": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "ADD",
      "path": "2"
    },
    "3986": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3987": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3989": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3990": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "3991": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "3992": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3997": {
      "op": "NOT"
    },
    "3998": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4000": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4003": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4005": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4009": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4010": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4012": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4013": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MUL",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4017": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4018": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4019": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "4036": {
      "op": "NOT"
    },
    "4037": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4049": {
      "op": "SHL"
    },
    "4050": {
      "op": "SUB"
    },
    "4051": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4052": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4053": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4054": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4055": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4056": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4057": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MUL",
      "path": "2"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "op": "NOT"
    },
    "4065": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4066": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4071": {
      "op": "SHL"
    },
    "4072": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4075": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4076": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4077": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4078": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MUL",
      "path": "2"
    },
    "4079": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4080": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4090": {
      "op": "SHL"
    },
    "4091": {
      "op": "NOT"
    },
    "4092": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4097": {
      "op": "SHL"
    },
    "4098": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4099": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4100": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4101": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4102": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MUL",
      "path": "2"
    },
    "4103": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "op": "NOT"
    },
    "4113": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4114": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4115": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4116": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4117": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4122": {
      "op": "SHL"
    },
    "4123": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4126": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "AND",
      "path": "2"
    },
    "4127": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4128": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4129": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "MUL",
      "path": "2"
    },
    "4131": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "OR",
      "path": "2"
    },
    "4132": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4133": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4134": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16408
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0xA"
    },
    "4137": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4138": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4141": {
      "op": "SWAP1"
    },
    "4142": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1038"
    },
    "4145": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4146": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4147": {
      "fn": "Governance.completeTask",
      "offset": [
        16336,
        16371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4148": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396E"
    },
    "4151": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16389,
        16411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4152": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4153": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4154": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4155": {
      "fn": "Governance.completeTask",
      "offset": [
        16389,
        16411
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "fn": "Governance.completeTask",
      "offset": [
        16513,
        16537
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 25,
      "value": "0x104B"
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        16513,
        16537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4161": {
      "op": "POP"
    },
    "4162": {
      "fn": "Governance.completeTask",
      "offset": [
        16513,
        16528
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4163": {
      "fn": "Governance.completeTask",
      "offset": [
        16531,
        16537
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "4167": {
      "fn": "Governance.completeTask",
      "offset": [
        16513,
        16537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396E"
    },
    "4170": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16513,
        16537
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.completeTask",
      "offset": [
        16513,
        16537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4174": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16477
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4175": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4176": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4177": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4178": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "LT",
      "path": "2"
    },
    "4179": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105E"
    },
    "4182": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4183": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105E"
    },
    "4186": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4189": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16466,
        16478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4190": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4191": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4193": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4194": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4195": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4198": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4199": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4200": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4201": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4207": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4208": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "AND",
      "path": "2"
    },
    "4209": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4210": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4213": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4214": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4215": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "MUL",
      "path": "2"
    },
    "4216": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16478
      ],
      "op": "ADD",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4220": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4221": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4223": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4224": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4225": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16537
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4226": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16594
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x4"
    },
    "4228": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4229": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4230": {
      "fn": "Governance.completeTask",
      "offset": [
        16615,
        16616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        16615,
        16616
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4233": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.completeTask",
      "offset": [
        16595,
        16596
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        16595,
        16596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4236": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4237": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "LT",
      "path": "2"
    },
    "4238": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1099"
    },
    "4241": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4242": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1099"
    },
    "4245": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4248": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16585,
        16597
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4250": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4251": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4253": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4256": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4258": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4260": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4262": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "MUL",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16597
      ],
      "op": "ADD",
      "path": "2"
    },
    "4264": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4266": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "ADD",
      "path": "2"
    },
    "4267": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4269": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4270": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4272": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "EXP",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4277": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "DIV",
      "path": "2"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16612
      ],
      "op": "AND",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C3"
    },
    "4285": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16616
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4286": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4287": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3986"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16585,
        16616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        16585,
        16616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        16565,
        16566
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4297": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4298": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "LT",
      "path": "2"
    },
    "4299": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D6"
    },
    "4302": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4303": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D6"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16555,
        16567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4317": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4319": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4323": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "MUL",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16567
      ],
      "op": "ADD",
      "path": "2"
    },
    "4325": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16582
      ],
      "op": "ADD",
      "path": "2"
    },
    "4328": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4330": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4333": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "EXP",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4336": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4337": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4340": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "MUL",
      "path": "2"
    },
    "4341": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "NOT",
      "path": "2"
    },
    "4342": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "AND",
      "path": "2"
    },
    "4343": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4344": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4345": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4348": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "AND",
      "path": "2"
    },
    "4349": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "MUL",
      "path": "2"
    },
    "4350": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "OR",
      "path": "2"
    },
    "4351": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4352": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        16555,
        16616
      ],
      "op": "POP",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 27,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "4387": {
      "fn": "Governance.completeTask",
      "offset": [
        16654,
        16660
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4388": {
      "fn": "Governance.completeTask",
      "offset": [
        16682,
        16683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4390": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4392": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4393": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1132"
    },
    "4396": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4398": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A9"
    },
    "4401": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16661,
        16683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4402": {
      "fn": "Governance.completeTask",
      "offset": [
        16661,
        16683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4403": {
      "fn": "Governance.completeTask",
      "offset": [
        16685,
        16694
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4404": {
      "fn": "Governance.completeTask",
      "offset": [
        16696,
        16711
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4405": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1144"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4412": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4413": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4416": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C0"
    },
    "4419": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16640,
        16712
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4420": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4421": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4423": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4424": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4425": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4426": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SUB",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4428": {
      "fn": "Governance.completeTask",
      "offset": [
        16640,
        16712
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        16730,
        16735
      ],
      "op": "POP",
      "path": "2",
      "statement": 28
    },
    "4430": {
      "fn": "Governance.completeTask",
      "offset": [
        16730,
        16735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x115A"
    },
    "4433": {
      "fn": "Governance.completeTask",
      "offset": [
        16730,
        16735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4434": {
      "fn": "Governance.completeTask",
      "offset": [
        15761,
        16750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4435": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16776
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x1"
    },
    "4437": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16776
      ],
      "op": "ADD",
      "path": "2"
    },
    "4438": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDF"
    },
    "4441": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4442": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.completeTask",
      "offset": [
        15708,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "4444": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "POP",
      "path": "2"
    },
    "4445": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "POP",
      "path": "2"
    },
    "4446": {
      "fn": "Governance.completeTask",
      "offset": [
        15528,
        16814
      ],
      "op": "POP",
      "path": "2"
    },
    "4447": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        15528,
        16814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4448": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4449": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5050,
        5057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4451": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x8"
    },
    "4453": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5091,
        5105
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5088
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4455": {
      "branch": 121,
      "fn": "Governance.getWinningVote",
      "offset": [
        5078,
        5105
      ],
      "op": "LT",
      "path": "2"
    },
    "4456": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A6"
    },
    "4459": {
      "branch": 121,
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4460": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4462": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4471": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4474": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4476": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "ADD",
      "path": "2"
    },
    "4478": {
      "op": "MSTORE"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "MSTORE"
    },
    "4486": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4508": {
      "op": "DUP3"
    },
    "4509": {
      "op": "ADD"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "4517": {
      "op": "JUMP"
    },
    "4518": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5070,
        5126
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4519": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 31,
      "value": "0x0"
    },
    "4521": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4522": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4523": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4524": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4526": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4528": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4531": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4532": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5184
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4533": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4535": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "ADD",
      "path": "2"
    },
    "4536": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4543": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "DIV",
      "path": "2"
    },
    "4544": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4550": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5163,
        5197
      ],
      "op": "AND",
      "path": "2"
    },
    "4551": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5160
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4552": {
      "branch": 122,
      "fn": "Governance.getWinningVote",
      "offset": [
        5145,
        5197
      ],
      "op": "GT",
      "path": "2"
    },
    "4553": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120A"
    },
    "4556": {
      "branch": 122,
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4557": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4559": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4571": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "ADD",
      "path": "2"
    },
    "4575": {
      "op": "MSTORE"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4580": {
      "op": "DUP3"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "op": "MSTORE"
    },
    "4583": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4605": {
      "op": "SHL"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "4617": {
      "op": "JUMP"
    },
    "4618": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4619": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5341,
        5360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4621": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5370,
        5395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4622": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5405,
        5416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4624": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5432,
        5441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4626": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4628": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4633": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4635": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4639": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4640": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4642": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "ADD",
      "path": "2"
    },
    "4643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4647": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5485
      ],
      "op": "AND",
      "path": "2"
    },
    "4648": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4649": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5445,
        5485
      ],
      "op": "LT",
      "path": "2"
    },
    "4650": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4651": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "4654": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4655": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4657": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4660": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4662": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4664": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4665": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4667": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4668": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5565
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4669": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4670": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5577,
        5594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4673": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5571
      ],
      "op": "ADD",
      "path": "2"
    },
    "4674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5572,
        5573
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4675": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4678": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "LT",
      "path": "2"
    },
    "4679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1252"
    },
    "4682": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1252"
    },
    "4686": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4689": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4694": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4695": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "ADD",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4699": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MOD",
      "path": "2"
    },
    "4701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4703": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "MUL",
      "path": "2"
    },
    "4704": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4710": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "EXP",
      "path": "2"
    },
    "4711": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4712": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "DIV",
      "path": "2"
    },
    "4713": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5574
      ],
      "op": "AND",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4720": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "AND",
      "path": "2"
    },
    "4721": {
      "branch": 123,
      "fn": "Governance.getWinningVote",
      "offset": [
        5544,
        5594
      ],
      "op": "GT",
      "path": "2"
    },
    "4722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12CD"
    },
    "4726": {
      "branch": 123,
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x0"
    },
    "4729": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5655
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5661
      ],
      "op": "ADD",
      "path": "2"
    },
    "4744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5662,
        5663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "LT",
      "path": "2"
    },
    "4749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1298"
    },
    "4752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1298"
    },
    "4756": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4759": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4763": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4766": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4767": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "ADD",
      "path": "2"
    },
    "4768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4770": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MOD",
      "path": "2"
    },
    "4771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4773": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "MUL",
      "path": "2"
    },
    "4774": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4777": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4780": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "EXP",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "DIV",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4786": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5634,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "AND",
      "path": "2"
    },
    "4791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5614,
        5664
      ],
      "op": "POP",
      "path": "2"
    },
    "4793": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5696,
        5697
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 33
    },
    "4794": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5682,
        5697
      ],
      "op": "POP",
      "path": "2"
    },
    "4796": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5724,
        5725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4799": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5725
      ],
      "op": "SUB",
      "path": "2"
    },
    "4800": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C8"
    },
    "4803": {
      "branch": 124,
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5735,
        5736
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x0"
    },
    "4806": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5729,
        5736
      ],
      "op": "POP",
      "path": "2"
    },
    "4808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5715,
        5738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4809": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1319"
    },
    "4812": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4813": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5541,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4817": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4821": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4826": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5794
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4828": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4829": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5807,
        5824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4830": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5800
      ],
      "op": "ADD",
      "path": "2"
    },
    "4833": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5801,
        5802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4834": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4836": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "LT",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F1"
    },
    "4841": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F1"
    },
    "4845": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "4848": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "4852": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "4856": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "ADD",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MOD",
      "path": "2"
    },
    "4860": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4862": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "MUL",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4865": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4869": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "EXP",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "DIV",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4875": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5803
      ],
      "op": "AND",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4879": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "AND",
      "path": "2"
    },
    "4880": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5773,
        5824
      ],
      "op": "SUB",
      "path": "2"
    },
    "4881": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1319"
    },
    "4884": {
      "branch": 125,
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4885": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5847,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x1"
    },
    "4887": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5843,
        5848
      ],
      "op": "POP",
      "path": "2"
    },
    "4889": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5770,
        5863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4890": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 36
    },
    "4891": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1323"
    },
    "4894": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4895": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39F7"
    },
    "4898": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4899": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "4902": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5487,
        5490
      ],
      "op": "POP",
      "path": "2"
    },
    "4903": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1211"
    },
    "4906": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5428,
        5873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4908": {
      "op": "POP"
    },
    "4909": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 37
    },
    "4910": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5890,
        5896
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136D"
    },
    "4914": {
      "branch": 126,
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4917": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4926": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4929": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4931": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "ADD",
      "path": "2"
    },
    "4933": {
      "op": "MSTORE"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "MSTORE"
    },
    "4941": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4960": {
      "op": "SHL"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "MSTORE"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4968": {
      "op": "ADD"
    },
    "4969": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "4972": {
      "op": "JUMP"
    },
    "4973": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5882,
        5917
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4974": {
      "op": "POP"
    },
    "4975": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 38
    },
    "4976": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5934,
        5945
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4977": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4983,
        5952
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        4983,
        5952
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4982": {
      "fn": "Governance.vote",
      "offset": [
        11651,
        12315
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4983": {
      "offset": [
        22051,
        22082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4985": {
      "fn": "Governance.vote",
      "offset": [
        22051,
        22082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4992": {
      "op": "SHL"
    },
    "4993": {
      "offset": [
        22051,
        22082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4994": {
      "fn": "Governance.vote",
      "offset": [
        22051,
        22082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4997": {
      "offset": [
        22051,
        22082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4999": {
      "fn": "Governance.vote",
      "offset": [
        22051,
        22082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5000": {
      "fn": "Governance.vote",
      "offset": [
        22051,
        22082
      ],
      "op": "ADD",
      "path": "2"
    },
    "5001": {
      "op": "MSTORE"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5006": {
      "op": "DUP3"
    },
    "5007": {
      "op": "ADD"
    },
    "5008": {
      "op": "MSTORE"
    },
    "5009": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5026": {
      "op": "SHL"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5029": {
      "op": "DUP3"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "op": "MSTORE"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5034": {
      "op": "ADD"
    },
    "5035": {
      "offset": [
        22051,
        22082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "5038": {
      "op": "JUMP"
    },
    "5039": {
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5040": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5042": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5044": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5045": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5047": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5048": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5049": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5050": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5052": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5053": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5054": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5055": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5056": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5057": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5058": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CA"
    },
    "5061": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5062": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "5065": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5066": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5067": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5070": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5071": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5073": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5074": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5075": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5076": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5077": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5079": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5080": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5082": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5085": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5088": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5089": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5090": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5091": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5092": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5093": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5094": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5096": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5098": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5099": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5100": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5102": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F6"
    },
    "5105": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5106": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "5109": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5110": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5111": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5112": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5113": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1443"
    },
    "5116": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5118": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5120": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "LT",
      "path": "2"
    },
    "5121": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1418"
    },
    "5124": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5125": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5128": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5129": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5130": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5131": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MUL",
      "path": "2"
    },
    "5133": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5134": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5135": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5136": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5138": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5140": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1443"
    },
    "5143": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5145": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5146": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5147": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5148": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5149": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5151": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5154": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5156": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5157": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5158": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5159": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5160": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5161": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5162": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5163": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5166": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5167": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5168": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5170": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5171": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5172": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5173": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "GT",
      "path": "2"
    },
    "5174": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1426"
    },
    "5177": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5179": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5180": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SUB",
      "path": "2"
    },
    "5181": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5183": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5184": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5185": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5186": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5188": {
      "op": "POP"
    },
    "5189": {
      "op": "POP"
    },
    "5190": {
      "op": "POP"
    },
    "5191": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5193": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5196": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5198": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5199": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5200": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5201": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5203": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5208": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5209": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "ADD",
      "path": "2"
    },
    "5211": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5212": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5213": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5220": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5223": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5224": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5226": {
      "op": "POP"
    },
    "5227": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5231": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5233": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5234": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5238": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5241": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5243": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5244": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "op": "SUB"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5257": {
      "op": "SHL"
    },
    "5258": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5259": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5260": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5261": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5262": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5271": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5273": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5279": {
      "op": "SHL"
    },
    "5280": {
      "offset": [
        2783,
        2821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5282": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5283": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5284": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5285": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5290": {
      "op": "SHL"
    },
    "5291": {
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5292": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5293": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DIV",
      "path": "2"
    },
    "5294": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "AND",
      "path": "2"
    },
    "5295": {
      "fn": "Governance.vote",
      "offset": [
        2783,
        2821
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2783,
        2821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.getTaskById",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5298": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B9"
    },
    "5301": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "5304": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.getTaskById",
      "offset": [
        4531,
        4542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x0"
    },
    "5308": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5309": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5310": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5311": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5313": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5315": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5316": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5318": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5321": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5322": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5323": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5324": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5327": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5328": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5329": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5330": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5331": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5332": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5333": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5334": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5335": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5336": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5337": {
      "fn": "Governance.getTaskById",
      "offset": [
        4561,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5338": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E2"
    },
    "5341": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5342": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "5345": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5346": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5347": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5348": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5350": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5351": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5353": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5354": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5355": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5356": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5357": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5359": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5360": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5362": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5364": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5365": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5366": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5368": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5369": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5370": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5371": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5372": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5373": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5374": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5375": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5376": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5378": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5379": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5380": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5381": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150E"
    },
    "5385": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5386": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "5389": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5390": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5391": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5392": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5393": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x155B"
    },
    "5396": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5398": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5400": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "LT",
      "path": "2"
    },
    "5401": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1530"
    },
    "5404": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5405": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5408": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5409": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5410": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5411": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5414": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5415": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5416": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5418": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5419": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5420": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x155B"
    },
    "5423": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5424": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5425": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5426": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5427": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5428": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5431": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5432": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5434": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5436": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5437": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5438": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5441": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5443": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5444": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5446": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5447": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5448": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5450": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5451": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5452": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5453": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "GT",
      "path": "2"
    },
    "5454": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153E"
    },
    "5457": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5458": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5459": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5460": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SUB",
      "path": "2"
    },
    "5461": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5463": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5464": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5465": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5466": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5467": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5468": {
      "op": "POP"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5472": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5473": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5474": {
      "op": "POP"
    },
    "5475": {
      "op": "POP"
    },
    "5476": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5478": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5479": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5480": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5481": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5487": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5488": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5489": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5490": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5492": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5494": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5495": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5497": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5498": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5499": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5500": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5502": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5503": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5504": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5507": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5508": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5510": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5512": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5513": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5514": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5515": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5517": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5518": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5523": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5524": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5525": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5527": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5528": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5529": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5533": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5534": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5535": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5536": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5540": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5541": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5543": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5544": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5545": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5550": {
      "op": "SHL"
    },
    "5551": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5552": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5564": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5565": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5566": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5571": {
      "op": "SHL"
    },
    "5572": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5574": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5577": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5578": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5579": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5580": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5582": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5583": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5589": {
      "op": "SHL"
    },
    "5590": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5591": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5592": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5593": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5596": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5601": {
      "op": "SHL"
    },
    "5602": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5603": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "DIV",
      "path": "2"
    },
    "5604": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5605": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5606": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "AND",
      "path": "2"
    },
    "5607": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5610": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5613": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5614": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.getTaskById",
      "offset": [
        4554,
        4575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5616": {
      "op": "POP"
    },
    "5617": {
      "op": "POP"
    },
    "5618": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4470,
        4582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8203,
        8218
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8230,
        8243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8230,
        8243
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8273,
        8282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8273,
        8289
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8270,
        8289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8270,
        8289
      ],
      "op": "LT",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170B"
    },
    "5635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8355,
        8370
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8318,
        8319
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "LT",
      "path": "2"
    },
    "5644": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1617"
    },
    "5647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1617"
    },
    "5651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8308,
        8320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5666": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "AND",
      "path": "2"
    },
    "5674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "MUL",
      "path": "2"
    },
    "5681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "5684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5685": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8352
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5691": {
      "branch": 127,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8370
      ],
      "op": "LT",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167B"
    },
    "5697": {
      "branch": 127,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "POP",
      "path": "2"
    },
    "5699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8415,
        8430
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8396,
        8397
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "LT",
      "path": "2"
    },
    "5707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1656"
    },
    "5710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1656"
    },
    "5714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8386,
        8398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "MUL",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8398
      ],
      "op": "ADD",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "ADD",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5743": {
      "op": "SHL"
    },
    "5744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "DIV",
      "path": "2"
    },
    "5746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8411
      ],
      "op": "AND",
      "path": "2"
    },
    "5753": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8430
      ],
      "op": "GT",
      "path": "2"
    },
    "5754": {
      "branch": 128,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8386,
        8430
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8430
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16BA"
    },
    "5761": {
      "branch": 128,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "POP",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8462,
        8477
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5766": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8444,
        8445
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "LT",
      "path": "2"
    },
    "5771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1696"
    },
    "5774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1696"
    },
    "5778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8434,
        8446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "MUL",
      "path": "2"
    },
    "5798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8446
      ],
      "op": "ADD",
      "path": "2"
    },
    "5799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "ADD",
      "path": "2"
    },
    "5802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "5807": {
      "op": "SHL"
    },
    "5808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "DIV",
      "path": "2"
    },
    "5810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8459
      ],
      "op": "AND",
      "path": "2"
    },
    "5817": {
      "branch": 129,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8434,
        8477
      ],
      "op": "GT",
      "path": "2"
    },
    "5818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8477
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F7"
    },
    "5824": {
      "branch": 129,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "POP",
      "path": "2"
    },
    "5826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8523,
        8524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5830": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8503,
        8504
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "LT",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D6"
    },
    "5838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D6"
    },
    "5842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8493,
        8505
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "MUL",
      "path": "2"
    },
    "5862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8505
      ],
      "op": "ADD",
      "path": "2"
    },
    "5863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5865": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "ADD",
      "path": "2"
    },
    "5866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5873": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "DIV",
      "path": "2"
    },
    "5874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8520
      ],
      "op": "AND",
      "path": "2"
    },
    "5878": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8493,
        8524
      ],
      "op": "GT",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8308,
        8524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8590
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5881": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1703"
    },
    "5884": {
      "branch": 130,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8567,
        8574
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 40
    },
    "5886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8567,
        8574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8567,
        8574
      ],
      "op": "ADD",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8567,
        8574
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5890": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8567,
        8574
      ],
      "op": "POP",
      "path": "2"
    },
    "5891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8305,
        8590
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8782,
        8785
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x1"
    },
    "5894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8782,
        8785
      ],
      "op": "ADD",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F9"
    },
    "5898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8253,
        8797
      ],
      "op": "POP",
      "path": "2"
    },
    "5901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8854,
        8859
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8861,
        8862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5904": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8854,
        8862
      ],
      "op": "SUB",
      "path": "2"
    },
    "5905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8850,
        8989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1777"
    },
    "5908": {
      "branch": 131,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8850,
        8989
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8917,
        8918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "ADD",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8878,
        8902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8878,
        8902
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "ADD",
      "path": "2"
    },
    "5931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "ADD",
      "path": "2"
    },
    "5939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SUB",
      "path": "2"
    },
    "5944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172B"
    },
    "5949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "POP",
      "path": "2"
    },
    "5952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8919
      ],
      "op": "POP",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8878,
        8919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8878,
        8919
      ],
      "op": "POP",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x40"
    },
    "5957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "ADD",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "POP",
      "path": "2"
    },
    "5971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8942,
        8943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "LT",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1765"
    },
    "5981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1765"
    },
    "5985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "5988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8933,
        8944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5994": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "MUL",
      "path": "2"
    },
    "5995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "ADD",
      "path": "2"
    },
    "5999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8944
      ],
      "op": "ADD",
      "path": "2"
    },
    "6000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8933,
        8949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8970,
        8978
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 43
    },
    "6002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "op": "POP"
    },
    "6005": {
      "op": "POP"
    },
    "6006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8850,
        8989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8999,
        9022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9038,
        9043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "op": "SUB"
    },
    "6019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "GT",
      "path": "2"
    },
    "6021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1791"
    },
    "6025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1791"
    },
    "6029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6F"
    },
    "6032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "MUL",
      "path": "2"
    },
    "6045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6047": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ADD",
      "path": "2"
    },
    "6048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ADD",
      "path": "2"
    },
    "6050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C4"
    },
    "6058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6062": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ADD",
      "path": "2"
    },
    "6063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "ADD",
      "path": "2"
    },
    "6071": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SUB",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AF"
    },
    "6081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "POP",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9025,
        9044
      ],
      "op": "POP",
      "path": "2"
    },
    "6086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8999,
        9044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8999,
        9044
      ],
      "op": "POP",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9054,
        9069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9087,
        9096
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9103,
        9112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9103,
        9119
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9100,
        9119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9100,
        9119
      ],
      "op": "LT",
      "path": "2"
    },
    "6097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19AF"
    },
    "6101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9185,
        9200
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9148,
        9149
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "LT",
      "path": "2"
    },
    "6110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E9"
    },
    "6113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E9"
    },
    "6117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9138,
        9150
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "DUP12",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "AND",
      "path": "2"
    },
    "6140": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6144": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "MUL",
      "path": "2"
    },
    "6147": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9150
      ],
      "op": "ADD",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6157": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9200
      ],
      "op": "LT",
      "path": "2"
    },
    "6158": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184D"
    },
    "6163": {
      "branch": 132,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "POP",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9245,
        9260
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6168": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9226,
        9227
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6169": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6170": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "LT",
      "path": "2"
    },
    "6173": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1828"
    },
    "6176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1828"
    },
    "6180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9216,
        9228
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6193": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "MUL",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9228
      ],
      "op": "ADD",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "ADD",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6209": {
      "op": "SHL"
    },
    "6210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "DIV",
      "path": "2"
    },
    "6212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9241
      ],
      "op": "AND",
      "path": "2"
    },
    "6219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9260
      ],
      "op": "GT",
      "path": "2"
    },
    "6220": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9216,
        9260
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188C"
    },
    "6227": {
      "branch": 133,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "POP",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9292,
        9307
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9274,
        9275
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "LT",
      "path": "2"
    },
    "6237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1868"
    },
    "6240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1868"
    },
    "6244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9264,
        9276
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6261": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "MUL",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9276
      ],
      "op": "ADD",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "ADD",
      "path": "2"
    },
    "6268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "DIV",
      "path": "2"
    },
    "6276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9289
      ],
      "op": "AND",
      "path": "2"
    },
    "6283": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9264,
        9307
      ],
      "op": "GT",
      "path": "2"
    },
    "6284": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C9"
    },
    "6290": {
      "branch": 134,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "POP",
      "path": "2"
    },
    "6292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9353,
        9354
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9333,
        9334
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6300": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "LT",
      "path": "2"
    },
    "6301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A8"
    },
    "6304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A8"
    },
    "6308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9323,
        9335
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6312": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "MUL",
      "path": "2"
    },
    "6328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9335
      ],
      "op": "ADD",
      "path": "2"
    },
    "6329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "ADD",
      "path": "2"
    },
    "6332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6337": {
      "op": "SHL"
    },
    "6338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "DIV",
      "path": "2"
    },
    "6340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9350
      ],
      "op": "AND",
      "path": "2"
    },
    "6344": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9323,
        9354
      ],
      "op": "GT",
      "path": "2"
    },
    "6345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9138,
        9354
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9135,
        9564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9135,
        9564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A7"
    },
    "6350": {
      "branch": 135,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9135,
        9564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9415
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x4"
    },
    "6353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9416,
        9417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "LT",
      "path": "2"
    },
    "6358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E1"
    },
    "6361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E1"
    },
    "6365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9406,
        9418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "MUL",
      "path": "2"
    },
    "6383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9418
      ],
      "op": "ADD",
      "path": "2"
    },
    "6384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9406,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18FD"
    },
    "6392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "6396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DIV",
      "path": "2"
    },
    "6407": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MUL",
      "path": "2"
    },
    "6408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1929"
    },
    "6436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "6440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1976"
    },
    "6447": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "LT",
      "path": "2"
    },
    "6452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x194B"
    },
    "6455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DIV",
      "path": "2"
    },
    "6463": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MUL",
      "path": "2"
    },
    "6464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1976"
    },
    "6474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "GT",
      "path": "2"
    },
    "6505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1959"
    },
    "6508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SUB",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "AND",
      "path": "2"
    },
    "6515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "ADD",
      "path": "2"
    },
    "6517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9395,
        9402
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "LT",
      "path": "2"
    },
    "6530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198D"
    },
    "6533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198D"
    },
    "6537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9387,
        9403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "MUL",
      "path": "2"
    },
    "6545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "ADD",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9403
      ],
      "op": "ADD",
      "path": "2"
    },
    "6549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9387,
        9427
      ],
      "op": "POP",
      "path": "2"
    },
    "6553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9455,
        9464
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 45
    },
    "6554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9455,
        9464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9455,
        9464
      ],
      "op": "ADD",
      "path": "2"
    },
    "6557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9455,
        9464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9455,
        9464
      ],
      "op": "POP",
      "path": "2"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9497,
        9502
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9486,
        9493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6561": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9486,
        9502
      ],
      "op": "LT",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9550
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9526,
        9531
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 46,
      "value": "0x19AF"
    },
    "6566": {
      "branch": 136,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9550
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9483,
        9550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9587,
        9590
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x1"
    },
    "6570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9587,
        9590
      ],
      "op": "ADD",
      "path": "2"
    },
    "6571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CB"
    },
    "6574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6575": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6576": {
      "op": "POP"
    },
    "6577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9618,
        9625
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 48
    },
    "6578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9618,
        9625
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8132,
        9632
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6580": {
      "op": "POP"
    },
    "6581": {
      "op": "POP"
    },
    "6582": {
      "op": "POP"
    },
    "6583": {
      "op": "POP"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8132,
        9632
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6586": {
      "fn": "Governance.createProposal",
      "offset": [
        12580,
        12581
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x1"
    },
    "6588": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12577
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6592": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12581
      ],
      "op": "AND",
      "path": "2"
    },
    "6593": {
      "branch": 137,
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12581
      ],
      "op": "GT",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6596": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D2"
    },
    "6599": {
      "branch": 137,
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "POP",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.createProposal",
      "offset": [
        12604,
        12607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "6604": {
      "fn": "Governance.createProposal",
      "offset": [
        12585,
        12601
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6605": {
      "fn": "Governance.createProposal",
      "offset": [
        12585,
        12607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6608": {
      "fn": "Governance.createProposal",
      "offset": [
        12585,
        12607
      ],
      "op": "AND",
      "path": "2"
    },
    "6609": {
      "branch": 138,
      "fn": "Governance.createProposal",
      "offset": [
        12585,
        12607
      ],
      "op": "LT",
      "path": "2"
    },
    "6610": {
      "fn": "Governance.createProposal",
      "offset": [
        12561,
        12607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1E"
    },
    "6614": {
      "branch": 138,
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6615": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6617": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6624": {
      "op": "SHL"
    },
    "6625": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6629": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6631": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6632": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "ADD",
      "path": "2"
    },
    "6633": {
      "op": "MSTORE"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6638": {
      "op": "DUP3"
    },
    "6639": {
      "op": "ADD"
    },
    "6640": {
      "op": "MSTORE"
    },
    "6641": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6676": {
      "op": "DUP3"
    },
    "6677": {
      "op": "ADD"
    },
    "6678": {
      "op": "MSTORE"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "6685": {
      "op": "JUMP"
    },
    "6686": {
      "fn": "Governance.createProposal",
      "offset": [
        12553,
        12637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.createProposal",
      "offset": [
        12665,
        12666
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x1"
    },
    "6689": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6691": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6693": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6694": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6695": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6696": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A31"
    },
    "6699": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6701": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396E"
    },
    "6704": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12647,
        12666
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6705": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6706": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6707": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6708": {
      "fn": "Governance.createProposal",
      "offset": [
        12647,
        12666
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6709": {
      "op": "POP"
    },
    "6710": {
      "op": "POP"
    },
    "6711": {
      "fn": "Governance.createProposal",
      "offset": [
        12737,
        12751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6713": {
      "fn": "Governance.createProposal",
      "offset": [
        12737,
        12751
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6714": {
      "fn": "Governance.createProposal",
      "offset": [
        12697,
        12724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6716": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6717": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6718": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6719": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6721": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6723": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6724": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6726": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6727": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12789
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x3"
    },
    "6730": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12789
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6731": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12789
      ],
      "op": "ADD",
      "path": "2"
    },
    "6732": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6733": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6734": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "6750": {
      "op": "NOT"
    },
    "6751": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "AND",
      "path": "2",
      "statement": 52
    },
    "6752": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "6759": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6765": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6766": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6767": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "AND",
      "path": "2"
    },
    "6768": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6769": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6770": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6771": {
      "fn": "Governance.createProposal",
      "offset": [
        12766,
        12805
      ],
      "op": "MUL",
      "path": "2"
    },
    "6772": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6780": {
      "op": "SHL"
    },
    "6781": {
      "op": "NOT"
    },
    "6782": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "AND",
      "path": "2"
    },
    "6783": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6784": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6785": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6786": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "OR",
      "path": "2"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6791": {
      "op": "SHL"
    },
    "6792": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6793": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6794": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "AND",
      "path": "2"
    },
    "6795": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6796": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6797": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6798": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "MUL",
      "path": "2"
    },
    "6799": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "OR",
      "path": "2"
    },
    "6800": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6801": {
      "fn": "Governance.createProposal",
      "offset": [
        12819,
        12858
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6804": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12898
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "6805": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12898
      ],
      "op": "ADD",
      "path": "2"
    },
    "6806": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6807": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6808": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6811": {
      "op": "NOT"
    },
    "6812": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "AND",
      "path": "2"
    },
    "6813": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6816": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6817": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "AND",
      "path": "2"
    },
    "6818": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "OR",
      "path": "2"
    },
    "6819": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6820": {
      "fn": "Governance.createProposal",
      "offset": [
        12872,
        12917
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6821": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6822": {
      "fn": "Governance.createProposal",
      "offset": [
        12931,
        12962
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x1AB0"
    },
    "6825": {
      "fn": "Governance.createProposal",
      "offset": [
        12953,
        12962
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6826": {
      "fn": "Governance.createProposal",
      "offset": [
        12953,
        12962
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6827": {
      "fn": "Governance.createProposal",
      "offset": [
        12727,
        12752
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6828": {
      "fn": "Governance.createProposal",
      "offset": [
        12931,
        12962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A2D"
    },
    "6831": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12931,
        12962
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.createProposal",
      "offset": [
        12931,
        12962
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6833": {
      "fn": "Governance.createProposal",
      "offset": [
        12931,
        12962
      ],
      "op": "POP",
      "path": "2"
    },
    "6834": {
      "fn": "Governance.createProposal",
      "offset": [
        12973,
        13085
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 55,
      "value": "0x1AC4"
    },
    "6837": {
      "fn": "Governance.createProposal",
      "offset": [
        12989,
        12998
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.createProposal",
      "offset": [
        12989,
        12998
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6839": {
      "fn": "Governance.createProposal",
      "offset": [
        13007,
        13021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6841": {
      "fn": "Governance.createProposal",
      "offset": [
        13007,
        13021
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.createProposal",
      "offset": [
        13024,
        13025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6844": {
      "fn": "Governance.createProposal",
      "offset": [
        13027,
        13037
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6845": {
      "fn": "Governance.createProposal",
      "offset": [
        13039,
        13052
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6846": {
      "fn": "Governance.createProposal",
      "offset": [
        13054,
        13067
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6847": {
      "fn": "Governance.createProposal",
      "offset": [
        13069,
        13084
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6848": {
      "fn": "Governance.createProposal",
      "offset": [
        12973,
        12988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4E"
    },
    "6851": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        12973,
        13085
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6852": {
      "fn": "Governance.createProposal",
      "offset": [
        12973,
        13085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6853": {
      "fn": "Governance.createProposal",
      "offset": [
        12543,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6854": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6855": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6856": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6859": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6860": {
      "fn": "Governance.createProposal",
      "offset": [
        12361,
        13123
      ],
      "op": "POP",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        12361,
        13123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6863": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14469,
        14496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6865": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14499,
        14548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE9"
    },
    "6868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14523,
        14547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6870": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6871": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "6873": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6874": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6875": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6880": {
      "op": "SHL"
    },
    "6881": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6882": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6883": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "6884": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6885": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "6886": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "6887": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6888": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14499,
        14548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14469,
        14548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6891": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14469,
        14548
      ],
      "op": "POP",
      "path": "2"
    },
    "6892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14558,
        14576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF3"
    },
    "6895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14558,
        14576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "6898": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14558,
        14576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14558,
        14576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14586,
        14600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6902": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14586,
        14600
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14719,
        14738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14715,
        14716
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14715,
        14738
      ],
      "op": "LT",
      "path": "2"
    },
    "6907": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6908": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E03"
    },
    "6911": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6912": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14772,
        14820
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 56,
      "value": "0x1B0A"
    },
    "6915": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14792,
        14816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6917": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14818,
        14819
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14772,
        14791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ADD"
    },
    "6921": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14772,
        14820
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6922": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14772,
        14820
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6923": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14764,
        14821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 57
    },
    "6926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6928": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6930": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6932": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6933": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6935": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6937": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6938": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6940": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "6944": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6945": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "6946": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14764,
        14821
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14764,
        14821
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6953": {
      "op": "POP"
    },
    "6954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14844,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B38"
    },
    "6963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "6967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6970": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6972": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "6973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "6978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MUL",
      "path": "2"
    },
    "6979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "6982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6984": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "6988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6993": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B64"
    },
    "7007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "7011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB1"
    },
    "7018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "LT",
      "path": "2"
    },
    "7023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B86"
    },
    "7026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MUL",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB1"
    },
    "7045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7048": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "GT",
      "path": "2"
    },
    "7076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B94"
    },
    "7079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SUB",
      "path": "2"
    },
    "7083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7090": {
      "op": "POP"
    },
    "7091": {
      "op": "POP"
    },
    "7092": {
      "op": "POP"
    },
    "7093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7096": {
      "op": "POP"
    },
    "7097": {
      "op": "POP"
    },
    "7098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7110": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7115": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7120": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7162": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7165": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7172": {
      "op": "SHL"
    },
    "7173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7181": {
      "op": "SHL"
    },
    "7182": {
      "op": "SUB"
    },
    "7183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7193": {
      "op": "SHL"
    },
    "7194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7223": {
      "op": "SHL"
    },
    "7224": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DIV",
      "path": "2"
    },
    "7226": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7227": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "AND",
      "path": "2"
    },
    "7228": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7232": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7233": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "ADD",
      "path": "2"
    },
    "7234": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14835,
        14857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7235": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14911
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7236": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14911
      ],
      "op": "ADD",
      "path": "2"
    },
    "7237": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14911
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7238": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14911
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7239": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14911
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7240": {
      "op": "POP"
    },
    "7241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14914,
        14929
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14929
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14929
      ],
      "op": "AND",
      "path": "2"
    },
    "7244": {
      "branch": 139,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14929
      ],
      "op": "LT",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7247": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C63"
    },
    "7250": {
      "branch": 139,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "POP",
      "path": "2"
    },
    "7252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14949,
        14955
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14939
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7254": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7256": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14945
      ],
      "op": "ADD",
      "path": "2"
    },
    "7257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14945
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14955
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14955
      ],
      "op": "AND",
      "path": "2"
    },
    "7265": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14955
      ],
      "op": "EQ",
      "path": "2"
    },
    "7266": {
      "branch": 140,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14933,
        14955
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7267": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7268": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C78"
    },
    "7273": {
      "branch": 140,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "POP",
      "path": "2"
    },
    "7275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14978,
        14984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14965
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7277": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14975
      ],
      "op": "ADD",
      "path": "2"
    },
    "7281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14984
      ],
      "op": "AND",
      "path": "2"
    },
    "7286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14984
      ],
      "op": "EQ",
      "path": "2"
    },
    "7287": {
      "branch": 141,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14959,
        14984
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14875,
        14984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14871,
        15425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14871,
        15425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DFB"
    },
    "7293": {
      "branch": 141,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14871,
        15425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15197
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0xFFFF"
    },
    "7297": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15197
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15197
      ],
      "op": "AND",
      "path": "2"
    },
    "7299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15180
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15180
      ],
      "op": "ADD",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15163,
        15197
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15279,
        15295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0xB"
    },
    "7306": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15279,
        15295
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7307": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15261,
        15295
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C94"
    },
    "7310": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15261,
        15295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15261,
        15276
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15261,
        15295
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396E"
    },
    "7315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15261,
        15295
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7316": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15261,
        15295
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7317": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15296
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15296
      ],
      "op": "AND",
      "path": "2"
    },
    "7324": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15251
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7328": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15251
      ],
      "op": "ADD",
      "path": "2"
    },
    "7329": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15296
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7330": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x0"
    },
    "7332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7334": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7335": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7337": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7339": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7340": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7342": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7344": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7345": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15221
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7347": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15215,
        15221
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7348": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7349": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7350": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7351": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC0"
    },
    "7354": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7355": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3899"
    },
    "7359": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15314,
        15336
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7360": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7361": {
      "op": "POP"
    },
    "7362": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7364": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7366": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7367": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7373": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7374": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7380": {
      "op": "NOT"
    },
    "7381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7391": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7394": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7399": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7400": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7402": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7403": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7404": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7405": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7407": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7417": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7418": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7419": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7420": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7422": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7423": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7427": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7429": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7430": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7431": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7432": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7434": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7435": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7436": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7437": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7439": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7440": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP12",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7449": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7452": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7453": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "7454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "ADD",
      "path": "2"
    },
    "7455": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "7460": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7461": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7466": {
      "op": "NOT"
    },
    "7467": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7468": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7469": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7471": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7472": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7473": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7474": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7478": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7479": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7482": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MUL",
      "path": "2"
    },
    "7484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7487": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7488": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7505": {
      "op": "NOT"
    },
    "7506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7511": {
      "op": "SHL"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7518": {
      "op": "SHL"
    },
    "7519": {
      "op": "SUB"
    },
    "7520": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7524": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7525": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MUL",
      "path": "2"
    },
    "7527": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7532": {
      "op": "SHL"
    },
    "7533": {
      "op": "NOT"
    },
    "7534": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7540": {
      "op": "SHL"
    },
    "7541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7546": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MUL",
      "path": "2"
    },
    "7548": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7549": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7559": {
      "op": "SHL"
    },
    "7560": {
      "op": "NOT"
    },
    "7561": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7566": {
      "op": "SHL"
    },
    "7567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7568": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "7570": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7571": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MUL",
      "path": "2"
    },
    "7572": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7580": {
      "op": "SHL"
    },
    "7581": {
      "op": "NOT"
    },
    "7582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7583": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7585": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "7586": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7591": {
      "op": "SHL"
    },
    "7592": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7595": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "AND",
      "path": "2"
    },
    "7596": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7598": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "MUL",
      "path": "2"
    },
    "7600": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "OR",
      "path": "2"
    },
    "7601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15314,
        15336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 61
    },
    "7607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7608": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7613": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7614": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "7653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7654": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF2"
    },
    "7657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7658": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15380,
        15386
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15380,
        15386
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15396,
        15409
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7662": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AEC"
    },
    "7665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15359,
        15410
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7667": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7670": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7672": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SUB",
      "path": "2"
    },
    "7673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15359,
        15410
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14871,
        15425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15448,
        15451
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x1"
    },
    "7678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15448,
        15451
      ],
      "op": "ADD",
      "path": "2"
    },
    "7679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF7"
    },
    "7682": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7684": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14697,
        15463
      ],
      "op": "POP",
      "path": "2"
    },
    "7685": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14459,
        15522
      ],
      "op": "POP",
      "path": "2"
    },
    "7686": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14459,
        15522
      ],
      "op": "POP",
      "path": "2"
    },
    "7687": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14459,
        15522
      ],
      "op": "POP",
      "path": "2"
    },
    "7688": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14394,
        15522
      ],
      "op": "POP",
      "path": "2"
    },
    "7689": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        14394,
        15522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7690": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7691": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18203
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x2"
    },
    "7693": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18203
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7694": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7696": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7697": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7704": {
      "op": "SHL"
    },
    "7705": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7706": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7707": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7709": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7710": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ADD",
      "path": "2"
    },
    "7711": {
      "op": "DUP6"
    },
    "7712": {
      "op": "SWAP1"
    },
    "7713": {
      "op": "MSTORE"
    },
    "7714": {
      "fn": "Governance.submitVerification",
      "offset": [
        18223,
        18233
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7715": {
      "fn": "Governance.submitVerification",
      "offset": [
        18223,
        18233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7722": {
      "op": "SHL"
    },
    "7723": {
      "op": "SUB"
    },
    "7724": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18203
      ],
      "op": "AND",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18203
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18211
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7731": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7737": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7739": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7741": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "SUB",
      "path": "2"
    },
    "7743": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7744": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7745": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "GAS",
      "path": "2"
    },
    "7746": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7748": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7749": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7750": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E53"
    },
    "7753": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7754": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7755": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7757": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7759": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7760": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7762": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7763": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7764": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "POP",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "POP",
      "path": "2"
    },
    "7766": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "POP",
      "path": "2"
    },
    "7767": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "POP",
      "path": "2"
    },
    "7768": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7770": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7772": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7774": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "NOT",
      "path": "2"
    },
    "7775": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7777": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7778": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ADD",
      "path": "2"
    },
    "7779": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "AND",
      "path": "2"
    },
    "7780": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7781": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ADD",
      "path": "2"
    },
    "7782": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7783": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7785": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7786": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "POP",
      "path": "2"
    },
    "7787": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7788": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "ADD",
      "path": "2"
    },
    "7789": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7790": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E77"
    },
    "7793": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7794": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7795": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A10"
    },
    "7798": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18193,
        18219
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7799": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18219
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7806": {
      "op": "SHL"
    },
    "7807": {
      "op": "SUB"
    },
    "7808": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18233
      ],
      "op": "AND",
      "path": "2"
    },
    "7809": {
      "branch": 142,
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18233
      ],
      "op": "EQ",
      "path": "2"
    },
    "7810": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18270
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7811": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18270
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7812": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA8"
    },
    "7815": {
      "branch": 142,
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18270
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7816": {
      "op": "POP"
    },
    "7817": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7819": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7820": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7821": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7822": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7824": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7826": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7827": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7829": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18251
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7833": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "ADD",
      "path": "2"
    },
    "7834": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "DIV",
      "path": "2"
    },
    "7842": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7845": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18262
      ],
      "op": "AND",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18270
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7847": {
      "branch": 143,
      "fn": "Governance.submitVerification",
      "offset": [
        18237,
        18270
      ],
      "op": "EQ",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        18193,
        18270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7849": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF4"
    },
    "7852": {
      "branch": 143,
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7855": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7862": {
      "op": "SHL"
    },
    "7863": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7864": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7867": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7869": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7870": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7871": {
      "op": "DUP2"
    },
    "7872": {
      "op": "SWAP1"
    },
    "7873": {
      "op": "MSTORE"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7876": {
      "op": "DUP3"
    },
    "7877": {
      "op": "ADD"
    },
    "7878": {
      "op": "MSTORE"
    },
    "7879": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "ADD"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "7923": {
      "op": "JUMP"
    },
    "7924": {
      "fn": "Governance.submitVerification",
      "offset": [
        18185,
        18307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7925": {
      "fn": "Governance.submitVerification",
      "offset": [
        18342,
        18343
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0x0"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        18325,
        18332
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.submitVerification",
      "offset": [
        18325,
        18339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7929": {
      "branch": 144,
      "fn": "Governance.submitVerification",
      "offset": [
        18325,
        18343
      ],
      "op": "GT",
      "path": "2"
    },
    "7930": {
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F02"
    },
    "7933": {
      "branch": 144,
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7936": {
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7937": {
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7938": {
      "fn": "Governance.submitVerification",
      "offset": [
        18317,
        18344
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.submitVerification",
      "offset": [
        18355,
        18374
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7941": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7942": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7943": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7944": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7946": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7948": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7949": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7951": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7952": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7953": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7955": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7956": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "ADD",
      "path": "2"
    },
    "7957": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7958": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7959": {
      "fn": "Governance.submitVerification",
      "offset": [
        18377,
        18391
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.submitVerification",
      "offset": [
        18355,
        18374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7965": {
      "op": "SHL"
    },
    "7966": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7967": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "DIV",
      "path": "2"
    },
    "7968": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7971": {
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18964
      ],
      "op": "AND",
      "path": "2"
    },
    "7972": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18948,
        18968
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7973": {
      "fn": "Governance.submitVerification",
      "offset": [
        18945,
        19150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9D"
    },
    "7976": {
      "branch": 145,
      "fn": "Governance.submitVerification",
      "offset": [
        18945,
        19150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7977": {
      "fn": "Governance.submitVerification",
      "offset": [
        18988,
        18997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7979": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7980": {
      "fn": "Governance.submitVerification",
      "offset": [
        19007,
        19014
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7981": {
      "fn": "Governance.submitVerification",
      "offset": [
        19007,
        19021
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7982": {
      "fn": "Governance.submitVerification",
      "offset": [
        19003,
        19004
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7983": {
      "fn": "Governance.submitVerification",
      "offset": [
        19003,
        19021
      ],
      "op": "LT",
      "path": "2"
    },
    "7984": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7985": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9B"
    },
    "7988": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7989": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19088
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 65
    },
    "7990": {
      "fn": "Governance.submitVerification",
      "offset": [
        19089,
        19090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7991": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7992": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7993": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7994": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "LT",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F46"
    },
    "7998": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7999": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F46"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "8005": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19081,
        19091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8006": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "MUL",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8012": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "ADD",
      "path": "2"
    },
    "8013": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "ADD",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.submitVerification",
      "offset": [
        19081,
        19091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8017": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8018": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F60"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8025": {
      "op": "DUP2"
    },
    "8026": {
      "op": "MSTORE"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8029": {
      "op": "ADD"
    },
    "8030": {
      "op": "SWAP1"
    },
    "8031": {
      "op": "JUMP"
    },
    "8032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8033": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8036": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8038": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8039": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "SUB",
      "path": "2"
    },
    "8041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "SUB",
      "path": "2"
    },
    "8042": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8043": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8045": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19064,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8048": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8051": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8053": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "ADD",
      "path": "2"
    },
    "8054": {
      "fn": "Governance.submitVerification",
      "offset": [
        19054,
        19093
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8055": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19048
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8056": {
      "fn": "Governance.submitVerification",
      "offset": [
        19049,
        19050
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8057": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8058": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8059": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8060": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "LT",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F88"
    },
    "8064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8065": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F88"
    },
    "8068": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "8071": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19041,
        19051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8072": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8073": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8075": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8076": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8077": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "MUL",
      "path": "2"
    },
    "8078": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8079": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8080": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8081": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "ADD",
      "path": "2"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19051
      ],
      "op": "ADD",
      "path": "2"
    },
    "8083": {
      "fn": "Governance.submitVerification",
      "offset": [
        19041,
        19093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8084": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19124
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x1"
    },
    "8086": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19124
      ],
      "op": "ADD",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F2B"
    },
    "8090": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8092": {
      "fn": "Governance.submitVerification",
      "offset": [
        18984,
        19140
      ],
      "op": "POP",
      "path": "2"
    },
    "8093": {
      "fn": "Governance.submitVerification",
      "offset": [
        18945,
        19150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.submitVerification",
      "offset": [
        19159,
        19173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19203,
        19210
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8097": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8100": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8102": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "ADD",
      "path": "2"
    },
    "8103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB0"
    },
    "8106": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8107": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8108": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x370B"
    },
    "8111": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19186,
        19211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8115": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8118": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8119": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8120": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "SUB",
      "path": "2"
    },
    "8121": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "SUB",
      "path": "2"
    },
    "8122": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8124": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8125": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8127": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19211
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8128": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8129": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8130": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8133": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "ADD",
      "path": "2"
    },
    "8134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19176,
        19212
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8135": {
      "fn": "Governance.submitVerification",
      "offset": [
        19159,
        19212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8136": {
      "fn": "Governance.submitVerification",
      "offset": [
        19159,
        19212
      ],
      "op": "POP",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8139": {
      "fn": "Governance.submitVerification",
      "offset": [
        19260,
        19266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8140": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19251
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8143": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19256
      ],
      "op": "ADD",
      "path": "2"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19256
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8145": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19266
      ],
      "op": "EQ",
      "path": "2"
    },
    "8146": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FDC"
    },
    "8149": {
      "branch": 146,
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        19273,
        19274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FDF"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8156": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8157": {
      "fn": "Governance.submitVerification",
      "offset": [
        19269,
        19270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19245,
        19274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x1"
    },
    "8162": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "ADD",
      "path": "2"
    },
    "8165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8168": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8169": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8170": {
      "op": "DUP12"
    },
    "8171": {
      "op": "DUP2"
    },
    "8172": {
      "op": "MSTORE"
    },
    "8173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8179": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19332
      ],
      "op": "AND",
      "path": "2"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8184": {
      "op": "DUP4"
    },
    "8185": {
      "op": "ADD"
    },
    "8186": {
      "op": "MSTORE"
    },
    "8187": {
      "op": "DUP2"
    },
    "8188": {
      "op": "ADD"
    },
    "8189": {
      "op": "DUP10"
    },
    "8190": {
      "op": "SWAP1"
    },
    "8191": {
      "op": "MSTORE"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8194": {
      "op": "DUP2"
    },
    "8195": {
      "op": "ADD"
    },
    "8196": {
      "op": "DUP6"
    },
    "8197": {
      "op": "SWAP1"
    },
    "8198": {
      "op": "MSTORE"
    },
    "8199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8201": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8203": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "AND",
      "path": "2"
    },
    "8205": {
      "fn": "Governance.submitVerification",
      "offset": [
        19351,
        19365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19351,
        19365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19351,
        19365
      ],
      "op": "EQ",
      "path": "2"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8210": {
      "op": "DUP4"
    },
    "8211": {
      "op": "ADD"
    },
    "8212": {
      "op": "MSTORE"
    },
    "8213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19223,
        19274
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8214": {
      "op": "POP"
    },
    "8215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "8248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8254": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8255": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8256": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "SUB",
      "path": "2"
    },
    "8258": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19290,
        19366
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8260": {
      "fn": "Governance.submitVerification",
      "offset": [
        19381,
        19392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8261": {
      "fn": "Governance.submitVerification",
      "offset": [
        19395,
        19396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8263": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        19381,
        19396
      ],
      "op": "SUB",
      "path": "2"
    },
    "8264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19377,
        21643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2345"
    },
    "8267": {
      "branch": 147,
      "fn": "Governance.submitVerification",
      "offset": [
        19377,
        21643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8270": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8271": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "ADD",
      "path": "2"
    },
    "8272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19488
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206F"
    },
    "8279": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19506,
        19507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19506,
        19507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8287": {
      "op": "SHL"
    },
    "8288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8289": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "DIV",
      "path": "2"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8296": {
      "op": "SHL"
    },
    "8297": {
      "op": "SUB"
    },
    "8298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19505
      ],
      "op": "AND",
      "path": "2"
    },
    "8299": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BB7"
    },
    "8302": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19491,
        19507
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8303": {
      "fn": "Governance.submitVerification",
      "offset": [
        19491,
        19507
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8311": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "ADD",
      "path": "2"
    },
    "8312": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8315": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8316": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8323": {
      "op": "SHL"
    },
    "8324": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8325": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8330": {
      "op": "SHL"
    },
    "8331": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8332": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "DIV",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19580,
        19597
      ],
      "op": "AND",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8339": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8340": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ADD",
      "path": "2"
    },
    "8341": {
      "op": "SWAP2"
    },
    "8342": {
      "op": "SWAP1"
    },
    "8343": {
      "op": "SWAP2"
    },
    "8344": {
      "op": "MSTORE"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8351": {
      "op": "SHL"
    },
    "8352": {
      "op": "SUB"
    },
    "8353": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19507
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8354": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8355": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19507
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19507
      ],
      "op": "AND",
      "path": "2"
    },
    "8357": {
      "fn": "Governance.submitVerification",
      "offset": [
        19475,
        19507
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8358": {
      "op": "POP"
    },
    "8359": {
      "fn": "Governance.submitVerification",
      "offset": [
        19521,
        19550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19521,
        19550
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8368": {
      "op": "SHL"
    },
    "8369": {
      "op": "SUB"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8371": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8372": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "AND",
      "path": "2"
    },
    "8373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8374": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19579
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8379": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19579
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8382": {
      "op": "ADD"
    },
    "8383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8385": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8387": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8388": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8389": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8390": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "SUB",
      "path": "2"
    },
    "8391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8393": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "GAS",
      "path": "2"
    },
    "8394": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8398": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20DB"
    },
    "8401": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8402": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8403": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8405": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8406": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8408": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8410": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "POP",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "POP",
      "path": "2"
    },
    "8414": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "POP",
      "path": "2"
    },
    "8415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "POP",
      "path": "2"
    },
    "8416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8418": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8419": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8420": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8422": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "NOT",
      "path": "2"
    },
    "8423": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8426": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ADD",
      "path": "2"
    },
    "8427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "AND",
      "path": "2"
    },
    "8428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ADD",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8433": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8434": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "POP",
      "path": "2"
    },
    "8435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "ADD",
      "path": "2"
    },
    "8437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8438": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20FF"
    },
    "8441": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8442": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A10"
    },
    "8446": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19561,
        19598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8447": {
      "fn": "Governance.submitVerification",
      "offset": [
        19561,
        19598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8448": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x2"
    },
    "8450": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8451": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8453": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8454": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "ADD",
      "path": "2"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8458": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8459": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "ADD",
      "path": "2"
    },
    "8461": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8462": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8465": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8474": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8475": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8481": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8482": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8483": {
      "fn": "Governance.submitVerification",
      "offset": [
        19690,
        19702
      ],
      "op": "AND",
      "path": "2"
    },
    "8484": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8485": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "ADD",
      "path": "2"
    },
    "8487": {
      "op": "SWAP2"
    },
    "8488": {
      "op": "SWAP1"
    },
    "8489": {
      "op": "SWAP2"
    },
    "8490": {
      "op": "MSTORE"
    },
    "8491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8494": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "DIV",
      "path": "2"
    },
    "8496": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8500": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19720
      ],
      "op": "AND",
      "path": "2"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8503": {
      "op": "DUP3"
    },
    "8504": {
      "op": "ADD"
    },
    "8505": {
      "op": "MSTORE"
    },
    "8506": {
      "fn": "Governance.submitVerification",
      "offset": [
        19521,
        19599
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8507": {
      "fn": "Governance.submitVerification",
      "offset": [
        19521,
        19599
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8508": {
      "op": "POP"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8515": {
      "op": "SHL"
    },
    "8516": {
      "op": "SUB"
    },
    "8517": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "AND",
      "path": "2"
    },
    "8518": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8519": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19689
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8524": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8527": {
      "op": "ADD"
    },
    "8528": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8530": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8532": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8533": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8534": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8535": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "SUB",
      "path": "2"
    },
    "8536": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8537": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8539": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8540": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8541": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8542": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8543": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8545": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2169"
    },
    "8548": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8551": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8554": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "POP",
      "path": "2"
    },
    "8555": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "GAS",
      "path": "2"
    },
    "8556": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "CALL",
      "path": "2"
    },
    "8557": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217D"
    },
    "8563": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8567": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8568": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8569": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8570": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8572": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8573": {
      "fn": "Governance.submitVerification",
      "offset": [
        19668,
        19721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8574": {
      "op": "POP"
    },
    "8575": {
      "op": "POP"
    },
    "8576": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x2"
    },
    "8578": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8579": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8581": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8582": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8583": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "ADD",
      "path": "2"
    },
    "8584": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8585": {
      "fn": "Governance.submitVerification",
      "offset": [
        19776,
        19801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8587": {
      "fn": "Governance.submitVerification",
      "offset": [
        19776,
        19801
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8588": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8590": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8591": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8598": {
      "op": "SHL"
    },
    "8599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8600": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8605": {
      "op": "SHL"
    },
    "8606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8607": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "DIV",
      "path": "2"
    },
    "8609": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19774
      ],
      "op": "AND",
      "path": "2"
    },
    "8613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8614": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8615": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "ADD",
      "path": "2"
    },
    "8616": {
      "op": "SWAP3"
    },
    "8617": {
      "op": "SWAP1"
    },
    "8618": {
      "op": "SWAP3"
    },
    "8619": {
      "op": "MSTORE"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8622": {
      "op": "DUP2"
    },
    "8623": {
      "op": "ADD"
    },
    "8624": {
      "op": "SWAP2"
    },
    "8625": {
      "op": "SWAP1"
    },
    "8626": {
      "op": "SWAP2"
    },
    "8627": {
      "op": "MSTORE"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8634": {
      "op": "SHL"
    },
    "8635": {
      "op": "SUB"
    },
    "8636": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8637": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8638": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "AND",
      "path": "2"
    },
    "8639": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19745
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8640": {
      "op": "POP"
    },
    "8641": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19756
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8646": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19756
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8647": {
      "op": "POP"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8650": {
      "op": "ADD"
    },
    "8651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8652": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8654": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8656": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8657": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8658": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8659": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "SUB",
      "path": "2"
    },
    "8660": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8663": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8664": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8665": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8666": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8668": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8669": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E5"
    },
    "8672": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8673": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8675": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8677": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8678": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "POP",
      "path": "2"
    },
    "8679": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "GAS",
      "path": "2"
    },
    "8680": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "CALL",
      "path": "2"
    },
    "8681": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8682": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8683": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8684": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F9"
    },
    "8687": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8688": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8691": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8692": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8697": {
      "fn": "Governance.submitVerification",
      "offset": [
        19735,
        19802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8698": {
      "op": "POP"
    },
    "8699": {
      "op": "POP"
    },
    "8700": {
      "op": "POP"
    },
    "8701": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19831
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x4"
    },
    "8703": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19831
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8704": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19831
      ],
      "op": "ADD",
      "path": "2"
    },
    "8705": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8707": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "8722": {
      "op": "NOT"
    },
    "8723": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19833
      ],
      "op": "AND",
      "path": "2"
    },
    "8724": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8725": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19833
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "fn": "Governance.submitVerification",
      "offset": [
        19832,
        19833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8729": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 71
    },
    "8730": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8732": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8734": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8736": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8737": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8739": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8740": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222F"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19883,
        19897
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19832,
        19833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E70"
    },
    "8750": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19876,
        19897
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8751": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8752": {
      "op": "POP"
    },
    "8753": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8755": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "ADD",
      "path": "2"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8759": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8765": {
      "op": "NOT"
    },
    "8766": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "AND",
      "path": "2"
    },
    "8767": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8768": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8771": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8773": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8774": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "ADD",
      "path": "2"
    },
    "8775": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8776": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8780": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8781": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "ADD",
      "path": "2"
    },
    "8782": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8784": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8785": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8788": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "ADD",
      "path": "2"
    },
    "8790": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8791": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8798": {
      "op": "SHL"
    },
    "8799": {
      "op": "SUB"
    },
    "8800": {
      "op": "NOT"
    },
    "8801": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "AND",
      "path": "2"
    },
    "8802": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8803": {
      "fn": "Governance.submitVerification",
      "offset": [
        19876,
        19897
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8804": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8806": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8807": {
      "op": "DUP2"
    },
    "8808": {
      "op": "SWAP1"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8815": {
      "op": "SHL"
    },
    "8816": {
      "op": "SUB"
    },
    "8817": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20001
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8818": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20001
      ],
      "op": "AND",
      "path": "2"
    },
    "8819": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8820": {
      "fn": "Governance.submitVerification",
      "offset": [
        20009,
        20014
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8821": {
      "fn": "Governance.submitVerification",
      "offset": [
        20009,
        20014
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8822": {
      "op": "DUP4"
    },
    "8823": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8824": {
      "op": "DUP2"
    },
    "8825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.submitVerification",
      "offset": [
        20009,
        20014
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20001
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8828": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "GAS",
      "path": "2"
    },
    "8829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "CALL",
      "path": "2"
    },
    "8830": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8831": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8832": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "EQ",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22AD"
    },
    "8843": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8844": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8849": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8851": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "NOT",
      "path": "2"
    },
    "8852": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8854": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8855": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "ADD",
      "path": "2"
    },
    "8856": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "AND",
      "path": "2"
    },
    "8857": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8858": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "ADD",
      "path": "2"
    },
    "8859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8865": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8866": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8868": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8870": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8871": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "ADD",
      "path": "2"
    },
    "8872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8873": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B2"
    },
    "8876": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8877": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8883": {
      "fn": "Governance.submitVerification",
      "offset": [
        19983,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        19950,
        20019
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        19950,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        19950,
        20019
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8887": {
      "fn": "Governance.submitVerification",
      "offset": [
        19950,
        20019
      ],
      "op": "POP",
      "path": "2"
    },
    "8888": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20045
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 72
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D4"
    },
    "8892": {
      "branch": 148,
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8895": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8902": {
      "op": "SHL"
    },
    "8903": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8904": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8905": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8907": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "ADD",
      "path": "2"
    },
    "8908": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "8911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BEB"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20033,
        20070
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.submitVerification",
      "offset": [
        20033,
        20070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8917": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x40"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8920": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20142
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8921": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        20155,
        20160
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8923": {
      "fn": "Governance.submitVerification",
      "offset": [
        20155,
        20160
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8924": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8926": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8927": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8928": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8929": {
      "fn": "Governance.submitVerification",
      "offset": [
        20155,
        20160
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8930": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20142
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8931": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "GAS",
      "path": "2"
    },
    "8932": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "CALL",
      "path": "2"
    },
    "8933": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "POP",
      "path": "2"
    },
    "8935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "POP",
      "path": "2"
    },
    "8936": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "POP",
      "path": "2"
    },
    "8937": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8942": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "EQ",
      "path": "2"
    },
    "8943": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2314"
    },
    "8946": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8949": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8950": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8951": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "POP",
      "path": "2"
    },
    "8952": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8954": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "NOT",
      "path": "2"
    },
    "8955": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8957": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8958": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "8959": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "AND",
      "path": "2"
    },
    "8960": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "8962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8964": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8965": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8966": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8967": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8968": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8969": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8971": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8973": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "8975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8976": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2319"
    },
    "8979": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8981": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8983": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "POP",
      "path": "2"
    },
    "8985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20132,
        20165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8986": {
      "op": "POP"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20117,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20117,
        20165
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8989": {
      "op": "POP"
    },
    "8990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20117,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20117,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 74,
      "value": "0x233C"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9006": {
      "op": "SHL"
    },
    "9007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "ADD",
      "path": "2"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BEB"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20179,
        20216
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20179,
        20216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19397,
        20228
      ],
      "op": "POP",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19397,
        20228
      ],
      "op": "POP",
      "path": "2"
    },
    "9023": {
      "fn": "Governance.submitVerification",
      "offset": [
        19397,
        20228
      ],
      "op": "POP",
      "path": "2"
    },
    "9024": {
      "fn": "Governance.submitVerification",
      "offset": [
        19397,
        20228
      ],
      "op": "POP",
      "path": "2"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19377,
        21643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC51"
    },
    "9028": {
      "fn": "Governance.submitVerification",
      "offset": [
        19377,
        21643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        19377,
        21643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9030": {
      "fn": "Governance.submitVerification",
      "offset": [
        20410,
        20416
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9031": {
      "fn": "Governance.submitVerification",
      "offset": [
        20390,
        20396
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20390,
        20408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20390,
        20408
      ],
      "op": "ADD",
      "path": "2"
    },
    "9035": {
      "fn": "Governance.submitVerification",
      "offset": [
        20390,
        20408
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9036": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        20390,
        20416
      ],
      "op": "SUB",
      "path": "2"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20387,
        21633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24BC"
    },
    "9040": {
      "branch": 149,
      "fn": "Governance.submitVerification",
      "offset": [
        20387,
        21633
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "ADD",
      "path": "2"
    },
    "9045": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9048": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2374"
    },
    "9052": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9053": {
      "fn": "Governance.submitVerification",
      "offset": [
        20466,
        20467
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9055": {
      "fn": "Governance.submitVerification",
      "offset": [
        20466,
        20467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9060": {
      "op": "SHL"
    },
    "9061": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9062": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "DIV",
      "path": "2"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9069": {
      "op": "SHL"
    },
    "9070": {
      "op": "SUB"
    },
    "9071": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20465
      ],
      "op": "AND",
      "path": "2"
    },
    "9072": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BB7"
    },
    "9075": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20451,
        20467
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9076": {
      "fn": "Governance.submitVerification",
      "offset": [
        20451,
        20467
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9080": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9083": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9084": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "ADD",
      "path": "2"
    },
    "9085": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9089": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9096": {
      "op": "SHL"
    },
    "9097": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9098": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9103": {
      "op": "SHL"
    },
    "9104": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9105": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "DIV",
      "path": "2"
    },
    "9107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20542,
        20558
      ],
      "op": "AND",
      "path": "2"
    },
    "9111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9113": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ADD",
      "path": "2"
    },
    "9114": {
      "op": "SWAP2"
    },
    "9115": {
      "op": "SWAP1"
    },
    "9116": {
      "op": "SWAP2"
    },
    "9117": {
      "op": "MSTORE"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9124": {
      "op": "SHL"
    },
    "9125": {
      "op": "SUB"
    },
    "9126": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20467
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9127": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20467
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20467
      ],
      "op": "AND",
      "path": "2"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20435,
        20467
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9131": {
      "op": "POP"
    },
    "9132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20485,
        20512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20485,
        20512
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9141": {
      "op": "SHL"
    },
    "9142": {
      "op": "SUB"
    },
    "9143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9145": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "AND",
      "path": "2"
    },
    "9146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20541
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9152": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9155": {
      "op": "ADD"
    },
    "9156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9161": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "SUB",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "GAS",
      "path": "2"
    },
    "9167": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9170": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E0"
    },
    "9174": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9175": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9176": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9178": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9179": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9180": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9181": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9183": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9184": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "POP",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "POP",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "POP",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "POP",
      "path": "2"
    },
    "9189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9191": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9195": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "NOT",
      "path": "2"
    },
    "9196": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9199": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ADD",
      "path": "2"
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "AND",
      "path": "2"
    },
    "9201": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9202": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ADD",
      "path": "2"
    },
    "9203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9204": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9206": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9207": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "POP",
      "path": "2"
    },
    "9208": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9209": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "ADD",
      "path": "2"
    },
    "9210": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9211": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2404"
    },
    "9214": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9215": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9216": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A10"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20523,
        20559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9220": {
      "fn": "Governance.submitVerification",
      "offset": [
        20523,
        20559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9221": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x2"
    },
    "9223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9224": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9226": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9227": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "ADD",
      "path": "2"
    },
    "9229": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9230": {
      "fn": "Governance.submitVerification",
      "offset": [
        20619,
        20644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "offset": [
        20619,
        20644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9235": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9236": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9243": {
      "op": "SHL"
    },
    "9244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9248": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9250": {
      "op": "SHL"
    },
    "9251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9252": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9253": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "DIV",
      "path": "2"
    },
    "9254": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20601,
        20617
      ],
      "op": "AND",
      "path": "2"
    },
    "9258": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9260": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "ADD",
      "path": "2"
    },
    "9261": {
      "op": "SWAP3"
    },
    "9262": {
      "op": "SWAP1"
    },
    "9263": {
      "op": "SWAP3"
    },
    "9264": {
      "op": "MSTORE"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9267": {
      "op": "DUP2"
    },
    "9268": {
      "op": "ADD"
    },
    "9269": {
      "op": "SWAP2"
    },
    "9270": {
      "op": "SWAP1"
    },
    "9271": {
      "op": "SWAP2"
    },
    "9272": {
      "op": "MSTORE"
    },
    "9273": {
      "fn": "Governance.submitVerification",
      "offset": [
        20485,
        20560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9274": {
      "fn": "Governance.submitVerification",
      "offset": [
        20485,
        20560
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9275": {
      "op": "POP"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9282": {
      "op": "SHL"
    },
    "9283": {
      "op": "SUB"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "AND",
      "path": "2"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20600
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9294": {
      "op": "ADD"
    },
    "9295": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9297": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9299": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9300": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9301": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "SUB",
      "path": "2"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9306": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9307": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9308": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9311": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9312": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2468"
    },
    "9315": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9318": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9319": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "POP",
      "path": "2"
    },
    "9322": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "GAS",
      "path": "2"
    },
    "9323": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "CALL",
      "path": "2"
    },
    "9324": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9325": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247C"
    },
    "9330": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9331": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9334": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9336": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9337": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9339": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20579,
        20645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9341": {
      "op": "POP"
    },
    "9342": {
      "op": "POP"
    },
    "9343": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x2"
    },
    "9345": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9346": {
      "fn": "Governance.submitVerification",
      "offset": [
        20693,
        20718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "9348": {
      "fn": "Governance.submitVerification",
      "offset": [
        20693,
        20718
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9349": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9351": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9352": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9359": {
      "op": "SHL"
    },
    "9360": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9362": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9365": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "ADD",
      "path": "2"
    },
    "9366": {
      "op": "DUP15"
    },
    "9367": {
      "op": "SWAP1"
    },
    "9368": {
      "op": "MSTORE"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9371": {
      "op": "DUP2"
    },
    "9372": {
      "op": "ADD"
    },
    "9373": {
      "op": "SWAP2"
    },
    "9374": {
      "op": "SWAP1"
    },
    "9375": {
      "op": "SWAP2"
    },
    "9376": {
      "op": "MSTORE"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9383": {
      "op": "SHL"
    },
    "9384": {
      "op": "SUB"
    },
    "9385": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9386": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9387": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "AND",
      "path": "2"
    },
    "9388": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20673
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9389": {
      "op": "POP"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20684
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9395": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20684
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9396": {
      "op": "POP"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9399": {
      "op": "ADD"
    },
    "9400": {
      "fn": "Governance.submitVerification",
      "offset": [
        20663,
        20719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CB"
    },
    "9403": {
      "op": "JUMP"
    },
    "9404": {
      "fn": "Governance.submitVerification",
      "offset": [
        20387,
        21633
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9405": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9407": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9408": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "ADD",
      "path": "2"
    },
    "9409": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9410": {
      "fn": "Governance.submitVerification",
      "offset": [
        21332,
        21345
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9412": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 77
    },
    "9413": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9414": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9415": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "9417": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9419": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9420": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9422": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9423": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9428": {
      "op": "SHL"
    },
    "9429": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9430": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9431": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "DIV",
      "path": "2"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9438": {
      "op": "SHL"
    },
    "9439": {
      "op": "SUB"
    },
    "9440": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "AND",
      "path": "2"
    },
    "9441": {
      "fn": "Governance.submitVerification",
      "offset": [
        21348,
        21362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9442": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24EC"
    },
    "9446": {
      "fn": "Governance.submitVerification",
      "offset": [
        21387,
        21401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9447": {
      "fn": "Governance.submitVerification",
      "offset": [
        21332,
        21345
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9448": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E70"
    },
    "9451": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21380,
        21401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9452": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9453": {
      "op": "POP"
    },
    "9454": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9456": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9457": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "ADD",
      "path": "2"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9459": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9460": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9466": {
      "op": "NOT"
    },
    "9467": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "AND",
      "path": "2"
    },
    "9468": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9469": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9470": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9472": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9474": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9475": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "ADD",
      "path": "2"
    },
    "9476": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9477": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9478": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9481": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9482": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "ADD",
      "path": "2"
    },
    "9483": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9484": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9485": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9486": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9488": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9490": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "ADD",
      "path": "2"
    },
    "9491": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9492": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9499": {
      "op": "SHL"
    },
    "9500": {
      "op": "SUB"
    },
    "9501": {
      "op": "NOT"
    },
    "9502": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "AND",
      "path": "2"
    },
    "9503": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9504": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9505": {
      "fn": "Governance.submitVerification",
      "offset": [
        21380,
        21401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9506": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2533"
    },
    "9509": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9511": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9518": {
      "op": "SHL"
    },
    "9519": {
      "op": "SUB"
    },
    "9520": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9521": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9522": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9523": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9530": {
      "op": "SHL"
    },
    "9531": {
      "op": "SUB"
    },
    "9532": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21464
      ],
      "op": "AND",
      "path": "2"
    },
    "9533": {
      "fn": "Governance.submitVerification",
      "offset": [
        21472,
        21477
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9534": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9536": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9537": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9539": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9541": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9542": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9543": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9544": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "SUB",
      "path": "2"
    },
    "9545": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9546": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9548": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "GAS",
      "path": "2"
    },
    "9549": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "CALL",
      "path": "2"
    },
    "9550": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9551": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9552": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9553": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9554": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9555": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9556": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9558": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9559": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "EQ",
      "path": "2"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x257D"
    },
    "9563": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9566": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9567": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9568": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9569": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9571": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "NOT",
      "path": "2"
    },
    "9572": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9574": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9575": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "ADD",
      "path": "2"
    },
    "9576": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "AND",
      "path": "2"
    },
    "9577": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9578": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "ADD",
      "path": "2"
    },
    "9579": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9581": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9582": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9583": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9584": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9585": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9588": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9590": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9591": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "ADD",
      "path": "2"
    },
    "9592": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9593": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2582"
    },
    "9596": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9597": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9598": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9601": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9602": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21452,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21419,
        21482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9605": {
      "fn": "Governance.submitVerification",
      "offset": [
        21419,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9606": {
      "fn": "Governance.submitVerification",
      "offset": [
        21419,
        21482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        21419,
        21482
      ],
      "op": "POP",
      "path": "2"
    },
    "9608": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        21558,
        21562
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 78
    },
    "9609": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A4"
    },
    "9612": {
      "branch": 150,
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9613": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9615": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9622": {
      "op": "SHL"
    },
    "9623": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9627": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "ADD",
      "path": "2"
    },
    "9628": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "9631": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BEB"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21550,
        21587
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21550,
        21587
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21226,
        21633
      ],
      "op": "POP",
      "path": "2"
    },
    "9638": {
      "fn": "Governance.submitVerification",
      "offset": [
        21226,
        21633
      ],
      "op": "POP",
      "path": "2"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21226,
        21633
      ],
      "op": "POP",
      "path": "2"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        18125,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        18125,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9642": {
      "fn": "Governance.submitVerification",
      "offset": [
        18125,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9643": {
      "fn": "Governance.submitVerification",
      "offset": [
        18125,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9644": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9645": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9646": {
      "fn": "Governance.submitVerification",
      "offset": [
        18029,
        21649
      ],
      "op": "POP",
      "path": "2"
    },
    "9647": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        18029,
        21649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9648": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9649": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9651": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9658": {
      "op": "SHL"
    },
    "9659": {
      "op": "SUB"
    },
    "9660": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "9"
    },
    "9661": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9662": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "9"
    },
    "9663": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25DA"
    },
    "9666": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9667": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9669": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9670": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9676": {
      "op": "SHL"
    },
    "9677": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9678": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9679": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9681": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "9"
    },
    "9682": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC37"
    },
    "9685": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9686": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3772"
    },
    "9689": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9690": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9697": {
      "op": "SHL"
    },
    "9698": {
      "op": "SUB"
    },
    "9699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 79
    },
    "9700": {
      "branch": 157,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "9"
    },
    "9701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x263F"
    },
    "9704": {
      "branch": 157,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9714": {
      "op": "SHL"
    },
    "9715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "9721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "9"
    },
    "9723": {
      "op": "MSTORE"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9728": {
      "op": "DUP3"
    },
    "9729": {
      "op": "ADD"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9766": {
      "op": "DUP3"
    },
    "9767": {
      "op": "ADD"
    },
    "9768": {
      "op": "MSTORE"
    },
    "9769": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9776": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9778": {
      "op": "SHL"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9781": {
      "op": "DUP3"
    },
    "9782": {
      "op": "ADD"
    },
    "9783": {
      "op": "MSTORE"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9786": {
      "op": "ADD"
    },
    "9787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC37"
    },
    "9790": {
      "op": "JUMP"
    },
    "9791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 80,
      "value": "0x2648"
    },
    "9795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CCD"
    },
    "9799": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "9"
    },
    "9802": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9803": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9804": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6074,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9806": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9807": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2667"
    },
    "9810": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6144,
        6168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "9812": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9813": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9815": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9816": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9817": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9822": {
      "op": "SHL"
    },
    "9823": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9824": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9825": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "9826": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9827": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9828": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "9829": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9830": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9831": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6120,
        6169
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9832": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9833": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6090,
        6169
      ],
      "op": "POP",
      "path": "2"
    },
    "9834": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2671"
    },
    "9837": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E1C"
    },
    "9840": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9841": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6179,
        6197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9842": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6323,
        6332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9844": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9845": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6341,
        6360
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9846": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9847": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6337,
        6360
      ],
      "op": "LT",
      "path": "2"
    },
    "9848": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9849": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2810"
    },
    "9852": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9853": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6391
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x9"
    },
    "9855": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9857": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268B"
    },
    "9860": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6420,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "9862": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6445,
        6446
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9863": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ADD"
    },
    "9866": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9867": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6400,
        6447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9868": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9870": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6392,
        6448
      ],
      "op": "SHR",
      "path": "2"
    },
    "9871": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9872": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9873": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9875": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9876": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9877": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9878": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9879": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9881": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9882": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9884": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6386,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9885": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9887": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9888": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9889": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "9892": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9893": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9895": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9896": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9897": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9898": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9900": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9901": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9902": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9903": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9904": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26B8"
    },
    "9907": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9908": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "9911": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9912": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9913": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9914": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9916": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9917": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9919": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9920": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9921": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "9922": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "9923": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9925": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9926": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9928": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9929": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9930": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9931": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9932": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9934": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9935": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9936": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9937": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9938": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9939": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9940": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9941": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9942": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9944": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9945": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9946": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9947": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9948": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E4"
    },
    "9951": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9952": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36BB"
    },
    "9955": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9956": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9957": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9958": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9959": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2731"
    },
    "9962": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9963": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9964": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9966": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "LT",
      "path": "2"
    },
    "9967": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2706"
    },
    "9970": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9971": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9974": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9975": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9976": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9977": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "9978": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MUL",
      "path": "2"
    },
    "9979": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9980": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9981": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9982": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9984": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9985": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9986": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2731"
    },
    "9989": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9991": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9992": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "9993": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9994": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9995": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9997": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9998": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10000": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10002": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10003": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10004": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10005": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10006": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10007": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10008": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10009": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10010": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10012": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10013": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10014": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10016": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10017": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10018": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10019": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "GT",
      "path": "2"
    },
    "10020": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2714"
    },
    "10023": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10024": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10025": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10026": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SUB",
      "path": "2"
    },
    "10027": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10029": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10030": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10031": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10032": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10033": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10034": {
      "op": "POP"
    },
    "10035": {
      "op": "POP"
    },
    "10036": {
      "op": "POP"
    },
    "10037": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10038": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10039": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10040": {
      "op": "POP"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10044": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10045": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10046": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10047": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10053": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10054": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10055": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10056": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10058": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10059": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10060": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10061": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10063": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10064": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10065": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10066": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10068": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10069": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10070": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10071": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10073": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10074": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10075": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10076": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10078": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10079": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10080": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10081": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10083": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10084": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10085": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10086": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10087": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10089": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10090": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10091": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "10093": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10094": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10095": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10096": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10099": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10100": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10101": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10102": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10106": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10107": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "10109": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10110": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10111": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10116": {
      "op": "SHL"
    },
    "10117": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10118": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10125": {
      "op": "SHL"
    },
    "10126": {
      "op": "SUB"
    },
    "10127": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10128": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10130": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10131": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10132": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10137": {
      "op": "SHL"
    },
    "10138": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10139": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10140": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10143": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10144": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10145": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10146": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10148": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10149": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10150": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10155": {
      "op": "SHL"
    },
    "10156": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10157": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10158": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10159": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10160": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10161": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10162": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10167": {
      "op": "SHL"
    },
    "10168": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10169": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DIV",
      "path": "2"
    },
    "10170": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10171": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "10172": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10175": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10176": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10177": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "ADD",
      "path": "2"
    },
    "10178": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6377,
        6449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10179": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10180": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "ADD",
      "path": "2"
    },
    "10181": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10182": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10183": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6503
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10184": {
      "op": "POP"
    },
    "10185": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6506,
        6521
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "10186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "AND",
      "path": "2"
    },
    "10188": {
      "branch": 151,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6521
      ],
      "op": "LT",
      "path": "2"
    },
    "10189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10190": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10191": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E3"
    },
    "10194": {
      "branch": 151,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10195": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "POP",
      "path": "2"
    },
    "10196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6541,
        6547
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10198": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10200": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "ADD",
      "path": "2"
    },
    "10201": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6537
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10202": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10208": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "AND",
      "path": "2"
    },
    "10209": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "EQ",
      "path": "2"
    },
    "10210": {
      "branch": 152,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6525,
        6547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10211": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10213": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10214": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F8"
    },
    "10217": {
      "branch": 152,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "POP",
      "path": "2"
    },
    "10219": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6570,
        6576
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6557
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10221": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10224": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "ADD",
      "path": "2"
    },
    "10225": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6567
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10226": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10229": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "AND",
      "path": "2"
    },
    "10230": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "EQ",
      "path": "2"
    },
    "10231": {
      "branch": 153,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6551,
        6576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10232": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6467,
        6576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10233": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10234": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2808"
    },
    "10237": {
      "branch": 153,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10238": {
      "op": "POP"
    },
    "10239": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0x1"
    },
    "10241": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6602,
        6606
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10242": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10243": {
      "op": "POP"
    },
    "10244": {
      "op": "POP"
    },
    "10245": {
      "op": "POP"
    },
    "10246": {
      "op": "POP"
    },
    "10247": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10248": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6463,
        6621
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10249": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x1"
    },
    "10251": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6644,
        6647
      ],
      "op": "ADD",
      "path": "2"
    },
    "10252": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2674"
    },
    "10255": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10256": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6319,
        6659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10257": {
      "op": "POP"
    },
    "10258": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x0"
    },
    "10260": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6675,
        6680
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10261": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5999,
        6687
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "op": "POP"
    },
    "10264": {
      "op": "POP"
    },
    "10265": {
      "op": "POP"
    },
    "10266": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5999,
        6687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10267": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10268": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10051,
        10060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10270": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10271": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10066,
        10075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10273": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10066,
        10082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10274": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10064,
        10082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10275": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10064,
        10082
      ],
      "op": "LT",
      "path": "2"
    },
    "10276": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10277": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29B4"
    },
    "10280": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10281": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10182,
        10191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10282": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10284": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10285": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10287": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "ADD",
      "path": "2"
    },
    "10288": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2839"
    },
    "10291": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10292": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10293": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C19"
    },
    "10296": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10165,
        10192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10297": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10298": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10300": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10301": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10303": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10304": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10305": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "SUB",
      "path": "2"
    },
    "10306": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "SUB",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10308": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10309": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10310": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10312": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10165,
        10192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10313": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10314": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10315": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10316": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10318": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "ADD",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10155,
        10193
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10320": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10137
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10322": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10138,
        10139
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10323": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10324": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10325": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10326": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "LT",
      "path": "2"
    },
    "10327": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2862"
    },
    "10330": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10331": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2862"
    },
    "10334": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10337": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10128,
        10140
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10338": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10340": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10347": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10348": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "MUL",
      "path": "2"
    },
    "10352": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10140
      ],
      "op": "ADD",
      "path": "2"
    },
    "10353": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10128,
        10149
      ],
      "op": "ADD",
      "path": "2"
    },
    "10356": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10359": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "ADD",
      "path": "2"
    },
    "10362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2883"
    },
    "10365": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10366": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C35"
    },
    "10370": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10111,
        10150
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10371": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10374": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10375": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10377": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10379": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "SUB",
      "path": "2"
    },
    "10380": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "SUB",
      "path": "2"
    },
    "10381": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10382": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10383": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10384": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10386": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10111,
        10150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10387": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10388": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10389": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10390": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10392": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "ADD",
      "path": "2"
    },
    "10393": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10151
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10394": {
      "branch": 154,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10101,
        10193
      ],
      "op": "SUB",
      "path": "2"
    },
    "10395": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10098,
        11146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29AC"
    },
    "10398": {
      "branch": 154,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10098,
        11146
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10399": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10276,
        10303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10401": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10403": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10316,
        10317
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10404": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10405": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10406": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10407": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "LT",
      "path": "2"
    },
    "10408": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B3"
    },
    "10411": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10412": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B3"
    },
    "10415": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10418": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10306,
        10318
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10419": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10420": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10421": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10423": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10424": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10426": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10428": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10429": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10430": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10432": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "MUL",
      "path": "2"
    },
    "10433": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10306,
        10318
      ],
      "op": "ADD",
      "path": "2"
    },
    "10434": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10276,
        10318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10435": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10276,
        10318
      ],
      "op": "POP",
      "path": "2"
    },
    "10436": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10336,
        10370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10438": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10440": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10400,
        10401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10442": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10444": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10445": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10399
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10446": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10447": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10399
      ],
      "op": "POP",
      "path": "2"
    },
    "10448": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D9"
    },
    "10451": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10452": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10453": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A9"
    },
    "10456": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10383,
        10401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10457": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10383,
        10401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10458": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10459": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10460": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10461": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "LT",
      "path": "2"
    },
    "10462": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E9"
    },
    "10465": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10466": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E9"
    },
    "10469": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10472": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10373,
        10402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10473": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10474": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10475": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10477": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10478": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10480": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10482": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10483": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10484": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10486": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "MUL",
      "path": "2"
    },
    "10487": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10373,
        10402
      ],
      "op": "ADD",
      "path": "2"
    },
    "10488": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10336,
        10402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10489": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10336,
        10402
      ],
      "op": "POP",
      "path": "2"
    },
    "10490": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10531,
        10548
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 85
    },
    "10491": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10518,
        10548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10492": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10518,
        10548
      ],
      "op": "POP",
      "path": "2"
    },
    "10493": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10582
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x4"
    },
    "10495": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        10601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10497": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10499": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10500": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10599
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10501": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10502": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10599
      ],
      "op": "POP",
      "path": "2"
    },
    "10503": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10601
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2910"
    },
    "10506": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10507": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10508": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10601
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A9"
    },
    "10511": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10583,
        10601
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10512": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10583,
        10601
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10513": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10514": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10515": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10516": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "LT",
      "path": "2"
    },
    "10517": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2920"
    },
    "10520": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10521": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2920"
    },
    "10524": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10527": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10573,
        10602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10528": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10529": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10530": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10532": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10533": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10535": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10537": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10538": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10539": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10541": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "MUL",
      "path": "2"
    },
    "10542": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "ADD",
      "path": "2"
    },
    "10543": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10573,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10545": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10547": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10548": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "ADD",
      "path": "2"
    },
    "10549": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10551": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2940"
    },
    "10554": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10555": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10556": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E70"
    },
    "10559": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10566,
        10602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10560": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10561": {
      "op": "POP"
    },
    "10562": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10564": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "ADD",
      "path": "2"
    },
    "10565": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10566": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10573": {
      "op": "SHL"
    },
    "10574": {
      "op": "SUB"
    },
    "10575": {
      "op": "NOT"
    },
    "10576": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "AND",
      "path": "2"
    },
    "10577": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10578": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10579": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x4"
    },
    "10581": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11105
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10582": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11105
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10583": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2962"
    },
    "10586": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10589": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10566,
        10602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10590": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A9"
    },
    "10593": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11089,
        11107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10594": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11089,
        11107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10595": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10596": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10597": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10598": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "LT",
      "path": "2"
    },
    "10599": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2972"
    },
    "10602": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10603": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2972"
    },
    "10606": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10609": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11079,
        11108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10610": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10611": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10612": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10614": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10615": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10617": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10619": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10620": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10621": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10623": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "MUL",
      "path": "2"
    },
    "10624": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "ADD",
      "path": "2"
    },
    "10625": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11079,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10627": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10629": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10630": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "ADD",
      "path": "2"
    },
    "10631": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10633": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2992"
    },
    "10636": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10637": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10638": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E70"
    },
    "10641": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11072,
        11108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10642": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10643": {
      "op": "POP"
    },
    "10644": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10646": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "ADD",
      "path": "2"
    },
    "10647": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10648": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "10655": {
      "op": "SHL"
    },
    "10656": {
      "op": "SUB"
    },
    "10657": {
      "op": "NOT"
    },
    "10658": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "AND",
      "path": "2"
    },
    "10659": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10660": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11072,
        11108
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10661": {
      "op": "POP"
    },
    "10662": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11126,
        11131
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 88,
      "value": "0x29B4"
    },
    "10665": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11126,
        11131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11126,
        11131
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10668": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10098,
        11146
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10669": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11169,
        11172
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x1"
    },
    "10671": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11169,
        11172
      ],
      "op": "ADD",
      "path": "2"
    },
    "10672": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281E"
    },
    "10675": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10676": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10677": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10047,
        11184
      ],
      "op": "POP",
      "path": "2"
    },
    "10678": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9969,
        11190
      ],
      "op": "POP",
      "path": "2"
    },
    "10679": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        9969,
        11190
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10680": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10681": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10683": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x8"
    },
    "10685": {
      "fn": "Governance.getVotes",
      "offset": [
        4697,
        4711
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10686": {
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4694
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10687": {
      "branch": 155,
      "fn": "Governance.getVotes",
      "offset": [
        4684,
        4711
      ],
      "op": "LT",
      "path": "2"
    },
    "10688": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29FE"
    },
    "10691": {
      "branch": 155,
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10692": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10694": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10701": {
      "op": "SHL"
    },
    "10702": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10703": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10706": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10708": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10709": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "ADD",
      "path": "2"
    },
    "10710": {
      "op": "MSTORE"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10715": {
      "op": "DUP3"
    },
    "10716": {
      "op": "ADD"
    },
    "10717": {
      "op": "MSTORE"
    },
    "10718": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "10737": {
      "op": "SHL"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10740": {
      "op": "DUP3"
    },
    "10741": {
      "op": "ADD"
    },
    "10742": {
      "op": "MSTORE"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10745": {
      "op": "ADD"
    },
    "10746": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "10749": {
      "op": "JUMP"
    },
    "10750": {
      "fn": "Governance.getVotes",
      "offset": [
        4676,
        4732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10751": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10753": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10754": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10755": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10756": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10758": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10760": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10761": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10763": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10764": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4804
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10765": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10767": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "ADD",
      "path": "2"
    },
    "10768": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10769": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10772": {
      "fn": "Governance.getVotes",
      "offset": [
        4783,
        4820
      ],
      "op": "AND",
      "path": "2"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10779": {
      "op": "SHL"
    },
    "10780": {
      "op": "SUB"
    },
    "10781": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10782": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "GT",
      "path": "2"
    },
    "10783": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10784": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2B"
    },
    "10787": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10788": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2B"
    },
    "10791": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6F"
    },
    "10794": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10795": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10796": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10798": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10799": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10800": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10801": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10802": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10803": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10804": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10806": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10807": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10809": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10810": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10811": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10812": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10814": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10815": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10816": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10817": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A54"
    },
    "10820": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10821": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10822": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10824": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10825": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10827": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10828": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "MUL",
      "path": "2"
    },
    "10829": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10830": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "10831": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10832": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "10833": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "ADD",
      "path": "2"
    },
    "10834": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10835": {
      "op": "POP"
    },
    "10836": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10837": {
      "fn": "Governance.getVotes",
      "offset": [
        4770,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10838": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10839": {
      "fn": "Governance.getVotes",
      "offset": [
        4742,
        4821
      ],
      "op": "POP",
      "path": "2"
    },
    "10840": {
      "fn": "Governance.getVotes",
      "offset": [
        4835,
        4844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10842": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10843": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4862
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10844": {
      "fn": "Governance.getVotes",
      "offset": [
        4853,
        4869
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10845": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10846": {
      "fn": "Governance.getVotes",
      "offset": [
        4850,
        4869
      ],
      "op": "LT",
      "path": "2"
    },
    "10847": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10848": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD6"
    },
    "10851": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10852": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 91,
      "value": "0x0"
    },
    "10854": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10855": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10856": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10857": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10859": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10861": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10862": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10864": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10865": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4925
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10866": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10868": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4931
      ],
      "op": "ADD",
      "path": "2"
    },
    "10869": {
      "fn": "Governance.getVotes",
      "offset": [
        4932,
        4933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10870": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "10872": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10873": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "LT",
      "path": "2"
    },
    "10874": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A85"
    },
    "10877": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10878": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A85"
    },
    "10881": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10884": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10885": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10886": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "10888": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10889": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10890": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10891": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "10892": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "ADD",
      "path": "2"
    },
    "10893": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10894": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10895": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MOD",
      "path": "2"
    },
    "10896": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10898": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "MUL",
      "path": "2"
    },
    "10899": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10900": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10901": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10902": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10905": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "EXP",
      "path": "2"
    },
    "10906": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10907": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "DIV",
      "path": "2"
    },
    "10908": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10911": {
      "fn": "Governance.getVotes",
      "offset": [
        4904,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "10912": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10913": {
      "fn": "Governance.getVotes",
      "offset": [
        4899,
        4900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10914": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10915": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10916": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10917": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "LT",
      "path": "2"
    },
    "10918": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB1"
    },
    "10921": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10922": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB1"
    },
    "10925": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "10928": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10929": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10930": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10933": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10934": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10935": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "AND",
      "path": "2"
    },
    "10936": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10938": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10939": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10940": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "MUL",
      "path": "2"
    },
    "10941": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10942": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10943": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10944": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "10945": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10946": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10947": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4901
      ],
      "op": "ADD",
      "path": "2"
    },
    "10948": {
      "fn": "Governance.getVotes",
      "offset": [
        4889,
        4934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10949": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 92
    },
    "10950": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ACE"
    },
    "10953": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10954": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39F7"
    },
    "10957": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10958": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10959": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10960": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "10961": {
      "fn": "Governance.getVotes",
      "offset": [
        4871,
        4874
      ],
      "op": "POP",
      "path": "2"
    },
    "10962": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A5A"
    },
    "10965": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10966": {
      "fn": "Governance.getVotes",
      "offset": [
        4831,
        4945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10967": {
      "op": "POP"
    },
    "10968": {
      "fn": "Governance.getVotes",
      "offset": [
        4961,
        4970
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 93
    },
    "10969": {
      "fn": "Governance.getVotes",
      "offset": [
        4588,
        4977
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10970": {
      "op": "POP"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4588,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10973": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10974": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10976": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10977": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B00"
    },
    "10980": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AEC"
    },
    "10983": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10984": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1F"
    },
    "10987": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10988": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10989": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10990": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10991": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AFB"
    },
    "10994": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10995": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10996": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "10998": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10999": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CA7"
    },
    "11002": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11003": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11004": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D8D"
    },
    "11007": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11008": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11009": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 94
    },
    "11010": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11011": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11012": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11013": {
      "op": "POP"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11018": {
      "op": "SHL"
    },
    "11019": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11020": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "11021": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11023": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11024": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11025": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11026": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11027": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11028": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11029": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11030": {
      "branch": 156,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "11031": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B33"
    },
    "11034": {
      "branch": 156,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11035": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11037": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11038": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "11043": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "11045": {
      "op": "SHL"
    },
    "11046": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11047": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11048": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11050": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "11051": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11053": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11054": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11055": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11056": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "11057": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11058": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "11059": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11060": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 95,
      "value": "0xF"
    },
    "11062": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11063": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11065": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11066": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11067": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11068": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11070": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11071": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11072": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11073": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "11074": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11076": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11077": {
      "op": "POP"
    },
    "11078": {
      "op": "POP"
    },
    "11079": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11081": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11082": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11083": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11084": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11085": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11086": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11087": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11089": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11090": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11091": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x1"
    },
    "11093": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11094": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "ADD",
      "path": "2"
    },
    "11095": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11096": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11097": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11098": {
      "fn": "Governance._createTaskType",
      "offset": [
        13671,
        13694
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11100": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11101": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11102": {
      "fn": "Governance._createTaskType",
      "offset": [
        13723,
        13739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11103": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11104": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11105": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13706
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11106": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11107": {
      "fn": "Governance._createTaskType",
      "offset": [
        13697,
        13713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11108": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11109": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "LT",
      "path": "2"
    },
    "11110": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B71"
    },
    "11113": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11114": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B71"
    },
    "11117": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F5"
    },
    "11120": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        13780,
        13806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11121": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11122": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11124": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11125": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11126": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11127": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11129": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11130": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11131": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11132": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11134": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11135": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11136": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "MUL",
      "path": "2"
    },
    "11137": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "ADD",
      "path": "2"
    },
    "11138": {
      "fn": "Governance._createTaskType",
      "offset": [
        13780,
        13806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11139": {
      "op": "POP"
    },
    "11140": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13840
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x1"
    },
    "11142": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11143": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13840
      ],
      "op": "ADD",
      "path": "2"
    },
    "11144": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B92"
    },
    "11147": {
      "fn": "Governance._createTaskType",
      "offset": [
        13842,
        13851
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11148": {
      "fn": "Governance._createTaskType",
      "offset": [
        13842,
        13851
      ],
      "op": "DUP13",
      "path": "2"
    },
    "11149": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13840
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11150": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A2D"
    },
    "11153": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        13820,
        13851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11154": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11155": {
      "fn": "Governance._createTaskType",
      "offset": [
        13820,
        13851
      ],
      "op": "POP",
      "path": "2"
    },
    "11156": {
      "fn": "Governance._createTaskType",
      "offset": [
        13886,
        13891
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 98,
      "value": "0x0"
    },
    "11158": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13876
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11159": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11161": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13883
      ],
      "op": "ADD",
      "path": "2"
    },
    "11162": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11164": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11167": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "EXP",
      "path": "2"
    },
    "11168": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11169": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11170": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11171": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11173": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "MUL",
      "path": "2"
    },
    "11174": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "NOT",
      "path": "2"
    },
    "11175": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "AND",
      "path": "2"
    },
    "11176": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11177": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11178": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11179": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11180": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "MUL",
      "path": "2"
    },
    "11181": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "OR",
      "path": "2"
    },
    "11182": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11183": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11184": {
      "fn": "Governance._createTaskType",
      "offset": [
        13865,
        13891
      ],
      "op": "POP",
      "path": "2"
    },
    "11185": {
      "fn": "Governance._createTaskType",
      "offset": [
        13930,
        13941
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 99
    },
    "11186": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13916
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11187": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11189": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13927
      ],
      "op": "ADD",
      "path": "2"
    },
    "11190": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11192": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11195": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "EXP",
      "path": "2"
    },
    "11196": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11197": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11198": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11199": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11205": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "MUL",
      "path": "2"
    },
    "11206": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "NOT",
      "path": "2"
    },
    "11207": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "AND",
      "path": "2"
    },
    "11208": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11209": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11210": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11216": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "AND",
      "path": "2"
    },
    "11217": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "MUL",
      "path": "2"
    },
    "11218": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "OR",
      "path": "2"
    },
    "11219": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11220": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11221": {
      "fn": "Governance._createTaskType",
      "offset": [
        13905,
        13941
      ],
      "op": "POP",
      "path": "2"
    },
    "11222": {
      "fn": "Governance._createTaskType",
      "offset": [
        13985,
        14001
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 100
    },
    "11223": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        13966
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11224": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        13982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11226": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        13982
      ],
      "op": "ADD",
      "path": "2"
    },
    "11227": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        13982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11229": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11232": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "EXP",
      "path": "2"
    },
    "11233": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11234": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11235": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11236": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11238": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "MUL",
      "path": "2"
    },
    "11239": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "NOT",
      "path": "2"
    },
    "11240": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "AND",
      "path": "2"
    },
    "11241": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11242": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11243": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11245": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "AND",
      "path": "2"
    },
    "11246": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "MUL",
      "path": "2"
    },
    "11247": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "OR",
      "path": "2"
    },
    "11248": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11249": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11250": {
      "fn": "Governance._createTaskType",
      "offset": [
        13955,
        14001
      ],
      "op": "POP",
      "path": "2"
    },
    "11251": {
      "fn": "Governance._createTaskType",
      "offset": [
        14039,
        14049
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 101
    },
    "11252": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14026
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11253": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11255": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14036
      ],
      "op": "ADD",
      "path": "2"
    },
    "11256": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11258": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11261": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "EXP",
      "path": "2"
    },
    "11262": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11263": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11264": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11265": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11269": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "MUL",
      "path": "2"
    },
    "11270": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "NOT",
      "path": "2"
    },
    "11271": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "AND",
      "path": "2"
    },
    "11272": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11273": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11274": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11278": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "AND",
      "path": "2"
    },
    "11279": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "MUL",
      "path": "2"
    },
    "11280": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "OR",
      "path": "2"
    },
    "11281": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11282": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11283": {
      "fn": "Governance._createTaskType",
      "offset": [
        14015,
        14049
      ],
      "op": "POP",
      "path": "2"
    },
    "11284": {
      "fn": "Governance._createTaskType",
      "offset": [
        14090,
        14103
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 102
    },
    "11285": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14074
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11286": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11288": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14087
      ],
      "op": "ADD",
      "path": "2"
    },
    "11289": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "11291": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11294": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "EXP",
      "path": "2"
    },
    "11295": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11296": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11297": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11298": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11304": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "MUL",
      "path": "2"
    },
    "11305": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "NOT",
      "path": "2"
    },
    "11306": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "AND",
      "path": "2"
    },
    "11307": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11308": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11309": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11315": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "AND",
      "path": "2"
    },
    "11316": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "MUL",
      "path": "2"
    },
    "11317": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "OR",
      "path": "2"
    },
    "11318": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11319": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11320": {
      "fn": "Governance._createTaskType",
      "offset": [
        14063,
        14103
      ],
      "op": "POP",
      "path": "2"
    },
    "11321": {
      "fn": "Governance._createTaskType",
      "offset": [
        14144,
        14157
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 103
    },
    "11322": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14128
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11323": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14141
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11325": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14141
      ],
      "op": "ADD",
      "path": "2"
    },
    "11326": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14141
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11328": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11331": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "EXP",
      "path": "2"
    },
    "11332": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11333": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11334": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11335": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11341": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "MUL",
      "path": "2"
    },
    "11342": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "NOT",
      "path": "2"
    },
    "11343": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "AND",
      "path": "2"
    },
    "11344": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11345": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11346": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11352": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "AND",
      "path": "2"
    },
    "11353": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "MUL",
      "path": "2"
    },
    "11354": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "OR",
      "path": "2"
    },
    "11355": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11356": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11357": {
      "fn": "Governance._createTaskType",
      "offset": [
        14117,
        14157
      ],
      "op": "POP",
      "path": "2"
    },
    "11358": {
      "fn": "Governance._createTaskType",
      "offset": [
        14200,
        14215
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 104
    },
    "11359": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11360": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11362": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14197
      ],
      "op": "ADD",
      "path": "2"
    },
    "11363": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "11365": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11368": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "EXP",
      "path": "2"
    },
    "11369": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11370": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11371": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11372": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11375": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "MUL",
      "path": "2"
    },
    "11376": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "NOT",
      "path": "2"
    },
    "11377": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "AND",
      "path": "2"
    },
    "11378": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11379": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11380": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11383": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "AND",
      "path": "2"
    },
    "11384": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "MUL",
      "path": "2"
    },
    "11385": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "OR",
      "path": "2"
    },
    "11386": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11387": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11388": {
      "fn": "Governance._createTaskType",
      "offset": [
        14171,
        14215
      ],
      "op": "POP",
      "path": "2"
    },
    "11389": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 105,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "11422": {
      "fn": "Governance._createTaskType",
      "offset": [
        14280,
        14289
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11423": {
      "fn": "Governance._createTaskType",
      "offset": [
        14280,
        14289
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11424": {
      "fn": "Governance._createTaskType",
      "offset": [
        14291,
        14302
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11425": {
      "fn": "Governance._createTaskType",
      "offset": [
        14304,
        14320
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11426": {
      "fn": "Governance._createTaskType",
      "offset": [
        14322,
        14332
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11427": {
      "fn": "Governance._createTaskType",
      "offset": [
        14334,
        14347
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11428": {
      "fn": "Governance._createTaskType",
      "offset": [
        14349,
        14362
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11429": {
      "fn": "Governance._createTaskType",
      "offset": [
        14364,
        14379
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11430": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11432": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11433": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB9"
    },
    "11436": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "11437": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "11438": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "11439": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "11440": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11441": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11442": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11443": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11444": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11445": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CE8"
    },
    "11448": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14261,
        14380
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11449": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11450": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11452": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11453": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11454": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11455": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SUB",
      "path": "2"
    },
    "11456": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11457": {
      "fn": "Governance._createTaskType",
      "offset": [
        14261,
        14380
      ],
      "op": "LOG1",
      "path": "2"
    },
    "11458": {
      "fn": "Governance._createTaskType",
      "offset": [
        13661,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11459": {
      "fn": "Governance._createTaskType",
      "offset": [
        13661,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11460": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11461": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11462": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11463": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11464": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11465": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11466": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11467": {
      "fn": "Governance._createTaskType",
      "offset": [
        13456,
        14387
      ],
      "op": "POP",
      "path": "2"
    },
    "11468": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        13456,
        14387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11469": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "11470": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "11472": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "9"
    },
    "11473": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11480": {
      "op": "SHL"
    },
    "11481": {
      "op": "SUB"
    },
    "11482": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 106
    },
    "11483": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11484": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11491": {
      "op": "SHL"
    },
    "11492": {
      "op": "SUB"
    },
    "11493": {
      "op": "NOT"
    },
    "11494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "9"
    },
    "11495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "9"
    },
    "11496": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "9"
    },
    "11497": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "9"
    },
    "11498": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11499": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "11500": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "11501": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 107,
      "value": "0x40"
    },
    "11503": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "11504": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11505": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "9"
    },
    "11506": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "11507": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11508": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "9"
    },
    "11509": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11510": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11543": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11544": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "11546": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11547": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "9"
    },
    "11548": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11549": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "9"
    },
    "11550": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "9"
    },
    "11551": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11552": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11558": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11560": {
      "op": "SHL"
    },
    "11561": {
      "op": "SUB"
    },
    "11562": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 108
    },
    "11563": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "11564": {
      "branch": 158,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11565": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D89"
    },
    "11568": {
      "branch": 158,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11569": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11571": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11578": {
      "op": "SHL"
    },
    "11579": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11580": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11583": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11585": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11586": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "11587": {
      "op": "MSTORE"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11592": {
      "op": "DUP3"
    },
    "11593": {
      "op": "ADD"
    },
    "11594": {
      "op": "MSTORE"
    },
    "11595": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11630": {
      "op": "DUP3"
    },
    "11631": {
      "op": "ADD"
    },
    "11632": {
      "op": "MSTORE"
    },
    "11633": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11644": {
      "op": "SHL"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11647": {
      "op": "DUP3"
    },
    "11648": {
      "op": "ADD"
    },
    "11649": {
      "op": "MSTORE"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11652": {
      "op": "ADD"
    },
    "11653": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC37"
    },
    "11656": {
      "op": "JUMP"
    },
    "11657": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11658": {
      "op": "POP"
    },
    "11659": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 109
    },
    "11660": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11661": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11662": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11664": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11681": {
      "op": "NOT"
    },
    "11682": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 110
    },
    "11683": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "11684": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11685": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11686": {
      "branch": 159,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11687": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC0"
    },
    "11690": {
      "branch": 159,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11691": {
      "op": "POP"
    },
    "11692": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "11709": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11710": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "11711": {
      "branch": 160,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11712": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11713": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D89"
    },
    "11716": {
      "branch": 160,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11717": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11719": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11726": {
      "op": "SHL"
    },
    "11727": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11728": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11731": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11733": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11734": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "11735": {
      "op": "MSTORE"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11740": {
      "op": "DUP3"
    },
    "11741": {
      "op": "ADD"
    },
    "11742": {
      "op": "MSTORE"
    },
    "11743": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "11776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11778": {
      "op": "DUP3"
    },
    "11779": {
      "op": "ADD"
    },
    "11780": {
      "op": "MSTORE"
    },
    "11781": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "11789": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11791": {
      "op": "SHL"
    },
    "11792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11794": {
      "op": "DUP3"
    },
    "11795": {
      "op": "ADD"
    },
    "11796": {
      "op": "MSTORE"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11799": {
      "op": "ADD"
    },
    "11800": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC37"
    },
    "11803": {
      "op": "JUMP"
    },
    "11804": {
      "op": "JUMPDEST"
    },
    "11805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11807": {
      "op": "DUP1"
    },
    "11808": {
      "op": "MLOAD"
    },
    "11809": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11812": {
      "op": "DUP2"
    },
    "11813": {
      "op": "ADD"
    },
    "11814": {
      "op": "DUP3"
    },
    "11815": {
      "op": "MSTORE"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11818": {
      "op": "DUP1"
    },
    "11819": {
      "op": "DUP3"
    },
    "11820": {
      "op": "MSTORE"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11825": {
      "op": "DUP4"
    },
    "11826": {
      "op": "ADD"
    },
    "11827": {
      "op": "DUP2"
    },
    "11828": {
      "op": "SWAP1"
    },
    "11829": {
      "op": "MSTORE"
    },
    "11830": {
      "op": "SWAP3"
    },
    "11831": {
      "op": "DUP3"
    },
    "11832": {
      "op": "ADD"
    },
    "11833": {
      "op": "DUP4"
    },
    "11834": {
      "op": "SWAP1"
    },
    "11835": {
      "op": "MSTORE"
    },
    "11836": {
      "op": "DUP2"
    },
    "11837": {
      "op": "ADD"
    },
    "11838": {
      "op": "DUP3"
    },
    "11839": {
      "op": "SWAP1"
    },
    "11840": {
      "op": "MSTORE"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11843": {
      "op": "DUP2"
    },
    "11844": {
      "op": "ADD"
    },
    "11845": {
      "op": "DUP3"
    },
    "11846": {
      "op": "SWAP1"
    },
    "11847": {
      "op": "MSTORE"
    },
    "11848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11850": {
      "op": "DUP2"
    },
    "11851": {
      "op": "ADD"
    },
    "11852": {
      "op": "DUP3"
    },
    "11853": {
      "op": "SWAP1"
    },
    "11854": {
      "op": "MSTORE"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11857": {
      "op": "DUP2"
    },
    "11858": {
      "op": "ADD"
    },
    "11859": {
      "op": "DUP3"
    },
    "11860": {
      "op": "SWAP1"
    },
    "11861": {
      "op": "MSTORE"
    },
    "11862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11864": {
      "op": "DUP2"
    },
    "11865": {
      "op": "ADD"
    },
    "11866": {
      "op": "DUP3"
    },
    "11867": {
      "op": "SWAP1"
    },
    "11868": {
      "op": "MSTORE"
    },
    "11869": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11872": {
      "op": "DUP2"
    },
    "11873": {
      "op": "ADD"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "SWAP1"
    },
    "11876": {
      "op": "MSTORE"
    },
    "11877": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11880": {
      "op": "DUP2"
    },
    "11881": {
      "op": "ADD"
    },
    "11882": {
      "op": "SWAP2"
    },
    "11883": {
      "op": "SWAP1"
    },
    "11884": {
      "op": "SWAP2"
    },
    "11885": {
      "op": "MSTORE"
    },
    "11886": {
      "op": "SWAP1"
    },
    "11887": {
      "jump": "o",
      "op": "JUMP"
    },
    "11888": {
      "op": "JUMPDEST"
    },
    "11889": {
      "op": "POP"
    },
    "11890": {
      "op": "DUP1"
    },
    "11891": {
      "op": "SLOAD"
    },
    "11892": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11895": {
      "op": "SWAP1"
    },
    "11896": {
      "op": "PUSH2",
      "value": "0x36BB"
    },
    "11899": {
      "jump": "i",
      "op": "JUMP"
    },
    "11900": {
      "op": "JUMPDEST"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11903": {
      "op": "DUP3"
    },
    "11904": {
      "op": "SSTORE"
    },
    "11905": {
      "op": "DUP1"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11908": {
      "op": "LT"
    },
    "11909": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "11912": {
      "op": "JUMPI"
    },
    "11913": {
      "op": "POP"
    },
    "11914": {
      "op": "POP"
    },
    "11915": {
      "jump": "o",
      "op": "JUMP"
    },
    "11916": {
      "op": "JUMPDEST"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11919": {
      "op": "ADD"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11922": {
      "op": "SWAP1"
    },
    "11923": {
      "op": "DIV"
    },
    "11924": {
      "op": "SWAP1"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11927": {
      "op": "MSTORE"
    },
    "11928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11932": {
      "op": "KECCAK256"
    },
    "11933": {
      "op": "SWAP1"
    },
    "11934": {
      "op": "DUP2"
    },
    "11935": {
      "op": "ADD"
    },
    "11936": {
      "op": "SWAP1"
    },
    "11937": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "11940": {
      "op": "SWAP2"
    },
    "11941": {
      "op": "SWAP1"
    },
    "11942": {
      "op": "JUMPDEST"
    },
    "11943": {
      "op": "DUP1"
    },
    "11944": {
      "op": "DUP3"
    },
    "11945": {
      "op": "GT"
    },
    "11946": {
      "op": "ISZERO"
    },
    "11947": {
      "op": "PUSH2",
      "value": "0x2D89"
    },
    "11950": {
      "op": "JUMPI"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11953": {
      "op": "DUP2"
    },
    "11954": {
      "op": "SSTORE"
    },
    "11955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11957": {
      "op": "ADD"
    },
    "11958": {
      "op": "PUSH2",
      "value": "0x2EA6"
    },
    "11961": {
      "op": "JUMP"
    },
    "11962": {
      "op": "JUMPDEST"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11967": {
      "op": "DUP3"
    },
    "11968": {
      "op": "DUP5"
    },
    "11969": {
      "op": "SUB"
    },
    "11970": {
      "op": "SLT"
    },
    "11971": {
      "op": "ISZERO"
    },
    "11972": {
      "op": "PUSH2",
      "value": "0x2ECC"
    },
    "11975": {
      "op": "JUMPI"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11978": {
      "op": "DUP1"
    },
    "11979": {
      "op": "REVERT"
    },
    "11980": {
      "op": "JUMPDEST"
    },
    "11981": {
      "op": "POP"
    },
    "11982": {
      "op": "CALLDATALOAD"
    },
    "11983": {
      "op": "SWAP2"
    },
    "11984": {
      "op": "SWAP1"
    },
    "11985": {
      "op": "POP"
    },
    "11986": {
      "jump": "o",
      "op": "JUMP"
    },
    "11987": {
      "op": "JUMPDEST"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11990": {
      "op": "JUMPDEST"
    },
    "11991": {
      "op": "DUP4"
    },
    "11992": {
      "op": "DUP2"
    },
    "11993": {
      "op": "LT"
    },
    "11994": {
      "op": "ISZERO"
    },
    "11995": {
      "op": "PUSH2",
      "value": "0x2EEE"
    },
    "11998": {
      "op": "JUMPI"
    },
    "11999": {
      "op": "DUP2"
    },
    "12000": {
      "op": "DUP2"
    },
    "12001": {
      "op": "ADD"
    },
    "12002": {
      "op": "MLOAD"
    },
    "12003": {
      "op": "DUP4"
    },
    "12004": {
      "op": "DUP3"
    },
    "12005": {
      "op": "ADD"
    },
    "12006": {
      "op": "MSTORE"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12009": {
      "op": "ADD"
    },
    "12010": {
      "op": "PUSH2",
      "value": "0x2ED6"
    },
    "12013": {
      "op": "JUMP"
    },
    "12014": {
      "op": "JUMPDEST"
    },
    "12015": {
      "op": "DUP4"
    },
    "12016": {
      "op": "DUP2"
    },
    "12017": {
      "op": "GT"
    },
    "12018": {
      "op": "ISZERO"
    },
    "12019": {
      "op": "PUSH2",
      "value": "0x115A"
    },
    "12022": {
      "op": "JUMPI"
    },
    "12023": {
      "op": "POP"
    },
    "12024": {
      "op": "POP"
    },
    "12025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12027": {
      "op": "SWAP2"
    },
    "12028": {
      "op": "ADD"
    },
    "12029": {
      "op": "MSTORE"
    },
    "12030": {
      "jump": "o",
      "op": "JUMP"
    },
    "12031": {
      "op": "JUMPDEST"
    },
    "12032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12034": {
      "op": "DUP2"
    },
    "12035": {
      "op": "MLOAD"
    },
    "12036": {
      "op": "DUP1"
    },
    "12037": {
      "op": "DUP5"
    },
    "12038": {
      "op": "MSTORE"
    },
    "12039": {
      "op": "PUSH2",
      "value": "0x2F17"
    },
    "12042": {
      "op": "DUP2"
    },
    "12043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12045": {
      "op": "DUP7"
    },
    "12046": {
      "op": "ADD"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12049": {
      "op": "DUP7"
    },
    "12050": {
      "op": "ADD"
    },
    "12051": {
      "op": "PUSH2",
      "value": "0x2ED3"
    },
    "12054": {
      "jump": "i",
      "op": "JUMP"
    },
    "12055": {
      "op": "JUMPDEST"
    },
    "12056": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12058": {
      "op": "ADD"
    },
    "12059": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12061": {
      "op": "NOT"
    },
    "12062": {
      "op": "AND"
    },
    "12063": {
      "op": "SWAP3"
    },
    "12064": {
      "op": "SWAP1"
    },
    "12065": {
      "op": "SWAP3"
    },
    "12066": {
      "op": "ADD"
    },
    "12067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12069": {
      "op": "ADD"
    },
    "12070": {
      "op": "SWAP3"
    },
    "12071": {
      "op": "SWAP2"
    },
    "12072": {
      "op": "POP"
    },
    "12073": {
      "op": "POP"
    },
    "12074": {
      "jump": "o",
      "op": "JUMP"
    },
    "12075": {
      "op": "JUMPDEST"
    },
    "12076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12078": {
      "op": "DUP2"
    },
    "12079": {
      "op": "MSTORE"
    },
    "12080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12082": {
      "op": "PUSH2",
      "value": "0x2F3E"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12087": {
      "op": "DUP4"
    },
    "12088": {
      "op": "ADD"
    },
    "12089": {
      "op": "DUP9"
    },
    "12090": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "12093": {
      "jump": "i",
      "op": "JUMP"
    },
    "12094": {
      "op": "JUMPDEST"
    },
    "12095": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12098": {
      "op": "SWAP7"
    },
    "12099": {
      "op": "SWAP1"
    },
    "12100": {
      "op": "SWAP7"
    },
    "12101": {
      "op": "AND"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12104": {
      "op": "DUP4"
    },
    "12105": {
      "op": "ADD"
    },
    "12106": {
      "op": "MSTORE"
    },
    "12107": {
      "op": "POP"
    },
    "12108": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12114": {
      "op": "SWAP4"
    },
    "12115": {
      "op": "DUP5"
    },
    "12116": {
      "op": "AND"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12119": {
      "op": "DUP3"
    },
    "12120": {
      "op": "ADD"
    },
    "12121": {
      "op": "MSTORE"
    },
    "12122": {
      "op": "SWAP2"
    },
    "12123": {
      "op": "DUP4"
    },
    "12124": {
      "op": "AND"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12127": {
      "op": "DUP4"
    },
    "12128": {
      "op": "ADD"
    },
    "12129": {
      "op": "MSTORE"
    },
    "12130": {
      "op": "SWAP1"
    },
    "12131": {
      "op": "SWAP2"
    },
    "12132": {
      "op": "AND"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12135": {
      "op": "SWAP1"
    },
    "12136": {
      "op": "SWAP2"
    },
    "12137": {
      "op": "ADD"
    },
    "12138": {
      "op": "MSTORE"
    },
    "12139": {
      "op": "SWAP2"
    },
    "12140": {
      "op": "SWAP1"
    },
    "12141": {
      "op": "POP"
    },
    "12142": {
      "jump": "o",
      "op": "JUMP"
    },
    "12143": {
      "op": "JUMPDEST"
    },
    "12144": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12149": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12151": {
      "op": "SHL"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12154": {
      "op": "MSTORE"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12157": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12159": {
      "op": "MSTORE"
    },
    "12160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12164": {
      "op": "REVERT"
    },
    "12165": {
      "op": "JUMPDEST"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12168": {
      "op": "MLOAD"
    },
    "12169": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12171": {
      "op": "DUP3"
    },
    "12172": {
      "op": "ADD"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12175": {
      "op": "NOT"
    },
    "12176": {
      "op": "AND"
    },
    "12177": {
      "op": "DUP2"
    },
    "12178": {
      "op": "ADD"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12185": {
      "op": "SHL"
    },
    "12186": {
      "op": "SUB"
    },
    "12187": {
      "op": "DUP2"
    },
    "12188": {
      "op": "GT"
    },
    "12189": {
      "op": "DUP3"
    },
    "12190": {
      "op": "DUP3"
    },
    "12191": {
      "op": "LT"
    },
    "12192": {
      "op": "OR"
    },
    "12193": {
      "op": "ISZERO"
    },
    "12194": {
      "op": "PUSH2",
      "value": "0x2FAD"
    },
    "12197": {
      "op": "JUMPI"
    },
    "12198": {
      "op": "PUSH2",
      "value": "0x2FAD"
    },
    "12201": {
      "op": "PUSH2",
      "value": "0x2F6F"
    },
    "12204": {
      "jump": "i",
      "op": "JUMP"
    },
    "12205": {
      "op": "JUMPDEST"
    },
    "12206": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12208": {
      "op": "MSTORE"
    },
    "12209": {
      "op": "SWAP2"
    },
    "12210": {
      "op": "SWAP1"
    },
    "12211": {
      "op": "POP"
    },
    "12212": {
      "jump": "o",
      "op": "JUMP"
    },
    "12213": {
      "op": "JUMPDEST"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12216": {
      "op": "DUP3"
    },
    "12217": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12219": {
      "op": "DUP4"
    },
    "12220": {
      "op": "ADD"
    },
    "12221": {
      "op": "SLT"
    },
    "12222": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12225": {
      "op": "JUMPI"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12228": {
      "op": "DUP1"
    },
    "12229": {
      "op": "REVERT"
    },
    "12230": {
      "op": "JUMPDEST"
    },
    "12231": {
      "op": "DUP2"
    },
    "12232": {
      "op": "CALLDATALOAD"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12241": {
      "op": "SHL"
    },
    "12242": {
      "op": "SUB"
    },
    "12243": {
      "op": "DUP3"
    },
    "12244": {
      "op": "GT"
    },
    "12245": {
      "op": "ISZERO"
    },
    "12246": {
      "op": "PUSH2",
      "value": "0x2FE1"
    },
    "12249": {
      "op": "JUMPI"
    },
    "12250": {
      "op": "PUSH2",
      "value": "0x2FE1"
    },
    "12253": {
      "op": "PUSH2",
      "value": "0x2F6F"
    },
    "12256": {
      "jump": "i",
      "op": "JUMP"
    },
    "12257": {
      "op": "JUMPDEST"
    },
    "12258": {
      "op": "DUP2"
    },
    "12259": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12261": {
      "op": "SHL"
    },
    "12262": {
      "op": "PUSH2",
      "value": "0x2FF0"
    },
    "12265": {
      "op": "DUP3"
    },
    "12266": {
      "op": "DUP3"
    },
    "12267": {
      "op": "ADD"
    },
    "12268": {
      "op": "PUSH2",
      "value": "0x2F85"
    },
    "12271": {
      "jump": "i",
      "op": "JUMP"
    },
    "12272": {
      "op": "JUMPDEST"
    },
    "12273": {
      "op": "SWAP3"
    },
    "12274": {
      "op": "DUP4"
    },
    "12275": {
      "op": "MSTORE"
    },
    "12276": {
      "op": "DUP5"
    },
    "12277": {
      "op": "DUP2"
    },
    "12278": {
      "op": "ADD"
    },
    "12279": {
      "op": "DUP3"
    },
    "12280": {
      "op": "ADD"
    },
    "12281": {
      "op": "SWAP3"
    },
    "12282": {
      "op": "DUP3"
    },
    "12283": {
      "op": "DUP2"
    },
    "12284": {
      "op": "ADD"
    },
    "12285": {
      "op": "SWAP1"
    },
    "12286": {
      "op": "DUP8"
    },
    "12287": {
      "op": "DUP6"
    },
    "12288": {
      "op": "GT"
    },
    "12289": {
      "op": "ISZERO"
    },
    "12290": {
      "op": "PUSH2",
      "value": "0x300A"
    },
    "12293": {
      "op": "JUMPI"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12296": {
      "op": "DUP1"
    },
    "12297": {
      "op": "REVERT"
    },
    "12298": {
      "op": "JUMPDEST"
    },
    "12299": {
      "op": "DUP4"
    },
    "12300": {
      "op": "DUP8"
    },
    "12301": {
      "op": "ADD"
    },
    "12302": {
      "op": "SWAP3"
    },
    "12303": {
      "op": "POP"
    },
    "12304": {
      "op": "JUMPDEST"
    },
    "12305": {
      "op": "DUP5"
    },
    "12306": {
      "op": "DUP4"
    },
    "12307": {
      "op": "LT"
    },
    "12308": {
      "op": "ISZERO"
    },
    "12309": {
      "op": "PUSH2",
      "value": "0x3029"
    },
    "12312": {
      "op": "JUMPI"
    },
    "12313": {
      "op": "DUP3"
    },
    "12314": {
      "op": "CALLDATALOAD"
    },
    "12315": {
      "op": "DUP3"
    },
    "12316": {
      "op": "MSTORE"
    },
    "12317": {
      "op": "SWAP2"
    },
    "12318": {
      "op": "DUP4"
    },
    "12319": {
      "op": "ADD"
    },
    "12320": {
      "op": "SWAP2"
    },
    "12321": {
      "op": "SWAP1"
    },
    "12322": {
      "op": "DUP4"
    },
    "12323": {
      "op": "ADD"
    },
    "12324": {
      "op": "SWAP1"
    },
    "12325": {
      "op": "PUSH2",
      "value": "0x3010"
    },
    "12328": {
      "op": "JUMP"
    },
    "12329": {
      "op": "JUMPDEST"
    },
    "12330": {
      "op": "SWAP8"
    },
    "12331": {
      "op": "SWAP7"
    },
    "12332": {
      "op": "POP"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "op": "POP"
    },
    "12336": {
      "op": "POP"
    },
    "12337": {
      "op": "POP"
    },
    "12338": {
      "op": "POP"
    },
    "12339": {
      "jump": "o",
      "op": "JUMP"
    },
    "12340": {
      "op": "JUMPDEST"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12343": {
      "op": "DUP1"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12346": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12348": {
      "op": "DUP5"
    },
    "12349": {
      "op": "DUP7"
    },
    "12350": {
      "op": "SUB"
    },
    "12351": {
      "op": "SLT"
    },
    "12352": {
      "op": "ISZERO"
    },
    "12353": {
      "op": "PUSH2",
      "value": "0x3049"
    },
    "12356": {
      "op": "JUMPI"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12359": {
      "op": "DUP1"
    },
    "12360": {
      "op": "REVERT"
    },
    "12361": {
      "op": "JUMPDEST"
    },
    "12362": {
      "op": "DUP4"
    },
    "12363": {
      "op": "CALLDATALOAD"
    },
    "12364": {
      "op": "SWAP3"
    },
    "12365": {
      "op": "POP"
    },
    "12366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12368": {
      "op": "DUP5"
    },
    "12369": {
      "op": "ADD"
    },
    "12370": {
      "op": "CALLDATALOAD"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12377": {
      "op": "SHL"
    },
    "12378": {
      "op": "SUB"
    },
    "12379": {
      "op": "DUP2"
    },
    "12380": {
      "op": "GT"
    },
    "12381": {
      "op": "ISZERO"
    },
    "12382": {
      "op": "PUSH2",
      "value": "0x3066"
    },
    "12385": {
      "op": "JUMPI"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12388": {
      "op": "DUP1"
    },
    "12389": {
      "op": "REVERT"
    },
    "12390": {
      "op": "JUMPDEST"
    },
    "12391": {
      "op": "PUSH2",
      "value": "0x3072"
    },
    "12394": {
      "op": "DUP7"
    },
    "12395": {
      "op": "DUP3"
    },
    "12396": {
      "op": "DUP8"
    },
    "12397": {
      "op": "ADD"
    },
    "12398": {
      "op": "PUSH2",
      "value": "0x2FB5"
    },
    "12401": {
      "jump": "i",
      "op": "JUMP"
    },
    "12402": {
      "op": "JUMPDEST"
    },
    "12403": {
      "op": "SWAP3"
    },
    "12404": {
      "op": "POP"
    },
    "12405": {
      "op": "POP"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12408": {
      "op": "DUP5"
    },
    "12409": {
      "op": "ADD"
    },
    "12410": {
      "op": "CALLDATALOAD"
    },
    "12411": {
      "op": "DUP1"
    },
    "12412": {
      "op": "ISZERO"
    },
    "12413": {
      "op": "ISZERO"
    },
    "12414": {
      "op": "DUP2"
    },
    "12415": {
      "op": "EQ"
    },
    "12416": {
      "op": "PUSH2",
      "value": "0x3088"
    },
    "12419": {
      "op": "JUMPI"
    },
    "12420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12422": {
      "op": "DUP1"
    },
    "12423": {
      "op": "REVERT"
    },
    "12424": {
      "op": "JUMPDEST"
    },
    "12425": {
      "op": "DUP1"
    },
    "12426": {
      "op": "SWAP2"
    },
    "12427": {
      "op": "POP"
    },
    "12428": {
      "op": "POP"
    },
    "12429": {
      "op": "SWAP3"
    },
    "12430": {
      "op": "POP"
    },
    "12431": {
      "op": "SWAP3"
    },
    "12432": {
      "op": "POP"
    },
    "12433": {
      "op": "SWAP3"
    },
    "12434": {
      "jump": "o",
      "op": "JUMP"
    },
    "12435": {
      "op": "JUMPDEST"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12438": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12441": {
      "op": "DUP1"
    },
    "12442": {
      "op": "DUP4"
    },
    "12443": {
      "op": "MSTORE"
    },
    "12444": {
      "op": "PUSH2",
      "value": "0x30A7"
    },
    "12447": {
      "op": "DUP2"
    },
    "12448": {
      "op": "DUP5"
    },
    "12449": {
      "op": "ADD"
    },
    "12450": {
      "op": "DUP13"
    },
    "12451": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "12454": {
      "jump": "i",
      "op": "JUMP"
    },
    "12455": {
      "op": "JUMPDEST"
    },
    "12456": {
      "op": "SWAP10"
    },
    "12457": {
      "op": "ISZERO"
    },
    "12458": {
      "op": "ISZERO"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12461": {
      "op": "DUP5"
    },
    "12462": {
      "op": "ADD"
    },
    "12463": {
      "op": "MSTORE"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "op": "POP"
    },
    "12466": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12472": {
      "op": "SWAP7"
    },
    "12473": {
      "op": "DUP8"
    },
    "12474": {
      "op": "AND"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12477": {
      "op": "DUP3"
    },
    "12478": {
      "op": "ADD"
    },
    "12479": {
      "op": "MSTORE"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12482": {
      "op": "SWAP6"
    },
    "12483": {
      "op": "SWAP1"
    },
    "12484": {
      "op": "SWAP6"
    },
    "12485": {
      "op": "AND"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12488": {
      "op": "DUP7"
    },
    "12489": {
      "op": "ADD"
    },
    "12490": {
      "op": "MSTORE"
    },
    "12491": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12495": {
      "op": "SWAP4"
    },
    "12496": {
      "op": "SWAP1"
    },
    "12497": {
      "op": "SWAP4"
    },
    "12498": {
      "op": "AND"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12501": {
      "op": "DUP6"
    },
    "12502": {
      "op": "ADD"
    },
    "12503": {
      "op": "MSTORE"
    },
    "12504": {
      "op": "SWAP1"
    },
    "12505": {
      "op": "DUP5"
    },
    "12506": {
      "op": "AND"
    },
    "12507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12509": {
      "op": "DUP5"
    },
    "12510": {
      "op": "ADD"
    },
    "12511": {
      "op": "MSTORE"
    },
    "12512": {
      "op": "SWAP1"
    },
    "12513": {
      "op": "SWAP3"
    },
    "12514": {
      "op": "AND"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12517": {
      "op": "DUP3"
    },
    "12518": {
      "op": "ADD"
    },
    "12519": {
      "op": "MSTORE"
    },
    "12520": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12523": {
      "op": "SWAP1"
    },
    "12524": {
      "op": "SWAP2"
    },
    "12525": {
      "op": "AND"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12528": {
      "op": "SWAP1"
    },
    "12529": {
      "op": "SWAP2"
    },
    "12530": {
      "op": "ADD"
    },
    "12531": {
      "op": "MSTORE"
    },
    "12532": {
      "op": "SWAP2"
    },
    "12533": {
      "op": "SWAP1"
    },
    "12534": {
      "op": "POP"
    },
    "12535": {
      "jump": "o",
      "op": "JUMP"
    },
    "12536": {
      "op": "JUMPDEST"
    },
    "12537": {
      "op": "DUP1"
    },
    "12538": {
      "op": "CALLDATALOAD"
    },
    "12539": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12545": {
      "op": "DUP2"
    },
    "12546": {
      "op": "AND"
    },
    "12547": {
      "op": "DUP2"
    },
    "12548": {
      "op": "EQ"
    },
    "12549": {
      "op": "PUSH2",
      "value": "0x310D"
    },
    "12552": {
      "op": "JUMPI"
    },
    "12553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12555": {
      "op": "DUP1"
    },
    "12556": {
      "op": "REVERT"
    },
    "12557": {
      "op": "JUMPDEST"
    },
    "12558": {
      "op": "SWAP2"
    },
    "12559": {
      "op": "SWAP1"
    },
    "12560": {
      "op": "POP"
    },
    "12561": {
      "jump": "o",
      "op": "JUMP"
    },
    "12562": {
      "op": "JUMPDEST"
    },
    "12563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12567": {
      "op": "DUP3"
    },
    "12568": {
      "op": "DUP5"
    },
    "12569": {
      "op": "SUB"
    },
    "12570": {
      "op": "SLT"
    },
    "12571": {
      "op": "ISZERO"
    },
    "12572": {
      "op": "PUSH2",
      "value": "0x3124"
    },
    "12575": {
      "op": "JUMPI"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12578": {
      "op": "DUP1"
    },
    "12579": {
      "op": "REVERT"
    },
    "12580": {
      "op": "JUMPDEST"
    },
    "12581": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "12584": {
      "op": "DUP3"
    },
    "12585": {
      "op": "PUSH2",
      "value": "0x30F8"
    },
    "12588": {
      "jump": "i",
      "op": "JUMP"
    },
    "12589": {
      "op": "JUMPDEST"
    },
    "12590": {
      "op": "SWAP4"
    },
    "12591": {
      "op": "SWAP3"
    },
    "12592": {
      "op": "POP"
    },
    "12593": {
      "op": "POP"
    },
    "12594": {
      "op": "POP"
    },
    "12595": {
      "jump": "o",
      "op": "JUMP"
    },
    "12596": {
      "op": "JUMPDEST"
    },
    "12597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12599": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12602": {
      "op": "DUP3"
    },
    "12603": {
      "op": "MLOAD"
    },
    "12604": {
      "op": "DUP2"
    },
    "12605": {
      "op": "DUP6"
    },
    "12606": {
      "op": "MSTORE"
    },
    "12607": {
      "op": "PUSH2",
      "value": "0x314A"
    },
    "12610": {
      "op": "DUP3"
    },
    "12611": {
      "op": "DUP7"
    },
    "12612": {
      "op": "ADD"
    },
    "12613": {
      "op": "DUP3"
    },
    "12614": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "12617": {
      "jump": "i",
      "op": "JUMP"
    },
    "12618": {
      "op": "JUMPDEST"
    },
    "12619": {
      "op": "SWAP2"
    },
    "12620": {
      "op": "POP"
    },
    "12621": {
      "op": "POP"
    },
    "12622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12624": {
      "op": "DUP4"
    },
    "12625": {
      "op": "ADD"
    },
    "12626": {
      "op": "MLOAD"
    },
    "12627": {
      "op": "PUSH2",
      "value": "0x3165"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12632": {
      "op": "DUP7"
    },
    "12633": {
      "op": "ADD"
    },
    "12634": {
      "op": "DUP3"
    },
    "12635": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12641": {
      "op": "AND"
    },
    "12642": {
      "op": "SWAP1"
    },
    "12643": {
      "op": "MSTORE"
    },
    "12644": {
      "op": "JUMP"
    },
    "12645": {
      "op": "JUMPDEST"
    },
    "12646": {
      "op": "POP"
    },
    "12647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12649": {
      "op": "DUP4"
    },
    "12650": {
      "op": "ADD"
    },
    "12651": {
      "op": "MLOAD"
    },
    "12652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12654": {
      "op": "DUP6"
    },
    "12655": {
      "op": "ADD"
    },
    "12656": {
      "op": "MSTORE"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12659": {
      "op": "DUP4"
    },
    "12660": {
      "op": "ADD"
    },
    "12661": {
      "op": "MLOAD"
    },
    "12662": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12664": {
      "op": "DUP6"
    },
    "12665": {
      "op": "ADD"
    },
    "12666": {
      "op": "MSTORE"
    },
    "12667": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12669": {
      "op": "DUP4"
    },
    "12670": {
      "op": "ADD"
    },
    "12671": {
      "op": "MLOAD"
    },
    "12672": {
      "op": "PUSH2",
      "value": "0x318E"
    },
    "12675": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12677": {
      "op": "DUP7"
    },
    "12678": {
      "op": "ADD"
    },
    "12679": {
      "op": "DUP3"
    },
    "12680": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12682": {
      "op": "AND"
    },
    "12683": {
      "op": "SWAP1"
    },
    "12684": {
      "op": "MSTORE"
    },
    "12685": {
      "op": "JUMP"
    },
    "12686": {
      "op": "JUMPDEST"
    },
    "12687": {
      "op": "POP"
    },
    "12688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12690": {
      "op": "DUP4"
    },
    "12691": {
      "op": "ADD"
    },
    "12692": {
      "op": "MLOAD"
    },
    "12693": {
      "op": "PUSH2",
      "value": "0x31A5"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12698": {
      "op": "DUP7"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "DUP3"
    },
    "12701": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12705": {
      "op": "AND"
    },
    "12706": {
      "op": "SWAP1"
    },
    "12707": {
      "op": "MSTORE"
    },
    "12708": {
      "op": "JUMP"
    },
    "12709": {
      "op": "JUMPDEST"
    },
    "12710": {
      "op": "POP"
    },
    "12711": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12713": {
      "op": "DUP4"
    },
    "12714": {
      "op": "ADD"
    },
    "12715": {
      "op": "MLOAD"
    },
    "12716": {
      "op": "PUSH2",
      "value": "0x31C0"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12721": {
      "op": "DUP7"
    },
    "12722": {
      "op": "ADD"
    },
    "12723": {
      "op": "DUP3"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12728": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "12730": {
      "op": "SHL"
    },
    "12731": {
      "op": "SUB"
    },
    "12732": {
      "op": "AND"
    },
    "12733": {
      "op": "SWAP1"
    },
    "12734": {
      "op": "MSTORE"
    },
    "12735": {
      "op": "JUMP"
    },
    "12736": {
      "op": "JUMPDEST"
    },
    "12737": {
      "op": "POP"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12740": {
      "op": "DUP4"
    },
    "12741": {
      "op": "ADD"
    },
    "12742": {
      "op": "MLOAD"
    },
    "12743": {
      "op": "PUSH2",
      "value": "0x31D6"
    },
    "12746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12748": {
      "op": "DUP7"
    },
    "12749": {
      "op": "ADD"
    },
    "12750": {
      "op": "DUP3"
    },
    "12751": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12754": {
      "op": "AND"
    },
    "12755": {
      "op": "SWAP1"
    },
    "12756": {
      "op": "MSTORE"
    },
    "12757": {
      "op": "JUMP"
    },
    "12758": {
      "op": "JUMPDEST"
    },
    "12759": {
      "op": "POP"
    },
    "12760": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12763": {
      "op": "DUP4"
    },
    "12764": {
      "op": "DUP2"
    },
    "12765": {
      "op": "ADD"
    },
    "12766": {
      "op": "MLOAD"
    },
    "12767": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12770": {
      "op": "AND"
    },
    "12771": {
      "op": "SWAP1"
    },
    "12772": {
      "op": "DUP6"
    },
    "12773": {
      "op": "ADD"
    },
    "12774": {
      "op": "MSTORE"
    },
    "12775": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12778": {
      "op": "DUP1"
    },
    "12779": {
      "op": "DUP5"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "MLOAD"
    },
    "12782": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12788": {
      "op": "DUP2"
    },
    "12789": {
      "op": "AND"
    },
    "12790": {
      "op": "DUP3"
    },
    "12791": {
      "op": "DUP8"
    },
    "12792": {
      "op": "ADD"
    },
    "12793": {
      "op": "MSTORE"
    },
    "12794": {
      "op": "PUSH2",
      "value": "0x19AF"
    },
    "12797": {
      "op": "JUMP"
    },
    "12798": {
      "op": "JUMPDEST"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12803": {
      "op": "DUP1"
    },
    "12804": {
      "op": "DUP4"
    },
    "12805": {
      "op": "ADD"
    },
    "12806": {
      "op": "DUP2"
    },
    "12807": {
      "op": "DUP5"
    },
    "12808": {
      "op": "MSTORE"
    },
    "12809": {
      "op": "DUP1"
    },
    "12810": {
      "op": "DUP6"
    },
    "12811": {
      "op": "MLOAD"
    },
    "12812": {
      "op": "DUP1"
    },
    "12813": {
      "op": "DUP4"
    },
    "12814": {
      "op": "MSTORE"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12817": {
      "op": "DUP7"
    },
    "12818": {
      "op": "ADD"
    },
    "12819": {
      "op": "SWAP2"
    },
    "12820": {
      "op": "POP"
    },
    "12821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12823": {
      "op": "DUP2"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12826": {
      "op": "SHL"
    },
    "12827": {
      "op": "DUP8"
    },
    "12828": {
      "op": "ADD"
    },
    "12829": {
      "op": "ADD"
    },
    "12830": {
      "op": "SWAP3"
    },
    "12831": {
      "op": "POP"
    },
    "12832": {
      "op": "DUP4"
    },
    "12833": {
      "op": "DUP8"
    },
    "12834": {
      "op": "ADD"
    },
    "12835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12837": {
      "op": "JUMPDEST"
    },
    "12838": {
      "op": "DUP3"
    },
    "12839": {
      "op": "DUP2"
    },
    "12840": {
      "op": "LT"
    },
    "12841": {
      "op": "ISZERO"
    },
    "12842": {
      "op": "PUSH2",
      "value": "0x3253"
    },
    "12845": {
      "op": "JUMPI"
    },
    "12846": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12848": {
      "op": "NOT"
    },
    "12849": {
      "op": "DUP9"
    },
    "12850": {
      "op": "DUP7"
    },
    "12851": {
      "op": "SUB"
    },
    "12852": {
      "op": "ADD"
    },
    "12853": {
      "op": "DUP5"
    },
    "12854": {
      "op": "MSTORE"
    },
    "12855": {
      "op": "PUSH2",
      "value": "0x3241"
    },
    "12858": {
      "op": "DUP6"
    },
    "12859": {
      "op": "DUP4"
    },
    "12860": {
      "op": "MLOAD"
    },
    "12861": {
      "op": "PUSH2",
      "value": "0x3134"
    },
    "12864": {
      "jump": "i",
      "op": "JUMP"
    },
    "12865": {
      "op": "JUMPDEST"
    },
    "12866": {
      "op": "SWAP5"
    },
    "12867": {
      "op": "POP"
    },
    "12868": {
      "op": "SWAP3"
    },
    "12869": {
      "op": "DUP6"
    },
    "12870": {
      "op": "ADD"
    },
    "12871": {
      "op": "SWAP3"
    },
    "12872": {
      "op": "SWAP1"
    },
    "12873": {
      "op": "DUP6"
    },
    "12874": {
      "op": "ADD"
    },
    "12875": {
      "op": "SWAP1"
    },
    "12876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12878": {
      "op": "ADD"
    },
    "12879": {
      "op": "PUSH2",
      "value": "0x3225"
    },
    "12882": {
      "op": "JUMP"
    },
    "12883": {
      "op": "JUMPDEST"
    },
    "12884": {
      "op": "POP"
    },
    "12885": {
      "op": "SWAP3"
    },
    "12886": {
      "op": "SWAP8"
    },
    "12887": {
      "op": "SWAP7"
    },
    "12888": {
      "op": "POP"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "op": "POP"
    },
    "12891": {
      "op": "POP"
    },
    "12892": {
      "op": "POP"
    },
    "12893": {
      "op": "POP"
    },
    "12894": {
      "op": "POP"
    },
    "12895": {
      "jump": "o",
      "op": "JUMP"
    },
    "12896": {
      "op": "JUMPDEST"
    },
    "12897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12899": {
      "op": "DUP1"
    },
    "12900": {
      "op": "DUP4"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12903": {
      "op": "DUP5"
    },
    "12904": {
      "op": "ADD"
    },
    "12905": {
      "op": "SLT"
    },
    "12906": {
      "op": "PUSH2",
      "value": "0x3272"
    },
    "12909": {
      "op": "JUMPI"
    },
    "12910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12912": {
      "op": "DUP1"
    },
    "12913": {
      "op": "REVERT"
    },
    "12914": {
      "op": "JUMPDEST"
    },
    "12915": {
      "op": "POP"
    },
    "12916": {
      "op": "DUP2"
    },
    "12917": {
      "op": "CALLDATALOAD"
    },
    "12918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12924": {
      "op": "SHL"
    },
    "12925": {
      "op": "SUB"
    },
    "12926": {
      "op": "DUP2"
    },
    "12927": {
      "op": "GT"
    },
    "12928": {
      "op": "ISZERO"
    },
    "12929": {
      "op": "PUSH2",
      "value": "0x3289"
    },
    "12932": {
      "op": "JUMPI"
    },
    "12933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12935": {
      "op": "DUP1"
    },
    "12936": {
      "op": "REVERT"
    },
    "12937": {
      "op": "JUMPDEST"
    },
    "12938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12940": {
      "op": "DUP4"
    },
    "12941": {
      "op": "ADD"
    },
    "12942": {
      "op": "SWAP2"
    },
    "12943": {
      "op": "POP"
    },
    "12944": {
      "op": "DUP4"
    },
    "12945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12947": {
      "op": "DUP3"
    },
    "12948": {
      "op": "DUP6"
    },
    "12949": {
      "op": "ADD"
    },
    "12950": {
      "op": "ADD"
    },
    "12951": {
      "op": "GT"
    },
    "12952": {
      "op": "ISZERO"
    },
    "12953": {
      "op": "PUSH2",
      "value": "0x32A1"
    },
    "12956": {
      "op": "JUMPI"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12959": {
      "op": "DUP1"
    },
    "12960": {
      "op": "REVERT"
    },
    "12961": {
      "op": "JUMPDEST"
    },
    "12962": {
      "op": "SWAP3"
    },
    "12963": {
      "op": "POP"
    },
    "12964": {
      "op": "SWAP3"
    },
    "12965": {
      "op": "SWAP1"
    },
    "12966": {
      "op": "POP"
    },
    "12967": {
      "jump": "o",
      "op": "JUMP"
    },
    "12968": {
      "op": "JUMPDEST"
    },
    "12969": {
      "op": "DUP1"
    },
    "12970": {
      "op": "CALLDATALOAD"
    },
    "12971": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "12975": {
      "op": "DUP2"
    },
    "12976": {
      "op": "AND"
    },
    "12977": {
      "op": "DUP2"
    },
    "12978": {
      "op": "EQ"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x310D"
    },
    "12982": {
      "op": "JUMPI"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12985": {
      "op": "DUP1"
    },
    "12986": {
      "op": "REVERT"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "DUP1"
    },
    "12989": {
      "op": "CALLDATALOAD"
    },
    "12990": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12993": {
      "op": "DUP2"
    },
    "12994": {
      "op": "AND"
    },
    "12995": {
      "op": "DUP2"
    },
    "12996": {
      "op": "EQ"
    },
    "12997": {
      "op": "PUSH2",
      "value": "0x310D"
    },
    "13000": {
      "op": "JUMPI"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13003": {
      "op": "DUP1"
    },
    "13004": {
      "op": "REVERT"
    },
    "13005": {
      "op": "JUMPDEST"
    },
    "13006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13008": {
      "op": "DUP1"
    },
    "13009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13011": {
      "op": "DUP1"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13014": {
      "op": "DUP1"
    },
    "13015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13017": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13019": {
      "op": "DUP9"
    },
    "13020": {
      "op": "DUP11"
    },
    "13021": {
      "op": "SUB"
    },
    "13022": {
      "op": "SLT"
    },
    "13023": {
      "op": "ISZERO"
    },
    "13024": {
      "op": "PUSH2",
      "value": "0x32E8"
    },
    "13027": {
      "op": "JUMPI"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13030": {
      "op": "DUP1"
    },
    "13031": {
      "op": "REVERT"
    },
    "13032": {
      "op": "JUMPDEST"
    },
    "13033": {
      "op": "DUP8"
    },
    "13034": {
      "op": "CALLDATALOAD"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13041": {
      "op": "SHL"
    },
    "13042": {
      "op": "SUB"
    },
    "13043": {
      "op": "DUP2"
    },
    "13044": {
      "op": "GT"
    },
    "13045": {
      "op": "ISZERO"
    },
    "13046": {
      "op": "PUSH2",
      "value": "0x32FE"
    },
    "13049": {
      "op": "JUMPI"
    },
    "13050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13052": {
      "op": "DUP1"
    },
    "13053": {
      "op": "REVERT"
    },
    "13054": {
      "op": "JUMPDEST"
    },
    "13055": {
      "op": "PUSH2",
      "value": "0x330A"
    },
    "13058": {
      "op": "DUP11"
    },
    "13059": {
      "op": "DUP3"
    },
    "13060": {
      "op": "DUP12"
    },
    "13061": {
      "op": "ADD"
    },
    "13062": {
      "op": "PUSH2",
      "value": "0x3260"
    },
    "13065": {
      "jump": "i",
      "op": "JUMP"
    },
    "13066": {
      "op": "JUMPDEST"
    },
    "13067": {
      "op": "SWAP1"
    },
    "13068": {
      "op": "SWAP9"
    },
    "13069": {
      "op": "POP"
    },
    "13070": {
      "op": "SWAP7"
    },
    "13071": {
      "op": "POP"
    },
    "13072": {
      "op": "POP"
    },
    "13073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13075": {
      "op": "DUP9"
    },
    "13076": {
      "op": "ADD"
    },
    "13077": {
      "op": "CALLDATALOAD"
    },
    "13078": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13080": {
      "op": "DUP2"
    },
    "13081": {
      "op": "AND"
    },
    "13082": {
      "op": "DUP2"
    },
    "13083": {
      "op": "EQ"
    },
    "13084": {
      "op": "PUSH2",
      "value": "0x3324"
    },
    "13087": {
      "op": "JUMPI"
    },
    "13088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13090": {
      "op": "DUP1"
    },
    "13091": {
      "op": "REVERT"
    },
    "13092": {
      "op": "JUMPDEST"
    },
    "13093": {
      "op": "SWAP5"
    },
    "13094": {
      "op": "POP"
    },
    "13095": {
      "op": "PUSH2",
      "value": "0x3332"
    },
    "13098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13100": {
      "op": "DUP10"
    },
    "13101": {
      "op": "ADD"
    },
    "13102": {
      "op": "PUSH2",
      "value": "0x32A8"
    },
    "13105": {
      "jump": "i",
      "op": "JUMP"
    },
    "13106": {
      "op": "JUMPDEST"
    },
    "13107": {
      "op": "SWAP4"
    },
    "13108": {
      "op": "POP"
    },
    "13109": {
      "op": "PUSH2",
      "value": "0x3340"
    },
    "13112": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13114": {
      "op": "DUP10"
    },
    "13115": {
      "op": "ADD"
    },
    "13116": {
      "op": "PUSH2",
      "value": "0x30F8"
    },
    "13119": {
      "jump": "i",
      "op": "JUMP"
    },
    "13120": {
      "op": "JUMPDEST"
    },
    "13121": {
      "op": "SWAP3"
    },
    "13122": {
      "op": "POP"
    },
    "13123": {
      "op": "PUSH2",
      "value": "0x334E"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13128": {
      "op": "DUP10"
    },
    "13129": {
      "op": "ADD"
    },
    "13130": {
      "op": "PUSH2",
      "value": "0x30F8"
    },
    "13133": {
      "jump": "i",
      "op": "JUMP"
    },
    "13134": {
      "op": "JUMPDEST"
    },
    "13135": {
      "op": "SWAP2"
    },
    "13136": {
      "op": "POP"
    },
    "13137": {
      "op": "PUSH2",
      "value": "0x335C"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13142": {
      "op": "DUP10"
    },
    "13143": {
      "op": "ADD"
    },
    "13144": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "13147": {
      "jump": "i",
      "op": "JUMP"
    },
    "13148": {
      "op": "JUMPDEST"
    },
    "13149": {
      "op": "SWAP1"
    },
    "13150": {
      "op": "POP"
    },
    "13151": {
      "op": "SWAP3"
    },
    "13152": {
      "op": "SWAP6"
    },
    "13153": {
      "op": "SWAP9"
    },
    "13154": {
      "op": "SWAP2"
    },
    "13155": {
      "op": "SWAP5"
    },
    "13156": {
      "op": "SWAP8"
    },
    "13157": {
      "op": "POP"
    },
    "13158": {
      "op": "SWAP3"
    },
    "13159": {
      "op": "SWAP6"
    },
    "13160": {
      "op": "POP"
    },
    "13161": {
      "jump": "o",
      "op": "JUMP"
    },
    "13162": {
      "op": "JUMPDEST"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13165": {
      "op": "DUP1"
    },
    "13166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13168": {
      "op": "DUP4"
    },
    "13169": {
      "op": "DUP6"
    },
    "13170": {
      "op": "SUB"
    },
    "13171": {
      "op": "SLT"
    },
    "13172": {
      "op": "ISZERO"
    },
    "13173": {
      "op": "PUSH2",
      "value": "0x337D"
    },
    "13176": {
      "op": "JUMPI"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13179": {
      "op": "DUP1"
    },
    "13180": {
      "op": "REVERT"
    },
    "13181": {
      "op": "JUMPDEST"
    },
    "13182": {
      "op": "POP"
    },
    "13183": {
      "op": "POP"
    },
    "13184": {
      "op": "DUP1"
    },
    "13185": {
      "op": "CALLDATALOAD"
    },
    "13186": {
      "op": "SWAP3"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13189": {
      "op": "SWAP1"
    },
    "13190": {
      "op": "SWAP2"
    },
    "13191": {
      "op": "ADD"
    },
    "13192": {
      "op": "CALLDATALOAD"
    },
    "13193": {
      "op": "SWAP2"
    },
    "13194": {
      "op": "POP"
    },
    "13195": {
      "jump": "o",
      "op": "JUMP"
    },
    "13196": {
      "op": "JUMPDEST"
    },
    "13197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13203": {
      "op": "SHL"
    },
    "13204": {
      "op": "SUB"
    },
    "13205": {
      "op": "DUP2"
    },
    "13206": {
      "op": "AND"
    },
    "13207": {
      "op": "DUP2"
    },
    "13208": {
      "op": "EQ"
    },
    "13209": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "13212": {
      "op": "JUMPI"
    },
    "13213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13215": {
      "op": "DUP1"
    },
    "13216": {
      "op": "REVERT"
    },
    "13217": {
      "op": "JUMPDEST"
    },
    "13218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13222": {
      "op": "DUP3"
    },
    "13223": {
      "op": "DUP5"
    },
    "13224": {
      "op": "SUB"
    },
    "13225": {
      "op": "SLT"
    },
    "13226": {
      "op": "ISZERO"
    },
    "13227": {
      "op": "PUSH2",
      "value": "0x33B3"
    },
    "13230": {
      "op": "JUMPI"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13233": {
      "op": "DUP1"
    },
    "13234": {
      "op": "REVERT"
    },
    "13235": {
      "op": "JUMPDEST"
    },
    "13236": {
      "op": "DUP2"
    },
    "13237": {
      "op": "CALLDATALOAD"
    },
    "13238": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "13241": {
      "op": "DUP2"
    },
    "13242": {
      "op": "PUSH2",
      "value": "0x338C"
    },
    "13245": {
      "jump": "i",
      "op": "JUMP"
    },
    "13246": {
      "op": "JUMPDEST"
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13249": {
      "op": "DUP3"
    },
    "13250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13252": {
      "op": "DUP4"
    },
    "13253": {
      "op": "ADD"
    },
    "13254": {
      "op": "SLT"
    },
    "13255": {
      "op": "PUSH2",
      "value": "0x33CF"
    },
    "13258": {
      "op": "JUMPI"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13261": {
      "op": "DUP1"
    },
    "13262": {
      "op": "REVERT"
    },
    "13263": {
      "op": "JUMPDEST"
    },
    "13264": {
      "op": "DUP2"
    },
    "13265": {
      "op": "CALLDATALOAD"
    },
    "13266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13272": {
      "op": "SHL"
    },
    "13273": {
      "op": "SUB"
    },
    "13274": {
      "op": "DUP2"
    },
    "13275": {
      "op": "GT"
    },
    "13276": {
      "op": "ISZERO"
    },
    "13277": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13280": {
      "op": "JUMPI"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13284": {
      "op": "PUSH2",
      "value": "0x2F6F"
    },
    "13287": {
      "jump": "i",
      "op": "JUMP"
    },
    "13288": {
      "op": "JUMPDEST"
    },
    "13289": {
      "op": "PUSH2",
      "value": "0x33FB"
    },
    "13292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13294": {
      "op": "DUP3"
    },
    "13295": {
      "op": "ADD"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13298": {
      "op": "NOT"
    },
    "13299": {
      "op": "AND"
    },
    "13300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13302": {
      "op": "ADD"
    },
    "13303": {
      "op": "PUSH2",
      "value": "0x2F85"
    },
    "13306": {
      "jump": "i",
      "op": "JUMP"
    },
    "13307": {
      "op": "JUMPDEST"
    },
    "13308": {
      "op": "DUP2"
    },
    "13309": {
      "op": "DUP2"
    },
    "13310": {
      "op": "MSTORE"
    },
    "13311": {
      "op": "DUP5"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13314": {
      "op": "DUP4"
    },
    "13315": {
      "op": "DUP7"
    },
    "13316": {
      "op": "ADD"
    },
    "13317": {
      "op": "ADD"
    },
    "13318": {
      "op": "GT"
    },
    "13319": {
      "op": "ISZERO"
    },
    "13320": {
      "op": "PUSH2",
      "value": "0x3410"
    },
    "13323": {
      "op": "JUMPI"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "DUP1"
    },
    "13327": {
      "op": "REVERT"
    },
    "13328": {
      "op": "JUMPDEST"
    },
    "13329": {
      "op": "DUP2"
    },
    "13330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13332": {
      "op": "DUP6"
    },
    "13333": {
      "op": "ADD"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13336": {
      "op": "DUP4"
    },
    "13337": {
      "op": "ADD"
    },
    "13338": {
      "op": "CALLDATACOPY"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13341": {
      "op": "SWAP2"
    },
    "13342": {
      "op": "DUP2"
    },
    "13343": {
      "op": "ADD"
    },
    "13344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13346": {
      "op": "ADD"
    },
    "13347": {
      "op": "SWAP2"
    },
    "13348": {
      "op": "SWAP1"
    },
    "13349": {
      "op": "SWAP2"
    },
    "13350": {
      "op": "MSTORE"
    },
    "13351": {
      "op": "SWAP4"
    },
    "13352": {
      "op": "SWAP3"
    },
    "13353": {
      "op": "POP"
    },
    "13354": {
      "op": "POP"
    },
    "13355": {
      "op": "POP"
    },
    "13356": {
      "jump": "o",
      "op": "JUMP"
    },
    "13357": {
      "op": "JUMPDEST"
    },
    "13358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13360": {
      "op": "DUP1"
    },
    "13361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13365": {
      "op": "DUP5"
    },
    "13366": {
      "op": "DUP7"
    },
    "13367": {
      "op": "SUB"
    },
    "13368": {
      "op": "SLT"
    },
    "13369": {
      "op": "ISZERO"
    },
    "13370": {
      "op": "PUSH2",
      "value": "0x3442"
    },
    "13373": {
      "op": "JUMPI"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13376": {
      "op": "DUP1"
    },
    "13377": {
      "op": "REVERT"
    },
    "13378": {
      "op": "JUMPDEST"
    },
    "13379": {
      "op": "DUP4"
    },
    "13380": {
      "op": "CALLDATALOAD"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13387": {
      "op": "SHL"
    },
    "13388": {
      "op": "SUB"
    },
    "13389": {
      "op": "DUP2"
    },
    "13390": {
      "op": "GT"
    },
    "13391": {
      "op": "ISZERO"
    },
    "13392": {
      "op": "PUSH2",
      "value": "0x3458"
    },
    "13395": {
      "op": "JUMPI"
    },
    "13396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13398": {
      "op": "DUP1"
    },
    "13399": {
      "op": "REVERT"
    },
    "13400": {
      "op": "JUMPDEST"
    },
    "13401": {
      "op": "PUSH2",
      "value": "0x3464"
    },
    "13404": {
      "op": "DUP7"
    },
    "13405": {
      "op": "DUP3"
    },
    "13406": {
      "op": "DUP8"
    },
    "13407": {
      "op": "ADD"
    },
    "13408": {
      "op": "PUSH2",
      "value": "0x33BE"
    },
    "13411": {
      "jump": "i",
      "op": "JUMP"
    },
    "13412": {
      "op": "JUMPDEST"
    },
    "13413": {
      "op": "SWAP4"
    },
    "13414": {
      "op": "POP"
    },
    "13415": {
      "op": "POP"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13418": {
      "op": "DUP5"
    },
    "13419": {
      "op": "ADD"
    },
    "13420": {
      "op": "CALLDATALOAD"
    },
    "13421": {
      "op": "SWAP2"
    },
    "13422": {
      "op": "POP"
    },
    "13423": {
      "op": "PUSH2",
      "value": "0x347A"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13428": {
      "op": "DUP6"
    },
    "13429": {
      "op": "ADD"
    },
    "13430": {
      "op": "PUSH2",
      "value": "0x30F8"
    },
    "13433": {
      "jump": "i",
      "op": "JUMP"
    },
    "13434": {
      "op": "JUMPDEST"
    },
    "13435": {
      "op": "SWAP1"
    },
    "13436": {
      "op": "POP"
    },
    "13437": {
      "op": "SWAP3"
    },
    "13438": {
      "op": "POP"
    },
    "13439": {
      "op": "SWAP3"
    },
    "13440": {
      "op": "POP"
    },
    "13441": {
      "op": "SWAP3"
    },
    "13442": {
      "jump": "o",
      "op": "JUMP"
    },
    "13443": {
      "op": "JUMPDEST"
    },
    "13444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13446": {
      "op": "DUP1"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13449": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13451": {
      "op": "DUP5"
    },
    "13452": {
      "op": "DUP7"
    },
    "13453": {
      "op": "SUB"
    },
    "13454": {
      "op": "SLT"
    },
    "13455": {
      "op": "ISZERO"
    },
    "13456": {
      "op": "PUSH2",
      "value": "0x3498"
    },
    "13459": {
      "op": "JUMPI"
    },
    "13460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13462": {
      "op": "DUP1"
    },
    "13463": {
      "op": "REVERT"
    },
    "13464": {
      "op": "JUMPDEST"
    },
    "13465": {
      "op": "POP"
    },
    "13466": {
      "op": "POP"
    },
    "13467": {
      "op": "DUP2"
    },
    "13468": {
      "op": "CALLDATALOAD"
    },
    "13469": {
      "op": "SWAP4"
    },
    "13470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13472": {
      "op": "DUP4"
    },
    "13473": {
      "op": "ADD"
    },
    "13474": {
      "op": "CALLDATALOAD"
    },
    "13475": {
      "op": "SWAP4"
    },
    "13476": {
      "op": "POP"
    },
    "13477": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13479": {
      "op": "SWAP1"
    },
    "13480": {
      "op": "SWAP3"
    },
    "13481": {
      "op": "ADD"
    },
    "13482": {
      "op": "CALLDATALOAD"
    },
    "13483": {
      "op": "SWAP2"
    },
    "13484": {
      "op": "SWAP1"
    },
    "13485": {
      "op": "POP"
    },
    "13486": {
      "jump": "o",
      "op": "JUMP"
    },
    "13487": {
      "op": "JUMPDEST"
    },
    "13488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13490": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13493": {
      "op": "DUP1"
    },
    "13494": {
      "op": "DUP4"
    },
    "13495": {
      "op": "MSTORE"
    },
    "13496": {
      "op": "PUSH2",
      "value": "0x34C3"
    },
    "13499": {
      "op": "DUP2"
    },
    "13500": {
      "op": "DUP5"
    },
    "13501": {
      "op": "ADD"
    },
    "13502": {
      "op": "DUP15"
    },
    "13503": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "13506": {
      "jump": "i",
      "op": "JUMP"
    },
    "13507": {
      "op": "JUMPDEST"
    },
    "13508": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13514": {
      "op": "SWAP13"
    },
    "13515": {
      "op": "DUP14"
    },
    "13516": {
      "op": "AND"
    },
    "13517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13519": {
      "op": "DUP6"
    },
    "13520": {
      "op": "ADD"
    },
    "13521": {
      "op": "MSTORE"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13524": {
      "op": "DUP5"
    },
    "13525": {
      "op": "ADD"
    },
    "13526": {
      "op": "SWAP12"
    },
    "13527": {
      "op": "SWAP1"
    },
    "13528": {
      "op": "SWAP12"
    },
    "13529": {
      "op": "MSTORE"
    },
    "13530": {
      "op": "POP"
    },
    "13531": {
      "op": "POP"
    },
    "13532": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13534": {
      "op": "DUP2"
    },
    "13535": {
      "op": "ADD"
    },
    "13536": {
      "op": "SWAP8"
    },
    "13537": {
      "op": "SWAP1"
    },
    "13538": {
      "op": "SWAP8"
    },
    "13539": {
      "op": "MSTORE"
    },
    "13540": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13542": {
      "op": "SWAP6"
    },
    "13543": {
      "op": "SWAP1"
    },
    "13544": {
      "op": "SWAP6"
    },
    "13545": {
      "op": "AND"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13548": {
      "op": "DUP8"
    },
    "13549": {
      "op": "ADD"
    },
    "13550": {
      "op": "MSTORE"
    },
    "13551": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13555": {
      "op": "SWAP4"
    },
    "13556": {
      "op": "SWAP1"
    },
    "13557": {
      "op": "SWAP4"
    },
    "13558": {
      "op": "AND"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13561": {
      "op": "DUP7"
    },
    "13562": {
      "op": "ADD"
    },
    "13563": {
      "op": "MSTORE"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13568": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13570": {
      "op": "SHL"
    },
    "13571": {
      "op": "SUB"
    },
    "13572": {
      "op": "SWAP2"
    },
    "13573": {
      "op": "SWAP1"
    },
    "13574": {
      "op": "SWAP2"
    },
    "13575": {
      "op": "AND"
    },
    "13576": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13578": {
      "op": "DUP6"
    },
    "13579": {
      "op": "ADD"
    },
    "13580": {
      "op": "MSTORE"
    },
    "13581": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13584": {
      "op": "SWAP1"
    },
    "13585": {
      "op": "DUP2"
    },
    "13586": {
      "op": "AND"
    },
    "13587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13589": {
      "op": "DUP6"
    },
    "13590": {
      "op": "ADD"
    },
    "13591": {
      "op": "MSTORE"
    },
    "13592": {
      "op": "AND"
    },
    "13593": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13596": {
      "op": "DUP4"
    },
    "13597": {
      "op": "ADD"
    },
    "13598": {
      "op": "MSTORE"
    },
    "13599": {
      "op": "SWAP1"
    },
    "13600": {
      "op": "SWAP3"
    },
    "13601": {
      "op": "AND"
    },
    "13602": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13605": {
      "op": "SWAP1"
    },
    "13606": {
      "op": "SWAP3"
    },
    "13607": {
      "op": "ADD"
    },
    "13608": {
      "op": "SWAP2"
    },
    "13609": {
      "op": "SWAP1"
    },
    "13610": {
      "op": "SWAP2"
    },
    "13611": {
      "op": "MSTORE"
    },
    "13612": {
      "op": "SWAP2"
    },
    "13613": {
      "op": "SWAP1"
    },
    "13614": {
      "op": "POP"
    },
    "13615": {
      "jump": "o",
      "op": "JUMP"
    },
    "13616": {
      "op": "JUMPDEST"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13619": {
      "op": "DUP2"
    },
    "13620": {
      "op": "MSTORE"
    },
    "13621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13623": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13628": {
      "op": "DUP4"
    },
    "13629": {
      "op": "ADD"
    },
    "13630": {
      "op": "DUP5"
    },
    "13631": {
      "op": "PUSH2",
      "value": "0x3134"
    },
    "13634": {
      "jump": "i",
      "op": "JUMP"
    },
    "13635": {
      "op": "JUMPDEST"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13640": {
      "op": "DUP1"
    },
    "13641": {
      "op": "DUP4"
    },
    "13642": {
      "op": "ADD"
    },
    "13643": {
      "op": "DUP2"
    },
    "13644": {
      "op": "DUP5"
    },
    "13645": {
      "op": "MSTORE"
    },
    "13646": {
      "op": "DUP1"
    },
    "13647": {
      "op": "DUP6"
    },
    "13648": {
      "op": "MLOAD"
    },
    "13649": {
      "op": "DUP1"
    },
    "13650": {
      "op": "DUP4"
    },
    "13651": {
      "op": "MSTORE"
    },
    "13652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13654": {
      "op": "DUP7"
    },
    "13655": {
      "op": "ADD"
    },
    "13656": {
      "op": "SWAP2"
    },
    "13657": {
      "op": "POP"
    },
    "13658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13660": {
      "op": "DUP2"
    },
    "13661": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13663": {
      "op": "SHL"
    },
    "13664": {
      "op": "DUP8"
    },
    "13665": {
      "op": "ADD"
    },
    "13666": {
      "op": "ADD"
    },
    "13667": {
      "op": "SWAP3"
    },
    "13668": {
      "op": "POP"
    },
    "13669": {
      "op": "DUP4"
    },
    "13670": {
      "op": "DUP8"
    },
    "13671": {
      "op": "ADD"
    },
    "13672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13674": {
      "op": "JUMPDEST"
    },
    "13675": {
      "op": "DUP3"
    },
    "13676": {
      "op": "DUP2"
    },
    "13677": {
      "op": "LT"
    },
    "13678": {
      "op": "ISZERO"
    },
    "13679": {
      "op": "PUSH2",
      "value": "0x3253"
    },
    "13682": {
      "op": "JUMPI"
    },
    "13683": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13685": {
      "op": "NOT"
    },
    "13686": {
      "op": "DUP9"
    },
    "13687": {
      "op": "DUP7"
    },
    "13688": {
      "op": "SUB"
    },
    "13689": {
      "op": "ADD"
    },
    "13690": {
      "op": "DUP5"
    },
    "13691": {
      "op": "MSTORE"
    },
    "13692": {
      "op": "PUSH2",
      "value": "0x3586"
    },
    "13695": {
      "op": "DUP6"
    },
    "13696": {
      "op": "DUP4"
    },
    "13697": {
      "op": "MLOAD"
    },
    "13698": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "13701": {
      "jump": "i",
      "op": "JUMP"
    },
    "13702": {
      "op": "JUMPDEST"
    },
    "13703": {
      "op": "SWAP5"
    },
    "13704": {
      "op": "POP"
    },
    "13705": {
      "op": "SWAP3"
    },
    "13706": {
      "op": "DUP6"
    },
    "13707": {
      "op": "ADD"
    },
    "13708": {
      "op": "SWAP3"
    },
    "13709": {
      "op": "SWAP1"
    },
    "13710": {
      "op": "DUP6"
    },
    "13711": {
      "op": "ADD"
    },
    "13712": {
      "op": "SWAP1"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13715": {
      "op": "ADD"
    },
    "13716": {
      "op": "PUSH2",
      "value": "0x356A"
    },
    "13719": {
      "op": "JUMP"
    },
    "13720": {
      "op": "JUMPDEST"
    },
    "13721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13723": {
      "op": "DUP1"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13726": {
      "op": "DUP1"
    },
    "13727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13729": {
      "op": "DUP1"
    },
    "13730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13732": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13734": {
      "op": "DUP9"
    },
    "13735": {
      "op": "DUP11"
    },
    "13736": {
      "op": "SUB"
    },
    "13737": {
      "op": "SLT"
    },
    "13738": {
      "op": "ISZERO"
    },
    "13739": {
      "op": "PUSH2",
      "value": "0x35B3"
    },
    "13742": {
      "op": "JUMPI"
    },
    "13743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13745": {
      "op": "DUP1"
    },
    "13746": {
      "op": "REVERT"
    },
    "13747": {
      "op": "JUMPDEST"
    },
    "13748": {
      "op": "DUP8"
    },
    "13749": {
      "op": "CALLDATALOAD"
    },
    "13750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13756": {
      "op": "SHL"
    },
    "13757": {
      "op": "SUB"
    },
    "13758": {
      "op": "DUP2"
    },
    "13759": {
      "op": "GT"
    },
    "13760": {
      "op": "ISZERO"
    },
    "13761": {
      "op": "PUSH2",
      "value": "0x35C9"
    },
    "13764": {
      "op": "JUMPI"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13767": {
      "op": "DUP1"
    },
    "13768": {
      "op": "REVERT"
    },
    "13769": {
      "op": "JUMPDEST"
    },
    "13770": {
      "op": "PUSH2",
      "value": "0x35D5"
    },
    "13773": {
      "op": "DUP11"
    },
    "13774": {
      "op": "DUP3"
    },
    "13775": {
      "op": "DUP12"
    },
    "13776": {
      "op": "ADD"
    },
    "13777": {
      "op": "PUSH2",
      "value": "0x3260"
    },
    "13780": {
      "jump": "i",
      "op": "JUMP"
    },
    "13781": {
      "op": "JUMPDEST"
    },
    "13782": {
      "op": "SWAP1"
    },
    "13783": {
      "op": "SWAP9"
    },
    "13784": {
      "op": "POP"
    },
    "13785": {
      "op": "SWAP7"
    },
    "13786": {
      "op": "POP"
    },
    "13787": {
      "op": "PUSH2",
      "value": "0x3324"
    },
    "13790": {
      "op": "SWAP1"
    },
    "13791": {
      "op": "POP"
    },
    "13792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13794": {
      "op": "DUP10"
    },
    "13795": {
      "op": "ADD"
    },
    "13796": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "13799": {
      "jump": "i",
      "op": "JUMP"
    },
    "13800": {
      "op": "JUMPDEST"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13803": {
      "op": "DUP1"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13808": {
      "op": "DUP5"
    },
    "13809": {
      "op": "DUP7"
    },
    "13810": {
      "op": "SUB"
    },
    "13811": {
      "op": "SLT"
    },
    "13812": {
      "op": "ISZERO"
    },
    "13813": {
      "op": "PUSH2",
      "value": "0x35FD"
    },
    "13816": {
      "op": "JUMPI"
    },
    "13817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13819": {
      "op": "DUP1"
    },
    "13820": {
      "op": "REVERT"
    },
    "13821": {
      "op": "JUMPDEST"
    },
    "13822": {
      "op": "DUP4"
    },
    "13823": {
      "op": "CALLDATALOAD"
    },
    "13824": {
      "op": "SWAP3"
    },
    "13825": {
      "op": "POP"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13828": {
      "op": "DUP5"
    },
    "13829": {
      "op": "ADD"
    },
    "13830": {
      "op": "CALLDATALOAD"
    },
    "13831": {
      "op": "SWAP2"
    },
    "13832": {
      "op": "POP"
    },
    "13833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13835": {
      "op": "DUP5"
    },
    "13836": {
      "op": "ADD"
    },
    "13837": {
      "op": "CALLDATALOAD"
    },
    "13838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13844": {
      "op": "SHL"
    },
    "13845": {
      "op": "SUB"
    },
    "13846": {
      "op": "DUP2"
    },
    "13847": {
      "op": "GT"
    },
    "13848": {
      "op": "ISZERO"
    },
    "13849": {
      "op": "PUSH2",
      "value": "0x3621"
    },
    "13852": {
      "op": "JUMPI"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13855": {
      "op": "DUP1"
    },
    "13856": {
      "op": "REVERT"
    },
    "13857": {
      "op": "JUMPDEST"
    },
    "13858": {
      "op": "PUSH2",
      "value": "0x362D"
    },
    "13861": {
      "op": "DUP7"
    },
    "13862": {
      "op": "DUP3"
    },
    "13863": {
      "op": "DUP8"
    },
    "13864": {
      "op": "ADD"
    },
    "13865": {
      "op": "PUSH2",
      "value": "0x2FB5"
    },
    "13868": {
      "jump": "i",
      "op": "JUMP"
    },
    "13869": {
      "op": "JUMPDEST"
    },
    "13870": {
      "op": "SWAP2"
    },
    "13871": {
      "op": "POP"
    },
    "13872": {
      "op": "POP"
    },
    "13873": {
      "op": "SWAP3"
    },
    "13874": {
      "op": "POP"
    },
    "13875": {
      "op": "SWAP3"
    },
    "13876": {
      "op": "POP"
    },
    "13877": {
      "op": "SWAP3"
    },
    "13878": {
      "jump": "o",
      "op": "JUMP"
    },
    "13879": {
      "op": "JUMPDEST"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13884": {
      "op": "DUP3"
    },
    "13885": {
      "op": "DUP5"
    },
    "13886": {
      "op": "SUB"
    },
    "13887": {
      "op": "SLT"
    },
    "13888": {
      "op": "ISZERO"
    },
    "13889": {
      "op": "PUSH2",
      "value": "0x3649"
    },
    "13892": {
      "op": "JUMPI"
    },
    "13893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13895": {
      "op": "DUP1"
    },
    "13896": {
      "op": "REVERT"
    },
    "13897": {
      "op": "JUMPDEST"
    },
    "13898": {
      "op": "DUP2"
    },
    "13899": {
      "op": "CALLDATALOAD"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13906": {
      "op": "SHL"
    },
    "13907": {
      "op": "SUB"
    },
    "13908": {
      "op": "DUP2"
    },
    "13909": {
      "op": "GT"
    },
    "13910": {
      "op": "ISZERO"
    },
    "13911": {
      "op": "PUSH2",
      "value": "0x365F"
    },
    "13914": {
      "op": "JUMPI"
    },
    "13915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13917": {
      "op": "DUP1"
    },
    "13918": {
      "op": "REVERT"
    },
    "13919": {
      "op": "JUMPDEST"
    },
    "13920": {
      "op": "PUSH2",
      "value": "0x366B"
    },
    "13923": {
      "op": "DUP5"
    },
    "13924": {
      "op": "DUP3"
    },
    "13925": {
      "op": "DUP6"
    },
    "13926": {
      "op": "ADD"
    },
    "13927": {
      "op": "PUSH2",
      "value": "0x33BE"
    },
    "13930": {
      "jump": "i",
      "op": "JUMP"
    },
    "13931": {
      "op": "JUMPDEST"
    },
    "13932": {
      "op": "SWAP5"
    },
    "13933": {
      "op": "SWAP4"
    },
    "13934": {
      "op": "POP"
    },
    "13935": {
      "op": "POP"
    },
    "13936": {
      "op": "POP"
    },
    "13937": {
      "op": "POP"
    },
    "13938": {
      "jump": "o",
      "op": "JUMP"
    },
    "13939": {
      "op": "JUMPDEST"
    },
    "13940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13942": {
      "op": "DUP1"
    },
    "13943": {
      "op": "DUP3"
    },
    "13944": {
      "op": "MSTORE"
    },
    "13945": {
      "op": "DUP3"
    },
    "13946": {
      "op": "MLOAD"
    },
    "13947": {
      "op": "DUP3"
    },
    "13948": {
      "op": "DUP3"
    },
    "13949": {
      "op": "ADD"
    },
    "13950": {
      "op": "DUP2"
    },
    "13951": {
      "op": "SWAP1"
    },
    "13952": {
      "op": "MSTORE"
    },
    "13953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13955": {
      "op": "SWAP2"
    },
    "13956": {
      "op": "SWAP1"
    },
    "13957": {
      "op": "DUP5"
    },
    "13958": {
      "op": "DUP3"
    },
    "13959": {
      "op": "ADD"
    },
    "13960": {
      "op": "SWAP1"
    },
    "13961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13963": {
      "op": "DUP6"
    },
    "13964": {
      "op": "ADD"
    },
    "13965": {
      "op": "SWAP1"
    },
    "13966": {
      "op": "DUP5"
    },
    "13967": {
      "op": "JUMPDEST"
    },
    "13968": {
      "op": "DUP2"
    },
    "13969": {
      "op": "DUP2"
    },
    "13970": {
      "op": "LT"
    },
    "13971": {
      "op": "ISZERO"
    },
    "13972": {
      "op": "PUSH2",
      "value": "0x36AF"
    },
    "13975": {
      "op": "JUMPI"
    },
    "13976": {
      "op": "DUP4"
    },
    "13977": {
      "op": "MLOAD"
    },
    "13978": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13981": {
      "op": "AND"
    },
    "13982": {
      "op": "DUP4"
    },
    "13983": {
      "op": "MSTORE"
    },
    "13984": {
      "op": "SWAP3"
    },
    "13985": {
      "op": "DUP5"
    },
    "13986": {
      "op": "ADD"
    },
    "13987": {
      "op": "SWAP3"
    },
    "13988": {
      "op": "SWAP2"
    },
    "13989": {
      "op": "DUP5"
    },
    "13990": {
      "op": "ADD"
    },
    "13991": {
      "op": "SWAP2"
    },
    "13992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13994": {
      "op": "ADD"
    },
    "13995": {
      "op": "PUSH2",
      "value": "0x368F"
    },
    "13998": {
      "op": "JUMP"
    },
    "13999": {
      "op": "JUMPDEST"
    },
    "14000": {
      "op": "POP"
    },
    "14001": {
      "op": "SWAP1"
    },
    "14002": {
      "op": "SWAP7"
    },
    "14003": {
      "op": "SWAP6"
    },
    "14004": {
      "op": "POP"
    },
    "14005": {
      "op": "POP"
    },
    "14006": {
      "op": "POP"
    },
    "14007": {
      "op": "POP"
    },
    "14008": {
      "op": "POP"
    },
    "14009": {
      "op": "POP"
    },
    "14010": {
      "jump": "o",
      "op": "JUMP"
    },
    "14011": {
      "op": "JUMPDEST"
    },
    "14012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14014": {
      "op": "DUP2"
    },
    "14015": {
      "op": "DUP2"
    },
    "14016": {
      "op": "SHR"
    },
    "14017": {
      "op": "SWAP1"
    },
    "14018": {
      "op": "DUP3"
    },
    "14019": {
      "op": "AND"
    },
    "14020": {
      "op": "DUP1"
    },
    "14021": {
      "op": "PUSH2",
      "value": "0x36CF"
    },
    "14024": {
      "op": "JUMPI"
    },
    "14025": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14027": {
      "op": "DUP3"
    },
    "14028": {
      "op": "AND"
    },
    "14029": {
      "op": "SWAP2"
    },
    "14030": {
      "op": "POP"
    },
    "14031": {
      "op": "JUMPDEST"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14034": {
      "op": "DUP3"
    },
    "14035": {
      "op": "LT"
    },
    "14036": {
      "op": "DUP2"
    },
    "14037": {
      "op": "SUB"
    },
    "14038": {
      "op": "PUSH2",
      "value": "0x36EF"
    },
    "14041": {
      "op": "JUMPI"
    },
    "14042": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14049": {
      "op": "SHL"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14052": {
      "op": "MSTORE"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14057": {
      "op": "MSTORE"
    },
    "14058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14062": {
      "op": "REVERT"
    },
    "14063": {
      "op": "JUMPDEST"
    },
    "14064": {
      "op": "POP"
    },
    "14065": {
      "op": "SWAP2"
    },
    "14066": {
      "op": "SWAP1"
    },
    "14067": {
      "op": "POP"
    },
    "14068": {
      "jump": "o",
      "op": "JUMP"
    },
    "14069": {
      "op": "JUMPDEST"
    },
    "14070": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14075": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14077": {
      "op": "SHL"
    },
    "14078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14080": {
      "op": "MSTORE"
    },
    "14081": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14083": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14085": {
      "op": "MSTORE"
    },
    "14086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14090": {
      "op": "REVERT"
    },
    "14091": {
      "op": "JUMPDEST"
    },
    "14092": {
      "op": "DUP2"
    },
    "14093": {
      "op": "MLOAD"
    },
    "14094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14096": {
      "op": "SWAP1"
    },
    "14097": {
      "op": "DUP3"
    },
    "14098": {
      "op": "SWAP1"
    },
    "14099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14101": {
      "op": "DUP1"
    },
    "14102": {
      "op": "DUP7"
    },
    "14103": {
      "op": "ADD"
    },
    "14104": {
      "op": "DUP5"
    },
    "14105": {
      "op": "JUMPDEST"
    },
    "14106": {
      "op": "DUP4"
    },
    "14107": {
      "op": "DUP2"
    },
    "14108": {
      "op": "LT"
    },
    "14109": {
      "op": "ISZERO"
    },
    "14110": {
      "op": "PUSH2",
      "value": "0x3735"
    },
    "14113": {
      "op": "JUMPI"
    },
    "14114": {
      "op": "DUP2"
    },
    "14115": {
      "op": "MLOAD"
    },
    "14116": {
      "op": "DUP6"
    },
    "14117": {
      "op": "MSTORE"
    },
    "14118": {
      "op": "SWAP4"
    },
    "14119": {
      "op": "DUP3"
    },
    "14120": {
      "op": "ADD"
    },
    "14121": {
      "op": "SWAP4"
    },
    "14122": {
      "op": "SWAP1"
    },
    "14123": {
      "op": "DUP3"
    },
    "14124": {
      "op": "ADD"
    },
    "14125": {
      "op": "SWAP1"
    },
    "14126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14128": {
      "op": "ADD"
    },
    "14129": {
      "op": "PUSH2",
      "value": "0x3719"
    },
    "14132": {
      "op": "JUMP"
    },
    "14133": {
      "op": "JUMPDEST"
    },
    "14134": {
      "op": "POP"
    },
    "14135": {
      "op": "SWAP3"
    },
    "14136": {
      "op": "SWAP7"
    },
    "14137": {
      "op": "SWAP6"
    },
    "14138": {
      "op": "POP"
    },
    "14139": {
      "op": "POP"
    },
    "14140": {
      "op": "POP"
    },
    "14141": {
      "op": "POP"
    },
    "14142": {
      "op": "POP"
    },
    "14143": {
      "op": "POP"
    },
    "14144": {
      "jump": "o",
      "op": "JUMP"
    },
    "14145": {
      "op": "JUMPDEST"
    },
    "14146": {
      "op": "DUP5"
    },
    "14147": {
      "op": "DUP2"
    },
    "14148": {
      "op": "MSTORE"
    },
    "14149": {
      "op": "DUP4"
    },
    "14150": {
      "op": "ISZERO"
    },
    "14151": {
      "op": "ISZERO"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14154": {
      "op": "DUP3"
    },
    "14155": {
      "op": "ADD"
    },
    "14156": {
      "op": "MSTORE"
    },
    "14157": {
      "op": "DUP3"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14160": {
      "op": "DUP3"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "MSTORE"
    },
    "14163": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14167": {
      "op": "DUP3"
    },
    "14168": {
      "op": "ADD"
    },
    "14169": {
      "op": "MSTORE"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14172": {
      "op": "PUSH2",
      "value": "0x3768"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14177": {
      "op": "DUP4"
    },
    "14178": {
      "op": "ADD"
    },
    "14179": {
      "op": "DUP5"
    },
    "14180": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "14183": {
      "jump": "i",
      "op": "JUMP"
    },
    "14184": {
      "op": "JUMPDEST"
    },
    "14185": {
      "op": "SWAP7"
    },
    "14186": {
      "op": "SWAP6"
    },
    "14187": {
      "op": "POP"
    },
    "14188": {
      "op": "POP"
    },
    "14189": {
      "op": "POP"
    },
    "14190": {
      "op": "POP"
    },
    "14191": {
      "op": "POP"
    },
    "14192": {
      "op": "POP"
    },
    "14193": {
      "jump": "o",
      "op": "JUMP"
    },
    "14194": {
      "op": "JUMPDEST"
    },
    "14195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14197": {
      "op": "DUP1"
    },
    "14198": {
      "op": "DUP3"
    },
    "14199": {
      "op": "MSTORE"
    },
    "14200": {
      "op": "DUP2"
    },
    "14201": {
      "op": "DUP2"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "op": "MSTORE"
    },
    "14204": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14239": {
      "op": "DUP3"
    },
    "14240": {
      "op": "ADD"
    },
    "14241": {
      "op": "MSTORE"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "SWAP1"
    },
    "14246": {
      "jump": "o",
      "op": "JUMP"
    },
    "14247": {
      "op": "JUMPDEST"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14250": {
      "op": "DUP2"
    },
    "14251": {
      "op": "MSTORE"
    },
    "14252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14254": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "14257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14259": {
      "op": "DUP4"
    },
    "14260": {
      "op": "ADD"
    },
    "14261": {
      "op": "DUP5"
    },
    "14262": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "14265": {
      "jump": "i",
      "op": "JUMP"
    },
    "14266": {
      "op": "JUMPDEST"
    },
    "14267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14269": {
      "op": "DUP2"
    },
    "14270": {
      "op": "SLOAD"
    },
    "14271": {
      "op": "PUSH2",
      "value": "0x37C7"
    },
    "14274": {
      "op": "DUP2"
    },
    "14275": {
      "op": "PUSH2",
      "value": "0x36BB"
    },
    "14278": {
      "jump": "i",
      "op": "JUMP"
    },
    "14279": {
      "op": "JUMPDEST"
    },
    "14280": {
      "op": "DUP1"
    },
    "14281": {
      "op": "DUP6"
    },
    "14282": {
      "op": "MSTORE"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14287": {
      "op": "DUP4"
    },
    "14288": {
      "op": "DUP2"
    },
    "14289": {
      "op": "AND"
    },
    "14290": {
      "op": "DUP1"
    },
    "14291": {
      "op": "ISZERO"
    },
    "14292": {
      "op": "PUSH2",
      "value": "0x37E4"
    },
    "14295": {
      "op": "JUMPI"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14298": {
      "op": "DUP2"
    },
    "14299": {
      "op": "EQ"
    },
    "14300": {
      "op": "PUSH2",
      "value": "0x37FE"
    },
    "14303": {
      "op": "JUMPI"
    },
    "14304": {
      "op": "PUSH2",
      "value": "0x382C"
    },
    "14307": {
      "op": "JUMP"
    },
    "14308": {
      "op": "JUMPDEST"
    },
    "14309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14311": {
      "op": "NOT"
    },
    "14312": {
      "op": "DUP6"
    },
    "14313": {
      "op": "AND"
    },
    "14314": {
      "op": "DUP9"
    },
    "14315": {
      "op": "DUP5"
    },
    "14316": {
      "op": "ADD"
    },
    "14317": {
      "op": "MSTORE"
    },
    "14318": {
      "op": "DUP4"
    },
    "14319": {
      "op": "ISZERO"
    },
    "14320": {
      "op": "ISZERO"
    },
    "14321": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14323": {
      "op": "SHL"
    },
    "14324": {
      "op": "DUP9"
    },
    "14325": {
      "op": "ADD"
    },
    "14326": {
      "op": "DUP4"
    },
    "14327": {
      "op": "ADD"
    },
    "14328": {
      "op": "SWAP6"
    },
    "14329": {
      "op": "POP"
    },
    "14330": {
      "op": "PUSH2",
      "value": "0x382C"
    },
    "14333": {
      "op": "JUMP"
    },
    "14334": {
      "op": "JUMPDEST"
    },
    "14335": {
      "op": "DUP7"
    },
    "14336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14338": {
      "op": "MSTORE"
    },
    "14339": {
      "op": "DUP3"
    },
    "14340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14342": {
      "op": "KECCAK256"
    },
    "14343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14345": {
      "op": "JUMPDEST"
    },
    "14346": {
      "op": "DUP6"
    },
    "14347": {
      "op": "DUP2"
    },
    "14348": {
      "op": "LT"
    },
    "14349": {
      "op": "ISZERO"
    },
    "14350": {
      "op": "PUSH2",
      "value": "0x3824"
    },
    "14353": {
      "op": "JUMPI"
    },
    "14354": {
      "op": "DUP2"
    },
    "14355": {
      "op": "SLOAD"
    },
    "14356": {
      "op": "DUP11"
    },
    "14357": {
      "op": "DUP3"
    },
    "14358": {
      "op": "ADD"
    },
    "14359": {
      "op": "DUP7"
    },
    "14360": {
      "op": "ADD"
    },
    "14361": {
      "op": "MSTORE"
    },
    "14362": {
      "op": "SWAP1"
    },
    "14363": {
      "op": "DUP4"
    },
    "14364": {
      "op": "ADD"
    },
    "14365": {
      "op": "SWAP1"
    },
    "14366": {
      "op": "DUP5"
    },
    "14367": {
      "op": "ADD"
    },
    "14368": {
      "op": "PUSH2",
      "value": "0x3809"
    },
    "14371": {
      "op": "JUMP"
    },
    "14372": {
      "op": "JUMPDEST"
    },
    "14373": {
      "op": "DUP10"
    },
    "14374": {
      "op": "ADD"
    },
    "14375": {
      "op": "DUP5"
    },
    "14376": {
      "op": "ADD"
    },
    "14377": {
      "op": "SWAP7"
    },
    "14378": {
      "op": "POP"
    },
    "14379": {
      "op": "POP"
    },
    "14380": {
      "op": "JUMPDEST"
    },
    "14381": {
      "op": "POP"
    },
    "14382": {
      "op": "POP"
    },
    "14383": {
      "op": "POP"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "op": "POP"
    },
    "14386": {
      "op": "SWAP3"
    },
    "14387": {
      "op": "SWAP2"
    },
    "14388": {
      "op": "POP"
    },
    "14389": {
      "op": "POP"
    },
    "14390": {
      "jump": "o",
      "op": "JUMP"
    },
    "14391": {
      "op": "JUMPDEST"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14394": {
      "op": "DUP2"
    },
    "14395": {
      "op": "MSTORE"
    },
    "14396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14398": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "14401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14403": {
      "op": "DUP4"
    },
    "14404": {
      "op": "ADD"
    },
    "14405": {
      "op": "DUP5"
    },
    "14406": {
      "op": "PUSH2",
      "value": "0x37BA"
    },
    "14409": {
      "jump": "i",
      "op": "JUMP"
    },
    "14410": {
      "op": "JUMPDEST"
    },
    "14411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14413": {
      "op": "DUP3"
    },
    "14414": {
      "op": "GT"
    },
    "14415": {
      "op": "ISZERO"
    },
    "14416": {
      "op": "PUSH2",
      "value": "0x3894"
    },
    "14419": {
      "op": "JUMPI"
    },
    "14420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14422": {
      "op": "DUP2"
    },
    "14423": {
      "op": "DUP2"
    },
    "14424": {
      "op": "MSTORE"
    },
    "14425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14427": {
      "op": "DUP2"
    },
    "14428": {
      "op": "KECCAK256"
    },
    "14429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14431": {
      "op": "DUP6"
    },
    "14432": {
      "op": "ADD"
    },
    "14433": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14435": {
      "op": "SHR"
    },
    "14436": {
      "op": "DUP2"
    },
    "14437": {
      "op": "ADD"
    },
    "14438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14440": {
      "op": "DUP7"
    },
    "14441": {
      "op": "LT"
    },
    "14442": {
      "op": "ISZERO"
    },
    "14443": {
      "op": "PUSH2",
      "value": "0x3871"
    },
    "14446": {
      "op": "JUMPI"
    },
    "14447": {
      "op": "POP"
    },
    "14448": {
      "op": "DUP1"
    },
    "14449": {
      "op": "JUMPDEST"
    },
    "14450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14452": {
      "op": "DUP6"
    },
    "14453": {
      "op": "ADD"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14456": {
      "op": "SHR"
    },
    "14457": {
      "op": "DUP3"
    },
    "14458": {
      "op": "ADD"
    },
    "14459": {
      "op": "SWAP2"
    },
    "14460": {
      "op": "POP"
    },
    "14461": {
      "op": "JUMPDEST"
    },
    "14462": {
      "op": "DUP2"
    },
    "14463": {
      "op": "DUP2"
    },
    "14464": {
      "op": "LT"
    },
    "14465": {
      "op": "ISZERO"
    },
    "14466": {
      "op": "PUSH2",
      "value": "0x3890"
    },
    "14469": {
      "op": "JUMPI"
    },
    "14470": {
      "op": "DUP3"
    },
    "14471": {
      "op": "DUP2"
    },
    "14472": {
      "op": "SSTORE"
    },
    "14473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14475": {
      "op": "ADD"
    },
    "14476": {
      "op": "PUSH2",
      "value": "0x387D"
    },
    "14479": {
      "op": "JUMP"
    },
    "14480": {
      "op": "JUMPDEST"
    },
    "14481": {
      "op": "POP"
    },
    "14482": {
      "op": "POP"
    },
    "14483": {
      "op": "POP"
    },
    "14484": {
      "op": "JUMPDEST"
    },
    "14485": {
      "op": "POP"
    },
    "14486": {
      "op": "POP"
    },
    "14487": {
      "op": "POP"
    },
    "14488": {
      "jump": "o",
      "op": "JUMP"
    },
    "14489": {
      "op": "JUMPDEST"
    },
    "14490": {
      "op": "DUP2"
    },
    "14491": {
      "op": "MLOAD"
    },
    "14492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14498": {
      "op": "SHL"
    },
    "14499": {
      "op": "SUB"
    },
    "14500": {
      "op": "DUP2"
    },
    "14501": {
      "op": "GT"
    },
    "14502": {
      "op": "ISZERO"
    },
    "14503": {
      "op": "PUSH2",
      "value": "0x38B2"
    },
    "14506": {
      "op": "JUMPI"
    },
    "14507": {
      "op": "PUSH2",
      "value": "0x38B2"
    },
    "14510": {
      "op": "PUSH2",
      "value": "0x2F6F"
    },
    "14513": {
      "jump": "i",
      "op": "JUMP"
    },
    "14514": {
      "op": "JUMPDEST"
    },
    "14515": {
      "op": "PUSH2",
      "value": "0x38C6"
    },
    "14518": {
      "op": "DUP2"
    },
    "14519": {
      "op": "PUSH2",
      "value": "0x38C0"
    },
    "14522": {
      "op": "DUP5"
    },
    "14523": {
      "op": "SLOAD"
    },
    "14524": {
      "op": "PUSH2",
      "value": "0x36BB"
    },
    "14527": {
      "jump": "i",
      "op": "JUMP"
    },
    "14528": {
      "op": "JUMPDEST"
    },
    "14529": {
      "op": "DUP5"
    },
    "14530": {
      "op": "PUSH2",
      "value": "0x384A"
    },
    "14533": {
      "jump": "i",
      "op": "JUMP"
    },
    "14534": {
      "op": "JUMPDEST"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14537": {
      "op": "DUP1"
    },
    "14538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14540": {
      "op": "DUP4"
    },
    "14541": {
      "op": "GT"
    },
    "14542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14544": {
      "op": "DUP2"
    },
    "14545": {
      "op": "EQ"
    },
    "14546": {
      "op": "PUSH2",
      "value": "0x38FB"
    },
    "14549": {
      "op": "JUMPI"
    },
    "14550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14552": {
      "op": "DUP5"
    },
    "14553": {
      "op": "ISZERO"
    },
    "14554": {
      "op": "PUSH2",
      "value": "0x38E3"
    },
    "14557": {
      "op": "JUMPI"
    },
    "14558": {
      "op": "POP"
    },
    "14559": {
      "op": "DUP6"
    },
    "14560": {
      "op": "DUP4"
    },
    "14561": {
      "op": "ADD"
    },
    "14562": {
      "op": "MLOAD"
    },
    "14563": {
      "op": "JUMPDEST"
    },
    "14564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14566": {
      "op": "NOT"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14569": {
      "op": "DUP7"
    },
    "14570": {
      "op": "SWAP1"
    },
    "14571": {
      "op": "SHL"
    },
    "14572": {
      "op": "SHR"
    },
    "14573": {
      "op": "NOT"
    },
    "14574": {
      "op": "AND"
    },
    "14575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14577": {
      "op": "DUP6"
    },
    "14578": {
      "op": "SWAP1"
    },
    "14579": {
      "op": "SHL"
    },
    "14580": {
      "op": "OR"
    },
    "14581": {
      "op": "DUP6"
    },
    "14582": {
      "op": "SSTORE"
    },
    "14583": {
      "op": "PUSH2",
      "value": "0x3890"
    },
    "14586": {
      "op": "JUMP"
    },
    "14587": {
      "op": "JUMPDEST"
    },
    "14588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14590": {
      "op": "DUP6"
    },
    "14591": {
      "op": "DUP2"
    },
    "14592": {
      "op": "MSTORE"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14595": {
      "op": "DUP2"
    },
    "14596": {
      "op": "KECCAK256"
    },
    "14597": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14599": {
      "op": "NOT"
    },
    "14600": {
      "op": "DUP7"
    },
    "14601": {
      "op": "AND"
    },
    "14602": {
      "op": "SWAP2"
    },
    "14603": {
      "op": "JUMPDEST"
    },
    "14604": {
      "op": "DUP3"
    },
    "14605": {
      "op": "DUP2"
    },
    "14606": {
      "op": "LT"
    },
    "14607": {
      "op": "ISZERO"
    },
    "14608": {
      "op": "PUSH2",
      "value": "0x392A"
    },
    "14611": {
      "op": "JUMPI"
    },
    "14612": {
      "op": "DUP9"
    },
    "14613": {
      "op": "DUP7"
    },
    "14614": {
      "op": "ADD"
    },
    "14615": {
      "op": "MLOAD"
    },
    "14616": {
      "op": "DUP3"
    },
    "14617": {
      "op": "SSTORE"
    },
    "14618": {
      "op": "SWAP5"
    },
    "14619": {
      "op": "DUP5"
    },
    "14620": {
      "op": "ADD"
    },
    "14621": {
      "op": "SWAP5"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14624": {
      "op": "SWAP1"
    },
    "14625": {
      "op": "SWAP2"
    },
    "14626": {
      "op": "ADD"
    },
    "14627": {
      "op": "SWAP1"
    },
    "14628": {
      "op": "DUP5"
    },
    "14629": {
      "op": "ADD"
    },
    "14630": {
      "op": "PUSH2",
      "value": "0x390B"
    },
    "14633": {
      "op": "JUMP"
    },
    "14634": {
      "op": "JUMPDEST"
    },
    "14635": {
      "op": "POP"
    },
    "14636": {
      "op": "DUP6"
    },
    "14637": {
      "op": "DUP3"
    },
    "14638": {
      "op": "LT"
    },
    "14639": {
      "op": "ISZERO"
    },
    "14640": {
      "op": "PUSH2",
      "value": "0x3948"
    },
    "14643": {
      "op": "JUMPI"
    },
    "14644": {
      "op": "DUP8"
    },
    "14645": {
      "op": "DUP6"
    },
    "14646": {
      "op": "ADD"
    },
    "14647": {
      "op": "MLOAD"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14650": {
      "op": "NOT"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14653": {
      "op": "DUP9"
    },
    "14654": {
      "op": "SWAP1"
    },
    "14655": {
      "op": "SHL"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14658": {
      "op": "AND"
    },
    "14659": {
      "op": "SHR"
    },
    "14660": {
      "op": "NOT"
    },
    "14661": {
      "op": "AND"
    },
    "14662": {
      "op": "DUP2"
    },
    "14663": {
      "op": "SSTORE"
    },
    "14664": {
      "op": "JUMPDEST"
    },
    "14665": {
      "op": "POP"
    },
    "14666": {
      "op": "POP"
    },
    "14667": {
      "op": "POP"
    },
    "14668": {
      "op": "POP"
    },
    "14669": {
      "op": "POP"
    },
    "14670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14672": {
      "op": "SWAP1"
    },
    "14673": {
      "op": "DUP2"
    },
    "14674": {
      "op": "SHL"
    },
    "14675": {
      "op": "ADD"
    },
    "14676": {
      "op": "SWAP1"
    },
    "14677": {
      "op": "SSTORE"
    },
    "14678": {
      "op": "POP"
    },
    "14679": {
      "jump": "o",
      "op": "JUMP"
    },
    "14680": {
      "op": "JUMPDEST"
    },
    "14681": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14688": {
      "op": "SHL"
    },
    "14689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14691": {
      "op": "MSTORE"
    },
    "14692": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14694": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14696": {
      "op": "MSTORE"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14701": {
      "op": "REVERT"
    },
    "14702": {
      "op": "JUMPDEST"
    },
    "14703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14705": {
      "op": "DUP3"
    },
    "14706": {
      "op": "NOT"
    },
    "14707": {
      "op": "DUP3"
    },
    "14708": {
      "op": "GT"
    },
    "14709": {
      "op": "ISZERO"
    },
    "14710": {
      "op": "PUSH2",
      "value": "0x3981"
    },
    "14713": {
      "op": "JUMPI"
    },
    "14714": {
      "op": "PUSH2",
      "value": "0x3981"
    },
    "14717": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "14720": {
      "jump": "i",
      "op": "JUMP"
    },
    "14721": {
      "op": "JUMPDEST"
    },
    "14722": {
      "op": "POP"
    },
    "14723": {
      "op": "ADD"
    },
    "14724": {
      "op": "SWAP1"
    },
    "14725": {
      "jump": "o",
      "op": "JUMP"
    },
    "14726": {
      "op": "JUMPDEST"
    },
    "14727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14729": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14732": {
      "op": "DUP4"
    },
    "14733": {
      "op": "DUP2"
    },
    "14734": {
      "op": "AND"
    },
    "14735": {
      "op": "SWAP1"
    },
    "14736": {
      "op": "DUP4"
    },
    "14737": {
      "op": "AND"
    },
    "14738": {
      "op": "DUP2"
    },
    "14739": {
      "op": "DUP2"
    },
    "14740": {
      "op": "LT"
    },
    "14741": {
      "op": "ISZERO"
    },
    "14742": {
      "op": "PUSH2",
      "value": "0x39A1"
    },
    "14745": {
      "op": "JUMPI"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0x39A1"
    },
    "14749": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "14752": {
      "jump": "i",
      "op": "JUMP"
    },
    "14753": {
      "op": "JUMPDEST"
    },
    "14754": {
      "op": "SUB"
    },
    "14755": {
      "op": "SWAP4"
    },
    "14756": {
      "op": "SWAP3"
    },
    "14757": {
      "op": "POP"
    },
    "14758": {
      "op": "POP"
    },
    "14759": {
      "op": "POP"
    },
    "14760": {
      "jump": "o",
      "op": "JUMP"
    },
    "14761": {
      "op": "JUMPDEST"
    },
    "14762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14764": {
      "op": "DUP3"
    },
    "14765": {
      "op": "DUP3"
    },
    "14766": {
      "op": "LT"
    },
    "14767": {
      "op": "ISZERO"
    },
    "14768": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14771": {
      "op": "JUMPI"
    },
    "14772": {
      "op": "PUSH2",
      "value": "0x39BB"
    },
    "14775": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "14778": {
      "jump": "i",
      "op": "JUMP"
    },
    "14779": {
      "op": "JUMPDEST"
    },
    "14780": {
      "op": "POP"
    },
    "14781": {
      "op": "SUB"
    },
    "14782": {
      "op": "SWAP1"
    },
    "14783": {
      "jump": "o",
      "op": "JUMP"
    },
    "14784": {
      "op": "JUMPDEST"
    },
    "14785": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14791": {
      "op": "DUP6"
    },
    "14792": {
      "op": "AND"
    },
    "14793": {
      "op": "DUP2"
    },
    "14794": {
      "op": "MSTORE"
    },
    "14795": {
      "op": "DUP4"
    },
    "14796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14798": {
      "op": "DUP3"
    },
    "14799": {
      "op": "ADD"
    },
    "14800": {
      "op": "MSTORE"
    },
    "14801": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14805": {
      "op": "DUP3"
    },
    "14806": {
      "op": "ADD"
    },
    "14807": {
      "op": "MSTORE"
    },
    "14808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14810": {
      "op": "PUSH2",
      "value": "0x39E6"
    },
    "14813": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14815": {
      "op": "DUP4"
    },
    "14816": {
      "op": "ADD"
    },
    "14817": {
      "op": "DUP6"
    },
    "14818": {
      "op": "PUSH2",
      "value": "0x2EFF"
    },
    "14821": {
      "jump": "i",
      "op": "JUMP"
    },
    "14822": {
      "op": "JUMPDEST"
    },
    "14823": {
      "op": "SWAP1"
    },
    "14824": {
      "op": "POP"
    },
    "14825": {
      "op": "DUP3"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14828": {
      "op": "DUP4"
    },
    "14829": {
      "op": "ADD"
    },
    "14830": {
      "op": "MSTORE"
    },
    "14831": {
      "op": "SWAP6"
    },
    "14832": {
      "op": "SWAP5"
    },
    "14833": {
      "op": "POP"
    },
    "14834": {
      "op": "POP"
    },
    "14835": {
      "op": "POP"
    },
    "14836": {
      "op": "POP"
    },
    "14837": {
      "op": "POP"
    },
    "14838": {
      "jump": "o",
      "op": "JUMP"
    },
    "14839": {
      "op": "JUMPDEST"
    },
    "14840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14844": {
      "op": "DUP3"
    },
    "14845": {
      "op": "ADD"
    },
    "14846": {
      "op": "PUSH2",
      "value": "0x3A09"
    },
    "14849": {
      "op": "JUMPI"
    },
    "14850": {
      "op": "PUSH2",
      "value": "0x3A09"
    },
    "14853": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "14856": {
      "jump": "i",
      "op": "JUMP"
    },
    "14857": {
      "op": "JUMPDEST"
    },
    "14858": {
      "op": "POP"
    },
    "14859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14861": {
      "op": "ADD"
    },
    "14862": {
      "op": "SWAP1"
    },
    "14863": {
      "jump": "o",
      "op": "JUMP"
    },
    "14864": {
      "op": "JUMPDEST"
    },
    "14865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14869": {
      "op": "DUP3"
    },
    "14870": {
      "op": "DUP5"
    },
    "14871": {
      "op": "SUB"
    },
    "14872": {
      "op": "SLT"
    },
    "14873": {
      "op": "ISZERO"
    },
    "14874": {
      "op": "PUSH2",
      "value": "0x3A22"
    },
    "14877": {
      "op": "JUMPI"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14880": {
      "op": "DUP1"
    },
    "14881": {
      "op": "REVERT"
    },
    "14882": {
      "op": "JUMPDEST"
    },
    "14883": {
      "op": "DUP2"
    },
    "14884": {
      "op": "MLOAD"
    },
    "14885": {
      "op": "PUSH2",
      "value": "0x312D"
    },
    "14888": {
      "op": "DUP2"
    },
    "14889": {
      "op": "PUSH2",
      "value": "0x338C"
    },
    "14892": {
      "jump": "i",
      "op": "JUMP"
    },
    "14893": {
      "op": "JUMPDEST"
    },
    "14894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14900": {
      "op": "SHL"
    },
    "14901": {
      "op": "SUB"
    },
    "14902": {
      "op": "DUP4"
    },
    "14903": {
      "op": "GT"
    },
    "14904": {
      "op": "ISZERO"
    },
    "14905": {
      "op": "PUSH2",
      "value": "0x3A44"
    },
    "14908": {
      "op": "JUMPI"
    },
    "14909": {
      "op": "PUSH2",
      "value": "0x3A44"
    },
    "14912": {
      "op": "PUSH2",
      "value": "0x2F6F"
    },
    "14915": {
      "jump": "i",
      "op": "JUMP"
    },
    "14916": {
      "op": "JUMPDEST"
    },
    "14917": {
      "op": "PUSH2",
      "value": "0x3A58"
    },
    "14920": {
      "op": "DUP4"
    },
    "14921": {
      "op": "PUSH2",
      "value": "0x3A52"
    },
    "14924": {
      "op": "DUP4"
    },
    "14925": {
      "op": "SLOAD"
    },
    "14926": {
      "op": "PUSH2",
      "value": "0x36BB"
    },
    "14929": {
      "jump": "i",
      "op": "JUMP"
    },
    "14930": {
      "op": "JUMPDEST"
    },
    "14931": {
      "op": "DUP4"
    },
    "14932": {
      "op": "PUSH2",
      "value": "0x384A"
    },
    "14935": {
      "jump": "i",
      "op": "JUMP"
    },
    "14936": {
      "op": "JUMPDEST"
    },
    "14937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14939": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14941": {
      "op": "DUP5"
    },
    "14942": {
      "op": "GT"
    },
    "14943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14945": {
      "op": "DUP2"
    },
    "14946": {
      "op": "EQ"
    },
    "14947": {
      "op": "PUSH2",
      "value": "0x3A8C"
    },
    "14950": {
      "op": "JUMPI"
    },
    "14951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14953": {
      "op": "DUP6"
    },
    "14954": {
      "op": "ISZERO"
    },
    "14955": {
      "op": "PUSH2",
      "value": "0x3A74"
    },
    "14958": {
      "op": "JUMPI"
    },
    "14959": {
      "op": "POP"
    },
    "14960": {
      "op": "DUP4"
    },
    "14961": {
      "op": "DUP3"
    },
    "14962": {
      "op": "ADD"
    },
    "14963": {
      "op": "CALLDATALOAD"
    },
    "14964": {
      "op": "JUMPDEST"
    },
    "14965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14967": {
      "op": "NOT"
    },
    "14968": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14970": {
      "op": "DUP8"
    },
    "14971": {
      "op": "SWAP1"
    },
    "14972": {
      "op": "SHL"
    },
    "14973": {
      "op": "SHR"
    },
    "14974": {
      "op": "NOT"
    },
    "14975": {
      "op": "AND"
    },
    "14976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14978": {
      "op": "DUP7"
    },
    "14979": {
      "op": "SWAP1"
    },
    "14980": {
      "op": "SHL"
    },
    "14981": {
      "op": "OR"
    },
    "14982": {
      "op": "DUP4"
    },
    "14983": {
      "op": "SSTORE"
    },
    "14984": {
      "op": "PUSH2",
      "value": "0x1E03"
    },
    "14987": {
      "op": "JUMP"
    },
    "14988": {
      "op": "JUMPDEST"
    },
    "14989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14991": {
      "op": "DUP4"
    },
    "14992": {
      "op": "DUP2"
    },
    "14993": {
      "op": "MSTORE"
    },
    "14994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14996": {
      "op": "SWAP1"
    },
    "14997": {
      "op": "KECCAK256"
    },
    "14998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15000": {
      "op": "NOT"
    },
    "15001": {
      "op": "DUP7"
    },
    "15002": {
      "op": "AND"
    },
    "15003": {
      "op": "SWAP1"
    },
    "15004": {
      "op": "DUP4"
    },
    "15005": {
      "op": "JUMPDEST"
    },
    "15006": {
      "op": "DUP3"
    },
    "15007": {
      "op": "DUP2"
    },
    "15008": {
      "op": "LT"
    },
    "15009": {
      "op": "ISZERO"
    },
    "15010": {
      "op": "PUSH2",
      "value": "0x3ABD"
    },
    "15013": {
      "op": "JUMPI"
    },
    "15014": {
      "op": "DUP7"
    },
    "15015": {
      "op": "DUP6"
    },
    "15016": {
      "op": "ADD"
    },
    "15017": {
      "op": "CALLDATALOAD"
    },
    "15018": {
      "op": "DUP3"
    },
    "15019": {
      "op": "SSTORE"
    },
    "15020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15022": {
      "op": "SWAP5"
    },
    "15023": {
      "op": "DUP6"
    },
    "15024": {
      "op": "ADD"
    },
    "15025": {
      "op": "SWAP5"
    },
    "15026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15028": {
      "op": "SWAP1"
    },
    "15029": {
      "op": "SWAP3"
    },
    "15030": {
      "op": "ADD"
    },
    "15031": {
      "op": "SWAP2"
    },
    "15032": {
      "op": "ADD"
    },
    "15033": {
      "op": "PUSH2",
      "value": "0x3A9D"
    },
    "15036": {
      "op": "JUMP"
    },
    "15037": {
      "op": "JUMPDEST"
    },
    "15038": {
      "op": "POP"
    },
    "15039": {
      "op": "DUP7"
    },
    "15040": {
      "op": "DUP3"
    },
    "15041": {
      "op": "LT"
    },
    "15042": {
      "op": "ISZERO"
    },
    "15043": {
      "op": "PUSH2",
      "value": "0x3ADA"
    },
    "15046": {
      "op": "JUMPI"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15049": {
      "op": "NOT"
    },
    "15050": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15052": {
      "op": "DUP9"
    },
    "15053": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15055": {
      "op": "SHL"
    },
    "15056": {
      "op": "AND"
    },
    "15057": {
      "op": "SHR"
    },
    "15058": {
      "op": "NOT"
    },
    "15059": {
      "op": "DUP5"
    },
    "15060": {
      "op": "DUP8"
    },
    "15061": {
      "op": "ADD"
    },
    "15062": {
      "op": "CALLDATALOAD"
    },
    "15063": {
      "op": "AND"
    },
    "15064": {
      "op": "DUP2"
    },
    "15065": {
      "op": "SSTORE"
    },
    "15066": {
      "op": "JUMPDEST"
    },
    "15067": {
      "op": "POP"
    },
    "15068": {
      "op": "POP"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15071": {
      "op": "DUP6"
    },
    "15072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15074": {
      "op": "SHL"
    },
    "15075": {
      "op": "ADD"
    },
    "15076": {
      "op": "DUP4"
    },
    "15077": {
      "op": "SSTORE"
    },
    "15078": {
      "op": "POP"
    },
    "15079": {
      "op": "POP"
    },
    "15080": {
      "op": "POP"
    },
    "15081": {
      "op": "POP"
    },
    "15082": {
      "op": "POP"
    },
    "15083": {
      "jump": "o",
      "op": "JUMP"
    },
    "15084": {
      "op": "JUMPDEST"
    },
    "15085": {
      "op": "DUP4"
    },
    "15086": {
      "op": "DUP2"
    },
    "15087": {
      "op": "MSTORE"
    },
    "15088": {
      "op": "DUP3"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15091": {
      "op": "DUP3"
    },
    "15092": {
      "op": "ADD"
    },
    "15093": {
      "op": "MSTORE"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15098": {
      "op": "DUP3"
    },
    "15099": {
      "op": "ADD"
    },
    "15100": {
      "op": "MSTORE"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15103": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15106": {
      "op": "DUP1"
    },
    "15107": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15109": {
      "op": "DUP5"
    },
    "15110": {
      "op": "ADD"
    },
    "15111": {
      "op": "MSTORE"
    },
    "15112": {
      "op": "PUSH2",
      "value": "0x3B15"
    },
    "15115": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15118": {
      "op": "DUP5"
    },
    "15119": {
      "op": "ADD"
    },
    "15120": {
      "op": "DUP6"
    },
    "15121": {
      "op": "PUSH2",
      "value": "0x37BA"
    },
    "15124": {
      "jump": "i",
      "op": "JUMP"
    },
    "15125": {
      "op": "JUMPDEST"
    },
    "15126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15128": {
      "op": "DUP6"
    },
    "15129": {
      "op": "ADD"
    },
    "15130": {
      "op": "SLOAD"
    },
    "15131": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15137": {
      "op": "AND"
    },
    "15138": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15144": {
      "op": "DUP2"
    },
    "15145": {
      "op": "AND"
    },
    "15146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15148": {
      "op": "DUP7"
    },
    "15149": {
      "op": "ADD"
    },
    "15150": {
      "op": "MSTORE"
    },
    "15151": {
      "op": "POP"
    },
    "15152": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15154": {
      "op": "DUP6"
    },
    "15155": {
      "op": "ADD"
    },
    "15156": {
      "op": "SLOAD"
    },
    "15157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15159": {
      "op": "DUP6"
    },
    "15160": {
      "op": "ADD"
    },
    "15161": {
      "op": "MSTORE"
    },
    "15162": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "15164": {
      "op": "DUP6"
    },
    "15165": {
      "op": "ADD"
    },
    "15166": {
      "op": "SLOAD"
    },
    "15167": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15169": {
      "op": "DUP6"
    },
    "15170": {
      "op": "ADD"
    },
    "15171": {
      "op": "MSTORE"
    },
    "15172": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15174": {
      "op": "DUP6"
    },
    "15175": {
      "op": "ADD"
    },
    "15176": {
      "op": "SLOAD"
    },
    "15177": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15179": {
      "op": "DUP2"
    },
    "15180": {
      "op": "AND"
    },
    "15181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15183": {
      "op": "DUP7"
    },
    "15184": {
      "op": "ADD"
    },
    "15185": {
      "op": "MSTORE"
    },
    "15186": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "15188": {
      "op": "DUP2"
    },
    "15189": {
      "op": "SWAP1"
    },
    "15190": {
      "op": "SHR"
    },
    "15191": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15195": {
      "op": "AND"
    },
    "15196": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15199": {
      "op": "DUP7"
    },
    "15200": {
      "op": "ADD"
    },
    "15201": {
      "op": "MSTORE"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15204": {
      "op": "DUP2"
    },
    "15205": {
      "op": "SWAP1"
    },
    "15206": {
      "op": "SHR"
    },
    "15207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15211": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15213": {
      "op": "SHL"
    },
    "15214": {
      "op": "SUB"
    },
    "15215": {
      "op": "AND"
    },
    "15216": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15219": {
      "op": "DUP7"
    },
    "15220": {
      "op": "ADD"
    },
    "15221": {
      "op": "MSTORE"
    },
    "15222": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "15227": {
      "op": "DUP3"
    },
    "15228": {
      "op": "SWAP1"
    },
    "15229": {
      "op": "SHR"
    },
    "15230": {
      "op": "DUP2"
    },
    "15231": {
      "op": "AND"
    },
    "15232": {
      "op": "DUP5"
    },
    "15233": {
      "op": "DUP8"
    },
    "15234": {
      "op": "ADD"
    },
    "15235": {
      "op": "MSTORE"
    },
    "15236": {
      "op": "PUSH2",
      "value": "0x3B99"
    },
    "15239": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15242": {
      "op": "DUP8"
    },
    "15243": {
      "op": "ADD"
    },
    "15244": {
      "op": "DUP3"
    },
    "15245": {
      "op": "DUP5"
    },
    "15246": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15248": {
      "op": "SHR"
    },
    "15249": {
      "op": "AND"
    },
    "15250": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15253": {
      "op": "AND"
    },
    "15254": {
      "op": "SWAP1"
    },
    "15255": {
      "op": "MSTORE"
    },
    "15256": {
      "op": "JUMP"
    },
    "15257": {
      "op": "JUMPDEST"
    },
    "15258": {
      "op": "POP"
    },
    "15259": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "15261": {
      "op": "DUP2"
    },
    "15262": {
      "op": "SWAP1"
    },
    "15263": {
      "op": "SHR"
    },
    "15264": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15270": {
      "op": "AND"
    },
    "15271": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15274": {
      "op": "DUP7"
    },
    "15275": {
      "op": "ADD"
    },
    "15276": {
      "op": "MSTORE"
    },
    "15277": {
      "op": "POP"
    },
    "15278": {
      "op": "SWAP7"
    },
    "15279": {
      "op": "SWAP6"
    },
    "15280": {
      "op": "POP"
    },
    "15281": {
      "op": "POP"
    },
    "15282": {
      "op": "POP"
    },
    "15283": {
      "op": "POP"
    },
    "15284": {
      "op": "POP"
    },
    "15285": {
      "op": "POP"
    },
    "15286": {
      "jump": "o",
      "op": "JUMP"
    },
    "15287": {
      "op": "JUMPDEST"
    },
    "15288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15294": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15296": {
      "op": "SHL"
    },
    "15297": {
      "op": "SUB"
    },
    "15298": {
      "op": "DUP1"
    },
    "15299": {
      "op": "DUP5"
    },
    "15300": {
      "op": "AND"
    },
    "15301": {
      "op": "DUP1"
    },
    "15302": {
      "op": "PUSH2",
      "value": "0x3BDF"
    },
    "15305": {
      "op": "JUMPI"
    },
    "15306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15313": {
      "op": "SHL"
    },
    "15314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15316": {
      "op": "MSTORE"
    },
    "15317": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "15319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15321": {
      "op": "MSTORE"
    },
    "15322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15326": {
      "op": "REVERT"
    },
    "15327": {
      "op": "JUMPDEST"
    },
    "15328": {
      "op": "SWAP3"
    },
    "15329": {
      "op": "AND"
    },
    "15330": {
      "op": "SWAP2"
    },
    "15331": {
      "op": "SWAP1"
    },
    "15332": {
      "op": "SWAP2"
    },
    "15333": {
      "op": "DIV"
    },
    "15334": {
      "op": "SWAP3"
    },
    "15335": {
      "op": "SWAP2"
    },
    "15336": {
      "op": "POP"
    },
    "15337": {
      "op": "POP"
    },
    "15338": {
      "jump": "o",
      "op": "JUMP"
    },
    "15339": {
      "op": "JUMPDEST"
    },
    "15340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15342": {
      "op": "DUP1"
    },
    "15343": {
      "op": "DUP3"
    },
    "15344": {
      "op": "MSTORE"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15347": {
      "op": "SWAP1"
    },
    "15348": {
      "op": "DUP3"
    },
    "15349": {
      "op": "ADD"
    },
    "15350": {
      "op": "MSTORE"
    },
    "15351": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "15374": {
      "op": "SHL"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15377": {
      "op": "DUP3"
    },
    "15378": {
      "op": "ADD"
    },
    "15379": {
      "op": "MSTORE"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15382": {
      "op": "ADD"
    },
    "15383": {
      "op": "SWAP1"
    },
    "15384": {
      "jump": "o",
      "op": "JUMP"
    },
    "15385": {
      "op": "JUMPDEST"
    },
    "15386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15388": {
      "op": "DUP3"
    },
    "15389": {
      "op": "MLOAD"
    },
    "15390": {
      "op": "PUSH2",
      "value": "0x3C2B"
    },
    "15393": {
      "op": "DUP2"
    },
    "15394": {
      "op": "DUP5"
    },
    "15395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15397": {
      "op": "DUP8"
    },
    "15398": {
      "op": "ADD"
    },
    "15399": {
      "op": "PUSH2",
      "value": "0x2ED3"
    },
    "15402": {
      "jump": "i",
      "op": "JUMP"
    },
    "15403": {
      "op": "JUMPDEST"
    },
    "15404": {
      "op": "SWAP2"
    },
    "15405": {
      "op": "SWAP1"
    },
    "15406": {
      "op": "SWAP2"
    },
    "15407": {
      "op": "ADD"
    },
    "15408": {
      "op": "SWAP3"
    },
    "15409": {
      "op": "SWAP2"
    },
    "15410": {
      "op": "POP"
    },
    "15411": {
      "op": "POP"
    },
    "15412": {
      "jump": "o",
      "op": "JUMP"
    },
    "15413": {
      "op": "JUMPDEST"
    },
    "15414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15416": {
      "op": "DUP1"
    },
    "15417": {
      "op": "DUP4"
    },
    "15418": {
      "op": "SLOAD"
    },
    "15419": {
      "op": "PUSH2",
      "value": "0x3C43"
    },
    "15422": {
      "op": "DUP2"
    },
    "15423": {
      "op": "PUSH2",
      "value": "0x36BB"
    },
    "15426": {
      "jump": "i",
      "op": "JUMP"
    },
    "15427": {
      "op": "JUMPDEST"
    },
    "15428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15430": {
      "op": "DUP3"
    },
    "15431": {
      "op": "DUP2"
    },
    "15432": {
      "op": "AND"
    },
    "15433": {
      "op": "DUP1"
    },
    "15434": {
      "op": "ISZERO"
    },
    "15435": {
      "op": "PUSH2",
      "value": "0x3C5B"
    },
    "15438": {
      "op": "JUMPI"
    },
    "15439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15441": {
      "op": "DUP2"
    },
    "15442": {
      "op": "EQ"
    },
    "15443": {
      "op": "PUSH2",
      "value": "0x3C70"
    },
    "15446": {
      "op": "JUMPI"
    },
    "15447": {
      "op": "PUSH2",
      "value": "0x3735"
    },
    "15450": {
      "op": "JUMP"
    },
    "15451": {
      "op": "JUMPDEST"
    },
    "15452": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15454": {
      "op": "NOT"
    },
    "15455": {
      "op": "DUP5"
    },
    "15456": {
      "op": "AND"
    },
    "15457": {
      "op": "DUP8"
    },
    "15458": {
      "op": "MSTORE"
    },
    "15459": {
      "op": "DUP3"
    },
    "15460": {
      "op": "ISZERO"
    },
    "15461": {
      "op": "ISZERO"
    },
    "15462": {
      "op": "DUP4"
    },
    "15463": {
      "op": "MUL"
    },
    "15464": {
      "op": "DUP8"
    },
    "15465": {
      "op": "ADD"
    },
    "15466": {
      "op": "SWAP5"
    },
    "15467": {
      "op": "POP"
    },
    "15468": {
      "op": "PUSH2",
      "value": "0x3735"
    },
    "15471": {
      "op": "JUMP"
    },
    "15472": {
      "op": "JUMPDEST"
    },
    "15473": {
      "op": "DUP8"
    },
    "15474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15476": {
      "op": "MSTORE"
    },
    "15477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15479": {
      "op": "DUP1"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15482": {
      "op": "KECCAK256"
    },
    "15483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15485": {
      "op": "JUMPDEST"
    },
    "15486": {
      "op": "DUP6"
    },
    "15487": {
      "op": "DUP2"
    },
    "15488": {
      "op": "LT"
    },
    "15489": {
      "op": "ISZERO"
    },
    "15490": {
      "op": "PUSH2",
      "value": "0x3C96"
    },
    "15493": {
      "op": "JUMPI"
    },
    "15494": {
      "op": "DUP2"
    },
    "15495": {
      "op": "SLOAD"
    },
    "15496": {
      "op": "DUP11"
    },
    "15497": {
      "op": "DUP3"
    },
    "15498": {
      "op": "ADD"
    },
    "15499": {
      "op": "MSTORE"
    },
    "15500": {
      "op": "SWAP1"
    },
    "15501": {
      "op": "DUP5"
    },
    "15502": {
      "op": "ADD"
    },
    "15503": {
      "op": "SWAP1"
    },
    "15504": {
      "op": "DUP3"
    },
    "15505": {
      "op": "ADD"
    },
    "15506": {
      "op": "PUSH2",
      "value": "0x3C7D"
    },
    "15509": {
      "op": "JUMP"
    },
    "15510": {
      "op": "JUMPDEST"
    },
    "15511": {
      "op": "POP"
    },
    "15512": {
      "op": "POP"
    },
    "15513": {
      "op": "POP"
    },
    "15514": {
      "op": "SWAP6"
    },
    "15515": {
      "op": "SWAP1"
    },
    "15516": {
      "op": "SWAP2"
    },
    "15517": {
      "op": "ADD"
    },
    "15518": {
      "op": "SWAP7"
    },
    "15519": {
      "op": "SWAP6"
    },
    "15520": {
      "op": "POP"
    },
    "15521": {
      "op": "POP"
    },
    "15522": {
      "op": "POP"
    },
    "15523": {
      "op": "POP"
    },
    "15524": {
      "op": "POP"
    },
    "15525": {
      "op": "POP"
    },
    "15526": {
      "jump": "o",
      "op": "JUMP"
    },
    "15527": {
      "op": "JUMPDEST"
    },
    "15528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15530": {
      "op": "DUP1"
    },
    "15531": {
      "op": "DUP3"
    },
    "15532": {
      "op": "SLT"
    },
    "15533": {
      "op": "DUP1"
    },
    "15534": {
      "op": "ISZERO"
    },
    "15535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15539": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15541": {
      "op": "SHL"
    },
    "15542": {
      "op": "SUB"
    },
    "15543": {
      "op": "DUP5"
    },
    "15544": {
      "op": "SWAP1"
    },
    "15545": {
      "op": "SUB"
    },
    "15546": {
      "op": "DUP6"
    },
    "15547": {
      "op": "SGT"
    },
    "15548": {
      "op": "AND"
    },
    "15549": {
      "op": "ISZERO"
    },
    "15550": {
      "op": "PUSH2",
      "value": "0x3CC9"
    },
    "15553": {
      "op": "JUMPI"
    },
    "15554": {
      "op": "PUSH2",
      "value": "0x3CC9"
    },
    "15557": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "15560": {
      "jump": "i",
      "op": "JUMP"
    },
    "15561": {
      "op": "JUMPDEST"
    },
    "15562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15564": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15566": {
      "op": "SHL"
    },
    "15567": {
      "op": "DUP4"
    },
    "15568": {
      "op": "SWAP1"
    },
    "15569": {
      "op": "SUB"
    },
    "15570": {
      "op": "DUP5"
    },
    "15571": {
      "op": "SLT"
    },
    "15572": {
      "op": "DUP2"
    },
    "15573": {
      "op": "AND"
    },
    "15574": {
      "op": "ISZERO"
    },
    "15575": {
      "op": "PUSH2",
      "value": "0x3CE2"
    },
    "15578": {
      "op": "JUMPI"
    },
    "15579": {
      "op": "PUSH2",
      "value": "0x3CE2"
    },
    "15582": {
      "op": "PUSH2",
      "value": "0x3958"
    },
    "15585": {
      "jump": "i",
      "op": "JUMP"
    },
    "15586": {
      "op": "JUMPDEST"
    },
    "15587": {
      "op": "POP"
    },
    "15588": {
      "op": "POP"
    },
    "15589": {
      "op": "ADD"
    },
    "15590": {
      "op": "SWAP1"
    },
    "15591": {
      "jump": "o",
      "op": "JUMP"
    },
    "15592": {
      "op": "JUMPDEST"
    },
    "15593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15595": {
      "op": "DUP2"
    },
    "15596": {
      "op": "MSTORE"
    },
    "15597": {
      "op": "DUP8"
    },
    "15598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15600": {
      "op": "DUP3"
    },
    "15601": {
      "op": "ADD"
    },
    "15602": {
      "op": "MSTORE"
    },
    "15603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15605": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15608": {
      "op": "DUP10"
    },
    "15609": {
      "op": "DUP12"
    },
    "15610": {
      "op": "DUP3"
    },
    "15611": {
      "op": "DUP6"
    },
    "15612": {
      "op": "ADD"
    },
    "15613": {
      "op": "CALLDATACOPY"
    },
    "15614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15616": {
      "op": "DUP11"
    },
    "15617": {
      "op": "DUP5"
    },
    "15618": {
      "op": "ADD"
    },
    "15619": {
      "op": "DUP3"
    },
    "15620": {
      "op": "ADD"
    },
    "15621": {
      "op": "MSTORE"
    },
    "15622": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15628": {
      "op": "SWAP9"
    },
    "15629": {
      "op": "DUP10"
    },
    "15630": {
      "op": "AND"
    },
    "15631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15633": {
      "op": "DUP5"
    },
    "15634": {
      "op": "ADD"
    },
    "15635": {
      "op": "MSTORE"
    },
    "15636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15638": {
      "op": "SWAP8"
    },
    "15639": {
      "op": "SWAP1"
    },
    "15640": {
      "op": "SWAP8"
    },
    "15641": {
      "op": "AND"
    },
    "15642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15644": {
      "op": "DUP4"
    },
    "15645": {
      "op": "ADD"
    },
    "15646": {
      "op": "MSTORE"
    },
    "15647": {
      "op": "POP"
    },
    "15648": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15652": {
      "op": "SWAP5"
    },
    "15653": {
      "op": "SWAP1"
    },
    "15654": {
      "op": "SWAP5"
    },
    "15655": {
      "op": "AND"
    },
    "15656": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15658": {
      "op": "DUP6"
    },
    "15659": {
      "op": "ADD"
    },
    "15660": {
      "op": "MSTORE"
    },
    "15661": {
      "op": "SWAP2"
    },
    "15662": {
      "op": "DUP6"
    },
    "15663": {
      "op": "AND"
    },
    "15664": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15666": {
      "op": "DUP5"
    },
    "15667": {
      "op": "ADD"
    },
    "15668": {
      "op": "MSTORE"
    },
    "15669": {
      "op": "SWAP1"
    },
    "15670": {
      "op": "SWAP4"
    },
    "15671": {
      "op": "AND"
    },
    "15672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15674": {
      "op": "DUP3"
    },
    "15675": {
      "op": "ADD"
    },
    "15676": {
      "op": "MSTORE"
    },
    "15677": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15680": {
      "op": "SWAP1"
    },
    "15681": {
      "op": "SWAP3"
    },
    "15682": {
      "op": "AND"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15685": {
      "op": "DUP4"
    },
    "15686": {
      "op": "ADD"
    },
    "15687": {
      "op": "MSTORE"
    },
    "15688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15690": {
      "op": "SWAP1"
    },
    "15691": {
      "op": "SWAP3"
    },
    "15692": {
      "op": "ADD"
    },
    "15693": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15695": {
      "op": "NOT"
    },
    "15696": {
      "op": "AND"
    },
    "15697": {
      "op": "ADD"
    },
    "15698": {
      "op": "ADD"
    },
    "15699": {
      "op": "SWAP2"
    },
    "15700": {
      "op": "SWAP1"
    },
    "15701": {
      "op": "POP"
    },
    "15702": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f42f4c766c478cc876a3d5c3878b6810aa40ec32",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n//            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:21499:2:-:0;;;2921:5;2894:32;;2982:6;2946:42;;11398:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:10;1778:7;:22;889:23:9;679:10:3;889:9:9;:23::i;:::-;11477:10:2;:26;;-1:-1:-1;;;;;;11477:26:2;-1:-1:-1;;;;;11477:26:2;;;;;;;;;;743:21499;;2101:173:9;2176:6;;;-1:-1:-1;;;;;2193:17:9;;;-1:-1:-1;;;;;;2193:17:9;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;743:21499:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}