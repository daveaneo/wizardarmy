{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizID",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksSubmitted",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "12": "contracts/helpers/Ownable.sol",
    "13": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "25": "contracts/libraries/Strings.sol",
    "26": "contracts/wizards.sol",
    "6": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        7291
      ],
      "Context": [
        4705
      ],
      "DoubleEndedQueue": [
        4684
      ],
      "ERC165": [
        4729
      ],
      "ERC2981Collection": [
        3219
      ],
      "ERC721": [
        5548
      ],
      "ERC721A": [
        6619
      ],
      "ERC721Enumerable": [
        10508
      ],
      "Governance": [
        1591
      ],
      "IERC165": [
        6775
      ],
      "IERC20": [
        6848
      ],
      "IERC2981": [
        8273
      ],
      "IERC721": [
        6964
      ],
      "IERC721Enumerable": [
        6995
      ],
      "IERC721Metadata": [
        10151
      ],
      "IERC721Receiver": [
        10169
      ],
      "Ownable": [
        6723
      ],
      "ReentrancyGuard": [
        6763
      ],
      "Strings": [
        7494
      ],
      "Wizards": [
        8226
      ]
    },
    "id": 1592,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 8227,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6849,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6776,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6965,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6996,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6620,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 5549,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 4730,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6724,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 4706,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 6764,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 3220,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 7495,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 7292,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 4685,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4684,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6763,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6723,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1591,
        "linearizedBaseContracts": [
          1591,
          6723,
          4705,
          6763
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$8226",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8226,
                "src": "829:7:2"
              },
              "referencedDeclaration": 8226,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$8226",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1126:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1264:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1259:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1287:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1280:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1341:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1335:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1373:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1366:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1366:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1399:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1392:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1428:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1421:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1457:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1450:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1591,
            "src": "1072:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1538:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1531:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1531:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1584:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1577:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1644:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1636:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1698:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1690:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1762:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1756:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1810:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1803:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1982:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1975:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1975:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2009:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2002:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2060:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2053:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2053:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2110:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2103:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1516:4:2",
            "nodeType": "StructDefinition",
            "scope": 1591,
            "src": "1509:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2223:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2216:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2216:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2248:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2241:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2241:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2283:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2280:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2273:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2305:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2298:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2332:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2325:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2325:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2361:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2354:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2354:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2197:8:2",
            "nodeType": "StructDefinition",
            "scope": 1591,
            "src": "2190:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2406:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2388:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2388:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2388:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2388:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "379d94cc",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksSubmitted",
            "nameLocation": "2562:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2525:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4362,
                "src": "2525:29:2"
              },
              "referencedDeclaration": 4362,
              "src": "2525:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2729:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2692:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2701:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2692:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2712:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2712:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2752:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2744:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2744:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2806:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2773:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2782:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2773:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2793:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2793:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 108,
            "mutability": "mutable",
            "name": "tasksAttempted",
            "nameLocation": "2825:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2817:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2817:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2880:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2872:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2872:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2899:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2902:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2899:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2932:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "2924:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2924:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2960:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee",
            "id": 122,
            "name": "VerificationAssigned",
            "nameLocation": "2989:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3018:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3010:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3036:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3028:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:34:2"
            },
            "src": "2983:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 130,
            "name": "VerificationFailed",
            "nameLocation": "3055:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3082:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3074:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3107:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3099:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3133:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3125:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:67:2"
            },
            "src": "3049:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 142,
            "name": "VerificationSucceeded",
            "nameLocation": "3152:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3182:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3174:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3200:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3192:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3218:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3210:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3234:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3226:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3245:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3240:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3173:86:2"
            },
            "src": "3146:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 152,
            "name": "HashTesting",
            "nameLocation": "3271:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3291:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3283:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3283:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3302:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3297:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3325:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3317:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3345:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3339:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3282:78:2"
            },
            "src": "3265:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 168,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3372:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3398:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3391:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3391:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3415:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3408:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3434:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3428:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3459:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3452:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3488:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3481:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3510:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3503:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3532:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3525:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3390:158:2"
            },
            "src": "3366:183:2"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "4420:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 176,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4437:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 178,
                    "indexExpression": {
                      "id": 177,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4443:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4437:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 175,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "4430:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4355:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4375:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "4367:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4366:17:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "4407:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 172,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4407:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4407:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4406:13:2"
            },
            "scope": 1591,
            "src": "4346:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "4542:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 190,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4560:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 191,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4573:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4560:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4552:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "4552:56:2"
                },
                {
                  "assignments": [
                    200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4634:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "4618:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 198,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4618:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 199,
                        "nodeType": "ArrayTypeName",
                        "src": "4618:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 204,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4659:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 206,
                          "indexExpression": {
                            "id": 205,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "4669:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4659:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4659:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4646:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 201,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4650:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 202,
                        "nodeType": "ArrayTypeName",
                        "src": "4650:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4618:79:2"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "4751:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 221,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "4765:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 223,
                            "indexExpression": {
                              "id": 222,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "4775:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4765:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 224,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4780:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 226,
                                "indexExpression": {
                                  "id": 225,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "4790:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4780:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4780:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 229,
                            "indexExpression": {
                              "id": 228,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "4808:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4780:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4765:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "4765:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 214,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "4726:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 215,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "4729:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4729:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4726:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "initializationExpression": {
                    "assignments": [
                      211
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4719:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4711:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4711:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 213,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4723:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4711:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4747:3:2",
                      "subExpression": {
                        "id": 218,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4747:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 220,
                    "nodeType": "ExpressionStatement",
                    "src": "4747:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4707:114:2"
                },
                {
                  "expression": {
                    "id": 234,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "4837:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 235,
                  "nodeType": "Return",
                  "src": "4830:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4473:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4490:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "4482:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4481:20:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "4525:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 185,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4525:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 186,
                    "nodeType": "ArrayTypeName",
                    "src": "4525:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4524:17:2"
            },
            "scope": 1591,
            "src": "4464:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "4936:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 245,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "4954:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 246,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4967:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4954:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4983:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4946:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 252,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5021:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5021:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 254,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5039:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 256,
                            "indexExpression": {
                              "id": 255,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "5049:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5039:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5039:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5021:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5075:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5012:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:85:2"
                },
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5225:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5217:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5217:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5217:19:2"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5254:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5246:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5246:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 267,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5246:25:2"
                },
                {
                  "assignments": [
                    269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5289:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "5281:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5281:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5293:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5281:13:2"
                },
                {
                  "body": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "5367:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 285,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5420:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 287,
                                "indexExpression": {
                                  "id": 286,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "5430:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5420:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5420:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 290,
                            "indexExpression": {
                              "id": 289,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "5448:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5420:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 291,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5453:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5420:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 316,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5649:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 318,
                                  "indexExpression": {
                                    "id": 317,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 239,
                                    "src": "5659:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5649:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 319,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5649:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 321,
                              "indexExpression": {
                                "id": 320,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "5677:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5649:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 322,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "5683:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5649:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 329,
                          "nodeType": "IfStatement",
                          "src": "5646:93:2",
                          "trueBody": {
                            "id": 328,
                            "nodeType": "Block",
                            "src": "5701:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 324,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 269,
                                    "src": "5719:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5723:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5719:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 327,
                                "nodeType": "ExpressionStatement",
                                "src": "5719:5:2"
                              }
                            ]
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "5417:322:2",
                        "trueBody": {
                          "id": 315,
                          "nodeType": "Block",
                          "src": "5472:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 293,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "5490:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 294,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5510:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 296,
                                      "indexExpression": {
                                        "id": 295,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 239,
                                        "src": "5520:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5510:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5510:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 299,
                                  "indexExpression": {
                                    "id": 298,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "5538:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5510:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5490:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 301,
                              "nodeType": "ExpressionStatement",
                              "src": "5490:50:2"
                            },
                            {
                              "expression": {
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 302,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 263,
                                  "src": "5558:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 303,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "5572:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5558:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 305,
                              "nodeType": "ExpressionStatement",
                              "src": "5558:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 306,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "5595:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5600:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5595:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 314,
                              "nodeType": "IfStatement",
                              "src": "5591:23:2",
                              "trueBody": {
                                "id": 313,
                                "nodeType": "Block",
                                "src": "5603:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 309,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 269,
                                        "src": "5605:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5611:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5605:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 312,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5605:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "5321:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 277,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5324:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 279,
                        "indexExpression": {
                          "id": 278,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "5334:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5324:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5324:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5321:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "initializationExpression": {
                    "assignments": [
                      273
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5316:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "5308:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5308:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 275,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5318:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5308:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5363:3:2",
                      "subExpression": {
                        "id": 282,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5363:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 284,
                    "nodeType": "ExpressionStatement",
                    "src": "5363:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5304:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 334,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5766:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5771:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5766:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5774:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5758:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5758:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "5758:35:2"
                },
                {
                  "expression": {
                    "id": 340,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 263,
                    "src": "5810:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 341,
                  "nodeType": "Return",
                  "src": "5803:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4868:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4891:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "4883:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4882:20:2"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "4926:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4925:10:2"
            },
            "scope": 1591,
            "src": "4859:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5956:518:2",
              "statements": [
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "5974:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "5966:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5966:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6020:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 352,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4684,
                        "src": "5996:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4684_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4667,
                      "src": "5996:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4362_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5966:69:2"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6057:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "6045:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 358,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 357,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6045:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6045:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6045:18:2"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "6081:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "6073:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6073:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6073:14:2"
                },
                {
                  "body": {
                    "id": 390,
                    "nodeType": "Block",
                    "src": "6225:221:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 371,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "6243:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "6243:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 373,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6282:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6282:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6243:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 376,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "6301:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "6301:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 378,
                                "name": "_wizID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 345,
                                "src": "6317:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6301:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6243:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 381,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "6327:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "6327:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 383,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "6346:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6327:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6243:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 389,
                        "nodeType": "IfStatement",
                        "src": "6239:197:2",
                        "trueBody": {
                          "id": 388,
                          "nodeType": "Block",
                          "src": "6353:83:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6417:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 349,
                              "id": 387,
                              "nodeType": "Return",
                              "src": "6410:11:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 368,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "6199:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 369,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "6203:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6199:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 391,
                  "initializationExpression": {
                    "assignments": [
                      365
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 365,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6193:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 391,
                        "src": "6185:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6185:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 367,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6196:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6185:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6181:265:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6462:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 349,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "6455:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "5884:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "5919:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5911:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5911:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5910:16:2"
            },
            "returnParameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5950:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5949:6:2"
            },
            "scope": 1591,
            "src": "5875:599:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "6637:1212:2",
              "statements": [
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "6655:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 562,
                      "src": "6647:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6647:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6647:13:2"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "6708:504:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 414,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "6725:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 416,
                                      "indexExpression": {
                                        "id": 415,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 407,
                                        "src": "6735:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6725:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 417,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "6725:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 419,
                                  "indexExpression": {
                                    "id": 418,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "6762:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6725:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 420,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6772:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6772:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6725:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 423,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "6803:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 425,
                                    "indexExpression": {
                                      "id": 424,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 407,
                                      "src": "6813:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6803:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 426,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "6803:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 427,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6832:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6832:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6803:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6725:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 431,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "6851:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 433,
                                  "indexExpression": {
                                    "id": 432,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 407,
                                    "src": "6861:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6851:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "6851:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 435,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6879:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6879:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6851:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6725:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 439,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "6910:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 441,
                                "indexExpression": {
                                  "id": 440,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 407,
                                  "src": "6920:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6910:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "6910:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6940:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6910:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6725:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 470,
                          "nodeType": "Block",
                          "src": "7025:149:2",
                          "statements": [
                            {
                              "assignments": [
                                455
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 455,
                                  "mutability": "mutable",
                                  "name": "myReturn",
                                  "nameLocation": "7059:8:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 470,
                                  "src": "7043:24:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 453,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7043:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 454,
                                    "nodeType": "ArrayTypeName",
                                    "src": "7043:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 461,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7082:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "7069:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 456,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7073:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 457,
                                    "nodeType": "ArrayTypeName",
                                    "src": "7073:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  }
                                },
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7069:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7043:41:2"
                            },
                            {
                              "expression": {
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 462,
                                    "name": "myReturn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 455,
                                    "src": "7102:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 464,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7111:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7102:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "4e6f206c75636b2e",
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7116:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c69ac3f68cfe1a47905034708a786a2148d121883dbf9372da36b09cc276002a",
                                    "typeString": "literal_string \"No luck.\""
                                  },
                                  "value": "No luck."
                                },
                                "src": "7102:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 467,
                              "nodeType": "ExpressionStatement",
                              "src": "7102:24:2"
                            },
                            {
                              "expression": {
                                "id": 468,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 455,
                                "src": "7151:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "functionReturnParameters": 402,
                              "id": 469,
                              "nodeType": "Return",
                              "src": "7144:15:2"
                            }
                          ]
                        },
                        "id": 471,
                        "nodeType": "IfStatement",
                        "src": "6722:452:2",
                        "trueBody": {
                          "id": 450,
                          "nodeType": "Block",
                          "src": "6956:51:2",
                          "statements": [
                            {
                              "id": 449,
                              "nodeType": "UncheckedBlock",
                              "src": "6974:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "6984:7:2",
                                    "subExpression": {
                                      "id": 446,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 404,
                                      "src": "6986:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 448,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6984:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 475,
                        "nodeType": "UncheckedBlock",
                        "src": "7187:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7197:3:2",
                              "subExpression": {
                                "id": 472,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 407,
                                "src": "7199:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 474,
                            "nodeType": "ExpressionStatement",
                            "src": "7197:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 410,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "6687:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 411,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "6690:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6690:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6687:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "initializationExpression": {
                    "assignments": [
                      407
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6682:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "6674:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6674:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 409,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6684:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6674:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6670:542:2"
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "7238:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 562,
                      "src": "7222:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 480,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7222:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 481,
                        "nodeType": "ArrayTypeName",
                        "src": "7222:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 488,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 486,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "7261:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7248:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 483,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7252:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 484,
                        "nodeType": "ArrayTypeName",
                        "src": "7252:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7222:45:2"
                },
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "7285:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 562,
                      "src": "7277:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7277:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 492,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7295:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7277:19:2"
                },
                {
                  "body": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "7344:475:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 501,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "7361:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 503,
                                      "indexExpression": {
                                        "id": 502,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 494,
                                        "src": "7371:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7361:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 504,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "7361:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 506,
                                  "indexExpression": {
                                    "id": 505,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "7398:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7361:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 507,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7408:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7408:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7361:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 510,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "7439:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 512,
                                    "indexExpression": {
                                      "id": 511,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 494,
                                      "src": "7449:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7439:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 513,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "7439:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 514,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7468:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7468:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7439:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7361:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 518,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "7487:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 520,
                                  "indexExpression": {
                                    "id": 519,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 494,
                                    "src": "7497:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7487:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "7487:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 522,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7515:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7515:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7487:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7361:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 526,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "7546:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 528,
                                "indexExpression": {
                                  "id": 527,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 494,
                                  "src": "7556:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7546:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "7546:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7576:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7546:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7361:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 553,
                        "nodeType": "IfStatement",
                        "src": "7358:423:2",
                        "trueBody": {
                          "id": 552,
                          "nodeType": "Block",
                          "src": "7592:189:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 533,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 482,
                                    "src": "7610:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 535,
                                  "indexExpression": {
                                    "id": 534,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 494,
                                    "src": "7618:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7610:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 536,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "7623:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 538,
                                    "indexExpression": {
                                      "id": 537,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 494,
                                      "src": "7633:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7623:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 539,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "7623:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "7610:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 541,
                              "nodeType": "ExpressionStatement",
                              "src": "7610:34:2"
                            },
                            {
                              "id": 545,
                              "nodeType": "UncheckedBlock",
                              "src": "7662:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7672:9:2",
                                    "subExpression": {
                                      "id": 542,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 490,
                                      "src": "7674:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 544,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7672:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 546,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 490,
                                  "src": "7703:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 547,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 404,
                                  "src": "7714:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7703:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 551,
                              "nodeType": "IfStatement",
                              "src": "7700:67:2",
                              "trueBody": {
                                "id": 550,
                                "nodeType": "Block",
                                "src": "7721:46:2",
                                "statements": [
                                  {
                                    "id": 549,
                                    "nodeType": "Break",
                                    "src": "7743:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 557,
                        "nodeType": "UncheckedBlock",
                        "src": "7794:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7804:3:2",
                              "subExpression": {
                                "id": 554,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 494,
                                "src": "7806:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 556,
                            "nodeType": "ExpressionStatement",
                            "src": "7804:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 497,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "7323:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 498,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "7326:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7326:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7323:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 559,
                  "initializationExpression": {
                    "assignments": [
                      494
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7318:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "7310:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7310:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 496,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7320:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7310:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7306:513:2"
                },
                {
                  "expression": {
                    "id": 560,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 482,
                    "src": "7835:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 402,
                  "id": 561,
                  "nodeType": "Return",
                  "src": "7828:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "6558:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6589:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "6582:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6581:15:2"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "6620:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 399,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6620:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 400,
                    "nodeType": "ArrayTypeName",
                    "src": "6620:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6619:17:2"
            },
            "scope": 1591,
            "src": "6549:1300:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "8016:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 570,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "8026:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$8226",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 572,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "8047:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 571,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "8039:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$8226_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8039:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$8226",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "8026:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$8226",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 568,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6666,
                  "src": "8006:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8006:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "7968:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "7990:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "7982:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7982:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7981:15:2"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8016:0:2"
            },
            "scope": 1591,
            "src": "7959:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "8254:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "8301:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 593,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8345:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 595,
                                      "indexExpression": {
                                        "id": 594,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 583,
                                        "src": "8355:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8345:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "8345:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 591,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8328:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8328:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8328:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 590,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8318:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8318:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 602,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 579,
                                    "src": "8399:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 600,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8382:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8382:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8382:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 599,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8372:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8372:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8318:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 645,
                        "nodeType": "IfStatement",
                        "src": "8315:1048:2",
                        "trueBody": {
                          "id": 644,
                          "nodeType": "Block",
                          "src": "8411:952:2",
                          "statements": [
                            {
                              "assignments": [
                                608
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 608,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "8510:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 644,
                                  "src": "8493:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 607,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 606,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "8493:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "8493:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 612,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 609,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8523:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 611,
                                "indexExpression": {
                                  "id": 610,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 583,
                                  "src": "8533:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8523:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8493:42:2"
                            },
                            {
                              "assignments": [
                                615
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 615,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "8570:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 644,
                                  "src": "8553:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 614,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 613,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "8553:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "8553:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 622,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 616,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8590:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 621,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 617,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "8600:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "8600:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 619,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8617:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8600:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8590:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8553:66:2"
                            },
                            {
                              "expression": {
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 623,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "8735:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 624,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "8748:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "8735:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 626,
                              "nodeType": "ExpressionStatement",
                              "src": "8735:30:2"
                            },
                            {
                              "expression": {
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8783:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 627,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "8790:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 632,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 628,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8800:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 629,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "8800:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 630,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8817:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "8800:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8790:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 634,
                              "nodeType": "ExpressionStatement",
                              "src": "8783:36:2"
                            },
                            {
                              "expression": {
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9289:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 635,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "9296:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 640,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 636,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "9306:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 637,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "9306:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 638,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9323:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "9306:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9296:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 642,
                              "nodeType": "ExpressionStatement",
                              "src": "9289:36:2"
                            },
                            {
                              "id": 643,
                              "nodeType": "Break",
                              "src": "9343:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 649,
                        "nodeType": "UncheckedBlock",
                        "src": "9376:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9386:3:2",
                              "subExpression": {
                                "id": 646,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 583,
                                "src": "9388:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 648,
                            "nodeType": "ExpressionStatement",
                            "src": "9386:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 586,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "8281:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 587,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8283:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8283:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8281:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 651,
                  "initializationExpression": {
                    "assignments": [
                      583
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8276:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "8268:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8268:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 585,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8278:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8268:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8264:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "8195:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "8234:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "8220:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8220:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8219:25:2"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8254:0:2"
            },
            "scope": 1591,
            "src": "8186:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "9640:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 659,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "9694:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$8226",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 661,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "9715:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 660,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "9707:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$8226_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9707:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$8226",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "9694:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$8226",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "9694:26:2"
                }
              ]
            },
            "documentation": {
              "id": 654,
              "nodeType": "StructuredDocumentation",
              "src": "9521:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 666,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "9635:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "9627:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9627:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9626:14:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9640:0:2"
            },
            "scope": 1591,
            "src": "9615:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "9855:7:2",
              "statements": []
            },
            "id": 670,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9835:2:2"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9855:0:2"
            },
            "scope": 1591,
            "src": "9828:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "9952:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 682,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 672,
                          "src": "9970:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 683,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "9983:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9970:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9999:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9962:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9962:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "9962:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 691,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "10055:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 689,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "10036:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$8226",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4876,
                            "src": "10036:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10036:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10063:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10063:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10036:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10075:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10028:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "10028:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 700,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "10112:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 702,
                            "indexExpression": {
                              "id": 701,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "10131:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10112:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 704,
                          "indexExpression": {
                            "id": 703,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 674,
                            "src": "10143:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10112:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10151:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10112:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10154:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10104:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10104:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "10104:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 711,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 676,
                            "src": "10188:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10195:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10188:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 714,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 676,
                            "src": "10200:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 715,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "10209:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 717,
                              "indexExpression": {
                                "id": 716,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 672,
                                "src": "10219:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10209:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "10209:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "10200:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10188:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10180:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "10180:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 724,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10265:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10265:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 726,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "10283:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "id": 727,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "10293:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10283:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "10283:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "10265:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10257:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10257:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "10257:61:2"
                },
                {
                  "expression": {
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 733,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "10328:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 736,
                        "indexExpression": {
                          "id": 734,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 672,
                          "src": "10347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10328:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 737,
                      "indexExpression": {
                        "id": 735,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "10359:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10328:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 738,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "10368:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10376:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10368:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10328:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "10328:49:2"
                },
                {
                  "expression": {
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 743,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "10420:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 745,
                          "indexExpression": {
                            "id": 744,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "10430:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10420:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "10420:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 748,
                      "indexExpression": {
                        "id": 747,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "10448:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10420:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10458:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10420:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "10420:39:2"
                },
                {
                  "expression": {
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 752,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "10488:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 754,
                        "indexExpression": {
                          "id": 753,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 672,
                          "src": "10498:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10488:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "10488:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10524:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10488:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 678,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1581,
                  "src": "9941:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9941:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "9877:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "9890:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "9882:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9882:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "9910:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "9902:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "9925:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "9917:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9917:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9881:50:2"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9952:0:2"
            },
            "scope": 1591,
            "src": "9868:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "10760:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 778,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "10778:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10797:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10778:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 781,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "10802:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10821:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "10802:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10778:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10826:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10770:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10770:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "10770:84:2"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 788,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "10864:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10882:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10864:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "10864:19:2"
                },
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "10931:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 836,
                      "src": "10914:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 793,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 792,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "10914:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "10914:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "baseExpression": {
                      "id": 795,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "10944:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 797,
                    "indexExpression": {
                      "id": 796,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "10954:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10944:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10914:55:2"
                },
                {
                  "expression": {
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 799,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "10983:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "10983:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 802,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "11009:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "10983:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "10983:39:2"
                },
                {
                  "expression": {
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 805,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "11036:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "11036:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 808,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "11062:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "11036:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "11036:39:2"
                },
                {
                  "expression": {
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 811,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "11089:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "11089:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 814,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "11118:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "11089:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "11089:45:2"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 817,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "11148:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "11148:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 820,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "11170:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "11148:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "11148:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 824,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "11206:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 827,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "11224:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11217:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 825,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "11217:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11217:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11241:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 830,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "11244:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 831,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "11256:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 832,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "11271:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 833,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "11286:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 823,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "11190:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11190:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "11190:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 775,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 774,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1590,
                  "src": "10750:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10750:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "10587:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10618:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10602:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "10636:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10629:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "10661:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10654:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10654:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "10680:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10673:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "10673:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "10702:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10695:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "10695:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "10724:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "10717:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10717:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10601:139:2"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10760:0:2"
            },
            "scope": 1591,
            "src": "10578:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "11544:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 855,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "11570:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11581:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 857,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "11584:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 858,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "11602:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 859,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "11614:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 860,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "11629:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 861,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "11644:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 854,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "11554:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11554:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "11554:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 851,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1590,
                  "src": "11534:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11534:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "11356:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "11387:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11371:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11371:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "11404:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11398:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11398:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "11429:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11422:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11422:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "11448:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11441:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11441:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "11486:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11479:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11479:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "11508:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "11501:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11501:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11370:154:2"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11544:0:2"
            },
            "scope": 1591,
            "src": "11347:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 957,
              "nodeType": "Block",
              "src": "11878:726:2",
              "statements": [
                {
                  "assignments": [
                    883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 883,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "11896:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "11888:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 882,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11888:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 886,
                  "initialValue": {
                    "expression": {
                      "id": 884,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "11914:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11914:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11888:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 887,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "11940:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11940:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11940:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "11940:16:2"
                },
                {
                  "assignments": [
                    894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 894,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "11983:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "11966:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 893,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 892,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "11966:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "11966:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 898,
                  "initialValue": {
                    "baseExpression": {
                      "id": 895,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "11997:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 897,
                    "indexExpression": {
                      "id": 896,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "12007:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11997:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11966:57:2"
                },
                {
                  "expression": {
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 899,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12037:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "12037:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 902,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "12059:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "12037:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "12037:31:2"
                },
                {
                  "expression": {
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 905,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12082:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "12082:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12103:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12082:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "12082:26:2"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 911,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12122:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "12122:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 914,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "12147:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12122:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "12122:36:2"
                },
                {
                  "expression": {
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 917,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12172:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "12172:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 920,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "12202:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12172:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "12172:46:2"
                },
                {
                  "expression": {
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 923,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12232:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "12232:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 926,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "12256:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "12232:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "12232:34:2"
                },
                {
                  "expression": {
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 929,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12280:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "12280:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 932,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "12307:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12280:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "12280:40:2"
                },
                {
                  "expression": {
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 935,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12334:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "12334:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 938,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "12361:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12334:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "12334:40:2"
                },
                {
                  "expression": {
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 941,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "12388:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "12388:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 944,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "12417:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "12388:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "12388:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 948,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "12497:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 949,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "12508:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 950,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "12521:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 951,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "12539:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 952,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "12551:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 953,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "12566:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 954,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "12581:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 947,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "12478:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12478:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "EmitStatement",
                  "src": "12473:124:2"
                }
              ]
            },
            "id": 958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "11682:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "11714:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11698:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11698:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "11732:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11725:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11725:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "11751:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11745:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "11776:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11769:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "11808:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11801:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11801:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "11830:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11823:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11823:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "11852:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "11845:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11845:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11697:171:2"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11878:0:2"
            },
            "scope": 1591,
            "src": "11673:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1054,
              "nodeType": "Block",
              "src": "12676:1781:2",
              "statements": [
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "12694:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "12686:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12686:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 969,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 967,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "12740:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 965,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4684,
                        "src": "12716:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4684_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4667,
                      "src": "12716:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4362_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12716:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12686:69:2"
                },
                {
                  "assignments": [
                    972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 972,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "12777:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "12765:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 971,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 970,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "12765:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "12765:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 973,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12765:18:2"
                },
                {
                  "assignments": [
                    975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 975,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "12801:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "12793:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 974,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12793:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12793:14:2"
                },
                {
                  "body": {
                    "id": 1047,
                    "nodeType": "Block",
                    "src": "12945:1423:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 984,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "13209:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "13209:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 986,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13248:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13248:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13209:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 989,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "13267:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 990,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "13267:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 991,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "13286:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13267:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13209:83:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1046,
                        "nodeType": "IfStatement",
                        "src": "13205:1153:2",
                        "trueBody": {
                          "id": 1045,
                          "nodeType": "Block",
                          "src": "13293:1065:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 994,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 975,
                                  "src": "13399:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 999,
                                          "name": "tasksSubmitted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 94,
                                          "src": "13436:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 1000,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 978,
                                          "src": "13452:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 997,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4684,
                                          "src": "13416:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4684_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 998,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4621,
                                        "src": "13416:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4362_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 1001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13416:38:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13408:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 995,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13408:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13408:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13399:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1004,
                              "nodeType": "ExpressionStatement",
                              "src": "13399:56:2"
                            },
                            {
                              "expression": {
                                "id": 1009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1005,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "13473:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1006,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "13482:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1008,
                                  "indexExpression": {
                                    "id": 1007,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 975,
                                    "src": "13488:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13482:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "src": "13473:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1010,
                              "nodeType": "ExpressionStatement",
                              "src": "13473:22:2"
                            },
                            {
                              "expression": {
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1011,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 972,
                                    "src": "14129:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1013,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "14129:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1016,
                                      "name": "_wizID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 960,
                                      "src": "14156:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1015,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14149:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1014,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14149:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14149:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "14129:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1019,
                              "nodeType": "ExpressionStatement",
                              "src": "14129:34:2"
                            },
                            {
                              "expression": {
                                "id": 1030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1020,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 972,
                                    "src": "14181:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1022,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "14181:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1028,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1025,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "14227:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1026,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "14227:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1027,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "14245:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14227:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14220:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1023,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14220:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14220:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "14181:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1031,
                              "nodeType": "ExpressionStatement",
                              "src": "14181:81:2"
                            },
                            {
                              "expression": {
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1032,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "14280:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1041,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1037,
                                            "name": "tasksSubmitted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "14314:14:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            }
                                          },
                                          {
                                            "id": 1038,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 978,
                                            "src": "14330:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1035,
                                            "name": "DoubleEndedQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4684,
                                            "src": "14294:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4684_$",
                                              "typeString": "type(library DoubleEndedQueue)"
                                            }
                                          },
                                          "id": 1036,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "at",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4621,
                                          "src": "14294:19:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4362_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                            "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                          }
                                        },
                                        "id": 1039,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14294:38:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 1034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14286:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1033,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14286:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1040,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14286:47:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14280:54:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1042,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "14337:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "14280:63:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1044,
                              "nodeType": "ExpressionStatement",
                              "src": "14280:63:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 981,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "12919:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 982,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "12923:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12919:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1048,
                  "initializationExpression": {
                    "assignments": [
                      978
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12913:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "12905:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12905:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 980,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12916:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12905:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "12901:1467:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1050,
                        "name": "_wizID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "14435:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1051,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "14443:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1049,
                      "name": "VerificationAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "14414:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14414:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1053,
                  "nodeType": "EmitStatement",
                  "src": "14409:41:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "12620:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "12659:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "12651:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12651:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12650:16:2"
            },
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12676:0:2"
            },
            "scope": 1591,
            "src": "12611:1846:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "15116:936:2",
              "statements": [
                {
                  "body": {
                    "id": 1166,
                    "nodeType": "Block",
                    "src": "15253:790:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1078,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15291:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1080,
                                      "indexExpression": {
                                        "id": 1079,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1065,
                                        "src": "15301:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15291:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1081,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "15291:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1076,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15280:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15280:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15280:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1075,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15270:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15270:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1087,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1057,
                                    "src": "15339:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1085,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15328:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15328:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15328:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1084,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15318:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15318:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "15270:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1165,
                        "nodeType": "IfStatement",
                        "src": "15267:766:2",
                        "trueBody": {
                          "id": 1164,
                          "nodeType": "Block",
                          "src": "15351:682:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1098,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1092,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15437:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1094,
                                          "indexExpression": {
                                            "id": 1093,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1065,
                                            "src": "15447:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15437:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1095,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "15437:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1096,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15466:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1097,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15466:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15437:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1105,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1099,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15485:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1100,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15485:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1101,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15504:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1103,
                                          "indexExpression": {
                                            "id": 1102,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1065,
                                            "src": "15514:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15504:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1104,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "15504:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "15485:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "15437:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15531:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1091,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15429:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15429:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1109,
                              "nodeType": "ExpressionStatement",
                              "src": "15429:124:2"
                            },
                            {
                              "assignments": [
                                1112
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1112,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "15618:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1164,
                                  "src": "15606:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1111,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1110,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "15606:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "15606:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1131,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1114,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1057,
                                    "src": "15632:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1115,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "15642:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1116,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1059,
                                    "src": "15650:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15657:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1118,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15660:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1120,
                                      "indexExpression": {
                                        "id": 1119,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1065,
                                        "src": "15670:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15660:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1121,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "15660:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1122,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15690:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1124,
                                      "indexExpression": {
                                        "id": 1123,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1065,
                                        "src": "15700:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15690:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1125,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "15690:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15714:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15717:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1128,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15720:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15723:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1113,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "15627:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15627:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15606:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1135,
                                    "name": "tasksSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "15769:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1138,
                                        "name": "tasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "15793:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1137,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15785:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1136,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15785:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15785:23:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4362_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1132,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4684,
                                    "src": "15743:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4684_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4394,
                                  "src": "15743:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4362_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15743:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1141,
                              "nodeType": "ExpressionStatement",
                              "src": "15743:66:2"
                            },
                            {
                              "expression": {
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1142,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "15827:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1144,
                                  "indexExpression": {
                                    "id": 1143,
                                    "name": "tasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "15833:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15827:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1145,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1112,
                                  "src": "15851:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "15827:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1147,
                              "nodeType": "ExpressionStatement",
                              "src": "15827:30:2"
                            },
                            {
                              "expression": {
                                "id": 1150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1148,
                                  "name": "tasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "15875:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15891:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15875:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1151,
                              "nodeType": "ExpressionStatement",
                              "src": "15875:17:2"
                            },
                            {
                              "expression": {
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1152,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15947:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1154,
                                      "indexExpression": {
                                        "id": 1153,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1065,
                                        "src": "15957:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15947:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1155,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "15947:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1157,
                                  "indexExpression": {
                                    "id": 1156,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "15984:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15947:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1158,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "15994:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "15994:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1160,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16012:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "15994:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15947:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1163,
                              "nodeType": "ExpressionStatement",
                              "src": "15947:71:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1068,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "15229:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1069,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "15231:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15231:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15229:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1167,
                  "initializationExpression": {
                    "assignments": [
                      1065
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1065,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15222:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "15214:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15214:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1067,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15226:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15214:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15249:3:2",
                      "subExpression": {
                        "id": 1072,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "15249:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1074,
                    "nodeType": "ExpressionStatement",
                    "src": "15249:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15210:833:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "15039:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "15066:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "15052:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15052:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "15085:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "15077:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15077:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "15099:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "15092:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15092:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15051:55:2"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15116:0:2"
            },
            "scope": 1591,
            "src": "15030:1022:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1238,
              "nodeType": "Block",
              "src": "16149:412:2",
              "statements": [
                {
                  "assignments": [
                    1180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "16172:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1238,
                      "src": "16159:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1179,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16159:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1187,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1183,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "16201:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1185,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16209:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16201:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1181,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16184:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "16184:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16184:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16159:53:2"
                },
                {
                  "condition": {
                    "id": 1188,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1176,
                    "src": "16225:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1217,
                  "nodeType": "IfStatement",
                  "src": "16222:193:2",
                  "trueBody": {
                    "id": 1216,
                    "nodeType": "Block",
                    "src": "16235:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1214,
                          "nodeType": "Block",
                          "src": "16288:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1197,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1174,
                                    "src": "16306:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1199,
                                  "indexExpression": {
                                    "id": 1198,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1190,
                                    "src": "16314:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16306:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1203,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1174,
                                            "src": "16346:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1205,
                                          "indexExpression": {
                                            "id": 1204,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1190,
                                            "src": "16354:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16346:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1201,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "16329:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "16329:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16329:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1200,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "16319:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16319:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "16306:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1209,
                              "nodeType": "ExpressionStatement",
                              "src": "16306:52:2"
                            },
                            {
                              "id": 1213,
                              "nodeType": "UncheckedBlock",
                              "src": "16376:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "16386:3:2",
                                    "subExpression": {
                                      "id": 1210,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1190,
                                      "src": "16388:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1212,
                                  "nodeType": "ExpressionStatement",
                                  "src": "16386:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1193,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "16268:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1194,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "16272:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16272:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16268:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1215,
                        "initializationExpression": {
                          "assignments": [
                            1190
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1190,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16261:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1215,
                              "src": "16253:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1189,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16253:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1192,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16265:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16253:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "16249:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1219,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "16432:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1238,
                      "src": "16424:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1218,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16424:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1226,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1223,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "16468:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1221,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16451:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16451:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16451:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1220,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16441:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16441:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16424:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1228,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "16504:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1229,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "16512:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1230,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1171,
                          "src": "16520:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "16512:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1232,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "16532:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1234,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16540:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16532:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1235,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "16544:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1227,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "16492:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16492:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "EmitStatement",
                  "src": "16487:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "16067:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "16087:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "16079:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16079:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "16116:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "16099:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1172,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "16099:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1173,
                    "nodeType": "ArrayTypeName",
                    "src": "16099:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "16130:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "16125:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16125:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16078:61:2"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16149:0:2"
            },
            "scope": 1591,
            "src": "16058:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1544,
              "nodeType": "Block",
              "src": "17363:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1252,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1241,
                                "src": "17450:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1250,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "17431:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$8226",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4876,
                              "src": "17431:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17431:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1254,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17461:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17461:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17431:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1257,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "17475:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1259,
                              "indexExpression": {
                                "id": 1258,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1243,
                                "src": "17481:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17475:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "17475:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1261,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "17502:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17475:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17431:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17510:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17423:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17423:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "17423:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1268,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "17563:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17563:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17580:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17563:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17555:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17555:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "17555:27:2"
                },
                {
                  "assignments": [
                    1276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1276,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "17606:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1544,
                      "src": "17593:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1275,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1274,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "17593:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "17593:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1280,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1277,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "17615:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1279,
                    "indexExpression": {
                      "id": 1278,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "17621:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17615:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17593:36:2"
                },
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "17647:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1544,
                      "src": "17639:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17639:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1284,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17655:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17639:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1285,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "18186:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "18186:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18205:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18186:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1317,
                  "nodeType": "IfStatement",
                  "src": "18183:205:2",
                  "trueBody": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "18208:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1314,
                          "nodeType": "Block",
                          "src": "18261:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1297,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1246,
                                    "src": "18279:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1299,
                                  "indexExpression": {
                                    "id": 1298,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1290,
                                    "src": "18287:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18279:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1303,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1246,
                                            "src": "18319:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1305,
                                          "indexExpression": {
                                            "id": 1304,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1290,
                                            "src": "18327:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18319:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1301,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "18302:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "18302:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18302:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1300,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "18292:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18292:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "18279:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1309,
                              "nodeType": "ExpressionStatement",
                              "src": "18279:52:2"
                            },
                            {
                              "id": 1313,
                              "nodeType": "UncheckedBlock",
                              "src": "18349:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "18359:3:2",
                                    "subExpression": {
                                      "id": 1310,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1290,
                                      "src": "18361:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1312,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18359:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1293,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "18241:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1294,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1246,
                              "src": "18245:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18245:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18241:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1315,
                        "initializationExpression": {
                          "assignments": [
                            1290
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1290,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18234:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1315,
                              "src": "18226:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1289,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18226:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1292,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18238:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18226:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "18222:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "18405:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1544,
                      "src": "18397:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18397:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1326,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1323,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "18441:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1321,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18424:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18424:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18424:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1320,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18414:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18414:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18397:53:2"
                },
                {
                  "assignments": [
                    1328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1328,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "18469:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1544,
                      "src": "18461:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18461:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1329,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "18483:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "18483:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1331,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "18498:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "18483:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18511:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "18483:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18507:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18461:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1338,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "18550:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1339,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "18558:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "18558:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1341,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "18572:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1342,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "18581:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1343,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "18589:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18602:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18589:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1337,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "18528:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18528:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1347,
                  "nodeType": "EmitStatement",
                  "src": "18523:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1348,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "18619:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18633:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "18619:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1542,
                    "nodeType": "Block",
                    "src": "19480:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1431,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "19628:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "19628:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1433,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "19648:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "19628:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1540,
                          "nodeType": "Block",
                          "src": "20464:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1514
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1514,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20578:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1540,
                                  "src": "20570:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1513,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20570:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1517,
                              "initialValue": {
                                "expression": {
                                  "id": 1515,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1276,
                                  "src": "20586:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1516,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "20586:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20570:30:2"
                            },
                            {
                              "expression": {
                                "id": 1521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20618:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1518,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20625:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1520,
                                  "indexExpression": {
                                    "id": 1519,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "20631:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20625:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1522,
                              "nodeType": "ExpressionStatement",
                              "src": "20618:21:2"
                            },
                            {
                              "assignments": [
                                1524,
                                1526
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1524,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20663:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1540,
                                  "src": "20658:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1523,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20658:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1526,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20682:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1540,
                                  "src": "20669:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1525,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20669:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1534,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20717:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1527,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6652,
                                        "src": "20690:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20690:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20690:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1530,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1514,
                                      "src": "20710:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20690:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20690:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20657:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1536,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1524,
                                    "src": "20796:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1537,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20802:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1535,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20788:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20788:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1539,
                              "nodeType": "ExpressionStatement",
                              "src": "20788:37:2"
                            }
                          ]
                        },
                        "id": 1541,
                        "nodeType": "IfStatement",
                        "src": "19625:1246:2",
                        "trueBody": {
                          "id": 1512,
                          "nodeType": "Block",
                          "src": "19655:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1436
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1436,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "19681:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1512,
                                  "src": "19673:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1435,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19673:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1441,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1437,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1276,
                                    "src": "19689:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1438,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "19689:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19704:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "19689:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19673:32:2"
                            },
                            {
                              "assignments": [
                                1443
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1443,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "19739:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1512,
                                  "src": "19723:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1442,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19723:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1452,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1448,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1276,
                                          "src": "19780:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1449,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "19780:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1446,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "19761:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$8226",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1447,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4876,
                                      "src": "19761:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19761:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19753:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1444,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19753:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19753:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19723:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1456,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1276,
                                      "src": "19839:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1457,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "19839:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1458,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "19857:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1453,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "19817:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$8226",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7954,
                                  "src": "19817:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19817:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1460,
                              "nodeType": "ExpressionStatement",
                              "src": "19817:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1464,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "19923:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1465,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "19931:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1461,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "19901:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$8226",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7954,
                                  "src": "19901:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19901:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1467,
                              "nodeType": "ExpressionStatement",
                              "src": "19901:56:2"
                            },
                            {
                              "expression": {
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1468,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1276,
                                    "src": "19976:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1470,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "19976:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1471,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19991:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "19976:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1473,
                              "nodeType": "ExpressionStatement",
                              "src": "19976:16:2"
                            },
                            {
                              "expression": {
                                "id": 1477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20039:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1474,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20046:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1476,
                                  "indexExpression": {
                                    "id": 1475,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1243,
                                    "src": "20052:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20046:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1478,
                              "nodeType": "ExpressionStatement",
                              "src": "20039:21:2"
                            },
                            {
                              "assignments": [
                                1480,
                                1482
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1480,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20127:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1512,
                                  "src": "20122:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1479,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20122:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1482,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20146:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1512,
                                  "src": "20133:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1481,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20133:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1489,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20185:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1483,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1443,
                                      "src": "20154:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20154:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1485,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1436,
                                      "src": "20178:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20154:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20154:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20121:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1491,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1480,
                                    "src": "20214:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20220:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1490,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20206:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20206:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1494,
                              "nodeType": "ExpressionStatement",
                              "src": "20206:37:2"
                            },
                            {
                              "expression": {
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1495,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1480,
                                      "src": "20299:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1496,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1482,
                                      "src": "20305:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1497,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "20298:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "20343:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1498,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "20313:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "20313:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "20313:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1501,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1436,
                                        "src": "20336:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "20313:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20313:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "20298:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1506,
                              "nodeType": "ExpressionStatement",
                              "src": "20298:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1508,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1480,
                                    "src": "20372:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20378:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1507,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20364:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20364:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1511,
                              "nodeType": "ExpressionStatement",
                              "src": "20364:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1543,
                  "nodeType": "IfStatement",
                  "src": "18615:2266:2",
                  "trueBody": {
                    "id": 1430,
                    "nodeType": "Block",
                    "src": "18635:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1352
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1352,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "18721:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1430,
                            "src": "18713:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1351,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18713:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1357,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1353,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "18729:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "18729:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18744:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18729:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18713:32:2"
                      },
                      {
                        "assignments": [
                          1359
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1359,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "18775:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1430,
                            "src": "18759:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18759:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1368,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1364,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1276,
                                    "src": "18818:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1365,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "18818:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1362,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "18799:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$8226",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4876,
                                "src": "18799:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18799:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18791:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1360,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18791:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18791:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18759:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1372,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1276,
                                "src": "18928:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "18928:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1374,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1276,
                                "src": "18942:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "18942:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1369,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "18906:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$8226",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7954,
                            "src": "18906:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18906:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ExpressionStatement",
                        "src": "18906:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1381,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1276,
                                "src": "18995:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "18995:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1383,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "19014:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1378,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "18973:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$8226",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7954,
                            "src": "18973:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18973:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "18973:67:2"
                      },
                      {
                        "expression": {
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1386,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "19055:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19055:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19070:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19055:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ExpressionStatement",
                        "src": "19055:16:2"
                      },
                      {
                        "expression": {
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "19114:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1392,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19121:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1394,
                            "indexExpression": {
                              "id": 1393,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "19127:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19121:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "19114:21:2"
                      },
                      {
                        "assignments": [
                          1398,
                          1400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1398,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "19194:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1430,
                            "src": "19189:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1397,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19189:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1400,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "19213:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1430,
                            "src": "19200:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1399,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "19200:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1407,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19254:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1401,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "19221:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "19221:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1403,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1352,
                                "src": "19247:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "19221:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19221:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19188:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1409,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1398,
                              "src": "19279:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19285:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1408,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19271:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19271:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1412,
                        "nodeType": "ExpressionStatement",
                        "src": "19271:37:2"
                      },
                      {
                        "expression": {
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1413,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1398,
                                "src": "19356:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1414,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1400,
                                "src": "19362:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1415,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "19355:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19400:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1416,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "19370:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "19370:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "19370:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1419,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1352,
                                  "src": "19393:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "19370:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19370:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "19355:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1424,
                        "nodeType": "ExpressionStatement",
                        "src": "19355:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1426,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1398,
                              "src": "19425:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19431:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1425,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19417:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19417:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "19417:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "17276:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "17303:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1545,
                  "src": "17295:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "17319:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1545,
                  "src": "17311:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1246,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17345:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1545,
                  "src": "17328:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1244,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17328:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1245,
                    "nodeType": "ArrayTypeName",
                    "src": "17328:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17294:59:2"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17363:0:2"
            },
            "scope": 1591,
            "src": "17267:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1553,
              "nodeType": "Block",
              "src": "20996:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21014:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21020:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21006:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21006:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "21006:30:2"
                },
                {
                  "id": 1552,
                  "nodeType": "PlaceholderStatement",
                  "src": "21046:1:2"
                }
              ]
            },
            "id": 1554,
            "name": "onlyAdmin",
            "nameLocation": "20984:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20993:2:2"
            },
            "src": "20975:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1562,
              "nodeType": "Block",
              "src": "21084:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21102:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21108:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21094:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21094:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "21094:30:2"
                },
                {
                  "id": 1561,
                  "nodeType": "PlaceholderStatement",
                  "src": "21134:1:2"
                }
              ]
            },
            "id": 1563,
            "name": "onlyNFTOwner",
            "nameLocation": "21069:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21081:2:2"
            },
            "src": "21060:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1571,
              "nodeType": "Block",
              "src": "21170:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21188:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21194:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21180:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21180:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "21180:31:2"
                },
                {
                  "id": 1570,
                  "nodeType": "PlaceholderStatement",
                  "src": "21221:1:2"
                }
              ]
            },
            "id": 1572,
            "name": "onlyLessee",
            "nameLocation": "21157:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21167:2:2"
            },
            "src": "21148:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1580,
              "nodeType": "Block",
              "src": "21257:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21297:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21303:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21289:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21289:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "21289:31:2"
                },
                {
                  "id": 1579,
                  "nodeType": "PlaceholderStatement",
                  "src": "21330:1:2"
                }
              ]
            },
            "id": 1581,
            "name": "onlyMember",
            "nameLocation": "21244:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21254:2:2"
            },
            "src": "21235:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1589,
              "nodeType": "Block",
              "src": "21388:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21406:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21411:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21398:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21398:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "21398:36:2"
                },
                {
                  "id": 1588,
                  "nodeType": "PlaceholderStatement",
                  "src": "21465:1:2"
                }
              ]
            },
            "id": 1590,
            "name": "onlyBoard",
            "nameLocation": "21376:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21385:2:2"
            },
            "src": "21367:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1592,
        "src": "743:20737:2",
        "usedErrors": [
          4353
        ]
      }
    ],
    "src": "0:21480:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b50604051620036b6380380620036b68339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b6135ab806200010b6000396000f3fe6080604052600436106101395760003560e01c80638d977672116100ab578063d374a2171161006f578063d374a217146103e8578063f18c51d314610408578063f2fde38b14610428578063f4739bd914610448578063f713b7ed14610478578063ff9810991461049857600080fd5b80638d977672146103105780638da5cb5b14610346578063976217cd1461036e578063b2bad5441461039b578063beca3a16146103c857600080fd5b80636215597b116100fd5780636215597b1461023557806369d037381461027b578063715018a61461029b57806372e185ce146102b0578063826b8ebd146102d05780638a6655d6146102f057600080fd5b8063013cf08b1461014557806309265ce61461017f57806310190ef1146101a1578063379d94cc146101d557806361f9e9a81461021557600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50610165610160366004612866565b6104c5565b6040516101769594939291906128d7565b60405180910390f35b34801561018b57600080fd5b5061019f61019a3660046129e0565b610591565b005b3480156101ad57600080fd5b506101c16101bc366004612866565b6106d7565b604051610176989796959493929190612a3f565b3480156101e157600080fd5b506005546101fb90600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610176565b34801561022157600080fd5b5061019f610230366004612b2b565b6107e1565b34801561024157600080fd5b5061026d610250366004612bc8565b600360209081526000928352604080842090915290825290205481565b604051908152602001610176565b34801561028757600080fd5b5061019f610296366004612bff565b610809565b3480156102a757600080fd5b5061019f610855565b3480156102bc57600080fd5b5061019f6102cb366004612c92565b61088b565b3480156102dc57600080fd5b5061026d6102eb366004612866565b610c4a565b3480156102fc57600080fd5b5061019f61030b366004612ce8565b610e60565b34801561031c57600080fd5b5061033061032b366004612866565b610e99565b6040516101769a99989796959493929190612d14565b34801561035257600080fd5b506001546040516001600160a01b039091168152602001610176565b34801561037a57600080fd5b5061038e610389366004612866565b610f9b565b6040516101769190612d95565b3480156103a757600080fd5b506103bb6103b6366004612e62565b6110dd565b6040516101769190612e7d565b3480156103d457600080fd5b5061019f6103e3366004612edf565b6114b1565b3480156103f457600080fd5b5061019f610403366004612866565b6115c6565b34801561041457600080fd5b5061019f610423366004612f2f565b6118f7565b34801561043457600080fd5b5061019f610443366004612bff565b61209d565b34801561045457600080fd5b50610468610463366004612866565b612138565b6040519015158152602001610176565b34801561048457600080fd5b5061019f610493366004612f7e565b6121c7565b3480156104a457600080fd5b506104b86104b3366004612866565b612364565b6040516101769190612fba565b6007602052600090815260409020805481906104e090613002565b80601f016020809104026020016040519081016040528092919081815260200182805461050c90613002565b80156105595780601f1061052e57610100808354040283529160200191610559565b820191906000526020600020905b81548152906001019060200180831161053c57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105a6576105a661303c565b60200260200101516040516020016105c091815260200190565b6040516020818303038152906040529050811561064c5760005b835181101561064a578381815181106105f5576105f561303c565b602002602001015160405160200161060f91815260200190565b604051602081830303815290604052805190602001208482815181106106375761063761303c565b60209081029190910101526001016105da565b505b60008360405160200161065f9190613052565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106106af576106af61303c565b6020026020010151856040516106c89493929190613088565b60405180910390a15050505050565b600481815481106106e757600080fd5b906000526020600020906003020160009150905080600101805461070a90613002565b80601f016020809104026020016040519081016040528092919081815260200182805461073690613002565b80156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b6107ef565b60405180910390fd5b610800878760008888888888612489565b50505050505050565b6001546001600160a01b031633146108335760405162461bcd60e51b81526004016107e6906130b9565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461087f5760405162461bcd60e51b81526004016107e6906130b9565b6108896000612608565b565b60005b600454811015610c4457836040516020016108a991906130ee565b60405160208183030381529060405280519060200120600482815481106108d2576108d261303c565b90600052602060002090600302016001016040516020016108f39190613101565b6040516020818303038152906040528051906020012003610c325742600482815481106109225761092261303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906109865750600481815481106109605761096061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6109c85760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b60448201526064016107e6565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610a0b57610a0b61303c565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610a4557610a4561303c565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610ae390826131db565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610be79084906132b0565b90915550610bfa905042620151806132b0565b60048381548110610c0d57610c0d61303c565b6000918252602080832064ffffffffff88168452600390920290910190526040902055505b80610c3c816132c8565b91505061088e565b50505050565b60006008548210610c905760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b60448201526064016107e6565b600082815260076020526040902060030154600160501b900464ffffffffff164211610cf45760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b60448201526064016107e6565b6000806000805b60008681526007602052604090206001015461ffff16811015610e1557600086815260076020526040902083906002018260088110610d3c57610d3c61303c565b601091828204019190066002029054906101000a900461ffff1661ffff161115610db75760008681526007602052604090206002018160088110610d8257610d8261303c565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610db257600091505b610e03565b600086815260076020526040902083906002018260088110610ddb57610ddb61303c565b601091828204019190066002029054906101000a900461ffff1661ffff1603610e0357600191505b80610e0d816132c8565b915050610cfb565b508015610e575760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b60448201526064016107e6565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b60448201526064016107e6565b600960205260009081526040902080548190610eb490613002565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee090613002565b8015610f2d5780601f10610f0257610100808354040283529160200191610f2d565b820191906000526020600020905b815481529060010190602001808311610f1057829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b610fa36127c8565b6000828152600960205260409081902081516101408101909252805482908290610fcc90613002565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff890613002565b80156110455780601f1061101a57610100808354040283529160200191611045565b820191906000526020600020905b81548152906001019060200180831161102857829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b60045481101561126e5742600482815481106111015761110161303c565b6000918252602080832064ffffffffff89168452600390920290910190526040902054108015611165575042600482815481106111405761114061303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156111a4575042600482815481106111805761118061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156111e157506001600482815481106111c0576111c061303c565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156111f157816001019150611266565b604080516001808252818301909252600091816020015b606081526020019060019003908161120857905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106112535761125361303c565b6020908102919091010152949350505050565b6001016110e3565b506000816001600160401b038111156112895761128961291b565b6040519080825280602002602001820160405280156112bc57816020015b60608152602001906001900390816112a75790505b5090506000805b6004548110156114a75742600482815481106112e1576112e161303c565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611345575042600482815481106113205761132061303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611384575042600482815481106113605761136061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156113c157506001600482815481106113a0576113a061303c565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561149f57600481815481106113d9576113d961303c565b906000526020600020906003020160010180546113f590613002565b80601f016020809104026020016040519081016040528092919081815260200182805461142190613002565b801561146e5780601f106114435761010080835404028352916020019161146e565b820191906000526020600020905b81548152906001019060200180831161145157829003601f168201915b50505050508382815181106114855761148561303c565b6020026020010181905250816001019150838210156114a7575b6001016112c3565b5090949350505050565b60018561ffff161180156114ca57506101018561ffff16105b6115165760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e730000000000000060448201526064016107e6565b60016008600082825461152991906132b0565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff8816179055806115a8888a836132fe565b506115bc8888600854600089898989612489565b5050505050505050565b60006115e1600554600f81810b600160801b909204900b0390565b90506115eb6127c8565b6000805b838110156118b7574283610120015164ffffffffff1610801561161b57508483610100015161ffff1614155b156118b25761162b60058261265a565b6000818152600960205260409081902081516101408101909252805492945090918290829061165990613002565b80601f016020809104026020016040519081016040528092919081815260200182805461168590613002565b80156116d25780601f106116a7576101008083540402835291602001916116d2565b820191906000526020600020905b8154815290600101906020018083116116b557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b5490935061178690426132b0565b64ffffffffff1661012084015282600960006117a360058561265a565b81526020810191909152604001600020815181906117c190826131db565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b6115ef565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196491906132e1565b6001600160a01b03161480156119955750600082815260096020526040902060040154600160701b900461ffff1683145b6119e15760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a61726460448201526064016107e6565b60008151116119ef57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611a8a5760005b8351811015611a8857838181518110611a3357611a3361303c565b6020026020010151604051602001611a4d91815260200190565b60405160208183030381529060405280519060200120848281518110611a7557611a7561303c565b6020908102919091010152600101611a18565b505b600083604051602001611a9d9190613052565b604051602081830303815290604052805190602001209050600081846002015414611ac9576000611acc565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611e32576004840154600090611b5c90600290600160201b90046001600160501b03166133be565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec91906132e1565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611c5657600080fd5b505af1158015611c6a573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611cd257600080fd5b505af1158015611ce6573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611d1c828261281c565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611d9a576040519150601f19603f3d011682016040523d82523d6000602084013e611d9f565b606091505b509150915081611dc15760405162461bcd60e51b81526004016107e6906133f2565b60405133908590600081818185875af1925050503d8060008114611e01576040519150601f19603f3d011682016040523d82523d6000602084013e611e06565b606091505b50909250905081611e295760405162461bcd60e51b81526004016107e6906133f2565b50505050610800565b81846003015403611fa9576004840154600090611e6190600290600160201b90046001600160501b03166133be565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef191906132e1565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611f5557600080fd5b505af1158015611f69573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611cb8565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190611fd9828261281c565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806120206001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d806000811461206a576040519150601f19603f3d011682016040523d82523d6000602084013e61206f565b606091505b5091509150816120915760405162461bcd60e51b81526004016107e6906133f2565b50505050505050505050565b6001546001600160a01b031633146120c75760405162461bcd60e51b81526004016107e6906130b9565b6001600160a01b03811661212c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107e6565b61213581612608565b50565b600080612154600554600f81810b600160801b909204900b0390565b905061215e6127c8565b6000805b838110156121bb574283610120015164ffffffffff16108015612190575085836020015164ffffffffff1614155b80156121a557508583610100015161ffff1614155b156121b65750600195945050505050565b612162565b50600095945050505050565b60005b60045481101561236057816040516020016121e59190613420565b604051602081830303815290604052805190602001206004828154811061220e5761220e61303c565b906000526020600020906003020160010160405160200161222f919061343c565b60405160208183030381529060405280519060200120036123585760006004828154811061225f5761225f61303c565b9060005260206000209060030201905060006004600160048054905061228591906134ae565b815481106122955761229561303c565b90600052602060002090600302019050809150600460016004805490506122bc91906134ae565b815481106122cc576122cc61303c565b906000526020600020906003020160006001820160006122ec919061281c565b5060020180546001600160b01b03191690556004805461230e906001906134ae565b8154811061231e5761231e61303c565b9060005260206000209060030201600060018201600061233e919061281c565b5060020180546001600160b01b0319169055506123609050565b6001016121ca565b5050565b606060085482106123aa5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b60448201526064016107e6565b60008281526007602052604081206001015461ffff166001600160401b038111156123d7576123d761291b565b604051908082528060200260200182016040528015612400578160200160208202803683370190505b50905060005b815181101561248257600084815260076020526040902060020181600881106124315761243161303c565b601091828204019190066002029054906101000a900461ffff1682828151811061245d5761245d61303c565b61ffff909216602092830291909101909101528061247a816132c8565b915050612406565b5092915050565b60048054600181018083556000838152919290839081106124ac576124ac61303c565b600091825260209091206003909102019050600181016124cd8a8c836132fe565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516125f49897969594939291906134c5565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061267d612669846126cb565b85546126789190600f0b613534565b612739565b8454909150600160801b9004600f90810b9082900b126126b057604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156127355760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016107e6565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061276c57506f7fffffffffffffffffffffffffffffff8213155b6127355760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016107e6565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461282890613002565b6000825580601f10612838575050565b601f01602090049060005260206000209081019061213591905b808211156127355760008155600101612852565b60006020828403121561287857600080fd5b5035919050565b60005b8381101561289a578181015183820152602001612882565b83811115610c445750506000910152565b600081518084526128c381602086016020860161287f565b601f01601f19169290920160200192915050565b60a0815260006128ea60a08301886128ab565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156129595761295961291b565b604052919050565b600082601f83011261297257600080fd5b813560206001600160401b0382111561298d5761298d61291b565b8160051b61299c828201612931565b92835284810182019282810190878511156129b657600080fd5b83870192505b848310156129d5578235825291830191908301906129bc565b979650505050505050565b6000806000606084860312156129f557600080fd5b8335925060208401356001600160401b03811115612a1257600080fd5b612a1e86828701612961565b92505060408401358015158114612a3457600080fd5b809150509250925092565b6000610100808352612a538184018c6128ab565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b60008083601f840112612ab657600080fd5b5081356001600160401b03811115612acd57600080fd5b602083019150836020828501011115612ae557600080fd5b9250929050565b803562ffffff81168114612aff57600080fd5b919050565b803564ffffffffff81168114612aff57600080fd5b803561ffff81168114612aff57600080fd5b600080600080600080600060c0888a031215612b4657600080fd5b87356001600160401b03811115612b5c57600080fd5b612b688a828b01612aa4565b909850965050602088013560ff81168114612b8257600080fd5b9450612b9060408901612aec565b9350612b9e60608901612b04565b9250612bac60808901612b04565b9150612bba60a08901612b19565b905092959891949750929550565b60008060408385031215612bdb57600080fd5b50508035926020909101359150565b6001600160a01b038116811461213557600080fd5b600060208284031215612c1157600080fd5b8135612c1c81612bea565b9392505050565b600082601f830112612c3457600080fd5b81356001600160401b03811115612c4d57612c4d61291b565b612c60601f8201601f1916602001612931565b818152846020838601011115612c7557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612ca757600080fd5b83356001600160401b03811115612cbd57600080fd5b612cc986828701612c23565b93505060208401359150612cdf60408501612b04565b90509250925092565b600080600060608486031215612cfd57600080fd5b505081359360208301359350604090920135919050565b6000610140808352612d288184018e6128ab565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612db46101608501836128ab565b91506020850151612dce604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612df760a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612e358187018361ffff169052565b8601519050610120612e4c8682018361ffff169052565b86015164ffffffffff81168387015290506114a7565b600060208284031215612e7457600080fd5b612c1c82612b04565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612ed257603f19888603018452612ec08583516128ab565b94509285019290850190600101612ea4565b5092979650505050505050565b600080600080600080600060c0888a031215612efa57600080fd5b87356001600160401b03811115612f1057600080fd5b612f1c8a828b01612aa4565b9098509650612b82905060208901612b19565b600080600060608486031215612f4457600080fd5b833592506020840135915060408401356001600160401b03811115612f6857600080fd5b612f7486828701612961565b9150509250925092565b600060208284031215612f9057600080fd5b81356001600160401b03811115612fa657600080fd5b612fb284828501612c23565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015612ff657835161ffff1683529284019291840191600101612fd6565b50909695505050505050565b600181811c9082168061301657607f821691505b60208210810361303657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561307c57815185529382019390820190600101613060565b50929695505050505050565b84815283151560208201528260408201526080606082015260006130af60808301846128ab565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612c1c60208301846128ab565b600060208083526000845461311581613002565b8084870152604060018084166000811461313657600181146131505761317e565b60ff1985168984015283151560051b89018301955061317e565b896000528660002060005b858110156131765781548b820186015290830190880161315b565b8a0184019650505b509398975050505050505050565b601f8211156131d657600081815260208120601f850160051c810160208610156131b35750805b601f850160051c820191505b818110156131d2578281556001016131bf565b5050505b505050565b81516001600160401b038111156131f4576131f461291b565b613208816132028454613002565b8461318c565b602080601f83116001811461323d57600084156132255750858301515b600019600386901b1c1916600185901b1785556131d2565b600085815260208120601f198616915b8281101561326c5788860151825594840194600190910190840161324d565b508582101561328a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156132c3576132c361329a565b500190565b6000600182016132da576132da61329a565b5060010190565b6000602082840312156132f357600080fd5b8151612c1c81612bea565b6001600160401b038311156133155761331561291b565b613329836133238354613002565b8361318c565b6000601f84116001811461335d57600085156133455750838201355b600019600387901b1c1916600186901b1783556133b7565b600083815260209020601f19861690835b8281101561338e578685013582556020948501946001909201910161336e565b50868210156133ab5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b03808416806133e657634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b6000825161343281846020870161287f565b9190910192915050565b600080835461344a81613002565b6001828116801561346257600181146134775761307c565b60ff198416875282151583028701945061307c565b8760005260208060002060005b8581101561349d5781548a820152908401908201613484565b505050959091019695505050505050565b6000828210156134c0576134c061329a565b500390565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b03849003851316156135565761355661329a565b600160ff1b839003841281161561356f5761356f61329a565b5050019056fea2646970667358221220e636459c16779e77a2cdeeb912e2cbeb3df883171e23ae86bffda429b40882d664736f6c634300080f0033",
  "bytecodeSha1": "e50af2f81b2be85f697f10646986bf24450f37cd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "135": [
            26367,
            26392,
            false
          ],
          "136": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "134": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "132": [
            4843,
            4860,
            false
          ]
        }
      },
      "12": {
        "Ownable.transferOwnership": {
          "133": [
            1990,
            2012,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "127": [
            6243,
            6297,
            false
          ],
          "128": [
            6301,
            6323,
            false
          ],
          "129": [
            6327,
            6352,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "116": [
            13209,
            13263,
            false
          ],
          "117": [
            13267,
            13292,
            false
          ]
        },
        "Governance.completeTask": {
          "96": [
            15270,
            15350,
            false
          ],
          "97": [
            15437,
            15481,
            false
          ],
          "98": [
            15485,
            15529,
            true
          ]
        },
        "Governance.createProposal": {
          "114": [
            10778,
            10798,
            false
          ],
          "115": [
            10802,
            10824,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "130": [
            8318,
            8410,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "105": [
            6725,
            6787,
            false
          ],
          "106": [
            6803,
            6847,
            false
          ],
          "107": [
            6851,
            6894,
            false
          ],
          "108": [
            6910,
            6941,
            false
          ],
          "109": [
            7361,
            7423,
            false
          ],
          "110": [
            7439,
            7483,
            false
          ],
          "111": [
            7487,
            7530,
            false
          ],
          "112": [
            7546,
            7577,
            false
          ],
          "113": [
            7703,
            7719,
            false
          ]
        },
        "Governance.getVotes": {
          "131": [
            4560,
            4587,
            true
          ]
        },
        "Governance.getWinningVote": {
          "99": [
            4954,
            4981,
            true
          ],
          "100": [
            5021,
            5073,
            true
          ],
          "101": [
            5420,
            5470,
            false
          ],
          "102": [
            5595,
            5601,
            false
          ],
          "103": [
            5649,
            5700,
            false
          ],
          "104": [
            5766,
            5772,
            true
          ]
        },
        "Governance.submitVerification": {
          "118": [
            17431,
            17471,
            false
          ],
          "119": [
            17475,
            17508,
            true
          ],
          "120": [
            17563,
            17581,
            true
          ],
          "121": [
            18186,
            18206,
            false
          ],
          "122": [
            18483,
            18504,
            true
          ],
          "123": [
            18619,
            18634,
            false
          ],
          "124": [
            19279,
            19283,
            true
          ],
          "125": [
            19628,
            19654,
            false
          ],
          "126": [
            20796,
            20800,
            true
          ]
        },
        "Governance.testHashing": {
          "95": [
            16225,
            16233,
            false
          ]
        }
      },
      "25": {},
      "26": {},
      "6": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "94": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "92": [
            35401,
            35488
          ],
          "93": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "90": [
            4839,
            4882
          ],
          "91": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "42": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "10": [
            2207,
            2237
          ],
          "11": [
            2271,
            2297
          ]
        }
      },
      "12": {
        "Ownable._setOwner": {
          "88": [
            2193,
            2210
          ],
          "89": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "7": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "65": [
            1982,
            2055
          ],
          "66": [
            2066,
            2085
          ]
        }
      },
      "13": {},
      "2": {
        "Governance._createTaskType": {
          "78": [
            11940,
            11956
          ],
          "79": [
            12037,
            12068
          ],
          "80": [
            12082,
            12108
          ],
          "81": [
            12122,
            12158
          ],
          "82": [
            12172,
            12218
          ],
          "83": [
            12232,
            12266
          ],
          "84": [
            12280,
            12320
          ],
          "85": [
            12334,
            12374
          ],
          "86": [
            12388,
            12432
          ],
          "87": [
            12473,
            12597
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "67": [
            6410,
            6421
          ],
          "68": [
            6455,
            6467
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "43": [
            13399,
            13455
          ],
          "44": [
            13473,
            13495
          ],
          "45": [
            14129,
            14163
          ],
          "46": [
            14181,
            14262
          ],
          "47": [
            14280,
            14343
          ],
          "48": [
            14409,
            14450
          ]
        },
        "Governance.completeTask": {
          "8": [
            15429,
            15553
          ],
          "9": [
            15743,
            15809
          ],
          "12": [
            15827,
            15857
          ],
          "13": [
            15875,
            15892
          ],
          "14": [
            15947,
            16018
          ],
          "15": [
            15249,
            15252
          ]
        },
        "Governance.createProposal": {
          "35": [
            10770,
            10854
          ],
          "36": [
            10864,
            10883
          ],
          "37": [
            10983,
            11022
          ],
          "38": [
            11036,
            11075
          ],
          "39": [
            11089,
            11134
          ],
          "40": [
            11148,
            11179
          ],
          "41": [
            11190,
            11302
          ]
        },
        "Governance.createTaskType": {
          "4": [
            11554,
            11660
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "69": [
            8735,
            8765
          ],
          "70": [
            8783,
            8819
          ],
          "71": [
            9289,
            9325
          ],
          "72": [
            9343,
            9348
          ],
          "73": [
            9386,
            9389
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "26": [
            6984,
            6991
          ],
          "27": [
            7102,
            7126
          ],
          "28": [
            7144,
            7159
          ],
          "29": [
            7197,
            7200
          ],
          "30": [
            7610,
            7644
          ],
          "31": [
            7672,
            7681
          ],
          "32": [
            7743,
            7748
          ],
          "33": [
            7804,
            7807
          ],
          "34": [
            7828,
            7842
          ]
        },
        "Governance.getTaskById": {
          "25": [
            4430,
            4451
          ]
        },
        "Governance.getVotes": {
          "74": [
            4552,
            4608
          ],
          "75": [
            4765,
            4810
          ],
          "76": [
            4747,
            4750
          ],
          "77": [
            4830,
            4846
          ]
        },
        "Governance.getWinningVote": {
          "16": [
            4946,
            5002
          ],
          "17": [
            5012,
            5097
          ],
          "18": [
            5490,
            5540
          ],
          "19": [
            5558,
            5573
          ],
          "20": [
            5605,
            5612
          ],
          "21": [
            5719,
            5724
          ],
          "22": [
            5363,
            5366
          ],
          "23": [
            5758,
            5793
          ],
          "24": [
            5803,
            5821
          ]
        },
        "Governance.setNFTAddress": {
          "6": [
            8026,
            8053
          ]
        },
        "Governance.submitVerification": {
          "49": [
            17423,
            17545
          ],
          "50": [
            17555,
            17582
          ],
          "51": [
            18279,
            18331
          ],
          "52": [
            18359,
            18362
          ],
          "53": [
            18523,
            18604
          ],
          "54": [
            18906,
            18959
          ],
          "55": [
            18973,
            19040
          ],
          "56": [
            19055,
            19071
          ],
          "57": [
            19114,
            19135
          ],
          "58": [
            19271,
            19308
          ],
          "59": [
            19355,
            19403
          ],
          "60": [
            19417,
            19454
          ],
          "61": [
            19817,
            19883
          ],
          "62": [
            19901,
            19957
          ],
          "63": [
            20618,
            20639
          ],
          "64": [
            20788,
            20825
          ]
        },
        "Governance.testHashing": {
          "1": [
            16306,
            16358
          ],
          "2": [
            16386,
            16389
          ],
          "3": [
            16487,
            16554
          ]
        }
      },
      "25": {},
      "26": {},
      "6": {
        "Context._msgSender": {
          "5": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101395760003560e01c80638d977672116100ab578063d374a2171161006f578063d374a217146103e8578063f18c51d314610408578063f2fde38b14610428578063f4739bd914610448578063f713b7ed14610478578063ff9810991461049857600080fd5b80638d977672146103105780638da5cb5b14610346578063976217cd1461036e578063b2bad5441461039b578063beca3a16146103c857600080fd5b80636215597b116100fd5780636215597b1461023557806369d037381461027b578063715018a61461029b57806372e185ce146102b0578063826b8ebd146102d05780638a6655d6146102f057600080fd5b8063013cf08b1461014557806309265ce61461017f57806310190ef1146101a1578063379d94cc146101d557806361f9e9a81461021557600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50610165610160366004612866565b6104c5565b6040516101769594939291906128d7565b60405180910390f35b34801561018b57600080fd5b5061019f61019a3660046129e0565b610591565b005b3480156101ad57600080fd5b506101c16101bc366004612866565b6106d7565b604051610176989796959493929190612a3f565b3480156101e157600080fd5b506005546101fb90600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610176565b34801561022157600080fd5b5061019f610230366004612b2b565b6107e1565b34801561024157600080fd5b5061026d610250366004612bc8565b600360209081526000928352604080842090915290825290205481565b604051908152602001610176565b34801561028757600080fd5b5061019f610296366004612bff565b610809565b3480156102a757600080fd5b5061019f610855565b3480156102bc57600080fd5b5061019f6102cb366004612c92565b61088b565b3480156102dc57600080fd5b5061026d6102eb366004612866565b610c4a565b3480156102fc57600080fd5b5061019f61030b366004612ce8565b610e60565b34801561031c57600080fd5b5061033061032b366004612866565b610e99565b6040516101769a99989796959493929190612d14565b34801561035257600080fd5b506001546040516001600160a01b039091168152602001610176565b34801561037a57600080fd5b5061038e610389366004612866565b610f9b565b6040516101769190612d95565b3480156103a757600080fd5b506103bb6103b6366004612e62565b6110dd565b6040516101769190612e7d565b3480156103d457600080fd5b5061019f6103e3366004612edf565b6114b1565b3480156103f457600080fd5b5061019f610403366004612866565b6115c6565b34801561041457600080fd5b5061019f610423366004612f2f565b6118f7565b34801561043457600080fd5b5061019f610443366004612bff565b61209d565b34801561045457600080fd5b50610468610463366004612866565b612138565b6040519015158152602001610176565b34801561048457600080fd5b5061019f610493366004612f7e565b6121c7565b3480156104a457600080fd5b506104b86104b3366004612866565b612364565b6040516101769190612fba565b6007602052600090815260409020805481906104e090613002565b80601f016020809104026020016040519081016040528092919081815260200182805461050c90613002565b80156105595780601f1061052e57610100808354040283529160200191610559565b820191906000526020600020905b81548152906001019060200180831161053c57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105a6576105a661303c565b60200260200101516040516020016105c091815260200190565b6040516020818303038152906040529050811561064c5760005b835181101561064a578381815181106105f5576105f561303c565b602002602001015160405160200161060f91815260200190565b604051602081830303815290604052805190602001208482815181106106375761063761303c565b60209081029190910101526001016105da565b505b60008360405160200161065f9190613052565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106106af576106af61303c565b6020026020010151856040516106c89493929190613088565b60405180910390a15050505050565b600481815481106106e757600080fd5b906000526020600020906003020160009150905080600101805461070a90613002565b80601f016020809104026020016040519081016040528092919081815260200182805461073690613002565b80156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b6107ef565b60405180910390fd5b610800878760008888888888612489565b50505050505050565b6001546001600160a01b031633146108335760405162461bcd60e51b81526004016107e6906130b9565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461087f5760405162461bcd60e51b81526004016107e6906130b9565b6108896000612608565b565b60005b600454811015610c4457836040516020016108a991906130ee565b60405160208183030381529060405280519060200120600482815481106108d2576108d261303c565b90600052602060002090600302016001016040516020016108f39190613101565b6040516020818303038152906040528051906020012003610c325742600482815481106109225761092261303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906109865750600481815481106109605761096061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6109c85760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b60448201526064016107e6565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610a0b57610a0b61303c565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610a4557610a4561303c565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610ae390826131db565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610be79084906132b0565b90915550610bfa905042620151806132b0565b60048381548110610c0d57610c0d61303c565b6000918252602080832064ffffffffff88168452600390920290910190526040902055505b80610c3c816132c8565b91505061088e565b50505050565b60006008548210610c905760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b60448201526064016107e6565b600082815260076020526040902060030154600160501b900464ffffffffff164211610cf45760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b60448201526064016107e6565b6000806000805b60008681526007602052604090206001015461ffff16811015610e1557600086815260076020526040902083906002018260088110610d3c57610d3c61303c565b601091828204019190066002029054906101000a900461ffff1661ffff161115610db75760008681526007602052604090206002018160088110610d8257610d8261303c565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610db257600091505b610e03565b600086815260076020526040902083906002018260088110610ddb57610ddb61303c565b601091828204019190066002029054906101000a900461ffff1661ffff1603610e0357600191505b80610e0d816132c8565b915050610cfb565b508015610e575760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b60448201526064016107e6565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b60448201526064016107e6565b600960205260009081526040902080548190610eb490613002565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee090613002565b8015610f2d5780601f10610f0257610100808354040283529160200191610f2d565b820191906000526020600020905b815481529060010190602001808311610f1057829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b610fa36127c8565b6000828152600960205260409081902081516101408101909252805482908290610fcc90613002565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff890613002565b80156110455780601f1061101a57610100808354040283529160200191611045565b820191906000526020600020905b81548152906001019060200180831161102857829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b60045481101561126e5742600482815481106111015761110161303c565b6000918252602080832064ffffffffff89168452600390920290910190526040902054108015611165575042600482815481106111405761114061303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156111a4575042600482815481106111805761118061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156111e157506001600482815481106111c0576111c061303c565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156111f157816001019150611266565b604080516001808252818301909252600091816020015b606081526020019060019003908161120857905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106112535761125361303c565b6020908102919091010152949350505050565b6001016110e3565b506000816001600160401b038111156112895761128961291b565b6040519080825280602002602001820160405280156112bc57816020015b60608152602001906001900390816112a75790505b5090506000805b6004548110156114a75742600482815481106112e1576112e161303c565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611345575042600482815481106113205761132061303c565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611384575042600482815481106113605761136061303c565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156113c157506001600482815481106113a0576113a061303c565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561149f57600481815481106113d9576113d961303c565b906000526020600020906003020160010180546113f590613002565b80601f016020809104026020016040519081016040528092919081815260200182805461142190613002565b801561146e5780601f106114435761010080835404028352916020019161146e565b820191906000526020600020905b81548152906001019060200180831161145157829003601f168201915b50505050508382815181106114855761148561303c565b6020026020010181905250816001019150838210156114a7575b6001016112c3565b5090949350505050565b60018561ffff161180156114ca57506101018561ffff16105b6115165760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e730000000000000060448201526064016107e6565b60016008600082825461152991906132b0565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff8816179055806115a8888a836132fe565b506115bc8888600854600089898989612489565b5050505050505050565b60006115e1600554600f81810b600160801b909204900b0390565b90506115eb6127c8565b6000805b838110156118b7574283610120015164ffffffffff1610801561161b57508483610100015161ffff1614155b156118b25761162b60058261265a565b6000818152600960205260409081902081516101408101909252805492945090918290829061165990613002565b80601f016020809104026020016040519081016040528092919081815260200182805461168590613002565b80156116d25780601f106116a7576101008083540402835291602001916116d2565b820191906000526020600020905b8154815290600101906020018083116116b557829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b5490935061178690426132b0565b64ffffffffff1661012084015282600960006117a360058561265a565b81526020810191909152604001600020815181906117c190826131db565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b6115ef565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196491906132e1565b6001600160a01b03161480156119955750600082815260096020526040902060040154600160701b900461ffff1683145b6119e15760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a61726460448201526064016107e6565b60008151116119ef57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611a8a5760005b8351811015611a8857838181518110611a3357611a3361303c565b6020026020010151604051602001611a4d91815260200190565b60405160208183030381529060405280519060200120848281518110611a7557611a7561303c565b6020908102919091010152600101611a18565b505b600083604051602001611a9d9190613052565b604051602081830303815290604052805190602001209050600081846002015414611ac9576000611acc565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611e32576004840154600090611b5c90600290600160201b90046001600160501b03166133be565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec91906132e1565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611c5657600080fd5b505af1158015611c6a573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611cd257600080fd5b505af1158015611ce6573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611d1c828261281c565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611d9a576040519150601f19603f3d011682016040523d82523d6000602084013e611d9f565b606091505b509150915081611dc15760405162461bcd60e51b81526004016107e6906133f2565b60405133908590600081818185875af1925050503d8060008114611e01576040519150601f19603f3d011682016040523d82523d6000602084013e611e06565b606091505b50909250905081611e295760405162461bcd60e51b81526004016107e6906133f2565b50505050610800565b81846003015403611fa9576004840154600090611e6190600290600160201b90046001600160501b03166133be565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef191906132e1565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611f5557600080fd5b505af1158015611f69573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611cb8565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190611fd9828261281c565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b0319169055806120206001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d806000811461206a576040519150601f19603f3d011682016040523d82523d6000602084013e61206f565b606091505b5091509150816120915760405162461bcd60e51b81526004016107e6906133f2565b50505050505050505050565b6001546001600160a01b031633146120c75760405162461bcd60e51b81526004016107e6906130b9565b6001600160a01b03811661212c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107e6565b61213581612608565b50565b600080612154600554600f81810b600160801b909204900b0390565b905061215e6127c8565b6000805b838110156121bb574283610120015164ffffffffff16108015612190575085836020015164ffffffffff1614155b80156121a557508583610100015161ffff1614155b156121b65750600195945050505050565b612162565b50600095945050505050565b60005b60045481101561236057816040516020016121e59190613420565b604051602081830303815290604052805190602001206004828154811061220e5761220e61303c565b906000526020600020906003020160010160405160200161222f919061343c565b60405160208183030381529060405280519060200120036123585760006004828154811061225f5761225f61303c565b9060005260206000209060030201905060006004600160048054905061228591906134ae565b815481106122955761229561303c565b90600052602060002090600302019050809150600460016004805490506122bc91906134ae565b815481106122cc576122cc61303c565b906000526020600020906003020160006001820160006122ec919061281c565b5060020180546001600160b01b03191690556004805461230e906001906134ae565b8154811061231e5761231e61303c565b9060005260206000209060030201600060018201600061233e919061281c565b5060020180546001600160b01b0319169055506123609050565b6001016121ca565b5050565b606060085482106123aa5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b60448201526064016107e6565b60008281526007602052604081206001015461ffff166001600160401b038111156123d7576123d761291b565b604051908082528060200260200182016040528015612400578160200160208202803683370190505b50905060005b815181101561248257600084815260076020526040902060020181600881106124315761243161303c565b601091828204019190066002029054906101000a900461ffff1682828151811061245d5761245d61303c565b61ffff909216602092830291909101909101528061247a816132c8565b915050612406565b5092915050565b60048054600181018083556000838152919290839081106124ac576124ac61303c565b600091825260209091206003909102019050600181016124cd8a8c836132fe565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516125f49897969594939291906134c5565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061267d612669846126cb565b85546126789190600f0b613534565b612739565b8454909150600160801b9004600f90810b9082900b126126b057604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156127355760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016107e6565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061276c57506f7fffffffffffffffffffffffffffffff8213155b6127355760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016107e6565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461282890613002565b6000825580601f10612838575050565b601f01602090049060005260206000209081019061213591905b808211156127355760008155600101612852565b60006020828403121561287857600080fd5b5035919050565b60005b8381101561289a578181015183820152602001612882565b83811115610c445750506000910152565b600081518084526128c381602086016020860161287f565b601f01601f19169290920160200192915050565b60a0815260006128ea60a08301886128ab565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156129595761295961291b565b604052919050565b600082601f83011261297257600080fd5b813560206001600160401b0382111561298d5761298d61291b565b8160051b61299c828201612931565b92835284810182019282810190878511156129b657600080fd5b83870192505b848310156129d5578235825291830191908301906129bc565b979650505050505050565b6000806000606084860312156129f557600080fd5b8335925060208401356001600160401b03811115612a1257600080fd5b612a1e86828701612961565b92505060408401358015158114612a3457600080fd5b809150509250925092565b6000610100808352612a538184018c6128ab565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b60008083601f840112612ab657600080fd5b5081356001600160401b03811115612acd57600080fd5b602083019150836020828501011115612ae557600080fd5b9250929050565b803562ffffff81168114612aff57600080fd5b919050565b803564ffffffffff81168114612aff57600080fd5b803561ffff81168114612aff57600080fd5b600080600080600080600060c0888a031215612b4657600080fd5b87356001600160401b03811115612b5c57600080fd5b612b688a828b01612aa4565b909850965050602088013560ff81168114612b8257600080fd5b9450612b9060408901612aec565b9350612b9e60608901612b04565b9250612bac60808901612b04565b9150612bba60a08901612b19565b905092959891949750929550565b60008060408385031215612bdb57600080fd5b50508035926020909101359150565b6001600160a01b038116811461213557600080fd5b600060208284031215612c1157600080fd5b8135612c1c81612bea565b9392505050565b600082601f830112612c3457600080fd5b81356001600160401b03811115612c4d57612c4d61291b565b612c60601f8201601f1916602001612931565b818152846020838601011115612c7557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612ca757600080fd5b83356001600160401b03811115612cbd57600080fd5b612cc986828701612c23565b93505060208401359150612cdf60408501612b04565b90509250925092565b600080600060608486031215612cfd57600080fd5b505081359360208301359350604090920135919050565b6000610140808352612d288184018e6128ab565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612db46101608501836128ab565b91506020850151612dce604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612df760a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612e358187018361ffff169052565b8601519050610120612e4c8682018361ffff169052565b86015164ffffffffff81168387015290506114a7565b600060208284031215612e7457600080fd5b612c1c82612b04565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612ed257603f19888603018452612ec08583516128ab565b94509285019290850190600101612ea4565b5092979650505050505050565b600080600080600080600060c0888a031215612efa57600080fd5b87356001600160401b03811115612f1057600080fd5b612f1c8a828b01612aa4565b9098509650612b82905060208901612b19565b600080600060608486031215612f4457600080fd5b833592506020840135915060408401356001600160401b03811115612f6857600080fd5b612f7486828701612961565b9150509250925092565b600060208284031215612f9057600080fd5b81356001600160401b03811115612fa657600080fd5b612fb284828501612c23565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015612ff657835161ffff1683529284019291840191600101612fd6565b50909695505050505050565b600181811c9082168061301657607f821691505b60208210810361303657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b8381101561307c57815185529382019390820190600101613060565b50929695505050505050565b84815283151560208201528260408201526080606082015260006130af60808301846128ab565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612c1c60208301846128ab565b600060208083526000845461311581613002565b8084870152604060018084166000811461313657600181146131505761317e565b60ff1985168984015283151560051b89018301955061317e565b896000528660002060005b858110156131765781548b820186015290830190880161315b565b8a0184019650505b509398975050505050505050565b601f8211156131d657600081815260208120601f850160051c810160208610156131b35750805b601f850160051c820191505b818110156131d2578281556001016131bf565b5050505b505050565b81516001600160401b038111156131f4576131f461291b565b613208816132028454613002565b8461318c565b602080601f83116001811461323d57600084156132255750858301515b600019600386901b1c1916600185901b1785556131d2565b600085815260208120601f198616915b8281101561326c5788860151825594840194600190910190840161324d565b508582101561328a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156132c3576132c361329a565b500190565b6000600182016132da576132da61329a565b5060010190565b6000602082840312156132f357600080fd5b8151612c1c81612bea565b6001600160401b038311156133155761331561291b565b613329836133238354613002565b8361318c565b6000601f84116001811461335d57600085156133455750838201355b600019600387901b1c1916600186901b1783556133b7565b600083815260209020601f19861690835b8281101561338e578685013582556020948501946001909201910161336e565b50868210156133ab5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b03808416806133e657634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b6000825161343281846020870161287f565b9190910192915050565b600080835461344a81613002565b6001828116801561346257600181146134775761307c565b60ff198416875282151583028701945061307c565b8760005260208060002060005b8581101561349d5781548a820152908401908201613484565b505050959091019695505050505050565b6000828210156134c0576134c061329a565b500390565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b03849003851316156135565761355661329a565b600160ff1b839003841281161561356f5761356f61329a565b5050019056fea2646970667358221220e636459c16779e77a2cdeeb912e2cbeb3df883171e23ae86bffda429b40882d664736f6c634300080f0033",
  "deployedSourceMap": "743:20737:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:46;;;;;;;;;;-1:-1:-1;2692:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;16058:503;;;;;;;;;;-1:-1:-1;16058:503:2;;;;;:::i;:::-;;:::i;:::-;;2388:27;;;;;;;;;;-1:-1:-1;2388:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2525:51::-;;;;;;;;;;-1:-1:-1;2525:51:2;;;;;;;;;-1:-1:-1;;;2525:51:2;;;;;;;;;;4424:2:27;4413:22;;;4395:41;;4472:22;;;;4467:2;4452:18;;4445:50;4368:18;2525:51:2;4225:276:27;11347:320:2;;;;;;;;;;-1:-1:-1;11347:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6622:25:27;;;6610:2;6595:18;957:75:2;6476:177:27;7959:101:2;;;;;;;;;;-1:-1:-1;7959:101:2;;;;;:::i;:::-;;:::i;1652:94:12:-;;;;;;;;;;;;;:::i;15030:1022:2:-;;;;;;;;;;-1:-1:-1;15030:1022:2;;;;;:::i;:::-;;:::i;4859:969::-;;;;;;;;;;-1:-1:-1;4859:969:2;;;;;:::i;:::-;;:::i;9868:664::-;;;;;;;;;;-1:-1:-1;9868:664:2;;;;;:::i;:::-;;:::i;2773:38::-;;;;;;;;;;-1:-1:-1;2773:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:12:-;;;;;;;;;;-1:-1:-1;1074:6:12;;1001:87;;-1:-1:-1;;;;;1074:6:12;;;9650:51:27;;9638:2;9623:18;1001:87:12;9504:203:27;4346:112:2;;;;;;;;;;-1:-1:-1;4346:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6549:1300::-;;;;;;;;;;-1:-1:-1;6549:1300:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10578:762::-;;;;;;;;;;-1:-1:-1;10578:762:2;;;;;:::i;:::-;;:::i;12611:1846::-;;;;;;;;;;-1:-1:-1;12611:1846:2;;;;;:::i;:::-;;:::i;17267:3620::-;;;;;;;;;;-1:-1:-1;17267:3620:2;;;;;:::i;:::-;;:::i;1901:192:12:-;;;;;;;;;;-1:-1:-1;1901:192:12;;;;;:::i;:::-;;:::i;5875:599:2:-;;;;;;;;;;-1:-1:-1;5875:599:2;;;;;:::i;:::-;;:::i;:::-;;;13503:14:27;;13496:22;13478:41;;13466:2;13451:18;5875:599:2;13338:187:27;8186:1221:2;;;;;;;;;;-1:-1:-1;8186:1221:2;;;;;:::i;:::-;;:::i;4464:389::-;;;;;;;;;;-1:-1:-1;4464:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2692:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2692:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2692:46:2;;;;;;-1:-1:-1;;;2692:46:2;;;;:::o;16058:503::-;16159:22;16201:7;16209:1;16201:10;;;;;;;;:::i;:::-;;;;;;;16184:28;;;;;;15151:19:27;;15195:2;15186:12;;15022:182;16184:28:2;;;;;;;;;;;;;16159:53;;16225:8;16222:193;;;16253:9;16249:156;16272:7;:14;16268:1;:18;16249:156;;;16346:7;16354:1;16346:10;;;;;;;;:::i;:::-;;;;;;;16329:28;;;;;;15151:19:27;;15195:2;15186:12;;15022:182;16329:28:2;;;;;;;;;;;;;16319:39;;;;;;16306:7;16314:1;16306:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;16386:3;;16249:156;;;;16222:193;16424:14;16468:7;16451:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;16441:36;;;;;;16424:53;;16492:62;16504:6;16520:10;16512:6;:18;16532:7;16540:1;16532:10;;;;;;;;:::i;:::-;;;;;;;16544:9;16492:62;;;;;;;;;:::i;:::-;;;;;;;;16149:412;;16058:503;;;:::o;2388:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;2388:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;-1:-1:-1;;;2388:27:2;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;;2388:27:2;;;;;:::o;11347:320::-;21398:36;;;;;;;;;;;11554:106:::1;11570:9;;11581:1;11584:16;11602:10;11614:13;11629;11644:15;11554;:106::i;:::-;11347:320:::0;;;;;;;:::o;7959:101::-;1074:6:12;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;8026:10:2::1;:27:::0;;-1:-1:-1;;;;;;8026:27:2::1;-1:-1:-1::0;;;;;8026:27:2;;;::::1;::::0;;;::::1;::::0;;7959:101::o;1652:94:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;15030:1022:2:-;15214:9;15210:833;15231:9;:16;15229:18;;15210:833;;;15339:9;15328:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15318:32;;;;;;15291:9;15301:1;15291:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;15280:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;15270:44;;;;;;:80;15267:766;;15466:15;15437:9;15447:1;15437:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15437:25:2;;;;:44;;;;:92;;;15504:9;15514:1;15504:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15504:25:2;;;;15485:15;:44;;15437:92;15429:124;;;;-1:-1:-1;;;15429:124:2;;18436:2:27;15429:124:2;;;18418:21:27;18475:2;18455:18;;;18448:30;-1:-1:-1;;;18494:18:27;;;18487:49;18553:18;;15429:124:2;18234:343:27;15429:124:2;15606:18;15627:98;;;;;;;;15632:9;15627:98;;;;15642:6;15627:98;;;;;;15650:5;15627:98;;;;15657:1;15627:98;;;;;;15660:9;15670:1;15660:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;15627:98;;;;;;15690:9;15700:1;15690:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;15690:22:2;;;;15627:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;15793:14;;15769;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;15827:21:2;;:5;:21;;;:30;;;;-1:-1:-1;15827:30:2;;:21;;:30;;:21;:30;:::i;:::-;-1:-1:-1;15827:30:2;;;;;;;;;;-1:-1:-1;;15827:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15827:30:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;15827:30:2;-1:-1:-1;;;;;;;;15827:30:2;;;;;;;-1:-1:-1;;;;15827:30:2;;-1:-1:-1;;;15827:30:2;;;;;;-1:-1:-1;;;;15827:30:2;-1:-1:-1;;;15827:30:2;;;;;-1:-1:-1;;;;15827:30:2;;;;;-1:-1:-1;;;15827:30:2;;;;;;;;;;;;15875:14;:17;;-1:-1:-1;;15875:17:2;;15827:30;;15875:17;:::i;:::-;;;;-1:-1:-1;15994:24:2;;-1:-1:-1;15994:15:2;16012:6;15994:24;:::i;:::-;15947:9;15957:1;15947:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;-1:-1:-1;15267:766:2;15249:3;;;;:::i;:::-;;;;15210:833;;;;15030:1022;;;:::o;4859:969::-;4926:7;4967:14;;4954:10;:27;4946:56;;;;-1:-1:-1;;;4946:56:2;;21267:2:27;4946:56:2;;;21249:21:27;21306:2;21286:18;;;21279:30;-1:-1:-1;;;21325:18:27;;;21318:46;21381:18;;4946:56:2;21065:340:27;4946:56:2;5039:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5039:34:2;;;;5021:15;:52;5012:85;;;;-1:-1:-1;;;5012:85:2;;21612:2:27;5012:85:2;;;21594:21:27;21651:2;21631:18;;;21624:30;-1:-1:-1;;;21670:18:27;;;21663:49;21729:18;;5012:85:2;21410:343:27;5012:85:2;5217:19;5246:25;5281:11;5308:9;5304:445;5324:21;;;;:9;:21;;;;;:37;;;;;5321:40;;5304:445;;;5420:21;;;;:9;:21;;;;;5453:17;;5420:27;;5448:1;5420:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5417:322;;;5510:21;;;;:9;:21;;;;;:27;;5538:1;5510:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5490:50;;;;5572:1;5558:15;;5595:3;5600:1;5595:6;5591:23;;5611:1;5605:7;;5591:23;5417:322;;;5649:21;;;;:9;:21;;;;;5683:17;;5649:27;;5677:1;5649:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5646:93;;5723:1;5719:5;;5646:93;5363:3;;;;:::i;:::-;;;;5304:445;;;-1:-1:-1;5766:6:2;;5758:35;;;;-1:-1:-1;;;5758:35:2;;21960:2:27;5758:35:2;;;21942:21:27;21999:2;21979:18;;;21972:30;-1:-1:-1;;;22018:18:27;;;22011:46;22074:18;;5758:35:2;21758:340:27;5758:35:2;-1:-1:-1;5810:11:2;;4859:969;-1:-1:-1;;;4859:969:2:o;9868:664::-;21289:31;;-1:-1:-1;;;21289:31:2;;22305:2:27;21289:31:2;;;22287:21:27;22344:2;22324:18;;;22317:30;-1:-1:-1;;;22363:18:27;;;22356:44;22417:18;;21289:31:2;22103:338:27;2773:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2773:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2773:38:2;-1:-1:-1;2773:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2773:38:2;;;;;-1:-1:-1;;;2773:38:2;;;;;-1:-1:-1;;;2773:38:2;;;;;;-1:-1:-1;;;2773:38:2;;;;;:::o;4346:112::-;4407:11;;:::i;:::-;4437:14;;;;:5;:14;;;;;;;4430:21;;;;;;;;;;;;4437:14;;4430:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4430:21:2;;;-1:-1:-1;;4430:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4430:21:2;;-1:-1:-1;;;;;4430:21:2;;;;;-1:-1:-1;;;4430:21:2;;;;;;;;;;-1:-1:-1;;;4430:21:2;;;;;;;-1:-1:-1;;;4430:21:2;;;;;;;;;;;;-1:-1:-1;;4346:112:2:o;6549:1300::-;6620:15;6647:13;;6670:542;6690:9;:16;6687:19;;6670:542;;;6772:15;6725:9;6735:1;6725:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;6832:15;6803:9;6813:1;6803:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6803:25:2;;;;:44;;6725:122;:169;;;;;6879:15;6851:9;6861:1;6851:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6851:25:2;;;;:43;6725:169;:216;;;;;6940:1;6910:9;6920:1;6910:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;6910:27:2;;;;:31;6725:216;6722:452;;;6984:7;;;;;6722:452;;;7069:15;;;7082:1;7069:15;;;;;;;;;7043:24;;7069:15;;;;;;;;;;;;;;;;;;;;7043:41;;7102:24;;;;;;;;;;;;;-1:-1:-1;;;7102:24:2;;;:8;7111:1;7102:11;;;;;;;;:::i;:::-;;;;;;;;;;:24;7151:8;6549:1300;-1:-1:-1;;;;6549:1300:2:o;6722:452::-;7197:3;;6670:542;;;;7222:23;7261:5;-1:-1:-1;;;;;7248:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:45;;7277:15;7310:9;7306:513;7326:9;:16;7323:19;;7306:513;;;7408:15;7361:9;7371:1;7361:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;7468:15;7439:9;7449:1;7439:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;7439:25:2;;;;:44;;7361:122;:169;;;;;7515:15;7487:9;7497:1;7487:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;7487:25:2;;;;:43;7361:169;:216;;;;;7576:1;7546:9;7556:1;7546:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;7546:27:2;;;;:31;7361:216;7358:423;;;7623:9;7633:1;7623:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;7610:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;7618:1;7610:10;;;;;;;;:::i;:::-;;;;;;:34;;;;7672:9;;;;;7714:5;7703:7;:16;7700:67;7743:5;7700:67;;7804:3;;7306:513;;;-1:-1:-1;7835:7:2;;6549:1300;-1:-1:-1;;;;6549:1300:2:o;10578:762::-;10797:1:::1;10778:16;:20;;;:46;;;;;10821:3;10802:16;:22;;;10778:46;10770:84;;;::::0;-1:-1:-1;;;10770:84:2;;24055:2:27;10770:84:2::1;::::0;::::1;24037:21:27::0;24094:2;24074:18;;;24067:30;24133:27;24113:18;;;24106:55;24178:18;;10770:84:2::1;23853:349:27::0;10770:84:2::1;10882:1;10864:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10954:14:2::1;::::0;10914:27:::1;10944:25:::0;;;:9:::1;:25;::::0;;;;10983:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;11036:39:2;10983;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;11036:39:2;;;;;-1:-1:-1;;;11036:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;11089:26:2;::::1;:45:::0;;-1:-1:-1;;11089:45:2::1;;::::0;::::1;;::::0;;10944:25;11148:31:::1;11170:9:::0;;10944:25;11148:31:::1;:::i;:::-;;11190:112;11206:9;;11224:14;;11241:1;11244:10;11256:13;11271;11286:15;11190;:112::i;:::-;10760:580;10578:762:::0;;;;;;;:::o;12611:1846::-;12686:27;12716:39;12740:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;12716:39:2;12686:69;;12765:18;;:::i;:::-;12793:14;;12901:1467;12923:19;12919:1;:23;12901:1467;;;13248:15;13209:6;:36;;;:54;;;:83;;;;;13286:6;13267;:16;;;:25;;;;13209:83;13205:1153;;;13416:38;13436:14;13452:1;13416:19;:38::i;:::-;13408:47;13482:13;;;:5;:13;;;;;;;13473:22;;;;;;;;;;13408:47;;-1:-1:-1;13473:22:2;;;;13482:13;;13473:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13473:22:2;;;-1:-1:-1;;13473:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13473:22:2;;-1:-1:-1;;;;;13473:22:2;;;;;-1:-1:-1;;;13473:22:2;;;;;;;;;;;;;;-1:-1:-1;;;13473:22:2;;;;;;;;;;;-1:-1:-1;;;13473:22:2;;;;;;;;;;;;;;14129:34;;:17;;;:34;14245:16;;14129:17;;-1:-1:-1;14227:34:2;;:15;:34;:::i;:::-;14181:81;;:36;;;:81;:6;14280:5;:54;14294:38;14314:14;14330:1;14294:19;:38::i;:::-;14280:54;;;;;;;;;;;14286:47;14280:54;:63;;:54;;:63;;:54;:63;:::i;:::-;-1:-1:-1;14280:63:2;;;;;;;;;-1:-1:-1;;14280:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14280:63:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;14280:63:2;-1:-1:-1;;;;;;;;14280:63:2;;;;;;;-1:-1:-1;;;;14280:63:2;;-1:-1:-1;;;14280:63:2;;;;;;-1:-1:-1;;;;14280:63:2;-1:-1:-1;;;14280:63:2;;;;;-1:-1:-1;;;;14280:63:2;;;;;-1:-1:-1;;;14280:63:2;;;;;;;;;;;13205:1153;12901:1467;;;-1:-1:-1;14414:36:2;;;25592:25:27;;;25648:2;25633:18;;25626:34;;;14414:36:2;;25565:18:27;14414:36:2;;;;;;;12676:1781;;;12611:1846;:::o;17267:3620::-;17431:10;;:26;;-1:-1:-1;;;17431:26:2;;;;;6622:25:27;;;17461:10:2;;-1:-1:-1;;;;;17431:10:2;;:18;;6595::27;;17431:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17431:40:2;;:77;;;;-1:-1:-1;17475:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;17475:25:2;;;;:33;;17431:77;17423:122;;;;-1:-1:-1;;;17423:122:2;;25873:2:27;17423:122:2;;;25855:21:27;;;25892:18;;;25885:30;25951:34;25931:18;;;25924:62;26003:18;;17423:122:2;25671:356:27;17423:122:2;17580:1;17563:7;:14;:18;17555:27;;;;;;17593:19;17615:14;;;:5;:14;;;;;18186:16;;;;17615:14;;17593:19;-1:-1:-1;;;18186:16:2;;;;:20;18183:205;;18226:9;18222:156;18245:7;:14;18241:1;:18;18222:156;;;18319:7;18327:1;18319:10;;;;;;;;:::i;:::-;;;;;;;18302:28;;;;;;15151:19:27;;15195:2;15186:12;;15022:182;18302:28:2;;;;;;;;;;;;;18292:39;;;;;;18279:7;18287:1;18279:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;18359:3;;18222:156;;;;18183:205;18397:14;18441:7;18424:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;18414:36;;;;;;18397:53;;18461:19;18498:6;18483;:11;;;:21;:29;;18511:1;18483:29;;;18507:1;18483:29;18558:12;;;;;18528:76;;;26284:25:27;;;18558:12:2;;;;26340:2:27;26325:18;;26318:53;26387:18;;26380:34;;;26445:2;26430:18;;26423:34;;;18461:51:2;;;;;18589:14;;;26488:3:27;26473:19;;26466:51;18461::2;-1:-1:-1;18528:76:2;;26271:3:27;26256:19;18528:76:2;;;;;;;18619:11;18633:1;18619:15;18615:2266;;18729:14;;;;18713:13;;18729:16;;18744:1;;-1:-1:-1;;;18729:14:2;;-1:-1:-1;;;;;18729:14:2;:16;:::i;:::-;18799:10;;18818:17;;;;;18799:37;;-1:-1:-1;;;18799:37:2;;-1:-1:-1;;;18818:17:2;;;;;18799:37;;;26978:38:27;;;;-1:-1:-1;;;;;18713:32:2;;;;;-1:-1:-1;18759:29:2;;-1:-1:-1;;;;;18799:10:2;;;;:18;;26951::27;;18799:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18906:10;;;18928:12;;;18942:16;;;;;18906:53;;-1:-1:-1;;;18906:53:2;;18928:12;;;;18906:53;;;27199:44:27;;;;18906:10:2;18942:16;;;;27259:18:27;;;27252:49;18759:78:2;;-1:-1:-1;;;;;;18906:10:2;;:21;;27172:18:27;;18906:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18973:10:2;;18995:17;;;;;19014:25;;18973:67;;-1:-1:-1;;;18973:67:2;;-1:-1:-1;;;18995:17:2;;;;;18973:67;;;27485:38:27;;;;27539:18;;;27532:34;;;;-1:-1:-1;;;;;18973:10:2;;;;-1:-1:-1;18973:21:2;;-1:-1:-1;27458:18:27;;18973:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19055:14:2;;;:16;;-1:-1:-1;;19055:16:2;;;-1:-1:-1;19070:1:2;19121:14;;;:5;:14;;;;;;19114:21;19121:14;19070:1;19114:21;:::i;:::-;-1:-1:-1;19114:21:2;;;;;-1:-1:-1;;19114:21:2;;;-1:-1:-1;19114:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19114:21:2;;;19221:36;;-1:-1:-1;;;;;;;19221:18:2;;;19247:5;;-1:-1:-1;19221:36:2;-1:-1:-1;19221:36:2;19247:5;19221:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19188:69;;;;19279:4;19271:37;;;;-1:-1:-1;;;19271:37:2;;;;;;;:::i;:::-;19370:33;;:10;;19393:5;;19370:33;;;;19393:5;19370:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19355:48:2;;-1:-1:-1;19355:48:2;-1:-1:-1;19355:48:2;19417:37;;;;-1:-1:-1;;;19417:37:2;;;;;;;:::i;:::-;18635:831;;;;18615:2266;;;19648:6;19628;:18;;;:26;19625:1246;;19689:14;;;;19673:13;;19689:16;;19704:1;;-1:-1:-1;;;19689:14:2;;-1:-1:-1;;;;;19689:14:2;:16;:::i;:::-;19761:10;;19780:16;;;;;19761:36;;-1:-1:-1;;;19761:36:2;;-1:-1:-1;;;19780:16:2;;;;;19761:36;;;26978:38:27;;;;-1:-1:-1;;;;;19673:32:2;;;;;-1:-1:-1;19723:27:2;;-1:-1:-1;;;;;19761:10:2;;;;:18;;26951::27;;19761:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19817:10;;19839:16;;;;;19857:25;;19817:66;;-1:-1:-1;;;19817:66:2;;-1:-1:-1;;;19839:16:2;;;;;19817:66;;;27485:38:27;;;;27539:18;;;27532:34;;;;19723:75:2;;-1:-1:-1;;;;;;19817:10:2;;:21;;27458:18:27;;19817:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19901:10:2;;19931:25;;19901:56;;-1:-1:-1;;;19901:56:2;;;;;25592:25:27;;;25633:18;;;25626:34;;;;-1:-1:-1;;;;;19901:10:2;;;;-1:-1:-1;19901:21:2;;-1:-1:-1;25565:18:27;;19901:56:2;25418:248:27;19625:1246:2;20586:14;;;;20570:13;20625:14;;;:5;:14;;;;;-1:-1:-1;;;20586:14:2;;;-1:-1:-1;;;;;20586:14:2;;20625;20618:21;20625:14;20570:13;20618:21;:::i;:::-;-1:-1:-1;20618:21:2;;;;;-1:-1:-1;;20618:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20618:21:2;;;;20690:7;1074:6:12;;-1:-1:-1;;;;;1074:6:12;;1001:87;20690:7:2;-1:-1:-1;;;;;20690:12:2;20710:5;20690:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20657:63;;;;20796:4;20788:37;;;;-1:-1:-1;;;20788:37:2;;;;;;;:::i;:::-;20464:407;;;17363:3524;;;;17267:3620;;;:::o;1901:192:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:12;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:12;;28338:2:27;1982:73:12::1;::::0;::::1;28320:21:27::0;28377:2;28357:18;;;28350:30;28416:34;28396:18;;;28389:62;-1:-1:-1;;;28467:18:27;;;28460:36;28513:19;;1982:73:12::1;28136:402:27::0;1982:73:12::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;5875:599:2:-;5950:4;5966:27;5996:39;6020:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;5996:39:2;5966:69;;6045:18;;:::i;:::-;6073:14;;6181:265;6203:19;6199:1;:23;6181:265;;;6282:15;6243:6;:36;;;:54;;;:80;;;;;6317:6;6301;:12;;;:22;;;;6243:80;:109;;;;;6346:6;6327;:16;;;:25;;;;6243:109;6239:197;;;-1:-1:-1;6417:4:2;;5875:599;-1:-1:-1;;;;;5875:599:2:o;6239:197::-;6181:265;;;-1:-1:-1;6462:5:2;;5875:599;-1:-1:-1;;;;;5875:599:2:o;8186:1221::-;8268:9;8264:1137;8283:9;:16;8281:18;;8264:1137;;;8399:9;8382:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;8372:38;;;;;;8345:9;8355:1;8345:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;8328:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;8318:50;;;;;;:92;8315:1048;;8493:27;8523:9;8533:1;8523:12;;;;;;;;:::i;:::-;;;;;;;;;;;8493:42;;8553:34;8590:9;8617:1;8600:9;:16;;;;:18;;;;:::i;:::-;8590:29;;;;;;;;:::i;:::-;;;;;;;;;;;8553:66;;8748:17;8735:30;;8790:9;8817:1;8800:9;:16;;;;:18;;;;:::i;:::-;8790:29;;;;;;;;:::i;:::-;;;;;;;;;;;;8783:36;;;;;;;;:::i;:::-;-1:-1:-1;8783:36:2;;;;-1:-1:-1;;;;;;8783:36:2;;;9296:9;9306:16;;:18;;8783:36;;9306:18;:::i;:::-;9296:29;;;;;;;;:::i;:::-;;;;;;;;;;;;9289:36;;;;;;;;:::i;:::-;-1:-1:-1;9289:36:2;;;;-1:-1:-1;;;;;;9289:36:2;;;-1:-1:-1;9343:5:2;;-1:-1:-1;9343:5:2;8315:1048;9386:3;;8264:1137;;;;8186:1221;:::o;4464:389::-;4525:15;4573:14;;4560:10;:27;4552:56;;;;-1:-1:-1;;;4552:56:2;;21267:2:27;4552:56:2;;;21249:21:27;21306:2;21286:18;;;21279:30;-1:-1:-1;;;21325:18:27;;;21318:46;21381:18;;4552:56:2;21065:340:27;4552:56:2;4618:25;4659:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;4646:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4646:51:2;;4618:79;;4711:9;4707:114;4729:9;:16;4726:1;:19;4707:114;;;4780:21;;;;:9;:21;;;;;:27;;4808:1;4780:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4765:9;4775:1;4765:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4747:3;;;;:::i;:::-;;;;4707:114;;;-1:-1:-1;4837:9:2;4464:389;-1:-1:-1;;4464:389:2:o;11673:931::-;11914:9;:16;;11940;;;;;;11888:23;11940:16;;;11914;;:9;:16;;11997:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;12037:20:2;;;:31;12059:9;;12037:20;:31;:::i;:::-;;12103:5;12082:11;:18;;;:26;;;;;;;;;;;;;;;;;;12147:11;12122;:22;;;:36;;;;;;;;;;;;;;;;;;12202:16;12172:11;:27;;;:46;;;;;;;;;;;;;;;;;;12256:10;12232:11;:21;;;:34;;;;;;;;;;;;;;;;;;12307:13;12280:11;:24;;;:40;;;;;;;;;;;;;;;;;;12361:13;12334:11;:24;;;:40;;;;;;;;;;;;;;;;;;12417:15;12388:11;:26;;;:44;;;;;;;;;;;;;;;;;;12478:119;12497:9;;12508:11;12521:16;12539:10;12551:13;12566;12581:15;12478:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;11878:726;;11673:931;;;;;;;;:::o;2101:173:12:-;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;31206:2:27;35401:87:0;;;31188:21:27;31245:2;31225:18;;;31218:30;31284:34;31264:18;;;31257:62;-1:-1:-1;;;31335:18:27;;;31328:38;31383:19;;35401:87:0;31004:404:27;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;31615:2:27;26359:106:0;;;31597:21:27;31654:2;31634:18;;;31627:30;31693:34;31673:18;;;31666:62;-1:-1:-1;;;31744:18:27;;;31737:37;31791:19;;26359:106:0;31413:403:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:27;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:27;;14:180;-1:-1:-1;14:180:27:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:27;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:27;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:27:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:27;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:27:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:27;1729:40;;-1:-1:-1;;;;;1784:34:27;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:27:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:27;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:27:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:27;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:27;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:27:o;4506:348::-;4558:8;4568:6;4622:3;4615:4;4607:6;4603:17;4599:27;4589:55;;4640:1;4637;4630:12;4589:55;-1:-1:-1;4663:20:27;;-1:-1:-1;;;;;4695:30:27;;4692:50;;;4738:1;4735;4728:12;4692:50;4775:4;4767:6;4763:17;4751:29;;4827:3;4820:4;4811:6;4803;4799:19;4795:30;4792:39;4789:59;;;4844:1;4841;4834:12;4789:59;4506:348;;;;;:::o;4859:161::-;4926:20;;4986:8;4975:20;;4965:31;;4955:59;;5010:1;5007;5000:12;4955:59;4859:161;;;:::o;5025:165::-;5092:20;;5152:12;5141:24;;5131:35;;5121:63;;5180:1;5177;5170:12;5195:159;5262:20;;5322:6;5311:18;;5301:29;;5291:57;;5344:1;5341;5334:12;5359:859;5469:6;5477;5485;5493;5501;5509;5517;5570:3;5558:9;5549:7;5545:23;5541:33;5538:53;;;5587:1;5584;5577:12;5538:53;5627:9;5614:23;-1:-1:-1;;;;;5652:6:27;5649:30;5646:50;;;5692:1;5689;5682:12;5646:50;5731:59;5782:7;5773:6;5762:9;5758:22;5731:59;:::i;:::-;5809:8;;-1:-1:-1;5705:85:27;-1:-1:-1;;5894:2:27;5879:18;;5866:32;5938:4;5927:16;;5917:27;;5907:55;;5958:1;5955;5948:12;5907:55;5981:5;-1:-1:-1;6005:37:27;6038:2;6023:18;;6005:37;:::i;:::-;5995:47;;6061:37;6094:2;6083:9;6079:18;6061:37;:::i;:::-;6051:47;;6117:38;6150:3;6139:9;6135:19;6117:38;:::i;:::-;6107:48;;6174:38;6207:3;6196:9;6192:19;6174:38;:::i;:::-;6164:48;;5359:859;;;;;;;;;;:::o;6223:248::-;6291:6;6299;6352:2;6340:9;6331:7;6327:23;6323:32;6320:52;;;6368:1;6365;6358:12;6320:52;-1:-1:-1;;6391:23:27;;;6461:2;6446:18;;;6433:32;;-1:-1:-1;6223:248:27:o;6658:131::-;-1:-1:-1;;;;;6733:31:27;;6723:42;;6713:70;;6779:1;6776;6769:12;6794:247;6853:6;6906:2;6894:9;6885:7;6881:23;6877:32;6874:52;;;6922:1;6919;6912:12;6874:52;6961:9;6948:23;6980:31;7005:5;6980:31;:::i;:::-;7030:5;6794:247;-1:-1:-1;;;6794:247:27:o;7046:531::-;7089:5;7142:3;7135:4;7127:6;7123:17;7119:27;7109:55;;7160:1;7157;7150:12;7109:55;7196:6;7183:20;-1:-1:-1;;;;;7218:2:27;7215:26;7212:52;;;7244:18;;:::i;:::-;7288:55;7331:2;7312:13;;-1:-1:-1;;7308:27:27;7337:4;7304:38;7288:55;:::i;:::-;7368:2;7359:7;7352:19;7414:3;7407:4;7402:2;7394:6;7390:15;7386:26;7383:35;7380:55;;;7431:1;7428;7421:12;7380:55;7496:2;7489:4;7481:6;7477:17;7470:4;7461:7;7457:18;7444:55;7544:1;7519:16;;;7537:4;7515:27;7508:38;;;;7523:7;7046:531;-1:-1:-1;;;7046:531:27:o;7582:462::-;7668:6;7676;7684;7737:2;7725:9;7716:7;7712:23;7708:32;7705:52;;;7753:1;7750;7743:12;7705:52;7793:9;7780:23;-1:-1:-1;;;;;7818:6:27;7815:30;7812:50;;;7858:1;7855;7848:12;7812:50;7881;7923:7;7914:6;7903:9;7899:22;7881:50;:::i;:::-;7871:60;;;7978:2;7967:9;7963:18;7950:32;7940:42;;8001:37;8034:2;8023:9;8019:18;8001:37;:::i;:::-;7991:47;;7582:462;;;;;:::o;8049:316::-;8126:6;8134;8142;8195:2;8183:9;8174:7;8170:23;8166:32;8163:52;;;8211:1;8208;8201:12;8163:52;-1:-1:-1;;8234:23:27;;;8304:2;8289:18;;8276:32;;-1:-1:-1;8355:2:27;8340:18;;;8327:32;;8049:316;-1:-1:-1;8049:316:27:o;8481:1018::-;8829:4;8858:3;8888:2;8877:9;8870:21;8908:45;8949:2;8938:9;8934:18;8926:6;8908:45;:::i;:::-;8972:12;9020:15;;;9015:2;9000:18;;8993:43;9067:2;9052:18;;9045:34;;;;-1:-1:-1;;9110:2:27;9095:18;;9088:34;;;;9171:4;9159:17;;;;9153:3;9138:19;;9131:46;9226:8;9214:21;;;;9208:3;9193:19;;9186:50;-1:-1:-1;;;;;9273:35:27;;;;9267:3;9252:19;;9245:64;9328:6;9371:15;;;9365:3;9350:19;;9343:44;9424:15;9418:3;9403:19;;9396:44;9477:15;;;9471:3;9456:19;;;9449:44;;;;8900:53;8481:1018;-1:-1:-1;8481:1018:27:o;9712:1356::-;9881:2;9870:9;9863:21;9844:4;9919:6;9913:13;9945:6;9987:2;9982;9971:9;9967:18;9960:30;10013:52;10060:3;10049:9;10045:19;10031:12;10013:52;:::i;:::-;9999:66;;10114:2;10106:6;10102:15;10096:22;10127:53;10176:2;10165:9;10161:18;10145:14;896:12;885:24;873:37;;820:96;10127:53;;10234:2;10226:6;10222:15;10216:22;10211:2;10200:9;10196:18;10189:50;10294:2;10286:6;10282:15;10276:22;10270:3;10259:9;10255:19;10248:51;10348:3;10340:6;10336:16;10330:23;10362:53;10410:3;10399:9;10395:19;10379:14;3274:4;3263:16;3251:29;;3207:75;10362:53;-1:-1:-1;10464:3:27;10452:16;;10446:23;3363:8;3352:20;;10527:3;10512:19;;3340:33;-1:-1:-1;10581:3:27;10569:16;;10563:23;-1:-1:-1;;;;;8435:34:27;;10644:3;10629:19;;8423:47;10595:54;10698:3;10690:6;10686:16;10680:23;10722:3;10734:53;10783:2;10772:9;10768:18;10752:14;801:6;790:18;778:31;;725:90;10734:53;10824:15;;10818:22;;-1:-1:-1;10859:3:27;10871:53;10905:18;;;10818:22;801:6;790:18;778:31;;725:90;10871:53;10961:15;;10955:22;896:12;885:24;;11020:18;;;873:37;10955:22;-1:-1:-1;10986:53:27;820:96;11073:184;11131:6;11184:2;11172:9;11163:7;11159:23;11155:32;11152:52;;;11200:1;11197;11190:12;11152:52;11223:28;11241:9;11223:28;:::i;11262:803::-;11424:4;11453:2;11493;11482:9;11478:18;11523:2;11512:9;11505:21;11546:6;11581;11575:13;11612:6;11604;11597:22;11650:2;11639:9;11635:18;11628:25;;11712:2;11702:6;11699:1;11695:14;11684:9;11680:30;11676:39;11662:53;;11750:2;11742:6;11738:15;11771:1;11781:255;11795:6;11792:1;11789:13;11781:255;;;11888:2;11884:7;11872:9;11864:6;11860:22;11856:36;11851:3;11844:49;11916:40;11949:6;11940;11934:13;11916:40;:::i;:::-;11906:50;-1:-1:-1;12014:12:27;;;;11979:15;;;;11817:1;11810:9;11781:255;;;-1:-1:-1;12053:6:27;;11262:803;-1:-1:-1;;;;;;;11262:803:27:o;12070:774::-;12181:6;12189;12197;12205;12213;12221;12229;12282:3;12270:9;12261:7;12257:23;12253:33;12250:53;;;12299:1;12296;12289:12;12250:53;12339:9;12326:23;-1:-1:-1;;;;;12364:6:27;12361:30;12358:50;;;12404:1;12401;12394:12;12358:50;12443:59;12494:7;12485:6;12474:9;12470:22;12443:59;:::i;:::-;12521:8;;-1:-1:-1;12417:85:27;-1:-1:-1;12575:37:27;;-1:-1:-1;12608:2:27;12593:18;;12575:37;:::i;12849:484::-;12951:6;12959;12967;13020:2;13008:9;12999:7;12995:23;12991:32;12988:52;;;13036:1;13033;13026:12;12988:52;13072:9;13059:23;13049:33;;13129:2;13118:9;13114:18;13101:32;13091:42;;13184:2;13173:9;13169:18;13156:32;-1:-1:-1;;;;;13203:6:27;13200:30;13197:50;;;13243:1;13240;13233:12;13197:50;13266:61;13319:7;13310:6;13299:9;13295:22;13266:61;:::i;:::-;13256:71;;;12849:484;;;;;:::o;13530:322::-;13599:6;13652:2;13640:9;13631:7;13627:23;13623:32;13620:52;;;13668:1;13665;13658:12;13620:52;13708:9;13695:23;-1:-1:-1;;;;;13733:6:27;13730:30;13727:50;;;13773:1;13770;13763:12;13727:50;13796;13838:7;13829:6;13818:9;13814:22;13796:50;:::i;:::-;13786:60;13530:322;-1:-1:-1;;;;13530:322:27:o;13857:643::-;14026:2;14078:21;;;14148:13;;14051:18;;;14170:22;;;13997:4;;14026:2;14249:15;;;;14223:2;14208:18;;;13997:4;14292:182;14306:6;14303:1;14300:13;14292:182;;;14371:13;;14386:6;14367:26;14355:39;;14449:15;;;;14414:12;;;;14328:1;14321:9;14292:182;;;-1:-1:-1;14491:3:27;;13857:643;-1:-1:-1;;;;;;13857:643:27:o;14505:380::-;14584:1;14580:12;;;;14627;;;14648:61;;14702:4;14694:6;14690:17;14680:27;;14648:61;14755:2;14747:6;14744:14;14724:18;14721:38;14718:161;;14801:10;14796:3;14792:20;14789:1;14782:31;14836:4;14833:1;14826:15;14864:4;14861:1;14854:15;14718:161;;14505:380;;;:::o;14890:127::-;14951:10;14946:3;14942:20;14939:1;14932:31;14982:4;14979:1;14972:15;15006:4;15003:1;14996:15;15209:543;15427:13;;15370:3;;15401;;15480:4;15507:15;;;15370:3;15550:175;15564:6;15561:1;15558:13;15550:175;;;15627:13;;15613:28;;15663:14;;;;15700:15;;;;15586:1;15579:9;15550:175;;;-1:-1:-1;15741:5:27;;15209:543;-1:-1:-1;;;;;;15209:543:27:o;15757:443::-;15982:6;15971:9;15964:25;16039:6;16032:14;16025:22;16020:2;16009:9;16005:18;15998:50;16084:6;16079:2;16068:9;16064:18;16057:34;16127:3;16122:2;16111:9;16107:18;16100:31;15945:4;16148:46;16189:3;16178:9;16174:19;16166:6;16148:46;:::i;:::-;16140:54;15757:443;-1:-1:-1;;;;;;15757:443:27:o;16554:356::-;16756:2;16738:21;;;16775:18;;;16768:30;16834:34;16829:2;16814:18;;16807:62;16901:2;16886:18;;16554:356::o;16915:220::-;17064:2;17053:9;17046:21;17027:4;17084:45;17125:2;17114:9;17110:18;17102:6;17084:45;:::i;17266:963::-;17375:4;17404:2;17433;17422:9;17415:21;17456:1;17489:6;17483:13;17519:36;17545:9;17519:36;:::i;:::-;17591:6;17586:2;17575:9;17571:18;17564:34;17617:2;17638:1;17670:2;17659:9;17655:18;17687:1;17682:158;;;;17854:1;17849:354;;;;17648:555;;17682:158;-1:-1:-1;;17730:24:27;;17710:18;;;17703:52;17808:14;;17801:22;17798:1;17794:30;17779:46;;17775:55;;;-1:-1:-1;17682:158:27;;17849:354;17880:6;17877:1;17870:17;17928:2;17925:1;17915:16;17953:1;17967:180;17981:6;17978:1;17975:13;17967:180;;;18074:14;;18050:17;;;18046:26;;18039:50;18117:16;;;;17996:10;;17967:180;;;18171:17;;18167:26;;;-1:-1:-1;;17648:555:27;-1:-1:-1;18220:3:27;;17266:963;-1:-1:-1;;;;;;;;17266:963:27:o;18582:545::-;18684:2;18679:3;18676:11;18673:448;;;18720:1;18745:5;18741:2;18734:17;18790:4;18786:2;18776:19;18860:2;18848:10;18844:19;18841:1;18837:27;18831:4;18827:38;18896:4;18884:10;18881:20;18878:47;;;-1:-1:-1;18919:4:27;18878:47;18974:2;18969:3;18965:12;18962:1;18958:20;18952:4;18948:31;18938:41;;19029:82;19047:2;19040:5;19037:13;19029:82;;;19092:17;;;19073:1;19062:13;19029:82;;;19033:3;;;18673:448;18582:545;;;:::o;19303:1352::-;19429:3;19423:10;-1:-1:-1;;;;;19448:6:27;19445:30;19442:56;;;19478:18;;:::i;:::-;19507:97;19597:6;19557:38;19589:4;19583:11;19557:38;:::i;:::-;19551:4;19507:97;:::i;:::-;19659:4;;19723:2;19712:14;;19740:1;19735:663;;;;20442:1;20459:6;20456:89;;;-1:-1:-1;20511:19:27;;;20505:26;20456:89;-1:-1:-1;;19260:1:27;19256:11;;;19252:24;19248:29;19238:40;19284:1;19280:11;;;19235:57;20558:81;;19705:944;;19735:663;17213:1;17206:14;;;17250:4;17237:18;;-1:-1:-1;;19771:20:27;;;19889:236;19903:7;19900:1;19897:14;19889:236;;;19992:19;;;19986:26;19971:42;;20084:27;;;;20052:1;20040:14;;;;19919:19;;19889:236;;;19893:3;20153:6;20144:7;20141:19;20138:201;;;20214:19;;;20208:26;-1:-1:-1;;20297:1:27;20293:14;;;20309:3;20289:24;20285:37;20281:42;20266:58;20251:74;;20138:201;-1:-1:-1;;;;;20385:1:27;20369:14;;;20365:22;20352:36;;-1:-1:-1;19303:1352:27:o;20660:127::-;20721:10;20716:3;20712:20;20709:1;20702:31;20752:4;20749:1;20742:15;20776:4;20773:1;20766:15;20792:128;20832:3;20863:1;20859:6;20856:1;20853:13;20850:39;;;20869:18;;:::i;:::-;-1:-1:-1;20905:9:27;;20792:128::o;20925:135::-;20964:3;20985:17;;;20982:43;;21005:18;;:::i;:::-;-1:-1:-1;21052:1:27;21041:13;;20925:135::o;22446:251::-;22516:6;22569:2;22557:9;22548:7;22544:23;22540:32;22537:52;;;22585:1;22582;22575:12;22537:52;22617:9;22611:16;22636:31;22661:5;22636:31;:::i;24207:1206::-;-1:-1:-1;;;;;24326:3:27;24323:27;24320:53;;;24353:18;;:::i;:::-;24382:94;24472:3;24432:38;24464:4;24458:11;24432:38;:::i;:::-;24426:4;24382:94;:::i;:::-;24502:1;24527:2;24522:3;24519:11;24544:1;24539:616;;;;25199:1;25216:3;25213:93;;;-1:-1:-1;25272:19:27;;;25259:33;25213:93;-1:-1:-1;;19260:1:27;19256:11;;;19252:24;19248:29;19238:40;19284:1;19280:11;;;19235:57;25319:78;;24512:895;;24539:616;17213:1;17206:14;;;17250:4;17237:18;;-1:-1:-1;;24575:17:27;;;24676:9;24698:229;24712:7;24709:1;24706:14;24698:229;;;24801:19;;;24788:33;24773:49;;24908:4;24893:20;;;;24861:1;24849:14;;;;24728:12;24698:229;;;24702:3;24955;24946:7;24943:16;24940:159;;;25079:1;25075:6;25069:3;25063;25060:1;25056:11;25052:21;25048:34;25044:39;25031:9;25026:3;25022:19;25009:33;25005:79;24997:6;24990:95;24940:159;;;25142:1;25136:3;25133:1;25129:11;25125:19;25119:4;25112:33;24512:895;;;24207:1206;;;:::o;26528:300::-;26567:1;-1:-1:-1;;;;;26642:2:27;26639:1;26635:10;26664:3;26654:134;;26710:10;26705:3;26701:20;26698:1;26691:31;26745:4;26742:1;26735:15;26773:4;26770:1;26763:15;26654:134;26806:10;;26802:20;;;;;26528:300;-1:-1:-1;;26528:300:27:o;27787:344::-;27989:2;27971:21;;;28028:2;28008:18;;;28001:30;-1:-1:-1;;;28062:2:27;28047:18;;28040:50;28122:2;28107:18;;27787:344::o;28543:276::-;28674:3;28712:6;28706:13;28728:53;28774:6;28769:3;28762:4;28754:6;28750:17;28728:53;:::i;:::-;28797:16;;;;;28543:276;-1:-1:-1;;28543:276:27:o;28824:842::-;28952:3;28981:1;29014:6;29008:13;29044:36;29070:9;29044:36;:::i;:::-;29099:1;29116:18;;;29143:133;;;;29290:1;29285:356;;;;29109:532;;29143:133;-1:-1:-1;;29176:24:27;;29164:37;;29249:14;;29242:22;29230:35;;29221:45;;;-1:-1:-1;29143:133:27;;29285:356;29316:6;29313:1;29306:17;29346:4;29391:2;29388:1;29378:16;29416:1;29430:165;29444:6;29441:1;29438:13;29430:165;;;29522:14;;29509:11;;;29502:35;29565:16;;;;29459:10;;29430:165;;;-1:-1:-1;;;29615:16:27;;;;;29657:3;-1:-1:-1;;;;;;28824:842:27:o;29671:125::-;29711:4;29739:1;29736;29733:8;29730:34;;;29744:18;;:::i;:::-;-1:-1:-1;29781:9:27;;29671:125::o;29801:928::-;30114:3;30103:9;30096:22;30155:6;30149:3;30138:9;30134:19;30127:35;30077:4;30181:3;30234:6;30226;30221:2;30210:9;30206:18;30193:48;30290:1;30261:22;;;30257:31;;30250:42;30382:12;30432:15;;;30425:4;30410:20;;30403:45;30496:4;30484:17;;;;30479:2;30464:18;;30457:45;-1:-1:-1;30550:8:27;30538:21;;;;30533:2;30518:18;;30511:49;30597:15;;;30591:3;30576:19;;30569:44;30650:15;;;30644:3;30629:19;;30622:44;30715:6;30703:19;;;30697:3;30682:19;;30675:48;30353:2;30332:15;;;-1:-1:-1;;30328:29:27;30313:45;30309:54;;;-1:-1:-1;29801:928:27:o;30734:265::-;30773:3;30801:9;;;30826:10;;-1:-1:-1;;;;;30845:27:27;;;30838:35;;30822:52;30819:78;;;30877:18;;:::i;:::-;-1:-1:-1;;;30924:19:27;;;30917:27;;30909:36;;30906:62;;;30948:18;;:::i;:::-;-1:-1:-1;;30984:9:27;;30734:265::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    21480
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6215597B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x379D94CC EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x140 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x29E0 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1FB SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x176 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x855 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2C92 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE8 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2D95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E62 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F2F JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0x209D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x468 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0x21C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B8 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2FBA JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x4E0 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50C SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x559 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x559 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x64A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5F5 JUMPI PUSH2 0x5F5 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x637 JUMPI PUSH2 0x637 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x5DA JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6AF JUMPI PUSH2 0x6AF PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x6C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x70A SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x736 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x783 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x758 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x783 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x766 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x800 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2489 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x889 PUSH1 0x0 PUSH2 0x2608 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xC44 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A9 SWAP2 SWAP1 PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D2 JUMPI PUSH2 0x8D2 PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xC32 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x922 JUMPI PUSH2 0x922 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0x986 JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA0B JUMPI PUSH2 0xA0B PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA45 JUMPI PUSH2 0xA45 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xAE3 SWAP1 DUP3 PUSH2 0x31DB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBE7 SWAP1 DUP5 SWAP1 PUSH2 0x32B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBFA SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x32B0 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC0D JUMPI PUSH2 0xC0D PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMPDEST DUP1 PUSH2 0xC3C DUP2 PUSH2 0x32C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x88E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x303C JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0xD82 JUMPI PUSH2 0xD82 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0xDB2 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xDDB JUMPI PUSH2 0xDDB PUSH2 0x303C JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0xE03 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xE0D DUP2 PUSH2 0x32C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCFB JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xE57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xEB4 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEE0 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF2D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF02 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF2D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF10 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0xFA3 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xFCC SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFF8 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1045 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1045 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1028 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x126E JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1101 JUMPI PUSH2 0x1101 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1165 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11A4 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1180 JUMPI PUSH2 0x1180 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C0 JUMPI PUSH2 0x11C0 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x11F1 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1208 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x273790363AB1B597 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1253 JUMPI PUSH2 0x1253 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10E3 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1289 JUMPI PUSH2 0x1289 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12BC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12A7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x14A7 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12E1 JUMPI PUSH2 0x12E1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1345 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1384 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1360 JUMPI PUSH2 0x1360 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x13C1 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13A0 JUMPI PUSH2 0x13A0 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x149F JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13D9 JUMPI PUSH2 0x13D9 PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x13F5 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1421 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x146E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1443 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x146E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1451 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1485 JUMPI PUSH2 0x1485 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x14A7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x12C3 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x14CA JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1529 SWAP2 SWAP1 PUSH2 0x32B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x15A8 DUP9 DUP11 DUP4 PUSH2 0x32FE JUMP JUMPDEST POP PUSH2 0x15BC DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2489 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x15EB PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18B7 JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0x161B JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x162B PUSH1 0x5 DUP3 PUSH2 0x265A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1659 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1685 SWAP1 PUSH2 0x3002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP3 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 SWAP4 POP PUSH2 0x1786 SWAP1 TIMESTAMP PUSH2 0x32B0 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x17A3 PUSH1 0x5 DUP6 PUSH2 0x265A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x17C1 SWAP1 DUP3 PUSH2 0x31DB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMPDEST PUSH2 0x15EF JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x32E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1995 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x19E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x19EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1A88 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A33 JUMPI PUSH2 0x1A33 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A75 JUMPI PUSH2 0x1A75 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1A18 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1AC9 JUMPI PUSH1 0x0 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x1E32 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1B5C SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x33BE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x32E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1D1C DUP3 DUP3 PUSH2 0x281C JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1DC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1E29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST POP POP POP POP PUSH2 0x800 JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1FA9 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1E61 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x33BE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ECD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF1 SWAP2 SWAP1 PUSH2 0x32E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1FD9 DUP3 DUP3 PUSH2 0x281C JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x2020 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x206A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2091 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x212C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x2135 DUP2 PUSH2 0x2608 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2154 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x215E PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21BB JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0x2190 JUMPI POP DUP6 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21A5 JUMPI POP DUP6 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21B6 JUMPI POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2162 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2360 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21E5 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x220E JUMPI PUSH2 0x220E PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222F SWAP2 SWAP1 PUSH2 0x343C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2358 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x225F JUMPI PUSH2 0x225F PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x34AE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2295 JUMPI PUSH2 0x2295 PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x34AE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x22CC JUMPI PUSH2 0x22CC PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x22EC SWAP2 SWAP1 PUSH2 0x281C JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0x230E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x34AE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x231E JUMPI PUSH2 0x231E PUSH2 0x303C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x233E SWAP2 SWAP1 PUSH2 0x281C JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x2360 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x21CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x23AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x23D7 JUMPI PUSH2 0x23D7 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2400 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2482 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2431 JUMPI PUSH2 0x2431 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x245D JUMPI PUSH2 0x245D PUSH2 0x303C JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x247A DUP2 PUSH2 0x32C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2406 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x24AC JUMPI PUSH2 0x24AC PUSH2 0x303C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x24CD DUP11 DUP13 DUP4 PUSH2 0x32FE JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x25F4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x267D PUSH2 0x2669 DUP5 PUSH2 0x26CB JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2678 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x3534 JUMP JUMPDEST PUSH2 0x2739 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x26B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x276C JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2828 SWAP1 PUSH2 0x3002 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2838 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2135 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x289A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2882 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xC44 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x28C3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x287F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x28EA PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x28AB JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2959 JUMPI PUSH2 0x2959 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x298D JUMPI PUSH2 0x298D PUSH2 0x291B JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x299C DUP3 DUP3 ADD PUSH2 0x2931 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x29B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x29D5 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x29BC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1E DUP7 DUP3 DUP8 ADD PUSH2 0x2961 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x2A53 DUP2 DUP5 ADD DUP13 PUSH2 0x28AB JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2AB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2ACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2AFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2AFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2AFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B68 DUP11 DUP3 DUP12 ADD PUSH2 0x2AA4 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x2B90 PUSH1 0x40 DUP10 ADD PUSH2 0x2AEC JUMP JUMPDEST SWAP4 POP PUSH2 0x2B9E PUSH1 0x60 DUP10 ADD PUSH2 0x2B04 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BAC PUSH1 0x80 DUP10 ADD PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BBA PUSH1 0xA0 DUP10 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C1C DUP2 PUSH2 0x2BEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C4D JUMPI PUSH2 0x2C4D PUSH2 0x291B JUMP JUMPDEST PUSH2 0x2C60 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2931 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2C75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CC9 DUP7 DUP3 DUP8 ADD PUSH2 0x2C23 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2CDF PUSH1 0x40 DUP6 ADD PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x2D28 DUP2 DUP5 ADD DUP15 PUSH2 0x28AB JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x140 DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2DB4 PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x28AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2DCE PUSH1 0x40 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x2DF7 PUSH1 0xA0 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP6 ADD MLOAD PUSH3 0xFFFFFF DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0x2E35 DUP2 DUP8 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x2E4C DUP7 DUP3 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP4 DUP8 ADD MSTORE SWAP1 POP PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C1C DUP3 PUSH2 0x2B04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2ED2 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2EC0 DUP6 DUP4 MLOAD PUSH2 0x28AB JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2EA4 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2EFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F1C DUP11 DUP3 DUP12 ADD PUSH2 0x2AA4 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x2B82 SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x2B19 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F74 DUP7 DUP3 DUP8 ADD PUSH2 0x2961 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FB2 DUP5 DUP3 DUP6 ADD PUSH2 0x2C23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2FF6 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2FD6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3016 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3036 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x307C JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3060 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x30AF PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x28AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2C1C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0x3115 DUP2 PUSH2 0x3002 JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3136 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3150 JUMPI PUSH2 0x317E JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x317E JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3176 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x315B JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x31D6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x31B3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31D2 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x31BF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31F4 JUMPI PUSH2 0x31F4 PUSH2 0x291B JUMP JUMPDEST PUSH2 0x3208 DUP2 PUSH2 0x3202 DUP5 SLOAD PUSH2 0x3002 JUMP JUMPDEST DUP5 PUSH2 0x318C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x323D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3225 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x326C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x324D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x328A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x32C3 JUMPI PUSH2 0x32C3 PUSH2 0x329A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x32DA JUMPI PUSH2 0x32DA PUSH2 0x329A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C1C DUP2 PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x3315 JUMPI PUSH2 0x3315 PUSH2 0x291B JUMP JUMPDEST PUSH2 0x3329 DUP4 PUSH2 0x3323 DUP4 SLOAD PUSH2 0x3002 JUMP JUMPDEST DUP4 PUSH2 0x318C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x335D JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x3345 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x338E JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x336E JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x33E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3432 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x287F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x344A DUP2 PUSH2 0x3002 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3462 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3477 JUMPI PUSH2 0x307C JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x307C JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x349D JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3484 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x34C0 JUMPI PUSH2 0x34C0 PUSH2 0x329A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3556 JUMPI PUSH2 0x3556 PUSH2 0x329A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x356F JUMPI PUSH2 0x356F PUSH2 0x329A JUMP JUMPDEST POP POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 CALLDATASIZE GASLIMIT SWAP13 AND PUSH24 0x9E77A2CDEEB912E2CBEB3DF883171E23AE86BFFDA429B408 DUP3 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x428"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x478"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x498"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x346"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36E"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39B"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "166": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "171": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "GT",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29B"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B0"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D0"
    },
    "237": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0"
    },
    "248": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "253": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x379D94CC"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "EQ",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x215"
    },
    "308": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "312": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "313": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "318": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "319": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "STOP",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "323": {
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "324": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        21480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "325": {
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "328": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "329": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "332": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "333": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "REVERT",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "338": {
      "op": "POP"
    },
    "339": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "342": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "345": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "346": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "348": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "351": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C5"
    },
    "356": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "357": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "360": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "364": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "365": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "366": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "367": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "369": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D7"
    },
    "373": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "377": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SUB",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "382": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "RETURN",
      "path": "2"
    },
    "383": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "384": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "385": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "DUP1",
      "path": "2"
    },
    "386": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "387": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "390": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "391": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "393": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "DUP1",
      "path": "2"
    },
    "394": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "REVERT",
      "path": "2"
    },
    "395": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "400": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A"
    },
    "403": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "404": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E0"
    },
    "409": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "410": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "411": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x591"
    },
    "414": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "416": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "STOP",
      "path": "2"
    },
    "417": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "419": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "420": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "421": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD"
    },
    "424": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "425": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "427": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "428": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "429": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1"
    },
    "434": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC"
    },
    "437": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "443": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "444": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D7"
    },
    "448": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "450": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "452": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "453": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "456": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "457": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "458": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "461": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "464": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "465": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A3F"
    },
    "468": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "469": {
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E1"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "477": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "REVERT",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "485": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB"
    },
    "489": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "490": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "492": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "493": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "494": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "495": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "502": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DIV",
      "path": "2"
    },
    "503": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "504": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "505": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "506": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "507": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "508": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "510": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "511": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "514": {
      "op": "SWAP4"
    },
    "515": {
      "op": "DUP5"
    },
    "516": {
      "op": "SIGNEXTEND"
    },
    "517": {
      "op": "DUP2"
    },
    "518": {
      "op": "MSTORE"
    },
    "519": {
      "op": "SWAP2"
    },
    "520": {
      "op": "SWAP1"
    },
    "521": {
      "op": "SWAP3"
    },
    "522": {
      "op": "SIGNEXTEND"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "525": {
      "op": "DUP3"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "532": {
      "op": "JUMP"
    },
    "533": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "534": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "535": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "536": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "537": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "540": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "541": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "543": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "544": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "REVERT",
      "path": "2"
    },
    "545": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "550": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230"
    },
    "553": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "554": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B2B"
    },
    "559": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "560": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "561": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E1"
    },
    "564": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "565": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "566": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "567": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "568": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "569": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "573": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "575": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "576": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "577": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D"
    },
    "582": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x250"
    },
    "585": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "586": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "588": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC8"
    },
    "591": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "592": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "593": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "595": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "597": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "598": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "599": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "600": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "604": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "605": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "607": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "609": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "610": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "617": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "625": {
      "op": "SWAP1"
    },
    "626": {
      "op": "DUP2"
    },
    "627": {
      "op": "MSTORE"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "634": {
      "op": "JUMP"
    },
    "635": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "636": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "637": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "DUP1",
      "path": "2"
    },
    "638": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "639": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287"
    },
    "642": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "643": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "645": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "DUP1",
      "path": "2"
    },
    "646": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "REVERT",
      "path": "2"
    },
    "647": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "652": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x296"
    },
    "655": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "656": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "658": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BFF"
    },
    "661": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMP",
      "path": "2"
    },
    "662": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x809"
    },
    "666": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMP",
      "path": "2"
    },
    "667": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "668": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "669": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "670": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "671": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "12"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "12"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19F"
    },
    "684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x855"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "688": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "689": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "690": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "DUP1",
      "path": "2"
    },
    "691": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "692": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC"
    },
    "695": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "696": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "698": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "DUP1",
      "path": "2"
    },
    "699": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "REVERT",
      "path": "2"
    },
    "700": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "705": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "708": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "709": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "711": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C92"
    },
    "714": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "715": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88B"
    },
    "719": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "720": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "721": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "DUP1",
      "path": "2"
    },
    "723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "DUP1",
      "path": "2"
    },
    "731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "REVERT",
      "path": "2"
    },
    "732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D"
    },
    "737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EB"
    },
    "740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "746": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMP",
      "path": "2"
    },
    "747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4A"
    },
    "751": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMP",
      "path": "2"
    },
    "752": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "753": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "754": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "755": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "756": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "759": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "760": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "762": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "REVERT",
      "path": "2"
    },
    "764": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "769": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30B"
    },
    "772": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "773": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "775": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE8"
    },
    "778": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "779": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "780": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE60"
    },
    "783": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "784": {
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "785": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "786": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "787": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "788": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "792": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "794": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "795": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "REVERT",
      "path": "2"
    },
    "796": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x330"
    },
    "801": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "804": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "805": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "807": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "810": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "811": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "812": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE99"
    },
    "815": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "816": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "817": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "819": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "820": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "824": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "825": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "826": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "829": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "833": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D14"
    },
    "837": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x352"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "846": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "848": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "12"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "854": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "867": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "868": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "869": {
      "op": "DUP2"
    },
    "870": {
      "op": "MSTORE"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x176"
    },
    "877": {
      "op": "JUMP"
    },
    "878": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "879": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "880": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "881": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "882": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37A"
    },
    "885": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "886": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "888": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "889": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "REVERT",
      "path": "2"
    },
    "890": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38E"
    },
    "895": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x389"
    },
    "898": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "899": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "901": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "904": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9B"
    },
    "909": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "918": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "919": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D95"
    },
    "922": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "REVERT",
      "path": "2"
    },
    "935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "op": "POP"
    },
    "937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BB"
    },
    "940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B6"
    },
    "943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E62"
    },
    "949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10DD"
    },
    "954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7D"
    },
    "967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "968": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "970": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "971": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "972": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "975": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "976": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "978": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "979": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "REVERT",
      "path": "2"
    },
    "980": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "985": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E3"
    },
    "988": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "989": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "991": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EDF"
    },
    "994": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "995": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "996": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B1"
    },
    "999": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "1017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "1020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "1026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C6"
    },
    "1031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1032": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1033": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1034": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1035": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1036": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x414"
    },
    "1039": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1040": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1042": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1043": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1044": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "1049": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x423"
    },
    "1052": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1053": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1055": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2F"
    },
    "1058": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F7"
    },
    "1063": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x434"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19F"
    },
    "1081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x443"
    },
    "1084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BFF"
    },
    "1090": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1092": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x209D"
    },
    "1095": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1096": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1097": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1098": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1100": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x454"
    },
    "1103": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1104": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1106": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1107": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1108": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x468"
    },
    "1113": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x463"
    },
    "1116": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1119": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "1122": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2138"
    },
    "1127": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1128": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1131": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1132": {
      "op": "SWAP1"
    },
    "1133": {
      "op": "ISZERO"
    },
    "1134": {
      "op": "ISZERO"
    },
    "1135": {
      "op": "DUP2"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "1143": {
      "op": "JUMP"
    },
    "1144": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1145": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1146": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1147": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1148": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x484"
    },
    "1151": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1152": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1154": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1155": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1156": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F"
    },
    "1161": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x493"
    },
    "1164": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1165": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1167": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F7E"
    },
    "1170": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1171": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1172": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21C7"
    },
    "1175": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1176": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1177": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1178": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1179": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1180": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1184": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1186": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B8"
    },
    "1193": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B3"
    },
    "1196": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1199": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2866"
    },
    "1202": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1203": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1204": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2364"
    },
    "1207": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1208": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1209": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1211": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1212": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "1215": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1216": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBA"
    },
    "1220": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1221": {
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1222": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1224": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1226": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1227": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1229": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1230": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1231": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1232": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1234": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1235": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1238": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1239": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1240": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E0"
    },
    "1243": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1244": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "1247": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1248": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1249": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1250": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1252": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1255": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1256": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1257": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1258": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MUL",
      "path": "2"
    },
    "1259": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1261": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1262": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1264": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1270": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1271": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1274": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1275": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1278": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1280": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1281": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1282": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1283": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1284": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50C"
    },
    "1287": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "1291": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1292": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1293": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1294": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1295": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x559"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1299": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1300": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1302": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "LT",
      "path": "2"
    },
    "1303": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52E"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1307": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1310": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1313": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1314": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MUL",
      "path": "2"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1318": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1322": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x559"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1327": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1329": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1330": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1331": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1334": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1336": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1338": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1340": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1343": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1344": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1352": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1353": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "GT",
      "path": "2"
    },
    "1356": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53C"
    },
    "1359": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SUB",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1365": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1366": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1369": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1378": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1379": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1386": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1391": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1398": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1422": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1425": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1426": {
      "fn": "Governance.testHashing",
      "offset": [
        16159,
        16181
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1428": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.testHashing",
      "offset": [
        16209,
        16210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1431": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "LT",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A6"
    },
    "1438": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1439": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A6"
    },
    "1442": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "1445": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16201,
        16211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1447": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1449": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "MUL",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1452": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "ADD",
      "path": "2"
    },
    "1453": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "ADD",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.testHashing",
      "offset": [
        16201,
        16211
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1457": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1458": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1460": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "ADD",
      "path": "2"
    },
    "1461": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C0"
    },
    "1464": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1465": {
      "op": "DUP2"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "SWAP1"
    },
    "1471": {
      "op": "JUMP"
    },
    "1472": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1475": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1476": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1478": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "SUB",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "SUB",
      "path": "2"
    },
    "1482": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1485": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1487": {
      "fn": "Governance.testHashing",
      "offset": [
        16184,
        16212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.testHashing",
      "offset": [
        16159,
        16212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.testHashing",
      "offset": [
        16159,
        16212
      ],
      "op": "POP",
      "path": "2"
    },
    "1490": {
      "branch": 95,
      "fn": "Governance.testHashing",
      "offset": [
        16225,
        16233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.testHashing",
      "offset": [
        16222,
        16415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1492": {
      "fn": "Governance.testHashing",
      "offset": [
        16222,
        16415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64C"
    },
    "1495": {
      "branch": 95,
      "fn": "Governance.testHashing",
      "offset": [
        16222,
        16415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1496": {
      "fn": "Governance.testHashing",
      "offset": [
        16253,
        16262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1498": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1499": {
      "fn": "Governance.testHashing",
      "offset": [
        16272,
        16279
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.testHashing",
      "offset": [
        16272,
        16286
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.testHashing",
      "offset": [
        16268,
        16269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1502": {
      "fn": "Governance.testHashing",
      "offset": [
        16268,
        16286
      ],
      "op": "LT",
      "path": "2"
    },
    "1503": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1504": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64A"
    },
    "1507": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1508": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16353
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1509": {
      "fn": "Governance.testHashing",
      "offset": [
        16354,
        16355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "LT",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F5"
    },
    "1517": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F5"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16346,
        16356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1526": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1528": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "MUL",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1531": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "ADD",
      "path": "2"
    },
    "1532": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "ADD",
      "path": "2"
    },
    "1533": {
      "fn": "Governance.testHashing",
      "offset": [
        16346,
        16356
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1534": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1539": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "ADD",
      "path": "2"
    },
    "1540": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1544": {
      "op": "DUP2"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "op": "SWAP1"
    },
    "1550": {
      "op": "JUMP"
    },
    "1551": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1552": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1554": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1555": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1557": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1558": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "SUB",
      "path": "2"
    },
    "1560": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "SUB",
      "path": "2"
    },
    "1561": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1564": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1566": {
      "fn": "Governance.testHashing",
      "offset": [
        16329,
        16357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1567": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1568": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "ADD",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        16319,
        16358
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16313
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1575": {
      "fn": "Governance.testHashing",
      "offset": [
        16314,
        16315
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1578": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "LT",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x637"
    },
    "1583": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1584": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x637"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16306,
        16316
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1594": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1595": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1596": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "MUL",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "ADD",
      "path": "2"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16316
      ],
      "op": "ADD",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        16306,
        16358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.testHashing",
      "offset": [
        16386,
        16389
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1605": {
      "fn": "Governance.testHashing",
      "offset": [
        16386,
        16389
      ],
      "op": "ADD",
      "path": "2"
    },
    "1606": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DA"
    },
    "1609": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.testHashing",
      "offset": [
        16249,
        16405
      ],
      "op": "POP",
      "path": "2"
    },
    "1612": {
      "fn": "Governance.testHashing",
      "offset": [
        16222,
        16415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1613": {
      "fn": "Governance.testHashing",
      "offset": [
        16424,
        16438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1615": {
      "fn": "Governance.testHashing",
      "offset": [
        16468,
        16475
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1616": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1621": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "ADD",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65F"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1627": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3052"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16451,
        16476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1634": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1637": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1638": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "SUB",
      "path": "2"
    },
    "1640": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "SUB",
      "path": "2"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        16451,
        16476
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "ADD",
      "path": "2"
    },
    "1653": {
      "fn": "Governance.testHashing",
      "offset": [
        16441,
        16477
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        16424,
        16477
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        16424,
        16477
      ],
      "op": "POP",
      "path": "2"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        16504,
        16510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        16520,
        16530
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1691": {
      "fn": "Governance.testHashing",
      "offset": [
        16512,
        16518
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1692": {
      "fn": "Governance.testHashing",
      "offset": [
        16512,
        16530
      ],
      "op": "EQ",
      "path": "2"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16539
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1694": {
      "fn": "Governance.testHashing",
      "offset": [
        16540,
        16541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "LT",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AF"
    },
    "1703": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AF"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16532,
        16542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1712": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "MUL",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1717": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "ADD",
      "path": "2"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "ADD",
      "path": "2"
    },
    "1719": {
      "fn": "Governance.testHashing",
      "offset": [
        16532,
        16542
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1720": {
      "fn": "Governance.testHashing",
      "offset": [
        16544,
        16553
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C8"
    },
    "1727": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3088"
    },
    "1735": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16492,
        16554
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1741": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1742": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SUB",
      "path": "2"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        16492,
        16554
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.testHashing",
      "offset": [
        16149,
        16561
      ],
      "op": "POP",
      "path": "2"
    },
    "1746": {
      "fn": "Governance.testHashing",
      "offset": [
        16149,
        16561
      ],
      "op": "POP",
      "path": "2"
    },
    "1747": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "POP",
      "path": "2"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "POP",
      "path": "2"
    },
    "1749": {
      "fn": "Governance.testHashing",
      "offset": [
        16058,
        16561
      ],
      "op": "POP",
      "path": "2"
    },
    "1750": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        16058,
        16561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1751": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1755": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1758": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E7"
    },
    "1762": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1766": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1767": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1768": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1771": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1778": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70A"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1798": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1811": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1815": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1825": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x736"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1842": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x783"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1854": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x758"
    },
    "1860": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1864": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1865": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1868": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1869": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1872": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1876": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x783"
    },
    "1879": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1880": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1883": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1884": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1885": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1892": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1898": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1903": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1906": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "GT",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x766"
    },
    "1913": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SUB",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1919": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1922": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1923": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1930": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1933": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1952": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1966": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1967": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1979": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1980": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1981": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1990": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1991": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2000": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2001": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2002": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2014": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2015": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2016": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2017": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2018": {
      "offset": [
        21398,
        21434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EF"
    },
    "2021": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2025": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2026": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2027": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2028": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "SUB",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2031": {
      "fn": "Governance.createTaskType",
      "offset": [
        21398,
        21434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.createTaskType",
      "offset": [
        11554,
        11660
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x800"
    },
    "2035": {
      "fn": "Governance.createTaskType",
      "offset": [
        11570,
        11579
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2036": {
      "fn": "Governance.createTaskType",
      "offset": [
        11570,
        11579
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2037": {
      "fn": "Governance.createTaskType",
      "offset": [
        11581,
        11582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2039": {
      "fn": "Governance.createTaskType",
      "offset": [
        11584,
        11600
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2040": {
      "fn": "Governance.createTaskType",
      "offset": [
        11602,
        11612
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.createTaskType",
      "offset": [
        11614,
        11627
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.createTaskType",
      "offset": [
        11629,
        11642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.createTaskType",
      "offset": [
        11644,
        11659
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.createTaskType",
      "offset": [
        11554,
        11569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2489"
    },
    "2047": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11554,
        11660
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2048": {
      "fn": "Governance.createTaskType",
      "offset": [
        11554,
        11660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2050": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2051": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2052": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2054": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.createTaskType",
      "offset": [
        11347,
        11667
      ],
      "op": "POP",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        11347,
        11667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2058": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2060": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "SUB"
    },
    "2069": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2070": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 5
    },
    "2071": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2072": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x833"
    },
    "2075": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2076": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2078": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2087": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2088": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2090": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2091": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E6"
    },
    "2094": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2095": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30B9"
    },
    "2098": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2100": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8036
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x2"
    },
    "2102": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2103": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "op": "NOT"
    },
    "2113": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "AND",
      "path": "2"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2123": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2124": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2125": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "AND",
      "path": "2"
    },
    "2126": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2127": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2128": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2129": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "OR",
      "path": "2"
    },
    "2130": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2131": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8026,
        8053
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2132": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        7959,
        8060
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2134": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2136": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2146": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2147": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2148": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x87F"
    },
    "2151": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2154": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2163": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2164": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2166": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2167": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E6"
    },
    "2170": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2171": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30B9"
    },
    "2174": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2175": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x889"
    },
    "2179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2608"
    },
    "2184": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2186": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2187": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.completeTask",
      "offset": [
        15214,
        15223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2190": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2191": {
      "fn": "Governance.completeTask",
      "offset": [
        15231,
        15240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2193": {
      "fn": "Governance.completeTask",
      "offset": [
        15231,
        15247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2194": {
      "fn": "Governance.completeTask",
      "offset": [
        15229,
        15247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2195": {
      "fn": "Governance.completeTask",
      "offset": [
        15229,
        15247
      ],
      "op": "LT",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC44"
    },
    "2200": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2201": {
      "fn": "Governance.completeTask",
      "offset": [
        15339,
        15348
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2202": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2204": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2205": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2207": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "ADD",
      "path": "2"
    },
    "2208": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A9"
    },
    "2211": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2212": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30EE"
    },
    "2216": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15328,
        15349
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2218": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2220": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2221": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2223": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2224": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2225": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "SUB",
      "path": "2"
    },
    "2226": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "SUB",
      "path": "2"
    },
    "2227": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2228": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2229": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2230": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2232": {
      "fn": "Governance.completeTask",
      "offset": [
        15328,
        15349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2236": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2238": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "ADD",
      "path": "2"
    },
    "2239": {
      "fn": "Governance.completeTask",
      "offset": [
        15318,
        15350
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2240": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2242": {
      "fn": "Governance.completeTask",
      "offset": [
        15301,
        15302
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2243": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2246": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "LT",
      "path": "2"
    },
    "2247": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D2"
    },
    "2250": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D2"
    },
    "2254": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "2257": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15291,
        15303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2262": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2263": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2265": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2267": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2269": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2271": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "MUL",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15303
      ],
      "op": "ADD",
      "path": "2"
    },
    "2273": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15312
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2275": {
      "fn": "Governance.completeTask",
      "offset": [
        15291,
        15312
      ],
      "op": "ADD",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2278": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2281": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "ADD",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F3"
    },
    "2285": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2286": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2287": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "2290": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15280,
        15313
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2292": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2294": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2297": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2298": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2299": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "SUB",
      "path": "2"
    },
    "2300": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "SUB",
      "path": "2"
    },
    "2301": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2302": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2303": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2304": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2306": {
      "fn": "Governance.completeTask",
      "offset": [
        15280,
        15313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2307": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2309": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2312": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "ADD",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15314
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2314": {
      "branch": 96,
      "fn": "Governance.completeTask",
      "offset": [
        15270,
        15350
      ],
      "op": "SUB",
      "path": "2"
    },
    "2315": {
      "fn": "Governance.completeTask",
      "offset": [
        15267,
        16033
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC32"
    },
    "2318": {
      "branch": 96,
      "fn": "Governance.completeTask",
      "offset": [
        15267,
        16033
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2319": {
      "fn": "Governance.completeTask",
      "offset": [
        15466,
        15481
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 8
    },
    "2320": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2322": {
      "fn": "Governance.completeTask",
      "offset": [
        15447,
        15448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2324": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2325": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2326": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "LT",
      "path": "2"
    },
    "2327": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "2330": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "2334": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "2337": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15437,
        15449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2338": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2339": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2341": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2343": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2344": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2346": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2351": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2353": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "MUL",
      "path": "2"
    },
    "2354": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15449
      ],
      "op": "ADD",
      "path": "2"
    },
    "2355": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2357": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "ADD",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2365": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "DIV",
      "path": "2"
    },
    "2366": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2372": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15462
      ],
      "op": "AND",
      "path": "2"
    },
    "2373": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15481
      ],
      "op": "GT",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15481
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2375": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15481
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2376": {
      "branch": 97,
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15529
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x986"
    },
    "2380": {
      "branch": 97,
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15529
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2381": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15529
      ],
      "op": "POP",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2384": {
      "fn": "Governance.completeTask",
      "offset": [
        15514,
        15515
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2385": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2386": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2388": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "LT",
      "path": "2"
    },
    "2389": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x960"
    },
    "2392": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2393": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x960"
    },
    "2396": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "2399": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15504,
        15516
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2400": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2401": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2403": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2404": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2408": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2409": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2411": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2413": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2415": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "MUL",
      "path": "2"
    },
    "2416": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15516
      ],
      "op": "ADD",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2419": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "ADD",
      "path": "2"
    },
    "2420": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2427": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "DIV",
      "path": "2"
    },
    "2428": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2434": {
      "fn": "Governance.completeTask",
      "offset": [
        15504,
        15529
      ],
      "op": "AND",
      "path": "2"
    },
    "2435": {
      "fn": "Governance.completeTask",
      "offset": [
        15485,
        15500
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2436": {
      "fn": "Governance.completeTask",
      "offset": [
        15485,
        15529
      ],
      "op": "GT",
      "path": "2"
    },
    "2437": {
      "branch": 98,
      "fn": "Governance.completeTask",
      "offset": [
        15485,
        15529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2438": {
      "fn": "Governance.completeTask",
      "offset": [
        15437,
        15529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2439": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C8"
    },
    "2442": {
      "branch": 98,
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2445": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2454": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2457": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2459": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2460": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "ADD",
      "path": "2"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "2503": {
      "op": "JUMP"
    },
    "2504": {
      "fn": "Governance.completeTask",
      "offset": [
        15429,
        15553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2505": {
      "fn": "Governance.completeTask",
      "offset": [
        15606,
        15624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2507": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2509": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2510": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2511": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2514": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2515": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2517": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.completeTask",
      "offset": [
        15632,
        15641
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2520": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2521": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2522": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2524": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2525": {
      "fn": "Governance.completeTask",
      "offset": [
        15642,
        15648
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2526": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2532": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "AND",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2534": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2535": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2537": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2538": {
      "fn": "Governance.completeTask",
      "offset": [
        15650,
        15655
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2539": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2540": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2541": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2543": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2544": {
      "fn": "Governance.completeTask",
      "offset": [
        15657,
        15658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2546": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2547": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SHL",
      "path": "2"
    },
    "2548": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2550": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2552": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15669
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2555": {
      "fn": "Governance.completeTask",
      "offset": [
        15670,
        15671
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2556": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2557": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "LT",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0B"
    },
    "2563": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2564": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0B"
    },
    "2567": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "2570": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15660,
        15672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2572": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2573": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2575": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2576": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2578": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2580": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2581": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2584": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "MUL",
      "path": "2"
    },
    "2585": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15672
      ],
      "op": "ADD",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2588": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "ADD",
      "path": "2"
    },
    "2589": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2591": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2592": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2593": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2597": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "EXP",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2599": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "DIV",
      "path": "2"
    },
    "2600": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2602": {
      "fn": "Governance.completeTask",
      "offset": [
        15660,
        15688
      ],
      "op": "AND",
      "path": "2"
    },
    "2603": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2605": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "AND",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2610": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2611": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2613": {
      "fn": "Governance.completeTask",
      "offset": [
        15700,
        15701
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2615": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2616": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2617": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "LT",
      "path": "2"
    },
    "2618": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "2621": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2622": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "2625": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "2628": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15690,
        15702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2629": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2630": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2632": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2634": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2635": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2637": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2638": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2642": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2644": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2645": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "MUL",
      "path": "2"
    },
    "2646": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2647": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2648": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15702
      ],
      "op": "ADD",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2651": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "ADD",
      "path": "2"
    },
    "2652": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2659": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "DIV",
      "path": "2"
    },
    "2660": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2664": {
      "fn": "Governance.completeTask",
      "offset": [
        15690,
        15712
      ],
      "op": "AND",
      "path": "2"
    },
    "2665": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2666": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2667": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2669": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2670": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2671": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2672": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2675": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2676": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2683": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2686": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2687": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2688": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2690": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2691": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "ADD",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2695": {
      "fn": "Governance.completeTask",
      "offset": [
        15627,
        15725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.completeTask",
      "offset": [
        15793,
        15807
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0xA"
    },
    "2698": {
      "fn": "Governance.completeTask",
      "offset": [
        15793,
        15807
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.completeTask",
      "offset": [
        15769,
        15783
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2701": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2702": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2709": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2710": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2711": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "2712": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2714": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2715": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 10
    },
    "2716": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2717": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2718": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "2720": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2721": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2722": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2723": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2724": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2725": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2726": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2727": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2728": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 11
    },
    "2729": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2730": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2747": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2748": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2749": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "2750": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2752": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2754": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "2755": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "2756": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2757": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2758": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "2759": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "2760": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2761": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2762": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "2763": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2764": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2766": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2767": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2769": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2770": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2771": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2772": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2775": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2776": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2777": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2778": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE3"
    },
    "2781": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15848
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31DB"
    },
    "2786": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15827,
        15857
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2787": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2791": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2792": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2793": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2796": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2801": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2807": {
      "op": "NOT"
    },
    "2808": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2815": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2816": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2817": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2821": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2823": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2824": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2825": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2828": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2829": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2830": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2833": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2834": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2835": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2836": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2838": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2839": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2840": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2841": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2843": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2846": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2848": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2855": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2856": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2858": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2860": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2862": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2863": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2865": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2866": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2867": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2871": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2872": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2873": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2878": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2880": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "ADD",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2884": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2885": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "2886": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2887": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2892": {
      "op": "NOT"
    },
    "2893": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2894": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2898": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2899": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2904": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2909": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MUL",
      "path": "2"
    },
    "2910": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2911": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "2914": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "2931": {
      "op": "NOT"
    },
    "2932": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2948": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2949": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2950": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2951": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MUL",
      "path": "2"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "NOT"
    },
    "2960": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2961": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2970": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2971": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2972": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2973": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MUL",
      "path": "2"
    },
    "2974": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "2975": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "NOT"
    },
    "2987": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "2996": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "2997": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MUL",
      "path": "2"
    },
    "2998": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "NOT"
    },
    "3008": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "3009": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3011": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3012": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3019": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3021": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "AND",
      "path": "2"
    },
    "3022": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3024": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3025": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "MUL",
      "path": "2"
    },
    "3026": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "OR",
      "path": "2"
    },
    "3027": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3030": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15889
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0xA"
    },
    "3032": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3033": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3036": {
      "op": "SWAP1"
    },
    "3037": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE7"
    },
    "3040": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.completeTask",
      "offset": [
        15827,
        15857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B0"
    },
    "3046": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15875,
        15892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3047": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3048": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3049": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3050": {
      "fn": "Governance.completeTask",
      "offset": [
        15875,
        15892
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3051": {
      "op": "POP"
    },
    "3052": {
      "fn": "Governance.completeTask",
      "offset": [
        15994,
        16018
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0xBFA"
    },
    "3055": {
      "fn": "Governance.completeTask",
      "offset": [
        15994,
        16018
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3056": {
      "op": "POP"
    },
    "3057": {
      "fn": "Governance.completeTask",
      "offset": [
        15994,
        16009
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3058": {
      "fn": "Governance.completeTask",
      "offset": [
        16012,
        16018
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "3062": {
      "fn": "Governance.completeTask",
      "offset": [
        15994,
        16018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B0"
    },
    "3065": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15994,
        16018
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3066": {
      "fn": "Governance.completeTask",
      "offset": [
        15994,
        16018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3067": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3069": {
      "fn": "Governance.completeTask",
      "offset": [
        15957,
        15958
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3070": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3071": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3072": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3073": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "LT",
      "path": "2"
    },
    "3074": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC0D"
    },
    "3077": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3078": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC0D"
    },
    "3081": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "3084": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15947,
        15959
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3085": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3086": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3088": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3089": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3090": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3091": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3093": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3094": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3095": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3096": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3102": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3103": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "AND",
      "path": "2"
    },
    "3104": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3108": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3109": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "MUL",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3112": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3113": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15959
      ],
      "op": "ADD",
      "path": "2"
    },
    "3114": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3115": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3116": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3118": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        15991
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.completeTask",
      "offset": [
        15947,
        16018
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "fn": "Governance.completeTask",
      "offset": [
        15267,
        16033
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3123": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 15
    },
    "3124": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3C"
    },
    "3127": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32C8"
    },
    "3131": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15249,
        15252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3132": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3133": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3134": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "POP",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.completeTask",
      "offset": [
        15249,
        15252
      ],
      "op": "POP",
      "path": "2"
    },
    "3136": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88E"
    },
    "3139": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3140": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3141": {
      "fn": "Governance.completeTask",
      "offset": [
        15210,
        16043
      ],
      "op": "POP",
      "path": "2"
    },
    "3142": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "POP",
      "path": "2"
    },
    "3143": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "POP",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.completeTask",
      "offset": [
        15030,
        16052
      ],
      "op": "POP",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        15030,
        16052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4926,
        4933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3149": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4967,
        4981
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x8"
    },
    "3151": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4967,
        4981
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4954,
        4964
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3153": {
      "branch": 99,
      "fn": "Governance.getWinningVote",
      "offset": [
        4954,
        4981
      ],
      "op": "LT",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC90"
    },
    "3157": {
      "branch": 99,
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3158": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3160": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3169": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3172": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3174": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "ADD",
      "path": "2"
    },
    "3176": {
      "op": "MSTORE"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3181": {
      "op": "DUP3"
    },
    "3182": {
      "op": "ADD"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3203": {
      "op": "SHL"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3206": {
      "op": "DUP3"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "op": "MSTORE"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "3215": {
      "op": "JUMP"
    },
    "3216": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4946,
        5002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x0"
    },
    "3219": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3220": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3221": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3222": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3224": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3226": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3227": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3229": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3230": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5060
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3231": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3233": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "ADD",
      "path": "2"
    },
    "3234": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3241": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "DIV",
      "path": "2"
    },
    "3242": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3248": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5039,
        5073
      ],
      "op": "AND",
      "path": "2"
    },
    "3249": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5021,
        5036
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3250": {
      "branch": 100,
      "fn": "Governance.getWinningVote",
      "offset": [
        5021,
        5073
      ],
      "op": "GT",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF4"
    },
    "3254": {
      "branch": 100,
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3257": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3264": {
      "op": "SHL"
    },
    "3265": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3266": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3269": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3271": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3272": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "ADD",
      "path": "2"
    },
    "3273": {
      "op": "MSTORE"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "MSTORE"
    },
    "3281": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3306": {
      "op": "DUP3"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "op": "MSTORE"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3311": {
      "op": "ADD"
    },
    "3312": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "3315": {
      "op": "JUMP"
    },
    "3316": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5012,
        5097
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5217,
        5236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3319": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5246,
        5271
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3320": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5281,
        5292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3322": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5308,
        5317
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3323": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3326": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3327": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3328": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3329": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3331": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3333": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3336": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3337": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5345
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3338": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3340": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5361
      ],
      "op": "ADD",
      "path": "2"
    },
    "3341": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5361
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3342": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3345": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5324,
        5361
      ],
      "op": "AND",
      "path": "2"
    },
    "3346": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5361
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3347": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5321,
        5361
      ],
      "op": "LT",
      "path": "2"
    },
    "3348": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3349": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE15"
    },
    "3352": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3353": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3355": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3356": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3357": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3358": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3360": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3362": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3363": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3365": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3366": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5441
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3367": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5453,
        5470
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3368": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5453,
        5470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3369": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3371": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "3372": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5448,
        5449
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3375": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3376": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "LT",
      "path": "2"
    },
    "3377": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3C"
    },
    "3380": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3381": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3C"
    },
    "3384": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "3387": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5420,
        5450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3388": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3389": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3391": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3394": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "DIV",
      "path": "2"
    },
    "3395": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "ADD",
      "path": "2"
    },
    "3396": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3398": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "MOD",
      "path": "2"
    },
    "3399": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3401": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "MUL",
      "path": "2"
    },
    "3402": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3403": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3404": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3405": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3408": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "EXP",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "DIV",
      "path": "2"
    },
    "3411": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3414": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5450
      ],
      "op": "AND",
      "path": "2"
    },
    "3415": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3418": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5470
      ],
      "op": "AND",
      "path": "2"
    },
    "3419": {
      "branch": 101,
      "fn": "Governance.getWinningVote",
      "offset": [
        5420,
        5470
      ],
      "op": "GT",
      "path": "2"
    },
    "3420": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3421": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB7"
    },
    "3424": {
      "branch": 101,
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3425": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x0"
    },
    "3427": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3429": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3430": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5519
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3432": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3434": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3435": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3437": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3438": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5531
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3439": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3441": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5537
      ],
      "op": "ADD",
      "path": "2"
    },
    "3442": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5538,
        5539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3443": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3445": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3446": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "LT",
      "path": "2"
    },
    "3447": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD82"
    },
    "3450": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3451": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD82"
    },
    "3454": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "3457": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5510,
        5540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3459": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3461": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3462": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3463": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3464": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "DIV",
      "path": "2"
    },
    "3465": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "ADD",
      "path": "2"
    },
    "3466": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3468": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "MOD",
      "path": "2"
    },
    "3469": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3471": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "MUL",
      "path": "2"
    },
    "3472": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3473": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3474": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3475": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3478": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "EXP",
      "path": "2"
    },
    "3479": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3480": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "DIV",
      "path": "2"
    },
    "3481": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3484": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5510,
        5540
      ],
      "op": "AND",
      "path": "2"
    },
    "3485": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5490,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3488": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5490,
        5540
      ],
      "op": "AND",
      "path": "2"
    },
    "3489": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5490,
        5540
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5490,
        5540
      ],
      "op": "POP",
      "path": "2"
    },
    "3491": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5572,
        5573
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 19
    },
    "3492": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5558,
        5573
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3493": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5558,
        5573
      ],
      "op": "POP",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5595,
        5598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5600,
        5601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3497": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5595,
        5601
      ],
      "op": "SUB",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5591,
        5614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB2"
    },
    "3501": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5591,
        5614
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3502": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5611,
        5612
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x0"
    },
    "3504": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5605,
        5612
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5605,
        5612
      ],
      "op": "POP",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5591,
        5614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3507": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE03"
    },
    "3510": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3511": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5417,
        5739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3512": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3514": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3515": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3516": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3517": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3519": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3521": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3524": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5670
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3526": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5683,
        5700
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3527": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5683,
        5700
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3530": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5676
      ],
      "op": "ADD",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5677,
        5678
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3534": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3535": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "LT",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3539": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3543": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "3546": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5649,
        5679
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3550": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3552": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3553": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "DIV",
      "path": "2"
    },
    "3554": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "ADD",
      "path": "2"
    },
    "3555": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3556": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "MOD",
      "path": "2"
    },
    "3558": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3560": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "MUL",
      "path": "2"
    },
    "3561": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3562": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "EXP",
      "path": "2"
    },
    "3568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "DIV",
      "path": "2"
    },
    "3570": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5679
      ],
      "op": "AND",
      "path": "2"
    },
    "3574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3577": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5700
      ],
      "op": "AND",
      "path": "2"
    },
    "3578": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5649,
        5700
      ],
      "op": "SUB",
      "path": "2"
    },
    "3579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE03"
    },
    "3582": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3583": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5723,
        5724
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x1"
    },
    "3585": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5724
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3586": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5719,
        5724
      ],
      "op": "POP",
      "path": "2"
    },
    "3587": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5646,
        5739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 22
    },
    "3589": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0D"
    },
    "3592": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32C8"
    },
    "3596": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5363,
        5366
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3597": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3598": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3599": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "POP",
      "path": "2"
    },
    "3600": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5363,
        5366
      ],
      "op": "POP",
      "path": "2"
    },
    "3601": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCFB"
    },
    "3604": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3605": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5304,
        5749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5766,
        5772
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 23
    },
    "3608": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5766,
        5772
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE57"
    },
    "3612": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3613": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3615": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3622": {
      "op": "SHL"
    },
    "3623": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3624": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3627": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "ADD",
      "path": "2"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3636": {
      "op": "DUP3"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3661": {
      "op": "DUP3"
    },
    "3662": {
      "op": "ADD"
    },
    "3663": {
      "op": "MSTORE"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "3670": {
      "op": "JUMP"
    },
    "3671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5758,
        5793
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5810,
        5821
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 24
    },
    "3674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5810,
        5821
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3675": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4859,
        5828
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        4859,
        5828
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3680": {
      "fn": "Governance.vote",
      "offset": [
        9868,
        10532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3681": {
      "offset": [
        21289,
        21320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3683": {
      "fn": "Governance.vote",
      "offset": [
        21289,
        21320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3690": {
      "op": "SHL"
    },
    "3691": {
      "offset": [
        21289,
        21320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3692": {
      "fn": "Governance.vote",
      "offset": [
        21289,
        21320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3695": {
      "offset": [
        21289,
        21320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3697": {
      "fn": "Governance.vote",
      "offset": [
        21289,
        21320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.vote",
      "offset": [
        21289,
        21320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3699": {
      "op": "MSTORE"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3704": {
      "op": "DUP3"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3727": {
      "op": "DUP3"
    },
    "3728": {
      "op": "ADD"
    },
    "3729": {
      "op": "MSTORE"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3732": {
      "op": "ADD"
    },
    "3733": {
      "offset": [
        21289,
        21320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "3736": {
      "op": "JUMP"
    },
    "3737": {
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3738": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3740": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3742": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3743": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3745": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3746": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3747": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3748": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3750": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3752": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3753": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3754": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3755": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3756": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB4"
    },
    "3759": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3760": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "3763": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3764": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3765": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3766": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3768": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3769": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3771": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3772": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3773": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3774": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MUL",
      "path": "2"
    },
    "3775": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3777": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3778": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3780": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3782": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3783": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3786": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3787": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3788": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3789": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3790": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3791": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3793": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3794": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3796": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3797": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3798": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3799": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE0"
    },
    "3803": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3804": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "3807": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3808": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3809": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3810": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3811": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2D"
    },
    "3814": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3815": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3816": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3818": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "LT",
      "path": "2"
    },
    "3819": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF02"
    },
    "3822": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3823": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3826": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3827": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3828": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3829": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3830": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MUL",
      "path": "2"
    },
    "3831": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3832": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3833": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3834": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3836": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3837": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3838": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2D"
    },
    "3841": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3842": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3843": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3844": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3845": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3846": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3849": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3850": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3852": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3854": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3855": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3856": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3857": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3858": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3859": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3860": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3861": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3862": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3864": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3865": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3866": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3868": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3869": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3871": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "GT",
      "path": "2"
    },
    "3872": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF10"
    },
    "3875": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SUB",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3881": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3883": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3884": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3891": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3894": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3896": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3898": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3899": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3901": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3906": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3908": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3909": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3910": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3911": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3912": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3918": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3919": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3920": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3921": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3922": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3923": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3929": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3930": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3932": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3936": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3939": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3940": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3942": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "op": "SUB"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3955": {
      "op": "SHL"
    },
    "3956": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3957": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3958": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3959": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3960": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3967": {
      "op": "SHL"
    },
    "3968": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3969": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3970": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3971": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3972": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3979": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3980": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3981": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3982": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3983": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3990": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3991": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3992": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3993": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3994": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3995": {
      "fn": "Governance.getTaskById",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3996": {
      "fn": "Governance.getTaskById",
      "offset": [
        4407,
        4418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA3"
    },
    "3999": {
      "fn": "Governance.getTaskById",
      "offset": [
        4407,
        4418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C8"
    },
    "4002": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4407,
        4418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4003": {
      "fn": "Governance.getTaskById",
      "offset": [
        4407,
        4418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x0"
    },
    "4006": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4007": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4008": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4009": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4011": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4013": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4016": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4017": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4018": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4019": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4020": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4021": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4022": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4025": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4027": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4028": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4029": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4030": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4031": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4032": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4033": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4034": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4035": {
      "fn": "Governance.getTaskById",
      "offset": [
        4437,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4036": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCC"
    },
    "4039": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4040": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "4043": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4044": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4045": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4046": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4048": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4049": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4051": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4052": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4053": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4054": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MUL",
      "path": "2"
    },
    "4055": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4057": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4058": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4060": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4061": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4064": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4066": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4067": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4068": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4069": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4070": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4071": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4072": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4073": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4074": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4076": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4077": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4078": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4079": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4080": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF8"
    },
    "4083": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4084": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "4087": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4088": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4089": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4090": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4091": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1045"
    },
    "4094": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4095": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4096": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4098": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "LT",
      "path": "2"
    },
    "4099": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101A"
    },
    "4102": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4103": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4106": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4107": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4108": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4109": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4110": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MUL",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4112": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4113": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4114": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4116": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4117": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1045"
    },
    "4121": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4122": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4123": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4126": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4127": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4129": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4132": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4134": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4138": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4139": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4140": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4141": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4142": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4144": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4145": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4146": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4148": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4149": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4150": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4151": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "GT",
      "path": "2"
    },
    "4152": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1028"
    },
    "4155": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4158": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SUB",
      "path": "2"
    },
    "4159": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4161": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4162": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4163": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4164": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4165": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4166": {
      "op": "POP"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "op": "POP"
    },
    "4169": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4170": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4176": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4177": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4178": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4179": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4185": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4186": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4187": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4188": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4190": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4191": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4192": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4195": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4197": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4198": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4200": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4201": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4202": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4203": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4205": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4206": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4207": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4208": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4210": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4215": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4216": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4221": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4222": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4223": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4225": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4226": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4227": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4228": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4231": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4232": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4233": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4238": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4239": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4241": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4242": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4243": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4250": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4257": {
      "op": "SHL"
    },
    "4258": {
      "op": "SUB"
    },
    "4259": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4260": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4262": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4264": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4271": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4272": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4275": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4277": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4278": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4280": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4281": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4289": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4293": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4294": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4301": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "DIV",
      "path": "2"
    },
    "4302": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4303": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4304": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "4305": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4308": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4309": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4313": {
      "fn": "Governance.getTaskById",
      "offset": [
        4430,
        4451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4346,
        4458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6620,
        6635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6647,
        6660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6647,
        6660
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6690,
        6699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6690,
        6706
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6687,
        6706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6687,
        6706
      ],
      "op": "LT",
      "path": "2"
    },
    "4329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126E"
    },
    "4333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6772,
        6787
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6735,
        6736
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "LT",
      "path": "2"
    },
    "4342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1101"
    },
    "4345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1101"
    },
    "4349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6725,
        6737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "AND",
      "path": "2"
    },
    "4372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4377": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "MUL",
      "path": "2"
    },
    "4379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6737
      ],
      "op": "ADD",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4389": {
      "branch": 105,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6787
      ],
      "op": "LT",
      "path": "2"
    },
    "4390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1165"
    },
    "4395": {
      "branch": 105,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "POP",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6832,
        6847
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4400": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6813,
        6814
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "LT",
      "path": "2"
    },
    "4405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1140"
    },
    "4408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1140"
    },
    "4412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6803,
        6815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "MUL",
      "path": "2"
    },
    "4432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6815
      ],
      "op": "ADD",
      "path": "2"
    },
    "4433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4435": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "ADD",
      "path": "2"
    },
    "4436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "DIV",
      "path": "2"
    },
    "4444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6828
      ],
      "op": "AND",
      "path": "2"
    },
    "4451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6847
      ],
      "op": "GT",
      "path": "2"
    },
    "4452": {
      "branch": 106,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6803,
        6847
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6847
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A4"
    },
    "4459": {
      "branch": 106,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "POP",
      "path": "2"
    },
    "4461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6879,
        6894
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6860
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6861,
        6862
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "LT",
      "path": "2"
    },
    "4469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1180"
    },
    "4472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1180"
    },
    "4476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6851,
        6863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "MUL",
      "path": "2"
    },
    "4496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6863
      ],
      "op": "ADD",
      "path": "2"
    },
    "4497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "ADD",
      "path": "2"
    },
    "4500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "DIV",
      "path": "2"
    },
    "4508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6876
      ],
      "op": "AND",
      "path": "2"
    },
    "4515": {
      "branch": 107,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6851,
        6894
      ],
      "op": "GT",
      "path": "2"
    },
    "4516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E1"
    },
    "4522": {
      "branch": 107,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "POP",
      "path": "2"
    },
    "4524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6940,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6920,
        6921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "LT",
      "path": "2"
    },
    "4533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C0"
    },
    "4536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C0"
    },
    "4540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4543": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6910,
        6922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "MUL",
      "path": "2"
    },
    "4560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6922
      ],
      "op": "ADD",
      "path": "2"
    },
    "4561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4563": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "ADD",
      "path": "2"
    },
    "4564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4569": {
      "op": "SHL"
    },
    "4570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "DIV",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4575": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6937
      ],
      "op": "AND",
      "path": "2"
    },
    "4576": {
      "branch": 108,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6910,
        6941
      ],
      "op": "GT",
      "path": "2"
    },
    "4577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6725,
        6941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F1"
    },
    "4582": {
      "branch": 108,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6984,
        6991
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 26
    },
    "4584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6984,
        6991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6984,
        6991
      ],
      "op": "ADD",
      "path": "2"
    },
    "4587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6984,
        6991
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6984,
        6991
      ],
      "op": "POP",
      "path": "2"
    },
    "4589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1266"
    },
    "4592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4596": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7082,
        7083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "ADD",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4609": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7043,
        7067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7043,
        7067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4615": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "ADD",
      "path": "2"
    },
    "4616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "ADD",
      "path": "2"
    },
    "4624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SUB",
      "path": "2"
    },
    "4629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1208"
    },
    "4634": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "POP",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7069,
        7084
      ],
      "op": "POP",
      "path": "2"
    },
    "4638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7043,
        7084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4639": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7043,
        7084
      ],
      "op": "POP",
      "path": "2"
    },
    "4640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x40"
    },
    "4642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "ADD",
      "path": "2"
    },
    "4647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4650": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "ADD",
      "path": "2"
    },
    "4658": {
      "op": "PUSH8",
      "value": "0x273790363AB1B597"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "POP",
      "path": "2"
    },
    "4673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7111,
        7112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4677": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "LT",
      "path": "2"
    },
    "4680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1253"
    },
    "4683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1253"
    },
    "4687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7102,
        7113
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "MUL",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "ADD",
      "path": "2"
    },
    "4701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7113
      ],
      "op": "ADD",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7102,
        7126
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4703": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7151,
        7159
      ],
      "op": "SWAP5",
      "path": "2",
      "statement": 28
    },
    "4704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6722,
        7174
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7197,
        7200
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x1"
    },
    "4713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7197,
        7200
      ],
      "op": "ADD",
      "path": "2"
    },
    "4714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E3"
    },
    "4717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6670,
        7212
      ],
      "op": "POP",
      "path": "2"
    },
    "4720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7222,
        7245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7261,
        7266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "SUB"
    },
    "4731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "GT",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1289"
    },
    "4737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1289"
    },
    "4741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x291B"
    },
    "4744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4749": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4753": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "MUL",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ADD",
      "path": "2"
    },
    "4760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ADD",
      "path": "2"
    },
    "4762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4766": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BC"
    },
    "4770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ADD",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "ADD",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SUB",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A7"
    },
    "4793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "POP",
      "path": "2"
    },
    "4796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7248,
        7267
      ],
      "op": "POP",
      "path": "2"
    },
    "4798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7222,
        7267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7222,
        7267
      ],
      "op": "POP",
      "path": "2"
    },
    "4800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7277,
        7292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7310,
        7319
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7326,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7326,
        7342
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7323,
        7342
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7323,
        7342
      ],
      "op": "LT",
      "path": "2"
    },
    "4809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A7"
    },
    "4813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7408,
        7423
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7371,
        7372
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "LT",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E1"
    },
    "4825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E1"
    },
    "4829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7361,
        7373
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "DUP12",
      "path": "2"
    },
    "4851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "AND",
      "path": "2"
    },
    "4852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "MUL",
      "path": "2"
    },
    "4859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7373
      ],
      "op": "ADD",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7405
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4869": {
      "branch": 109,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7423
      ],
      "op": "LT",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1345"
    },
    "4875": {
      "branch": 109,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "POP",
      "path": "2"
    },
    "4877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7468,
        7483
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7449,
        7450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4881": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4882": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "LT",
      "path": "2"
    },
    "4885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1320"
    },
    "4888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4889": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1320"
    },
    "4892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7439,
        7451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4896": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "MUL",
      "path": "2"
    },
    "4912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7451
      ],
      "op": "ADD",
      "path": "2"
    },
    "4913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "ADD",
      "path": "2"
    },
    "4916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4921": {
      "op": "SHL"
    },
    "4922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "DIV",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7464
      ],
      "op": "AND",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7483
      ],
      "op": "GT",
      "path": "2"
    },
    "4932": {
      "branch": 110,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7439,
        7483
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7483
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1384"
    },
    "4939": {
      "branch": 110,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "POP",
      "path": "2"
    },
    "4941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7515,
        7530
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7497,
        7498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "LT",
      "path": "2"
    },
    "4949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "4952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "4956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "4959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7487,
        7499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "MUL",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7499
      ],
      "op": "ADD",
      "path": "2"
    },
    "4977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "ADD",
      "path": "2"
    },
    "4980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4985": {
      "op": "SHL"
    },
    "4986": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "DIV",
      "path": "2"
    },
    "4988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4994": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7512
      ],
      "op": "AND",
      "path": "2"
    },
    "4995": {
      "branch": 111,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7487,
        7530
      ],
      "op": "GT",
      "path": "2"
    },
    "4996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C1"
    },
    "5002": {
      "branch": 111,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "POP",
      "path": "2"
    },
    "5004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7576,
        7577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7556,
        7557
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "LT",
      "path": "2"
    },
    "5013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13A0"
    },
    "5016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13A0"
    },
    "5020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "5023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7546,
        7558
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "MUL",
      "path": "2"
    },
    "5040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7558
      ],
      "op": "ADD",
      "path": "2"
    },
    "5041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "ADD",
      "path": "2"
    },
    "5044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5049": {
      "op": "SHL"
    },
    "5050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "DIV",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7573
      ],
      "op": "AND",
      "path": "2"
    },
    "5056": {
      "branch": 112,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7546,
        7577
      ],
      "op": "GT",
      "path": "2"
    },
    "5057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7361,
        7577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7358,
        7781
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7358,
        7781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x149F"
    },
    "5062": {
      "branch": 112,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7358,
        7781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7632
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x4"
    },
    "5065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7633,
        7634
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "LT",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D9"
    },
    "5073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D9"
    },
    "5077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "5080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7623,
        7635
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "MUL",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7635
      ],
      "op": "ADD",
      "path": "2"
    },
    "5096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7623,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F5"
    },
    "5104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "5108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5109": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DIV",
      "path": "2"
    },
    "5119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MUL",
      "path": "2"
    },
    "5120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5123": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5126": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5135": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5136": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5137": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5143": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1421"
    },
    "5148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5149": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "5152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5153": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146E"
    },
    "5159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5161": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "LT",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1443"
    },
    "5167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5168": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5173": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DIV",
      "path": "2"
    },
    "5175": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MUL",
      "path": "2"
    },
    "5176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146E"
    },
    "5186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "GT",
      "path": "2"
    },
    "5217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1451"
    },
    "5220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SUB",
      "path": "2"
    },
    "5224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "AND",
      "path": "2"
    },
    "5227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "ADD",
      "path": "2"
    },
    "5229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7617
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7618,
        7619
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "LT",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1485"
    },
    "5245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1485"
    },
    "5249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "5252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7610,
        7620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "MUL",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5260": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5261": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7610,
        7644
      ],
      "op": "POP",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7672,
        7681
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 31
    },
    "5266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7672,
        7681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7672,
        7681
      ],
      "op": "ADD",
      "path": "2"
    },
    "5269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7672,
        7681
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7672,
        7681
      ],
      "op": "POP",
      "path": "2"
    },
    "5271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7714,
        7719
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7703,
        7710
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5273": {
      "branch": 113,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7703,
        7719
      ],
      "op": "LT",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7700,
        7767
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7743,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 32,
      "value": "0x14A7"
    },
    "5278": {
      "branch": 113,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7700,
        7767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7700,
        7767
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7804,
        7807
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x1"
    },
    "5282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7804,
        7807
      ],
      "op": "ADD",
      "path": "2"
    },
    "5283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C3"
    },
    "5286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7306,
        7819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5288": {
      "op": "POP"
    },
    "5289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7835,
        7842
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 34
    },
    "5290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7835,
        7842
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6549,
        7849
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "POP"
    },
    "5295": {
      "op": "POP"
    },
    "5296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        6549,
        7849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5298": {
      "fn": "Governance.createProposal",
      "offset": [
        10797,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x1"
    },
    "5300": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10794
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10798
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5304": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10798
      ],
      "op": "AND",
      "path": "2"
    },
    "5305": {
      "branch": 114,
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10798
      ],
      "op": "GT",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5307": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5308": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14CA"
    },
    "5311": {
      "branch": 114,
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5312": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "POP",
      "path": "2"
    },
    "5313": {
      "fn": "Governance.createProposal",
      "offset": [
        10821,
        10824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "5316": {
      "fn": "Governance.createProposal",
      "offset": [
        10802,
        10818
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5317": {
      "fn": "Governance.createProposal",
      "offset": [
        10802,
        10824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5320": {
      "fn": "Governance.createProposal",
      "offset": [
        10802,
        10824
      ],
      "op": "AND",
      "path": "2"
    },
    "5321": {
      "branch": 115,
      "fn": "Governance.createProposal",
      "offset": [
        10802,
        10824
      ],
      "op": "LT",
      "path": "2"
    },
    "5322": {
      "fn": "Governance.createProposal",
      "offset": [
        10778,
        10824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5323": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1516"
    },
    "5326": {
      "branch": 115,
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5327": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5329": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5336": {
      "op": "SHL"
    },
    "5337": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5338": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5341": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5343": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5344": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "ADD",
      "path": "2"
    },
    "5345": {
      "op": "MSTORE"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5350": {
      "op": "DUP3"
    },
    "5351": {
      "op": "ADD"
    },
    "5352": {
      "op": "MSTORE"
    },
    "5353": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5388": {
      "op": "DUP3"
    },
    "5389": {
      "op": "ADD"
    },
    "5390": {
      "op": "MSTORE"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5393": {
      "op": "ADD"
    },
    "5394": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "5397": {
      "op": "JUMP"
    },
    "5398": {
      "fn": "Governance.createProposal",
      "offset": [
        10770,
        10854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5399": {
      "fn": "Governance.createProposal",
      "offset": [
        10882,
        10883
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x1"
    },
    "5401": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5403": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5405": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5406": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5407": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5408": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1529"
    },
    "5411": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5413": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B0"
    },
    "5416": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10864,
        10883
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5417": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5418": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5419": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5420": {
      "fn": "Governance.createProposal",
      "offset": [
        10864,
        10883
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "fn": "Governance.createProposal",
      "offset": [
        10954,
        10968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5425": {
      "fn": "Governance.createProposal",
      "offset": [
        10954,
        10968
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5426": {
      "fn": "Governance.createProposal",
      "offset": [
        10914,
        10941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5428": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5430": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5431": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5433": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5435": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5436": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5438": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11006
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x3"
    },
    "5442": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5443": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11006
      ],
      "op": "ADD",
      "path": "2"
    },
    "5444": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5445": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5446": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "5462": {
      "op": "NOT"
    },
    "5463": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "AND",
      "path": "2",
      "statement": 38
    },
    "5464": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "5471": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5477": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5479": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "AND",
      "path": "2"
    },
    "5480": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5481": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5482": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5483": {
      "fn": "Governance.createProposal",
      "offset": [
        10983,
        11022
      ],
      "op": "MUL",
      "path": "2"
    },
    "5484": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5492": {
      "op": "SHL"
    },
    "5493": {
      "op": "NOT"
    },
    "5494": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "AND",
      "path": "2"
    },
    "5495": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5496": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5497": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5498": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "OR",
      "path": "2"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5503": {
      "op": "SHL"
    },
    "5504": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5505": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5506": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "AND",
      "path": "2"
    },
    "5507": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5508": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5510": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "MUL",
      "path": "2"
    },
    "5511": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "OR",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5513": {
      "fn": "Governance.createProposal",
      "offset": [
        11036,
        11075
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5516": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11115
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 39
    },
    "5517": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11115
      ],
      "op": "ADD",
      "path": "2"
    },
    "5518": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5520": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5523": {
      "op": "NOT"
    },
    "5524": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "AND",
      "path": "2"
    },
    "5525": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5528": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5529": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "AND",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "OR",
      "path": "2"
    },
    "5531": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5532": {
      "fn": "Governance.createProposal",
      "offset": [
        11089,
        11134
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5533": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5534": {
      "fn": "Governance.createProposal",
      "offset": [
        11148,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0x15A8"
    },
    "5537": {
      "fn": "Governance.createProposal",
      "offset": [
        11170,
        11179
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5538": {
      "fn": "Governance.createProposal",
      "offset": [
        11170,
        11179
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5539": {
      "fn": "Governance.createProposal",
      "offset": [
        10944,
        10969
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.createProposal",
      "offset": [
        11148,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32FE"
    },
    "5543": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5544": {
      "fn": "Governance.createProposal",
      "offset": [
        11148,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5545": {
      "fn": "Governance.createProposal",
      "offset": [
        11148,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5546": {
      "fn": "Governance.createProposal",
      "offset": [
        11190,
        11302
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0x15BC"
    },
    "5549": {
      "fn": "Governance.createProposal",
      "offset": [
        11206,
        11215
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5550": {
      "fn": "Governance.createProposal",
      "offset": [
        11206,
        11215
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5551": {
      "fn": "Governance.createProposal",
      "offset": [
        11224,
        11238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5553": {
      "fn": "Governance.createProposal",
      "offset": [
        11224,
        11238
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5554": {
      "fn": "Governance.createProposal",
      "offset": [
        11241,
        11242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5556": {
      "fn": "Governance.createProposal",
      "offset": [
        11244,
        11254
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5557": {
      "fn": "Governance.createProposal",
      "offset": [
        11256,
        11269
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5558": {
      "fn": "Governance.createProposal",
      "offset": [
        11271,
        11284
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5559": {
      "fn": "Governance.createProposal",
      "offset": [
        11286,
        11301
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5560": {
      "fn": "Governance.createProposal",
      "offset": [
        11190,
        11205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2489"
    },
    "5563": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        11190,
        11302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5564": {
      "fn": "Governance.createProposal",
      "offset": [
        11190,
        11302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5565": {
      "fn": "Governance.createProposal",
      "offset": [
        10760,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5566": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5567": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5568": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5569": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5570": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5571": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5572": {
      "fn": "Governance.createProposal",
      "offset": [
        10578,
        11340
      ],
      "op": "POP",
      "path": "2"
    },
    "5573": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        10578,
        11340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12686,
        12713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5577": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12716,
        12755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15E1"
    },
    "5580": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12740,
        12754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5582": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 42
    },
    "5583": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "5585": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5586": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5587": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5592": {
      "op": "SHL"
    },
    "5593": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5594": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5595": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "5596": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5597": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5598": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "5599": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5600": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12716,
        12755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12686,
        12755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12686,
        12755
      ],
      "op": "POP",
      "path": "2"
    },
    "5604": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12765,
        12783
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15EB"
    },
    "5607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12765,
        12783
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C8"
    },
    "5610": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12765,
        12783
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12765,
        12783
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12793,
        12807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5614": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12793,
        12807
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12923,
        12942
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12919,
        12920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12919,
        12942
      ],
      "op": "LT",
      "path": "2"
    },
    "5619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B7"
    },
    "5623": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13248,
        13263
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13215
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13245
      ],
      "op": "ADD",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13263
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13263
      ],
      "op": "AND",
      "path": "2"
    },
    "5638": {
      "branch": 116,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13263
      ],
      "op": "LT",
      "path": "2"
    },
    "5639": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5640": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161B"
    },
    "5644": {
      "branch": 116,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5645": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "POP",
      "path": "2"
    },
    "5646": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13286,
        13292
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5647": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13273
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5648": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13283
      ],
      "op": "ADD",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13283
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5656": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13292
      ],
      "op": "AND",
      "path": "2"
    },
    "5657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13292
      ],
      "op": "EQ",
      "path": "2"
    },
    "5658": {
      "branch": 117,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13267,
        13292
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5659": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13209,
        13292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13205,
        14358
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13205,
        14358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B2"
    },
    "5664": {
      "branch": 117,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13205,
        14358
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13416,
        13454
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 43,
      "value": "0x162B"
    },
    "5668": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13436,
        13450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5670": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13452,
        13453
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13416,
        13435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265A"
    },
    "5674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13416,
        13454
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13416,
        13454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13408,
        13455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 44
    },
    "5679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5685": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5688": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5690": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5691": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5693": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5694": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5697": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5699": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5704": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13408,
        13455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13408,
        13455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5708": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5709": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5710": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5711": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5712": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13482,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1659"
    },
    "5716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "5720": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5721": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5725": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5726": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5731": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MUL",
      "path": "2"
    },
    "5732": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5737": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5739": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5746": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5747": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5748": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5749": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5753": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1685"
    },
    "5760": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3002"
    },
    "5764": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5768": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D2"
    },
    "5771": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5772": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5775": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "LT",
      "path": "2"
    },
    "5776": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16A7"
    },
    "5779": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5780": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5783": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5784": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5785": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MUL",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5789": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5790": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5791": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5793": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5794": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5795": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D2"
    },
    "5798": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5799": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5800": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5801": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5802": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5804": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5806": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5807": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5809": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5811": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5812": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5814": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5815": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5818": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5821": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5823": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5825": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5826": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "GT",
      "path": "2"
    },
    "5829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B5"
    },
    "5832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5834": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SUB",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5838": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5841": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5842": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5843": {
      "op": "POP"
    },
    "5844": {
      "op": "POP"
    },
    "5845": {
      "op": "POP"
    },
    "5846": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5849": {
      "op": "POP"
    },
    "5850": {
      "op": "POP"
    },
    "5851": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5853": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5854": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5855": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5863": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5864": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5865": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5869": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5870": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5872": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5873": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5874": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5875": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5877": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5879": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5880": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5883": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5884": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5885": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5887": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5888": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5893": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5894": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5896": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5898": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "5902": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5908": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5909": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5915": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "5918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5925": {
      "op": "SHL"
    },
    "5926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5934": {
      "op": "SHL"
    },
    "5935": {
      "op": "SUB"
    },
    "5936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5937": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "5939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5946": {
      "op": "SHL"
    },
    "5947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5958": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5968": {
      "op": "SHL"
    },
    "5969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5970": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5972": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5984": {
      "op": "SHL"
    },
    "5985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "DIV",
      "path": "2"
    },
    "5988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "AND",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5999": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13473,
        13495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14163
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 45
    },
    "6002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14163
      ],
      "op": "AND",
      "path": "2"
    },
    "6003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14146
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14146
      ],
      "op": "ADD",
      "path": "2"
    },
    "6006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14163
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14245,
        14261
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0xB"
    },
    "6009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14245,
        14261
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14146
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14129,
        14146
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6012": {
      "op": "POP"
    },
    "6013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14227,
        14261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1786"
    },
    "6016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14227,
        14261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14227,
        14242
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14227,
        14261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B0"
    },
    "6021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14227,
        14261
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14227,
        14261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14262
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14262
      ],
      "op": "AND",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14217
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14217
      ],
      "op": "ADD",
      "path": "2"
    },
    "6035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14181,
        14187
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14285
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x9"
    },
    "6039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14294,
        14332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A3"
    },
    "6044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14314,
        14328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14330,
        14331
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14294,
        14313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265A"
    },
    "6050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14294,
        14332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14294,
        14332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "ADD",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "ADD",
      "path": "2"
    },
    "6065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14286,
        14333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C1"
    },
    "6075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14334
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31DB"
    },
    "6080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14280,
        14343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6082": {
      "op": "POP"
    },
    "6083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6094": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6100": {
      "op": "NOT"
    },
    "6101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6109": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6110": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6119": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6148": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6154": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6164": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "6173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "ADD",
      "path": "2"
    },
    "6174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "6179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6180": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6185": {
      "op": "NOT"
    },
    "6186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6190": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6207": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "6224": {
      "op": "NOT"
    },
    "6225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6230": {
      "op": "SHL"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "op": "SUB"
    },
    "6239": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6240": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "6246": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6251": {
      "op": "SHL"
    },
    "6252": {
      "op": "NOT"
    },
    "6253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6254": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6259": {
      "op": "SHL"
    },
    "6260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6268": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6278": {
      "op": "SHL"
    },
    "6279": {
      "op": "NOT"
    },
    "6280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6285": {
      "op": "SHL"
    },
    "6286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "6291": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6299": {
      "op": "SHL"
    },
    "6300": {
      "op": "NOT"
    },
    "6301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6310": {
      "op": "SHL"
    },
    "6311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "AND",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "MUL",
      "path": "2"
    },
    "6319": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "OR",
      "path": "2"
    },
    "6320": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6321": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14280,
        14343
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13205,
        14358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15EF"
    },
    "6326": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12901,
        14368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x40"
    },
    "6331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6333": {
      "op": "DUP6"
    },
    "6334": {
      "op": "DUP2"
    },
    "6335": {
      "op": "MSTORE"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6338": {
      "op": "DUP2"
    },
    "6339": {
      "op": "ADD"
    },
    "6340": {
      "op": "DUP4"
    },
    "6341": {
      "op": "SWAP1"
    },
    "6342": {
      "op": "MSTORE"
    },
    "6343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE"
    },
    "6376": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6377": {
      "op": "ADD"
    },
    "6378": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6380": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6382": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6383": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "SUB",
      "path": "2"
    },
    "6384": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6385": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14414,
        14450
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6386": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12676,
        14457
      ],
      "op": "POP",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12676,
        14457
      ],
      "op": "POP",
      "path": "2"
    },
    "6388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12676,
        14457
      ],
      "op": "POP",
      "path": "2"
    },
    "6389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12611,
        14457
      ],
      "op": "POP",
      "path": "2"
    },
    "6390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        12611,
        14457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6392": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17441
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x2"
    },
    "6394": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17441
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6395": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6397": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6398": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6405": {
      "op": "SHL"
    },
    "6406": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6407": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6408": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6410": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6411": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6412": {
      "op": "DUP6"
    },
    "6413": {
      "op": "SWAP1"
    },
    "6414": {
      "op": "MSTORE"
    },
    "6415": {
      "fn": "Governance.submitVerification",
      "offset": [
        17461,
        17471
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6416": {
      "fn": "Governance.submitVerification",
      "offset": [
        17461,
        17471
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6423": {
      "op": "SHL"
    },
    "6424": {
      "op": "SUB"
    },
    "6425": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17441
      ],
      "op": "AND",
      "path": "2"
    },
    "6426": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6427": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17449
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "6432": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6435": {
      "op": "ADD"
    },
    "6436": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6438": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6440": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6443": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "SUB",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6445": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6446": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "GAS",
      "path": "2"
    },
    "6447": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6448": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6450": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6451": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1940"
    },
    "6454": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6455": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6458": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6459": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6460": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6463": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6464": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6465": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "POP",
      "path": "2"
    },
    "6466": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "POP",
      "path": "2"
    },
    "6467": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "POP",
      "path": "2"
    },
    "6468": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "POP",
      "path": "2"
    },
    "6469": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6471": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6473": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6475": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "NOT",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6478": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "AND",
      "path": "2"
    },
    "6481": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6482": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6483": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6484": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6486": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6487": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "POP",
      "path": "2"
    },
    "6488": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6489": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6490": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1964"
    },
    "6494": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6496": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E1"
    },
    "6499": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17431,
        17457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6500": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6507": {
      "op": "SHL"
    },
    "6508": {
      "op": "SUB"
    },
    "6509": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17471
      ],
      "op": "AND",
      "path": "2"
    },
    "6510": {
      "branch": 118,
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17471
      ],
      "op": "EQ",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17508
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17508
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6513": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1995"
    },
    "6516": {
      "branch": 118,
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17508
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6517": {
      "op": "POP"
    },
    "6518": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6520": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6521": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6523": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6525": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6527": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6528": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6530": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6531": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17489
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6532": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6534": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "ADD",
      "path": "2"
    },
    "6535": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6540": {
      "op": "SHL"
    },
    "6541": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6542": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "DIV",
      "path": "2"
    },
    "6543": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6546": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17500
      ],
      "op": "AND",
      "path": "2"
    },
    "6547": {
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17508
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6548": {
      "branch": 119,
      "fn": "Governance.submitVerification",
      "offset": [
        17475,
        17508
      ],
      "op": "EQ",
      "path": "2"
    },
    "6549": {
      "fn": "Governance.submitVerification",
      "offset": [
        17431,
        17508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6550": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E1"
    },
    "6553": {
      "branch": 119,
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6554": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6556": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6557": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6563": {
      "op": "SHL"
    },
    "6564": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6565": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6568": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6570": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6571": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "ADD",
      "path": "2"
    },
    "6572": {
      "op": "DUP2"
    },
    "6573": {
      "op": "SWAP1"
    },
    "6574": {
      "op": "MSTORE"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6577": {
      "op": "DUP3"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "MSTORE"
    },
    "6580": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6615": {
      "op": "DUP3"
    },
    "6616": {
      "op": "ADD"
    },
    "6617": {
      "op": "MSTORE"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6620": {
      "op": "ADD"
    },
    "6621": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "6624": {
      "op": "JUMP"
    },
    "6625": {
      "fn": "Governance.submitVerification",
      "offset": [
        17423,
        17545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.submitVerification",
      "offset": [
        17580,
        17581
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x0"
    },
    "6628": {
      "fn": "Governance.submitVerification",
      "offset": [
        17563,
        17570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6629": {
      "fn": "Governance.submitVerification",
      "offset": [
        17563,
        17577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6630": {
      "branch": 120,
      "fn": "Governance.submitVerification",
      "offset": [
        17563,
        17581
      ],
      "op": "GT",
      "path": "2"
    },
    "6631": {
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19EF"
    },
    "6634": {
      "branch": 120,
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6635": {
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6637": {
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6638": {
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6639": {
      "fn": "Governance.submitVerification",
      "offset": [
        17555,
        17582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6640": {
      "fn": "Governance.submitVerification",
      "offset": [
        17593,
        17612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6642": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6643": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6644": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6645": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6647": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6649": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6652": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6653": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6656": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6657": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "ADD",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6660": {
      "fn": "Governance.submitVerification",
      "offset": [
        17615,
        17629
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6661": {
      "fn": "Governance.submitVerification",
      "offset": [
        17593,
        17612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6666": {
      "op": "SHL"
    },
    "6667": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6668": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "DIV",
      "path": "2"
    },
    "6669": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6672": {
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18202
      ],
      "op": "AND",
      "path": "2"
    },
    "6673": {
      "branch": 121,
      "fn": "Governance.submitVerification",
      "offset": [
        18186,
        18206
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6674": {
      "fn": "Governance.submitVerification",
      "offset": [
        18183,
        18388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8A"
    },
    "6677": {
      "branch": 121,
      "fn": "Governance.submitVerification",
      "offset": [
        18183,
        18388
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6678": {
      "fn": "Governance.submitVerification",
      "offset": [
        18226,
        18235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6680": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.submitVerification",
      "offset": [
        18245,
        18252
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6682": {
      "fn": "Governance.submitVerification",
      "offset": [
        18245,
        18259
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6683": {
      "fn": "Governance.submitVerification",
      "offset": [
        18241,
        18242
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.submitVerification",
      "offset": [
        18241,
        18259
      ],
      "op": "LT",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A88"
    },
    "6689": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6690": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18326
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 51
    },
    "6691": {
      "fn": "Governance.submitVerification",
      "offset": [
        18327,
        18328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6692": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6693": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6694": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6695": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "LT",
      "path": "2"
    },
    "6696": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A33"
    },
    "6699": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A33"
    },
    "6703": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "6706": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18319,
        18329
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6707": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6708": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6710": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "MUL",
      "path": "2"
    },
    "6711": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6713": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "ADD",
      "path": "2"
    },
    "6714": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "ADD",
      "path": "2"
    },
    "6715": {
      "fn": "Governance.submitVerification",
      "offset": [
        18319,
        18329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6716": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6718": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6719": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6721": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "ADD",
      "path": "2"
    },
    "6722": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4D"
    },
    "6725": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6726": {
      "op": "DUP2"
    },
    "6727": {
      "op": "MSTORE"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "op": "SWAP1"
    },
    "6732": {
      "op": "JUMP"
    },
    "6733": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6734": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6736": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6737": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6739": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6740": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6741": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "SUB",
      "path": "2"
    },
    "6742": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "SUB",
      "path": "2"
    },
    "6743": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6744": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6745": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6746": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6748": {
      "fn": "Governance.submitVerification",
      "offset": [
        18302,
        18330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6749": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6750": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6752": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6754": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "ADD",
      "path": "2"
    },
    "6755": {
      "fn": "Governance.submitVerification",
      "offset": [
        18292,
        18331
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6756": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18286
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6757": {
      "fn": "Governance.submitVerification",
      "offset": [
        18287,
        18288
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6758": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6759": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6760": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6761": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "LT",
      "path": "2"
    },
    "6762": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A75"
    },
    "6765": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6766": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A75"
    },
    "6769": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "6772": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18279,
        18289
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6773": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6774": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6776": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6777": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6778": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "MUL",
      "path": "2"
    },
    "6779": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6780": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6781": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6782": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "ADD",
      "path": "2"
    },
    "6783": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18289
      ],
      "op": "ADD",
      "path": "2"
    },
    "6784": {
      "fn": "Governance.submitVerification",
      "offset": [
        18279,
        18331
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6785": {
      "fn": "Governance.submitVerification",
      "offset": [
        18359,
        18362
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x1"
    },
    "6787": {
      "fn": "Governance.submitVerification",
      "offset": [
        18359,
        18362
      ],
      "op": "ADD",
      "path": "2"
    },
    "6788": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A18"
    },
    "6791": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6792": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6793": {
      "fn": "Governance.submitVerification",
      "offset": [
        18222,
        18378
      ],
      "op": "POP",
      "path": "2"
    },
    "6794": {
      "fn": "Governance.submitVerification",
      "offset": [
        18183,
        18388
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6795": {
      "fn": "Governance.submitVerification",
      "offset": [
        18397,
        18411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6797": {
      "fn": "Governance.submitVerification",
      "offset": [
        18441,
        18448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6798": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6800": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6801": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6803": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "ADD",
      "path": "2"
    },
    "6804": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A9D"
    },
    "6807": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6808": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6809": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3052"
    },
    "6812": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18424,
        18449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6813": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6814": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6816": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6817": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6819": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6820": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6821": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "SUB",
      "path": "2"
    },
    "6822": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "SUB",
      "path": "2"
    },
    "6823": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6824": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6825": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6826": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6828": {
      "fn": "Governance.submitVerification",
      "offset": [
        18424,
        18449
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6829": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6830": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6831": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6834": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "ADD",
      "path": "2"
    },
    "6835": {
      "fn": "Governance.submitVerification",
      "offset": [
        18414,
        18450
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6836": {
      "fn": "Governance.submitVerification",
      "offset": [
        18397,
        18450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6837": {
      "fn": "Governance.submitVerification",
      "offset": [
        18397,
        18450
      ],
      "op": "POP",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6840": {
      "fn": "Governance.submitVerification",
      "offset": [
        18498,
        18504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6841": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18494
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6844": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18494
      ],
      "op": "ADD",
      "path": "2"
    },
    "6845": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18494
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6846": {
      "branch": 122,
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18504
      ],
      "op": "EQ",
      "path": "2"
    },
    "6847": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC9"
    },
    "6850": {
      "branch": 122,
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6851": {
      "fn": "Governance.submitVerification",
      "offset": [
        18511,
        18512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6853": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACC"
    },
    "6856": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.submitVerification",
      "offset": [
        18507,
        18508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6860": {
      "fn": "Governance.submitVerification",
      "offset": [
        18483,
        18512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x1"
    },
    "6863": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6864": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6865": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "ADD",
      "path": "2"
    },
    "6866": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6867": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6869": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6870": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6871": {
      "op": "DUP12"
    },
    "6872": {
      "op": "DUP2"
    },
    "6873": {
      "op": "MSTORE"
    },
    "6874": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6880": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6881": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6882": {
      "fn": "Governance.submitVerification",
      "offset": [
        18558,
        18570
      ],
      "op": "AND",
      "path": "2"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6885": {
      "op": "DUP4"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "MSTORE"
    },
    "6888": {
      "op": "DUP2"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "DUP10"
    },
    "6891": {
      "op": "SWAP1"
    },
    "6892": {
      "op": "MSTORE"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6895": {
      "op": "DUP2"
    },
    "6896": {
      "op": "ADD"
    },
    "6897": {
      "op": "DUP6"
    },
    "6898": {
      "op": "SWAP1"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6902": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6903": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "AND",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6907": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6908": {
      "fn": "Governance.submitVerification",
      "offset": [
        18589,
        18603
      ],
      "op": "EQ",
      "path": "2"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6911": {
      "op": "DUP4"
    },
    "6912": {
      "op": "ADD"
    },
    "6913": {
      "op": "MSTORE"
    },
    "6914": {
      "fn": "Governance.submitVerification",
      "offset": [
        18461,
        18512
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6915": {
      "op": "POP"
    },
    "6916": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "6949": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6952": {
      "op": "ADD"
    },
    "6953": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6955": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "SUB",
      "path": "2"
    },
    "6959": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6960": {
      "fn": "Governance.submitVerification",
      "offset": [
        18528,
        18604
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6961": {
      "fn": "Governance.submitVerification",
      "offset": [
        18619,
        18630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.submitVerification",
      "offset": [
        18633,
        18634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6964": {
      "branch": 123,
      "fn": "Governance.submitVerification",
      "offset": [
        18619,
        18634
      ],
      "op": "SUB",
      "path": "2"
    },
    "6965": {
      "fn": "Governance.submitVerification",
      "offset": [
        18615,
        20881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E32"
    },
    "6968": {
      "branch": 123,
      "fn": "Governance.submitVerification",
      "offset": [
        18615,
        20881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6969": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6971": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6972": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "ADD",
      "path": "2"
    },
    "6973": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6974": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6976": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6977": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5C"
    },
    "6980": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18745
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6981": {
      "fn": "Governance.submitVerification",
      "offset": [
        18744,
        18745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6983": {
      "fn": "Governance.submitVerification",
      "offset": [
        18744,
        18745
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6988": {
      "op": "SHL"
    },
    "6989": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6990": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "DIV",
      "path": "2"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6997": {
      "op": "SHL"
    },
    "6998": {
      "op": "SUB"
    },
    "6999": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18743
      ],
      "op": "AND",
      "path": "2"
    },
    "7000": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33BE"
    },
    "7003": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18729,
        18745
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.submitVerification",
      "offset": [
        18729,
        18745
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7007": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7010": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7011": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7012": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "ADD",
      "path": "2"
    },
    "7013": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7016": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7017": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7026": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7031": {
      "op": "SHL"
    },
    "7032": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7033": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7034": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "DIV",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7038": {
      "fn": "Governance.submitVerification",
      "offset": [
        18818,
        18835
      ],
      "op": "AND",
      "path": "2"
    },
    "7039": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7040": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7041": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ADD",
      "path": "2"
    },
    "7042": {
      "op": "SWAP2"
    },
    "7043": {
      "op": "SWAP1"
    },
    "7044": {
      "op": "SWAP2"
    },
    "7045": {
      "op": "MSTORE"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7052": {
      "op": "SHL"
    },
    "7053": {
      "op": "SUB"
    },
    "7054": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18745
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7055": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18745
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18745
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7057": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18745
      ],
      "op": "AND",
      "path": "2"
    },
    "7058": {
      "fn": "Governance.submitVerification",
      "offset": [
        18713,
        18745
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7059": {
      "op": "POP"
    },
    "7060": {
      "fn": "Governance.submitVerification",
      "offset": [
        18759,
        18788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7062": {
      "fn": "Governance.submitVerification",
      "offset": [
        18759,
        18788
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7069": {
      "op": "SHL"
    },
    "7070": {
      "op": "SUB"
    },
    "7071": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7072": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7073": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "AND",
      "path": "2"
    },
    "7074": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7075": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18817
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7080": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18817
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7083": {
      "op": "ADD"
    },
    "7084": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7086": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7088": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7091": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "SUB",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7093": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7094": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "GAS",
      "path": "2"
    },
    "7095": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7097": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7098": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7099": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC8"
    },
    "7102": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7106": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7109": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7111": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7112": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7113": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "POP",
      "path": "2"
    },
    "7114": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "POP",
      "path": "2"
    },
    "7115": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "POP",
      "path": "2"
    },
    "7116": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "POP",
      "path": "2"
    },
    "7117": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7119": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7120": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7121": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7123": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "NOT",
      "path": "2"
    },
    "7124": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7126": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ADD",
      "path": "2"
    },
    "7128": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "AND",
      "path": "2"
    },
    "7129": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7130": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ADD",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7134": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7135": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "POP",
      "path": "2"
    },
    "7136": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7137": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "ADD",
      "path": "2"
    },
    "7138": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7139": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEC"
    },
    "7142": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7143": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7144": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E1"
    },
    "7147": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18799,
        18836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7148": {
      "fn": "Governance.submitVerification",
      "offset": [
        18799,
        18836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7149": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x2"
    },
    "7151": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7154": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7155": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "ADD",
      "path": "2"
    },
    "7156": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7157": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7159": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7160": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7161": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "ADD",
      "path": "2"
    },
    "7162": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7163": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7165": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7166": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7173": {
      "op": "SHL"
    },
    "7174": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7175": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7176": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7182": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.submitVerification",
      "offset": [
        18928,
        18940
      ],
      "op": "AND",
      "path": "2"
    },
    "7185": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7186": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7187": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "ADD",
      "path": "2"
    },
    "7188": {
      "op": "SWAP2"
    },
    "7189": {
      "op": "SWAP1"
    },
    "7190": {
      "op": "SWAP2"
    },
    "7191": {
      "op": "MSTORE"
    },
    "7192": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7195": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7196": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "DIV",
      "path": "2"
    },
    "7197": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7201": {
      "fn": "Governance.submitVerification",
      "offset": [
        18942,
        18958
      ],
      "op": "AND",
      "path": "2"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7204": {
      "op": "DUP3"
    },
    "7205": {
      "op": "ADD"
    },
    "7206": {
      "op": "MSTORE"
    },
    "7207": {
      "fn": "Governance.submitVerification",
      "offset": [
        18759,
        18837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7208": {
      "fn": "Governance.submitVerification",
      "offset": [
        18759,
        18837
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7209": {
      "op": "POP"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7216": {
      "op": "SHL"
    },
    "7217": {
      "op": "SUB"
    },
    "7218": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "AND",
      "path": "2"
    },
    "7219": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7220": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18927
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7225": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18927
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7228": {
      "op": "ADD"
    },
    "7229": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7231": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7233": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7234": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7235": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7236": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "SUB",
      "path": "2"
    },
    "7237": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7238": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7240": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7241": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7242": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7243": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7244": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C56"
    },
    "7249": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7250": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7252": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7253": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7254": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7255": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "POP",
      "path": "2"
    },
    "7256": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "GAS",
      "path": "2"
    },
    "7257": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "CALL",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7260": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7261": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6A"
    },
    "7264": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7265": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7266": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7268": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7269": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7270": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7271": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7273": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.submitVerification",
      "offset": [
        18906,
        18959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7275": {
      "op": "POP"
    },
    "7276": {
      "op": "POP"
    },
    "7277": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x2"
    },
    "7279": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7280": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7282": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7284": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "ADD",
      "path": "2"
    },
    "7285": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19014,
        19039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19014,
        19039
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7289": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7291": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7292": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7299": {
      "op": "SHL"
    },
    "7300": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7301": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7306": {
      "op": "SHL"
    },
    "7307": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7308": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "DIV",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7313": {
      "fn": "Governance.submitVerification",
      "offset": [
        18995,
        19012
      ],
      "op": "AND",
      "path": "2"
    },
    "7314": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7315": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7316": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "ADD",
      "path": "2"
    },
    "7317": {
      "op": "SWAP3"
    },
    "7318": {
      "op": "SWAP1"
    },
    "7319": {
      "op": "SWAP3"
    },
    "7320": {
      "op": "MSTORE"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7323": {
      "op": "DUP2"
    },
    "7324": {
      "op": "ADD"
    },
    "7325": {
      "op": "SWAP2"
    },
    "7326": {
      "op": "SWAP1"
    },
    "7327": {
      "op": "SWAP2"
    },
    "7328": {
      "op": "MSTORE"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7335": {
      "op": "SHL"
    },
    "7336": {
      "op": "SUB"
    },
    "7337": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7338": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7339": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "AND",
      "path": "2"
    },
    "7340": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18983
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7341": {
      "op": "POP"
    },
    "7342": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18994
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7347": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        18994
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7348": {
      "op": "POP"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7351": {
      "op": "ADD"
    },
    "7352": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7353": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7355": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7357": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7358": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7359": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7360": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "SUB",
      "path": "2"
    },
    "7361": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7362": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7364": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7366": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7367": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7368": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7369": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD2"
    },
    "7373": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7374": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7376": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7377": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7378": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7379": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "POP",
      "path": "2"
    },
    "7380": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "GAS",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "CALL",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE6"
    },
    "7388": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7389": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7392": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7394": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7395": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7397": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.submitVerification",
      "offset": [
        18973,
        19040
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "op": "POP"
    },
    "7401": {
      "op": "POP"
    },
    "7402": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19069
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0x4"
    },
    "7404": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19069
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7405": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19069
      ],
      "op": "ADD",
      "path": "2"
    },
    "7406": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19071
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19071
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7408": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7423": {
      "op": "NOT"
    },
    "7424": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19071
      ],
      "op": "AND",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19071
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.submitVerification",
      "offset": [
        19055,
        19071
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19070,
        19071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 57
    },
    "7431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7432": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7433": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7438": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7440": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1C"
    },
    "7446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19121,
        19135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.submitVerification",
      "offset": [
        19070,
        19071
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281C"
    },
    "7451": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19114,
        19135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7452": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7453": {
      "op": "POP"
    },
    "7454": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7456": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7457": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "ADD",
      "path": "2"
    },
    "7458": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7459": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7460": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7466": {
      "op": "NOT"
    },
    "7467": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "AND",
      "path": "2"
    },
    "7468": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7469": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7472": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7474": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7475": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "ADD",
      "path": "2"
    },
    "7476": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7477": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7478": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7479": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7481": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7482": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "ADD",
      "path": "2"
    },
    "7483": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7484": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7488": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7490": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "ADD",
      "path": "2"
    },
    "7491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7492": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "op": "NOT"
    },
    "7502": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "AND",
      "path": "2"
    },
    "7503": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.submitVerification",
      "offset": [
        19114,
        19135
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7507": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7508": {
      "op": "DUP2"
    },
    "7509": {
      "op": "SWAP1"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7516": {
      "op": "SHL"
    },
    "7517": {
      "op": "SUB"
    },
    "7518": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19239
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7519": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19239
      ],
      "op": "AND",
      "path": "2"
    },
    "7520": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7521": {
      "fn": "Governance.submitVerification",
      "offset": [
        19247,
        19252
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7522": {
      "fn": "Governance.submitVerification",
      "offset": [
        19247,
        19252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7523": {
      "op": "DUP4"
    },
    "7524": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7525": {
      "op": "DUP2"
    },
    "7526": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.submitVerification",
      "offset": [
        19247,
        19252
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7528": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19239
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7529": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "GAS",
      "path": "2"
    },
    "7530": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "CALL",
      "path": "2"
    },
    "7531": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7532": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7533": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7534": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7535": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7536": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7537": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7539": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7540": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "EQ",
      "path": "2"
    },
    "7541": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9A"
    },
    "7544": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7545": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7547": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7548": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7550": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "NOT",
      "path": "2"
    },
    "7553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7555": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7556": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "ADD",
      "path": "2"
    },
    "7557": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "AND",
      "path": "2"
    },
    "7558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "ADD",
      "path": "2"
    },
    "7560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7563": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7566": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7567": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7569": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7571": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7572": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "ADD",
      "path": "2"
    },
    "7573": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7574": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9F"
    },
    "7577": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7578": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7579": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7581": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7582": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7583": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.submitVerification",
      "offset": [
        19221,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7585": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7586": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7587": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7588": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19257
      ],
      "op": "POP",
      "path": "2"
    },
    "7589": {
      "branch": 124,
      "fn": "Governance.submitVerification",
      "offset": [
        19279,
        19283
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 58
    },
    "7590": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC1"
    },
    "7593": {
      "branch": 124,
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7594": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7596": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7603": {
      "op": "SHL"
    },
    "7604": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7605": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "ADD",
      "path": "2"
    },
    "7609": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "7612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33F2"
    },
    "7616": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19271,
        19308
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.submitVerification",
      "offset": [
        19271,
        19308
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7618": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x40"
    },
    "7620": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7621": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19380
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7622": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7623": {
      "fn": "Governance.submitVerification",
      "offset": [
        19393,
        19398
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7624": {
      "fn": "Governance.submitVerification",
      "offset": [
        19393,
        19398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7625": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7627": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7628": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7629": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7630": {
      "fn": "Governance.submitVerification",
      "offset": [
        19393,
        19398
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7631": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19380
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7632": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "GAS",
      "path": "2"
    },
    "7633": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "CALL",
      "path": "2"
    },
    "7634": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7635": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "POP",
      "path": "2"
    },
    "7636": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "POP",
      "path": "2"
    },
    "7637": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "POP",
      "path": "2"
    },
    "7638": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7639": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7640": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7642": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7643": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "EQ",
      "path": "2"
    },
    "7644": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E01"
    },
    "7647": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7648": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7650": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7652": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "POP",
      "path": "2"
    },
    "7653": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7655": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "NOT",
      "path": "2"
    },
    "7656": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7658": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7659": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "ADD",
      "path": "2"
    },
    "7660": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "AND",
      "path": "2"
    },
    "7661": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7662": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "ADD",
      "path": "2"
    },
    "7663": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7665": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7666": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7668": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7669": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7670": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7672": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7674": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7675": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "ADD",
      "path": "2"
    },
    "7676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7677": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E06"
    },
    "7680": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7681": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7682": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7684": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7685": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "POP",
      "path": "2"
    },
    "7686": {
      "fn": "Governance.submitVerification",
      "offset": [
        19370,
        19403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7687": {
      "op": "POP"
    },
    "7688": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19403
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7690": {
      "op": "POP"
    },
    "7691": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7692": {
      "op": "POP"
    },
    "7693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19403
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 60,
      "value": "0x1E29"
    },
    "7697": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7698": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7700": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7707": {
      "op": "SHL"
    },
    "7708": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7709": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7710": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7712": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "ADD",
      "path": "2"
    },
    "7713": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "7716": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7717": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33F2"
    },
    "7720": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19417,
        19454
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19417,
        19454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7722": {
      "fn": "Governance.submitVerification",
      "offset": [
        18635,
        19466
      ],
      "op": "POP",
      "path": "2"
    },
    "7723": {
      "fn": "Governance.submitVerification",
      "offset": [
        18635,
        19466
      ],
      "op": "POP",
      "path": "2"
    },
    "7724": {
      "fn": "Governance.submitVerification",
      "offset": [
        18635,
        19466
      ],
      "op": "POP",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.submitVerification",
      "offset": [
        18635,
        19466
      ],
      "op": "POP",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.submitVerification",
      "offset": [
        18615,
        20881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x800"
    },
    "7729": {
      "fn": "Governance.submitVerification",
      "offset": [
        18615,
        20881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7730": {
      "fn": "Governance.submitVerification",
      "offset": [
        18615,
        20881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19648,
        19654
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7732": {
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19634
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7733": {
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19646
      ],
      "op": "ADD",
      "path": "2"
    },
    "7736": {
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19646
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7737": {
      "branch": 125,
      "fn": "Governance.submitVerification",
      "offset": [
        19628,
        19654
      ],
      "op": "SUB",
      "path": "2"
    },
    "7738": {
      "fn": "Governance.submitVerification",
      "offset": [
        19625,
        20871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA9"
    },
    "7741": {
      "branch": 125,
      "fn": "Governance.submitVerification",
      "offset": [
        19625,
        20871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7744": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "ADD",
      "path": "2"
    },
    "7746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19686
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7749": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7750": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E61"
    },
    "7753": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7754": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19704,
        19705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7761": {
      "op": "SHL"
    },
    "7762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7763": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "DIV",
      "path": "2"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7770": {
      "op": "SHL"
    },
    "7771": {
      "op": "SUB"
    },
    "7772": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19703
      ],
      "op": "AND",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33BE"
    },
    "7776": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19689,
        19705
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19689,
        19705
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7780": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7781": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7784": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7785": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "ADD",
      "path": "2"
    },
    "7786": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7790": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7797": {
      "op": "SHL"
    },
    "7798": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7799": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7804": {
      "op": "SHL"
    },
    "7805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7806": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7807": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "DIV",
      "path": "2"
    },
    "7808": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7811": {
      "fn": "Governance.submitVerification",
      "offset": [
        19780,
        19796
      ],
      "op": "AND",
      "path": "2"
    },
    "7812": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7813": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7814": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ADD",
      "path": "2"
    },
    "7815": {
      "op": "SWAP2"
    },
    "7816": {
      "op": "SWAP1"
    },
    "7817": {
      "op": "SWAP2"
    },
    "7818": {
      "op": "MSTORE"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7825": {
      "op": "SHL"
    },
    "7826": {
      "op": "SUB"
    },
    "7827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19705
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7828": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7829": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19705
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19705
      ],
      "op": "AND",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19705
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7832": {
      "op": "POP"
    },
    "7833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19723,
        19750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19723,
        19750
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7842": {
      "op": "SHL"
    },
    "7843": {
      "op": "SUB"
    },
    "7844": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7845": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "AND",
      "path": "2"
    },
    "7847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19779
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19779
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "SUB",
      "path": "2"
    },
    "7865": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7866": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7867": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "GAS",
      "path": "2"
    },
    "7868": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7869": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7870": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7871": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ECD"
    },
    "7875": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7876": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7877": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7879": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7881": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7882": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7884": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7885": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7886": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "POP",
      "path": "2"
    },
    "7887": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "POP",
      "path": "2"
    },
    "7888": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "POP",
      "path": "2"
    },
    "7889": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "POP",
      "path": "2"
    },
    "7890": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7892": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7893": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7894": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7896": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "NOT",
      "path": "2"
    },
    "7897": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7899": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ADD",
      "path": "2"
    },
    "7901": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "AND",
      "path": "2"
    },
    "7902": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7903": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ADD",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7908": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "POP",
      "path": "2"
    },
    "7909": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7910": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "ADD",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7912": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF1"
    },
    "7915": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7916": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7917": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32E1"
    },
    "7920": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19761,
        19797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7921": {
      "fn": "Governance.submitVerification",
      "offset": [
        19761,
        19797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7922": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19827
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x2"
    },
    "7924": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19827
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7925": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7927": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7929": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "ADD",
      "path": "2"
    },
    "7930": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7931": {
      "fn": "Governance.submitVerification",
      "offset": [
        19857,
        19882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7933": {
      "fn": "Governance.submitVerification",
      "offset": [
        19857,
        19882
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7936": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7937": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7944": {
      "op": "SHL"
    },
    "7945": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7946": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7951": {
      "op": "SHL"
    },
    "7952": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7953": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7954": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "DIV",
      "path": "2"
    },
    "7955": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7958": {
      "fn": "Governance.submitVerification",
      "offset": [
        19839,
        19855
      ],
      "op": "AND",
      "path": "2"
    },
    "7959": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7961": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "ADD",
      "path": "2"
    },
    "7962": {
      "op": "SWAP3"
    },
    "7963": {
      "op": "SWAP1"
    },
    "7964": {
      "op": "SWAP3"
    },
    "7965": {
      "op": "MSTORE"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7968": {
      "op": "DUP2"
    },
    "7969": {
      "op": "ADD"
    },
    "7970": {
      "op": "SWAP2"
    },
    "7971": {
      "op": "SWAP1"
    },
    "7972": {
      "op": "SWAP2"
    },
    "7973": {
      "op": "MSTORE"
    },
    "7974": {
      "fn": "Governance.submitVerification",
      "offset": [
        19723,
        19798
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7975": {
      "fn": "Governance.submitVerification",
      "offset": [
        19723,
        19798
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7983": {
      "op": "SHL"
    },
    "7984": {
      "op": "SUB"
    },
    "7985": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19827
      ],
      "op": "AND",
      "path": "2"
    },
    "7986": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7987": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19838
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7992": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7995": {
      "op": "ADD"
    },
    "7996": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7998": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8000": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8001": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "SUB",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8007": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8008": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8011": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8012": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8013": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F55"
    },
    "8016": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8017": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8019": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "POP",
      "path": "2"
    },
    "8023": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "GAS",
      "path": "2"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "CALL",
      "path": "2"
    },
    "8025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8026": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8027": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8028": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F69"
    },
    "8031": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8033": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8036": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8037": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8038": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19817,
        19883
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8042": {
      "op": "POP"
    },
    "8043": {
      "op": "POP"
    },
    "8044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x2"
    },
    "8046": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19931,
        19956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19931,
        19956
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8052": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8053": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8060": {
      "op": "SHL"
    },
    "8061": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8062": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8063": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8065": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8066": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "ADD",
      "path": "2"
    },
    "8067": {
      "op": "DUP15"
    },
    "8068": {
      "op": "SWAP1"
    },
    "8069": {
      "op": "MSTORE"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8072": {
      "op": "DUP2"
    },
    "8073": {
      "op": "ADD"
    },
    "8074": {
      "op": "SWAP2"
    },
    "8075": {
      "op": "SWAP1"
    },
    "8076": {
      "op": "SWAP2"
    },
    "8077": {
      "op": "MSTORE"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8084": {
      "op": "SHL"
    },
    "8085": {
      "op": "SUB"
    },
    "8086": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "AND",
      "path": "2"
    },
    "8089": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19911
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8090": {
      "op": "POP"
    },
    "8091": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19922
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8097": {
      "op": "POP"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8100": {
      "op": "ADD"
    },
    "8101": {
      "fn": "Governance.submitVerification",
      "offset": [
        19901,
        19957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB8"
    },
    "8104": {
      "op": "JUMP"
    },
    "8105": {
      "fn": "Governance.submitVerification",
      "offset": [
        19625,
        20871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8108": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8109": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "ADD",
      "path": "2"
    },
    "8110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20570,
        20583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 63
    },
    "8114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8115": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8116": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8118": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8120": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8121": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8124": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8129": {
      "op": "SHL"
    },
    "8130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "DIV",
      "path": "2"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8139": {
      "op": "SHL"
    },
    "8140": {
      "op": "SUB"
    },
    "8141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "AND",
      "path": "2"
    },
    "8142": {
      "fn": "Governance.submitVerification",
      "offset": [
        20586,
        20600
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD9"
    },
    "8147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20625,
        20639
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8148": {
      "fn": "Governance.submitVerification",
      "offset": [
        20570,
        20583
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8149": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281C"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20618,
        20639
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8153": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8154": {
      "op": "POP"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8157": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "ADD",
      "path": "2"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8161": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8167": {
      "op": "NOT"
    },
    "8168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "AND",
      "path": "2"
    },
    "8169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8170": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8173": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8175": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8176": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "ADD",
      "path": "2"
    },
    "8177": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8179": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8180": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8182": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8183": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "ADD",
      "path": "2"
    },
    "8184": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8185": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8186": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8187": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8190": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8191": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "ADD",
      "path": "2"
    },
    "8192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8200": {
      "op": "SHL"
    },
    "8201": {
      "op": "SUB"
    },
    "8202": {
      "op": "NOT"
    },
    "8203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "AND",
      "path": "2"
    },
    "8204": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8205": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8206": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8207": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2020"
    },
    "8210": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8212": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8219": {
      "op": "SHL"
    },
    "8220": {
      "op": "SUB"
    },
    "8221": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "8222": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8223": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8224": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8231": {
      "op": "SHL"
    },
    "8232": {
      "op": "SUB"
    },
    "8233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20702
      ],
      "op": "AND",
      "path": "2"
    },
    "8234": {
      "fn": "Governance.submitVerification",
      "offset": [
        20710,
        20715
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8235": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8238": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8240": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "SUB",
      "path": "2"
    },
    "8246": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8247": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8248": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8249": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "GAS",
      "path": "2"
    },
    "8250": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "CALL",
      "path": "2"
    },
    "8251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8252": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8253": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8254": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8255": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8256": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8260": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "EQ",
      "path": "2"
    },
    "8261": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206A"
    },
    "8264": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8265": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8267": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8268": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8269": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8272": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "NOT",
      "path": "2"
    },
    "8273": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8275": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "ADD",
      "path": "2"
    },
    "8277": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "AND",
      "path": "2"
    },
    "8278": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8279": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "ADD",
      "path": "2"
    },
    "8280": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8282": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8283": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8289": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8292": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "ADD",
      "path": "2"
    },
    "8293": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8294": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206F"
    },
    "8297": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8298": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8299": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8301": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8304": {
      "fn": "Governance.submitVerification",
      "offset": [
        20690,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8305": {
      "fn": "Governance.submitVerification",
      "offset": [
        20657,
        20720
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        20657,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8307": {
      "fn": "Governance.submitVerification",
      "offset": [
        20657,
        20720
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8308": {
      "fn": "Governance.submitVerification",
      "offset": [
        20657,
        20720
      ],
      "op": "POP",
      "path": "2"
    },
    "8309": {
      "branch": 126,
      "fn": "Governance.submitVerification",
      "offset": [
        20796,
        20800
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 64
    },
    "8310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2091"
    },
    "8313": {
      "branch": 126,
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8323": {
      "op": "SHL"
    },
    "8324": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8325": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8326": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8328": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "ADD",
      "path": "2"
    },
    "8329": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "8332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33F2"
    },
    "8336": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20788,
        20825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8337": {
      "fn": "Governance.submitVerification",
      "offset": [
        20788,
        20825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.submitVerification",
      "offset": [
        20464,
        20871
      ],
      "op": "POP",
      "path": "2"
    },
    "8339": {
      "fn": "Governance.submitVerification",
      "offset": [
        20464,
        20871
      ],
      "op": "POP",
      "path": "2"
    },
    "8340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20464,
        20871
      ],
      "op": "POP",
      "path": "2"
    },
    "8341": {
      "fn": "Governance.submitVerification",
      "offset": [
        17363,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8342": {
      "fn": "Governance.submitVerification",
      "offset": [
        17363,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8343": {
      "fn": "Governance.submitVerification",
      "offset": [
        17363,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8344": {
      "fn": "Governance.submitVerification",
      "offset": [
        17363,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8345": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8346": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8347": {
      "fn": "Governance.submitVerification",
      "offset": [
        17267,
        20887
      ],
      "op": "POP",
      "path": "2"
    },
    "8348": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        17267,
        20887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8350": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8352": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8359": {
      "op": "SHL"
    },
    "8360": {
      "op": "SUB"
    },
    "8361": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "8362": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "8363": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "8364": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20C7"
    },
    "8367": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8368": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8370": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8379": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8380": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8382": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "8383": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E6"
    },
    "8386": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8387": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30B9"
    },
    "8390": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8391": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8398": {
      "op": "SHL"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 65
    },
    "8401": {
      "branch": 133,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "12"
    },
    "8402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x212C"
    },
    "8405": {
      "branch": 133,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8415": {
      "op": "SHL"
    },
    "8416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "12"
    },
    "8424": {
      "op": "MSTORE"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8429": {
      "op": "DUP3"
    },
    "8430": {
      "op": "ADD"
    },
    "8431": {
      "op": "MSTORE"
    },
    "8432": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8467": {
      "op": "DUP3"
    },
    "8468": {
      "op": "ADD"
    },
    "8469": {
      "op": "MSTORE"
    },
    "8470": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8479": {
      "op": "SHL"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8482": {
      "op": "DUP3"
    },
    "8483": {
      "op": "ADD"
    },
    "8484": {
      "op": "MSTORE"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8487": {
      "op": "ADD"
    },
    "8488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E6"
    },
    "8491": {
      "op": "JUMP"
    },
    "8492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8493": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 66,
      "value": "0x2135"
    },
    "8496": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2608"
    },
    "8500": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "12"
    },
    "8503": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8504": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8505": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5950,
        5954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8507": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5966,
        5993
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8508": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5996,
        6035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2154"
    },
    "8511": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6020,
        6034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8513": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8514": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "8516": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8517": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8518": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8523": {
      "op": "SHL"
    },
    "8524": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8525": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8526": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "8527": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8528": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "8529": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "8530": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8531": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8532": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5996,
        6035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8533": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5966,
        6035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8534": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5966,
        6035
      ],
      "op": "POP",
      "path": "2"
    },
    "8535": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6045,
        6063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x215E"
    },
    "8538": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6045,
        6063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C8"
    },
    "8541": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6045,
        6063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8542": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6045,
        6063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8543": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6073,
        6087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8545": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6073,
        6087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8546": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8547": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6203,
        6222
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8548": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6199,
        6200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6199,
        6222
      ],
      "op": "LT",
      "path": "2"
    },
    "8550": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8551": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21BB"
    },
    "8554": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8555": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6282,
        6297
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8556": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6249
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8557": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8560": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6279
      ],
      "op": "ADD",
      "path": "2"
    },
    "8561": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8562": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6297
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8568": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6297
      ],
      "op": "AND",
      "path": "2"
    },
    "8569": {
      "branch": 127,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6297
      ],
      "op": "LT",
      "path": "2"
    },
    "8570": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8571": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8572": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2190"
    },
    "8575": {
      "branch": 127,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8576": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "POP",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6317,
        6323
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8578": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6307
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8579": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8581": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6313
      ],
      "op": "ADD",
      "path": "2"
    },
    "8582": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6313
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8583": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6323
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8589": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6323
      ],
      "op": "AND",
      "path": "2"
    },
    "8590": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6323
      ],
      "op": "EQ",
      "path": "2"
    },
    "8591": {
      "branch": 128,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6301,
        6323
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8592": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8593": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8594": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8595": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A5"
    },
    "8598": {
      "branch": 128,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8599": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "POP",
      "path": "2"
    },
    "8600": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6346,
        6352
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8601": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6333
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8602": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8605": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6343
      ],
      "op": "ADD",
      "path": "2"
    },
    "8606": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6343
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8607": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8610": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6352
      ],
      "op": "AND",
      "path": "2"
    },
    "8611": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6352
      ],
      "op": "EQ",
      "path": "2"
    },
    "8612": {
      "branch": 129,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6327,
        6352
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8613": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6243,
        6352
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8614": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6239,
        6436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8615": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6239,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B6"
    },
    "8618": {
      "branch": 129,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6239,
        6436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8619": {
      "op": "POP"
    },
    "8620": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6417,
        6421
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x1"
    },
    "8622": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6417,
        6421
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8623": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8624": {
      "op": "POP"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "op": "POP"
    },
    "8627": {
      "op": "POP"
    },
    "8628": {
      "op": "POP"
    },
    "8629": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8630": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6239,
        6436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8631": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2162"
    },
    "8634": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8635": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6181,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8636": {
      "op": "POP"
    },
    "8637": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6462,
        6467
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x0"
    },
    "8639": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6462,
        6467
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8640": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5875,
        6474
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8641": {
      "op": "POP"
    },
    "8642": {
      "op": "POP"
    },
    "8643": {
      "op": "POP"
    },
    "8644": {
      "op": "POP"
    },
    "8645": {
      "op": "POP"
    },
    "8646": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5875,
        6474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8647": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8648": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8268,
        8277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8650": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8651": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8283,
        8292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8653": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8283,
        8299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8654": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8281,
        8299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8655": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8281,
        8299
      ],
      "op": "LT",
      "path": "2"
    },
    "8656": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8657": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2360"
    },
    "8660": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8399,
        8408
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8662": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8664": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8665": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8667": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "ADD",
      "path": "2"
    },
    "8668": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E5"
    },
    "8671": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8672": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8673": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3420"
    },
    "8676": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8382,
        8409
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8677": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8678": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8680": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8681": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8683": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8684": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8685": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "SUB",
      "path": "2"
    },
    "8686": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "SUB",
      "path": "2"
    },
    "8687": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8688": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8689": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8690": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8692": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8382,
        8409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8693": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8694": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8695": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8696": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8698": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "ADD",
      "path": "2"
    },
    "8699": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8372,
        8410
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8700": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8354
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8702": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8355,
        8356
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8703": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8704": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8705": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "LT",
      "path": "2"
    },
    "8707": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220E"
    },
    "8710": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8711": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220E"
    },
    "8714": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "8717": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8345,
        8357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8718": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8719": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8720": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8722": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8723": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8725": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8727": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8728": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8729": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8731": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "MUL",
      "path": "2"
    },
    "8732": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8357
      ],
      "op": "ADD",
      "path": "2"
    },
    "8733": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8735": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8345,
        8366
      ],
      "op": "ADD",
      "path": "2"
    },
    "8736": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8738": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8739": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8741": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "ADD",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222F"
    },
    "8745": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8747": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x343C"
    },
    "8750": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8328,
        8367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8751": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8752": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8754": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8755": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8757": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8759": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "SUB",
      "path": "2"
    },
    "8760": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "SUB",
      "path": "2"
    },
    "8761": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8762": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8763": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8764": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8766": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8328,
        8367
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8767": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8768": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8769": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8770": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8772": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "ADD",
      "path": "2"
    },
    "8773": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8368
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8774": {
      "branch": 130,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8318,
        8410
      ],
      "op": "SUB",
      "path": "2"
    },
    "8775": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8315,
        9363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2358"
    },
    "8778": {
      "branch": 130,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8315,
        9363
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8779": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8493,
        8520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8781": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8783": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8533,
        8534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8784": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8785": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8786": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8787": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "LT",
      "path": "2"
    },
    "8788": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225F"
    },
    "8791": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8792": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x225F"
    },
    "8795": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "8798": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8523,
        8535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8799": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8800": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8801": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8803": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8804": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8806": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8808": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8809": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8810": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8812": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "MUL",
      "path": "2"
    },
    "8813": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8523,
        8535
      ],
      "op": "ADD",
      "path": "2"
    },
    "8814": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8493,
        8535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8815": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8493,
        8535
      ],
      "op": "POP",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8553,
        8587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8818": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8820": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8617,
        8618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8822": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8824": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8616
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8825": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8616
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8827": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8616
      ],
      "op": "POP",
      "path": "2"
    },
    "8828": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2285"
    },
    "8831": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8832": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34AE"
    },
    "8836": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8600,
        8618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8837": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8600,
        8618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8838": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8841": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "LT",
      "path": "2"
    },
    "8842": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2295"
    },
    "8845": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8846": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2295"
    },
    "8849": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "8852": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8590,
        8619
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8853": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8854": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8855": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8857": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8858": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8860": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8862": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8864": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8866": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "MUL",
      "path": "2"
    },
    "8867": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8590,
        8619
      ],
      "op": "ADD",
      "path": "2"
    },
    "8868": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8553,
        8619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8869": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8553,
        8619
      ],
      "op": "POP",
      "path": "2"
    },
    "8870": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8748,
        8765
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 69
    },
    "8871": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8735,
        8765
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8872": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8735,
        8765
      ],
      "op": "POP",
      "path": "2"
    },
    "8873": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x4"
    },
    "8875": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8817,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8877": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8879": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8816
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8880": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8816
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8881": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8816
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8816
      ],
      "op": "POP",
      "path": "2"
    },
    "8883": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22BC"
    },
    "8886": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8818
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8887": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8888": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34AE"
    },
    "8891": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8892": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8895": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8896": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "LT",
      "path": "2"
    },
    "8897": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22CC"
    },
    "8900": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8901": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22CC"
    },
    "8904": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "8907": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8790,
        8819
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8908": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8909": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8910": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8912": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8913": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8915": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8917": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8918": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8919": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8921": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "MUL",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "ADD",
      "path": "2"
    },
    "8923": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8790,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8925": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8927": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8928": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "ADD",
      "path": "2"
    },
    "8929": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8931": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "8934": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8935": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8936": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281C"
    },
    "8939": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8783,
        8819
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8944": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "ADD",
      "path": "2"
    },
    "8945": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8946": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8951": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8953": {
      "op": "SHL"
    },
    "8954": {
      "op": "SUB"
    },
    "8955": {
      "op": "NOT"
    },
    "8956": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "AND",
      "path": "2"
    },
    "8957": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8958": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8959": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9305
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x4"
    },
    "8961": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8962": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8963": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230E"
    },
    "8966": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8967": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8969": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8783,
        8819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8970": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34AE"
    },
    "8973": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9306,
        9324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8974": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9306,
        9324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8975": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8976": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8977": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8978": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "LT",
      "path": "2"
    },
    "8979": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231E"
    },
    "8982": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8983": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231E"
    },
    "8986": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "8989": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9296,
        9325
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8990": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8991": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8992": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8994": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8995": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8997": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8999": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9000": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9001": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9003": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "MUL",
      "path": "2"
    },
    "9004": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "ADD",
      "path": "2"
    },
    "9005": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9296,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9007": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9009": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9010": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "ADD",
      "path": "2"
    },
    "9011": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9013": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233E"
    },
    "9016": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9017": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9018": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281C"
    },
    "9021": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9289,
        9325
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9023": {
      "op": "POP"
    },
    "9024": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9026": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "ADD",
      "path": "2"
    },
    "9027": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9028": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9035": {
      "op": "SHL"
    },
    "9036": {
      "op": "SUB"
    },
    "9037": {
      "op": "NOT"
    },
    "9038": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "AND",
      "path": "2"
    },
    "9039": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9040": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9289,
        9325
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9041": {
      "op": "POP"
    },
    "9042": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9343,
        9348
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x2360"
    },
    "9045": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9343,
        9348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9046": {
      "op": "POP"
    },
    "9047": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9343,
        9348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9048": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8315,
        9363
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9049": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9386,
        9389
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x1"
    },
    "9051": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9386,
        9389
      ],
      "op": "ADD",
      "path": "2"
    },
    "9052": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21CA"
    },
    "9055": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9056": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9057": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8264,
        9401
      ],
      "op": "POP",
      "path": "2"
    },
    "9058": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8186,
        9407
      ],
      "op": "POP",
      "path": "2"
    },
    "9059": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        8186,
        9407
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9060": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9061": {
      "fn": "Governance.getVotes",
      "offset": [
        4525,
        4540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9063": {
      "fn": "Governance.getVotes",
      "offset": [
        4573,
        4587
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x8"
    },
    "9065": {
      "fn": "Governance.getVotes",
      "offset": [
        4573,
        4587
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9066": {
      "fn": "Governance.getVotes",
      "offset": [
        4560,
        4570
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9067": {
      "branch": 131,
      "fn": "Governance.getVotes",
      "offset": [
        4560,
        4587
      ],
      "op": "LT",
      "path": "2"
    },
    "9068": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23AA"
    },
    "9071": {
      "branch": 131,
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9072": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9074": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9081": {
      "op": "SHL"
    },
    "9082": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9083": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9086": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9088": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "ADD",
      "path": "2"
    },
    "9090": {
      "op": "MSTORE"
    },
    "9091": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9095": {
      "op": "DUP3"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "op": "MSTORE"
    },
    "9098": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9117": {
      "op": "SHL"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9120": {
      "op": "DUP3"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "MSTORE"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9125": {
      "op": "ADD"
    },
    "9126": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E6"
    },
    "9129": {
      "op": "JUMP"
    },
    "9130": {
      "fn": "Governance.getVotes",
      "offset": [
        4552,
        4608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9131": {
      "fn": "Governance.getVotes",
      "offset": [
        4618,
        4643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9133": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9134": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9135": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9136": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9138": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9140": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9141": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9143": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9144": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4680
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9145": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9147": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4696
      ],
      "op": "ADD",
      "path": "2"
    },
    "9148": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4696
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9149": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4696
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9152": {
      "fn": "Governance.getVotes",
      "offset": [
        4659,
        4696
      ],
      "op": "AND",
      "path": "2"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9159": {
      "op": "SHL"
    },
    "9160": {
      "op": "SUB"
    },
    "9161": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9162": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "GT",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D7"
    },
    "9167": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9168": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D7"
    },
    "9171": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x291B"
    },
    "9174": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4646,
        4697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9175": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9176": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9178": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9179": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9180": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9181": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9182": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9183": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9184": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9186": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "MUL",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9189": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ADD",
      "path": "2"
    },
    "9190": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9191": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ADD",
      "path": "2"
    },
    "9192": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9194": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9195": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9196": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9197": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2400"
    },
    "9200": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9201": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9202": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9204": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ADD",
      "path": "2"
    },
    "9205": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9207": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9208": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "MUL",
      "path": "2"
    },
    "9209": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9210": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "9211": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9212": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "9213": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "ADD",
      "path": "2"
    },
    "9214": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9215": {
      "op": "POP"
    },
    "9216": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9217": {
      "fn": "Governance.getVotes",
      "offset": [
        4646,
        4697
      ],
      "op": "POP",
      "path": "2"
    },
    "9218": {
      "fn": "Governance.getVotes",
      "offset": [
        4618,
        4697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.getVotes",
      "offset": [
        4618,
        4697
      ],
      "op": "POP",
      "path": "2"
    },
    "9220": {
      "fn": "Governance.getVotes",
      "offset": [
        4711,
        4720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9222": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9223": {
      "fn": "Governance.getVotes",
      "offset": [
        4729,
        4738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9224": {
      "fn": "Governance.getVotes",
      "offset": [
        4729,
        4745
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9225": {
      "fn": "Governance.getVotes",
      "offset": [
        4726,
        4727
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9226": {
      "fn": "Governance.getVotes",
      "offset": [
        4726,
        4745
      ],
      "op": "LT",
      "path": "2"
    },
    "9227": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9228": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2482"
    },
    "9231": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9232": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x0"
    },
    "9234": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9235": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9236": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9237": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9239": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9241": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9242": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9244": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9245": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4801
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9246": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9248": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4807
      ],
      "op": "ADD",
      "path": "2"
    },
    "9249": {
      "fn": "Governance.getVotes",
      "offset": [
        4808,
        4809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9250": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "9252": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9253": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "LT",
      "path": "2"
    },
    "9254": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2431"
    },
    "9257": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9258": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2431"
    },
    "9261": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "9264": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4780,
        4810
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9265": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9266": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "9268": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9270": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9271": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "DIV",
      "path": "2"
    },
    "9272": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "ADD",
      "path": "2"
    },
    "9273": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9274": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9275": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "MOD",
      "path": "2"
    },
    "9276": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9278": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "MUL",
      "path": "2"
    },
    "9279": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9280": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9281": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9282": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9285": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "EXP",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9287": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "DIV",
      "path": "2"
    },
    "9288": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9291": {
      "fn": "Governance.getVotes",
      "offset": [
        4780,
        4810
      ],
      "op": "AND",
      "path": "2"
    },
    "9292": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4774
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9293": {
      "fn": "Governance.getVotes",
      "offset": [
        4775,
        4776
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9294": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9295": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9296": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9297": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "LT",
      "path": "2"
    },
    "9298": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245D"
    },
    "9301": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9302": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245D"
    },
    "9305": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "9308": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4765,
        4777
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9313": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9314": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4810
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9315": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4810
      ],
      "op": "AND",
      "path": "2"
    },
    "9316": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9318": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9319": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "MUL",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9322": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9323": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9324": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "ADD",
      "path": "2"
    },
    "9325": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4777
      ],
      "op": "ADD",
      "path": "2"
    },
    "9328": {
      "fn": "Governance.getVotes",
      "offset": [
        4765,
        4810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9329": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 76
    },
    "9330": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247A"
    },
    "9333": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9334": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32C8"
    },
    "9337": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4747,
        4750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9338": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9339": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9340": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "POP",
      "path": "2"
    },
    "9341": {
      "fn": "Governance.getVotes",
      "offset": [
        4747,
        4750
      ],
      "op": "POP",
      "path": "2"
    },
    "9342": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2406"
    },
    "9345": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9346": {
      "fn": "Governance.getVotes",
      "offset": [
        4707,
        4821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9347": {
      "op": "POP"
    },
    "9348": {
      "fn": "Governance.getVotes",
      "offset": [
        4837,
        4846
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 77
    },
    "9349": {
      "fn": "Governance.getVotes",
      "offset": [
        4464,
        4853
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9350": {
      "op": "POP"
    },
    "9351": {
      "op": "POP"
    },
    "9352": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4464,
        4853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9353": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9354": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9356": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9357": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9358": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x1"
    },
    "9360": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9361": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "ADD",
      "path": "2"
    },
    "9362": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9363": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9364": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9365": {
      "fn": "Governance._createTaskType",
      "offset": [
        11888,
        11911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9367": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9368": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9369": {
      "fn": "Governance._createTaskType",
      "offset": [
        11940,
        11956
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9370": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9371": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9372": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11923
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9373": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9374": {
      "fn": "Governance._createTaskType",
      "offset": [
        11914,
        11930
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9375": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9376": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "LT",
      "path": "2"
    },
    "9377": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24AC"
    },
    "9380": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9381": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24AC"
    },
    "9384": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "9387": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        11997,
        12023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9388": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9389": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9391": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9392": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9393": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9394": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9396": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9397": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9398": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9399": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9401": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9402": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9403": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "MUL",
      "path": "2"
    },
    "9404": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "ADD",
      "path": "2"
    },
    "9405": {
      "fn": "Governance._createTaskType",
      "offset": [
        11997,
        12023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9406": {
      "op": "POP"
    },
    "9407": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12057
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x1"
    },
    "9409": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9410": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12057
      ],
      "op": "ADD",
      "path": "2"
    },
    "9411": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24CD"
    },
    "9414": {
      "fn": "Governance._createTaskType",
      "offset": [
        12059,
        12068
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9415": {
      "fn": "Governance._createTaskType",
      "offset": [
        12059,
        12068
      ],
      "op": "DUP13",
      "path": "2"
    },
    "9416": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9417": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32FE"
    },
    "9420": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        12037,
        12068
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9421": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9422": {
      "fn": "Governance._createTaskType",
      "offset": [
        12037,
        12068
      ],
      "op": "POP",
      "path": "2"
    },
    "9423": {
      "fn": "Governance._createTaskType",
      "offset": [
        12103,
        12108
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0x0"
    },
    "9425": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9426": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9428": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12100
      ],
      "op": "ADD",
      "path": "2"
    },
    "9429": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9431": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9434": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "EXP",
      "path": "2"
    },
    "9435": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9436": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9437": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9438": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9440": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "MUL",
      "path": "2"
    },
    "9441": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "NOT",
      "path": "2"
    },
    "9442": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "AND",
      "path": "2"
    },
    "9443": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9444": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9445": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9446": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9447": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "MUL",
      "path": "2"
    },
    "9448": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "OR",
      "path": "2"
    },
    "9449": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9450": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9451": {
      "fn": "Governance._createTaskType",
      "offset": [
        12082,
        12108
      ],
      "op": "POP",
      "path": "2"
    },
    "9452": {
      "fn": "Governance._createTaskType",
      "offset": [
        12147,
        12158
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 81
    },
    "9453": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9454": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9456": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12144
      ],
      "op": "ADD",
      "path": "2"
    },
    "9457": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9459": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9462": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "EXP",
      "path": "2"
    },
    "9463": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9464": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9465": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9466": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9472": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "MUL",
      "path": "2"
    },
    "9473": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "NOT",
      "path": "2"
    },
    "9474": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "AND",
      "path": "2"
    },
    "9475": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9476": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9477": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9483": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "AND",
      "path": "2"
    },
    "9484": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "MUL",
      "path": "2"
    },
    "9485": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "OR",
      "path": "2"
    },
    "9486": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9487": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9488": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12158
      ],
      "op": "POP",
      "path": "2"
    },
    "9489": {
      "fn": "Governance._createTaskType",
      "offset": [
        12202,
        12218
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 82
    },
    "9490": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12183
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9491": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12199
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9493": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12199
      ],
      "op": "ADD",
      "path": "2"
    },
    "9494": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12199
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "9496": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9499": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "EXP",
      "path": "2"
    },
    "9500": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9501": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9502": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9503": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9505": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "MUL",
      "path": "2"
    },
    "9506": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "NOT",
      "path": "2"
    },
    "9507": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "AND",
      "path": "2"
    },
    "9508": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9509": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9510": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9512": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "AND",
      "path": "2"
    },
    "9513": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "MUL",
      "path": "2"
    },
    "9514": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "OR",
      "path": "2"
    },
    "9515": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9516": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9517": {
      "fn": "Governance._createTaskType",
      "offset": [
        12172,
        12218
      ],
      "op": "POP",
      "path": "2"
    },
    "9518": {
      "fn": "Governance._createTaskType",
      "offset": [
        12256,
        12266
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 83
    },
    "9519": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9520": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9522": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12253
      ],
      "op": "ADD",
      "path": "2"
    },
    "9523": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9525": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9528": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "EXP",
      "path": "2"
    },
    "9529": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9530": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9531": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9532": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9536": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "MUL",
      "path": "2"
    },
    "9537": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "NOT",
      "path": "2"
    },
    "9538": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "AND",
      "path": "2"
    },
    "9539": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9540": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9541": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9545": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "AND",
      "path": "2"
    },
    "9546": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "MUL",
      "path": "2"
    },
    "9547": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "OR",
      "path": "2"
    },
    "9548": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9549": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9550": {
      "fn": "Governance._createTaskType",
      "offset": [
        12232,
        12266
      ],
      "op": "POP",
      "path": "2"
    },
    "9551": {
      "fn": "Governance._createTaskType",
      "offset": [
        12307,
        12320
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 84
    },
    "9552": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9553": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9555": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12304
      ],
      "op": "ADD",
      "path": "2"
    },
    "9556": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9558": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9561": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "EXP",
      "path": "2"
    },
    "9562": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9563": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9564": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9565": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9571": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "MUL",
      "path": "2"
    },
    "9572": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "NOT",
      "path": "2"
    },
    "9573": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "AND",
      "path": "2"
    },
    "9574": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9575": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9576": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9582": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "AND",
      "path": "2"
    },
    "9583": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "MUL",
      "path": "2"
    },
    "9584": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "OR",
      "path": "2"
    },
    "9585": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9586": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9587": {
      "fn": "Governance._createTaskType",
      "offset": [
        12280,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "9588": {
      "fn": "Governance._createTaskType",
      "offset": [
        12361,
        12374
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 85
    },
    "9589": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12345
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9590": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9592": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12358
      ],
      "op": "ADD",
      "path": "2"
    },
    "9593": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "9595": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9598": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "EXP",
      "path": "2"
    },
    "9599": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9600": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9601": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9602": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9608": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "MUL",
      "path": "2"
    },
    "9609": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "NOT",
      "path": "2"
    },
    "9610": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "AND",
      "path": "2"
    },
    "9611": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9612": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9613": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9619": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "AND",
      "path": "2"
    },
    "9620": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "MUL",
      "path": "2"
    },
    "9621": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "OR",
      "path": "2"
    },
    "9622": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9623": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9624": {
      "fn": "Governance._createTaskType",
      "offset": [
        12334,
        12374
      ],
      "op": "POP",
      "path": "2"
    },
    "9625": {
      "fn": "Governance._createTaskType",
      "offset": [
        12417,
        12432
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 86
    },
    "9626": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9627": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9629": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12414
      ],
      "op": "ADD",
      "path": "2"
    },
    "9630": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "9632": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9635": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "EXP",
      "path": "2"
    },
    "9636": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9637": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9638": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9639": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9642": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "MUL",
      "path": "2"
    },
    "9643": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "NOT",
      "path": "2"
    },
    "9644": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "AND",
      "path": "2"
    },
    "9645": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9646": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9647": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9650": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "AND",
      "path": "2"
    },
    "9651": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "MUL",
      "path": "2"
    },
    "9652": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "OR",
      "path": "2"
    },
    "9653": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9654": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9655": {
      "fn": "Governance._createTaskType",
      "offset": [
        12388,
        12432
      ],
      "op": "POP",
      "path": "2"
    },
    "9656": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 87,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "9689": {
      "fn": "Governance._createTaskType",
      "offset": [
        12497,
        12506
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9690": {
      "fn": "Governance._createTaskType",
      "offset": [
        12497,
        12506
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9691": {
      "fn": "Governance._createTaskType",
      "offset": [
        12508,
        12519
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9692": {
      "fn": "Governance._createTaskType",
      "offset": [
        12521,
        12537
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9693": {
      "fn": "Governance._createTaskType",
      "offset": [
        12539,
        12549
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9694": {
      "fn": "Governance._createTaskType",
      "offset": [
        12551,
        12564
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9695": {
      "fn": "Governance._createTaskType",
      "offset": [
        12566,
        12579
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9696": {
      "fn": "Governance._createTaskType",
      "offset": [
        12581,
        12596
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9697": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9699": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9700": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F4"
    },
    "9703": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "9704": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "9705": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "9706": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "9707": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9708": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9709": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9710": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9711": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9712": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C5"
    },
    "9715": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        12478,
        12597
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9716": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9717": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9719": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9720": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9721": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9722": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SUB",
      "path": "2"
    },
    "9723": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9724": {
      "fn": "Governance._createTaskType",
      "offset": [
        12478,
        12597
      ],
      "op": "LOG1",
      "path": "2"
    },
    "9725": {
      "fn": "Governance._createTaskType",
      "offset": [
        11878,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9726": {
      "fn": "Governance._createTaskType",
      "offset": [
        11878,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9727": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9728": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9729": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9730": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9731": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9732": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9733": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9734": {
      "fn": "Governance._createTaskType",
      "offset": [
        11673,
        12604
      ],
      "op": "POP",
      "path": "2"
    },
    "9735": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        11673,
        12604
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9736": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9737": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9739": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9740": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9747": {
      "op": "SHL"
    },
    "9748": {
      "op": "SUB"
    },
    "9749": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 88
    },
    "9750": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9751": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9758": {
      "op": "SHL"
    },
    "9759": {
      "op": "SUB"
    },
    "9760": {
      "op": "NOT"
    },
    "9761": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9762": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "9763": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9764": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "12"
    },
    "9765": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9766": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9767": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9768": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 89,
      "value": "0x40"
    },
    "9770": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9771": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9772": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "12"
    },
    "9773": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9774": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9775": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9776": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9777": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9810": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9811": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9813": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9814": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "12"
    },
    "9815": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "9816": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "9817": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9818": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9819": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9821": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9822": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267D"
    },
    "9825": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2669"
    },
    "9828": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9829": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26CB"
    },
    "9832": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9833": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9834": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9835": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9836": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2678"
    },
    "9839": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9840": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9841": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9843": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9844": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3534"
    },
    "9847": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9848": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9849": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2739"
    },
    "9852": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9853": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9854": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 90
    },
    "9855": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9856": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9857": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9858": {
      "op": "POP"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9863": {
      "op": "SHL"
    },
    "9864": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9865": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "9866": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9868": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9869": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9870": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9871": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9872": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9873": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9874": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9875": {
      "branch": 132,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "9876": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B0"
    },
    "9879": {
      "branch": 132,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9880": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9882": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9883": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "9890": {
      "op": "SHL"
    },
    "9891": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9892": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9893": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9895": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "9896": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9898": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9899": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9900": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9901": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "9902": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9903": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9904": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9905": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0xF"
    },
    "9907": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9908": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9910": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9911": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9912": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9913": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9915": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9916": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9917": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "9918": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "9919": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9921": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9922": {
      "op": "POP"
    },
    "9923": {
      "op": "POP"
    },
    "9924": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9926": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9927": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "9928": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9929": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9930": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9931": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9932": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9940": {
      "op": "SHL"
    },
    "9941": {
      "op": "SUB"
    },
    "9942": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 92
    },
    "9943": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "9944": {
      "branch": 134,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9945": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2735"
    },
    "9948": {
      "branch": 134,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9949": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9951": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9958": {
      "op": "SHL"
    },
    "9959": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9960": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9963": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9965": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9966": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "9967": {
      "op": "MSTORE"
    },
    "9968": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9972": {
      "op": "DUP3"
    },
    "9973": {
      "op": "ADD"
    },
    "9974": {
      "op": "MSTORE"
    },
    "9975": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10010": {
      "op": "DUP3"
    },
    "10011": {
      "op": "ADD"
    },
    "10012": {
      "op": "MSTORE"
    },
    "10013": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10024": {
      "op": "SHL"
    },
    "10025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10027": {
      "op": "DUP3"
    },
    "10028": {
      "op": "ADD"
    },
    "10029": {
      "op": "MSTORE"
    },
    "10030": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10032": {
      "op": "ADD"
    },
    "10033": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E6"
    },
    "10036": {
      "op": "JUMP"
    },
    "10037": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10038": {
      "op": "POP"
    },
    "10039": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 93
    },
    "10040": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10041": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10042": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10044": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10061": {
      "op": "NOT"
    },
    "10062": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 94
    },
    "10063": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "10064": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10065": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10066": {
      "branch": 135,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10067": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276C"
    },
    "10070": {
      "branch": 135,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10071": {
      "op": "POP"
    },
    "10072": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10089": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10090": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "10091": {
      "branch": 136,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10092": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10093": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2735"
    },
    "10096": {
      "branch": 136,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10097": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10099": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10106": {
      "op": "SHL"
    },
    "10107": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10108": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10111": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10113": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10114": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "10115": {
      "op": "MSTORE"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10120": {
      "op": "DUP3"
    },
    "10121": {
      "op": "ADD"
    },
    "10122": {
      "op": "MSTORE"
    },
    "10123": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10158": {
      "op": "DUP3"
    },
    "10159": {
      "op": "ADD"
    },
    "10160": {
      "op": "MSTORE"
    },
    "10161": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "10169": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "10171": {
      "op": "SHL"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10174": {
      "op": "DUP3"
    },
    "10175": {
      "op": "ADD"
    },
    "10176": {
      "op": "MSTORE"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10179": {
      "op": "ADD"
    },
    "10180": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E6"
    },
    "10183": {
      "op": "JUMP"
    },
    "10184": {
      "op": "JUMPDEST"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10187": {
      "op": "DUP1"
    },
    "10188": {
      "op": "MLOAD"
    },
    "10189": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10192": {
      "op": "DUP2"
    },
    "10193": {
      "op": "ADD"
    },
    "10194": {
      "op": "DUP3"
    },
    "10195": {
      "op": "MSTORE"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10198": {
      "op": "DUP1"
    },
    "10199": {
      "op": "DUP3"
    },
    "10200": {
      "op": "MSTORE"
    },
    "10201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10205": {
      "op": "DUP4"
    },
    "10206": {
      "op": "ADD"
    },
    "10207": {
      "op": "DUP2"
    },
    "10208": {
      "op": "SWAP1"
    },
    "10209": {
      "op": "MSTORE"
    },
    "10210": {
      "op": "SWAP3"
    },
    "10211": {
      "op": "DUP3"
    },
    "10212": {
      "op": "ADD"
    },
    "10213": {
      "op": "DUP4"
    },
    "10214": {
      "op": "SWAP1"
    },
    "10215": {
      "op": "MSTORE"
    },
    "10216": {
      "op": "DUP2"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "op": "DUP3"
    },
    "10219": {
      "op": "SWAP1"
    },
    "10220": {
      "op": "MSTORE"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10223": {
      "op": "DUP2"
    },
    "10224": {
      "op": "ADD"
    },
    "10225": {
      "op": "DUP3"
    },
    "10226": {
      "op": "SWAP1"
    },
    "10227": {
      "op": "MSTORE"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10230": {
      "op": "DUP2"
    },
    "10231": {
      "op": "ADD"
    },
    "10232": {
      "op": "DUP3"
    },
    "10233": {
      "op": "SWAP1"
    },
    "10234": {
      "op": "MSTORE"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10237": {
      "op": "DUP2"
    },
    "10238": {
      "op": "ADD"
    },
    "10239": {
      "op": "DUP3"
    },
    "10240": {
      "op": "SWAP1"
    },
    "10241": {
      "op": "MSTORE"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10244": {
      "op": "DUP2"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "op": "DUP3"
    },
    "10247": {
      "op": "SWAP1"
    },
    "10248": {
      "op": "MSTORE"
    },
    "10249": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10252": {
      "op": "DUP2"
    },
    "10253": {
      "op": "ADD"
    },
    "10254": {
      "op": "DUP3"
    },
    "10255": {
      "op": "SWAP1"
    },
    "10256": {
      "op": "MSTORE"
    },
    "10257": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10260": {
      "op": "DUP2"
    },
    "10261": {
      "op": "ADD"
    },
    "10262": {
      "op": "SWAP2"
    },
    "10263": {
      "op": "SWAP1"
    },
    "10264": {
      "op": "SWAP2"
    },
    "10265": {
      "op": "MSTORE"
    },
    "10266": {
      "op": "SWAP1"
    },
    "10267": {
      "jump": "o",
      "op": "JUMP"
    },
    "10268": {
      "op": "JUMPDEST"
    },
    "10269": {
      "op": "POP"
    },
    "10270": {
      "op": "DUP1"
    },
    "10271": {
      "op": "SLOAD"
    },
    "10272": {
      "op": "PUSH2",
      "value": "0x2828"
    },
    "10275": {
      "op": "SWAP1"
    },
    "10276": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "10279": {
      "jump": "i",
      "op": "JUMP"
    },
    "10280": {
      "op": "JUMPDEST"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10283": {
      "op": "DUP3"
    },
    "10284": {
      "op": "SSTORE"
    },
    "10285": {
      "op": "DUP1"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10288": {
      "op": "LT"
    },
    "10289": {
      "op": "PUSH2",
      "value": "0x2838"
    },
    "10292": {
      "op": "JUMPI"
    },
    "10293": {
      "op": "POP"
    },
    "10294": {
      "op": "POP"
    },
    "10295": {
      "jump": "o",
      "op": "JUMP"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10299": {
      "op": "ADD"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10302": {
      "op": "SWAP1"
    },
    "10303": {
      "op": "DIV"
    },
    "10304": {
      "op": "SWAP1"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10307": {
      "op": "MSTORE"
    },
    "10308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10312": {
      "op": "KECCAK256"
    },
    "10313": {
      "op": "SWAP1"
    },
    "10314": {
      "op": "DUP2"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "SWAP1"
    },
    "10317": {
      "op": "PUSH2",
      "value": "0x2135"
    },
    "10320": {
      "op": "SWAP2"
    },
    "10321": {
      "op": "SWAP1"
    },
    "10322": {
      "op": "JUMPDEST"
    },
    "10323": {
      "op": "DUP1"
    },
    "10324": {
      "op": "DUP3"
    },
    "10325": {
      "op": "GT"
    },
    "10326": {
      "op": "ISZERO"
    },
    "10327": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10330": {
      "op": "JUMPI"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10333": {
      "op": "DUP2"
    },
    "10334": {
      "op": "SSTORE"
    },
    "10335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10337": {
      "op": "ADD"
    },
    "10338": {
      "op": "PUSH2",
      "value": "0x2852"
    },
    "10341": {
      "op": "JUMP"
    },
    "10342": {
      "op": "JUMPDEST"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10347": {
      "op": "DUP3"
    },
    "10348": {
      "op": "DUP5"
    },
    "10349": {
      "op": "SUB"
    },
    "10350": {
      "op": "SLT"
    },
    "10351": {
      "op": "ISZERO"
    },
    "10352": {
      "op": "PUSH2",
      "value": "0x2878"
    },
    "10355": {
      "op": "JUMPI"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10358": {
      "op": "DUP1"
    },
    "10359": {
      "op": "REVERT"
    },
    "10360": {
      "op": "JUMPDEST"
    },
    "10361": {
      "op": "POP"
    },
    "10362": {
      "op": "CALLDATALOAD"
    },
    "10363": {
      "op": "SWAP2"
    },
    "10364": {
      "op": "SWAP1"
    },
    "10365": {
      "op": "POP"
    },
    "10366": {
      "jump": "o",
      "op": "JUMP"
    },
    "10367": {
      "op": "JUMPDEST"
    },
    "10368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10370": {
      "op": "JUMPDEST"
    },
    "10371": {
      "op": "DUP4"
    },
    "10372": {
      "op": "DUP2"
    },
    "10373": {
      "op": "LT"
    },
    "10374": {
      "op": "ISZERO"
    },
    "10375": {
      "op": "PUSH2",
      "value": "0x289A"
    },
    "10378": {
      "op": "JUMPI"
    },
    "10379": {
      "op": "DUP2"
    },
    "10380": {
      "op": "DUP2"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "MLOAD"
    },
    "10383": {
      "op": "DUP4"
    },
    "10384": {
      "op": "DUP3"
    },
    "10385": {
      "op": "ADD"
    },
    "10386": {
      "op": "MSTORE"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10389": {
      "op": "ADD"
    },
    "10390": {
      "op": "PUSH2",
      "value": "0x2882"
    },
    "10393": {
      "op": "JUMP"
    },
    "10394": {
      "op": "JUMPDEST"
    },
    "10395": {
      "op": "DUP4"
    },
    "10396": {
      "op": "DUP2"
    },
    "10397": {
      "op": "GT"
    },
    "10398": {
      "op": "ISZERO"
    },
    "10399": {
      "op": "PUSH2",
      "value": "0xC44"
    },
    "10402": {
      "op": "JUMPI"
    },
    "10403": {
      "op": "POP"
    },
    "10404": {
      "op": "POP"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10407": {
      "op": "SWAP2"
    },
    "10408": {
      "op": "ADD"
    },
    "10409": {
      "op": "MSTORE"
    },
    "10410": {
      "jump": "o",
      "op": "JUMP"
    },
    "10411": {
      "op": "JUMPDEST"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10414": {
      "op": "DUP2"
    },
    "10415": {
      "op": "MLOAD"
    },
    "10416": {
      "op": "DUP1"
    },
    "10417": {
      "op": "DUP5"
    },
    "10418": {
      "op": "MSTORE"
    },
    "10419": {
      "op": "PUSH2",
      "value": "0x28C3"
    },
    "10422": {
      "op": "DUP2"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10425": {
      "op": "DUP7"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10429": {
      "op": "DUP7"
    },
    "10430": {
      "op": "ADD"
    },
    "10431": {
      "op": "PUSH2",
      "value": "0x287F"
    },
    "10434": {
      "jump": "i",
      "op": "JUMP"
    },
    "10435": {
      "op": "JUMPDEST"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10438": {
      "op": "ADD"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10441": {
      "op": "NOT"
    },
    "10442": {
      "op": "AND"
    },
    "10443": {
      "op": "SWAP3"
    },
    "10444": {
      "op": "SWAP1"
    },
    "10445": {
      "op": "SWAP3"
    },
    "10446": {
      "op": "ADD"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10449": {
      "op": "ADD"
    },
    "10450": {
      "op": "SWAP3"
    },
    "10451": {
      "op": "SWAP2"
    },
    "10452": {
      "op": "POP"
    },
    "10453": {
      "op": "POP"
    },
    "10454": {
      "jump": "o",
      "op": "JUMP"
    },
    "10455": {
      "op": "JUMPDEST"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10458": {
      "op": "DUP2"
    },
    "10459": {
      "op": "MSTORE"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10462": {
      "op": "PUSH2",
      "value": "0x28EA"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10467": {
      "op": "DUP4"
    },
    "10468": {
      "op": "ADD"
    },
    "10469": {
      "op": "DUP9"
    },
    "10470": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "10473": {
      "jump": "i",
      "op": "JUMP"
    },
    "10474": {
      "op": "JUMPDEST"
    },
    "10475": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10478": {
      "op": "SWAP7"
    },
    "10479": {
      "op": "SWAP1"
    },
    "10480": {
      "op": "SWAP7"
    },
    "10481": {
      "op": "AND"
    },
    "10482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10484": {
      "op": "DUP4"
    },
    "10485": {
      "op": "ADD"
    },
    "10486": {
      "op": "MSTORE"
    },
    "10487": {
      "op": "POP"
    },
    "10488": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10494": {
      "op": "SWAP4"
    },
    "10495": {
      "op": "DUP5"
    },
    "10496": {
      "op": "AND"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10499": {
      "op": "DUP3"
    },
    "10500": {
      "op": "ADD"
    },
    "10501": {
      "op": "MSTORE"
    },
    "10502": {
      "op": "SWAP2"
    },
    "10503": {
      "op": "DUP4"
    },
    "10504": {
      "op": "AND"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10507": {
      "op": "DUP4"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "MSTORE"
    },
    "10510": {
      "op": "SWAP1"
    },
    "10511": {
      "op": "SWAP2"
    },
    "10512": {
      "op": "AND"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10515": {
      "op": "SWAP1"
    },
    "10516": {
      "op": "SWAP2"
    },
    "10517": {
      "op": "ADD"
    },
    "10518": {
      "op": "MSTORE"
    },
    "10519": {
      "op": "SWAP2"
    },
    "10520": {
      "op": "SWAP1"
    },
    "10521": {
      "op": "POP"
    },
    "10522": {
      "jump": "o",
      "op": "JUMP"
    },
    "10523": {
      "op": "JUMPDEST"
    },
    "10524": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10531": {
      "op": "SHL"
    },
    "10532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10534": {
      "op": "MSTORE"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10539": {
      "op": "MSTORE"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10544": {
      "op": "REVERT"
    },
    "10545": {
      "op": "JUMPDEST"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10548": {
      "op": "MLOAD"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10551": {
      "op": "DUP3"
    },
    "10552": {
      "op": "ADD"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10555": {
      "op": "NOT"
    },
    "10556": {
      "op": "AND"
    },
    "10557": {
      "op": "DUP2"
    },
    "10558": {
      "op": "ADD"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10565": {
      "op": "SHL"
    },
    "10566": {
      "op": "SUB"
    },
    "10567": {
      "op": "DUP2"
    },
    "10568": {
      "op": "GT"
    },
    "10569": {
      "op": "DUP3"
    },
    "10570": {
      "op": "DUP3"
    },
    "10571": {
      "op": "LT"
    },
    "10572": {
      "op": "OR"
    },
    "10573": {
      "op": "ISZERO"
    },
    "10574": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10577": {
      "op": "JUMPI"
    },
    "10578": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10581": {
      "op": "PUSH2",
      "value": "0x291B"
    },
    "10584": {
      "jump": "i",
      "op": "JUMP"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10588": {
      "op": "MSTORE"
    },
    "10589": {
      "op": "SWAP2"
    },
    "10590": {
      "op": "SWAP1"
    },
    "10591": {
      "op": "POP"
    },
    "10592": {
      "jump": "o",
      "op": "JUMP"
    },
    "10593": {
      "op": "JUMPDEST"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10596": {
      "op": "DUP3"
    },
    "10597": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10599": {
      "op": "DUP4"
    },
    "10600": {
      "op": "ADD"
    },
    "10601": {
      "op": "SLT"
    },
    "10602": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10605": {
      "op": "JUMPI"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10608": {
      "op": "DUP1"
    },
    "10609": {
      "op": "REVERT"
    },
    "10610": {
      "op": "JUMPDEST"
    },
    "10611": {
      "op": "DUP2"
    },
    "10612": {
      "op": "CALLDATALOAD"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10621": {
      "op": "SHL"
    },
    "10622": {
      "op": "SUB"
    },
    "10623": {
      "op": "DUP3"
    },
    "10624": {
      "op": "GT"
    },
    "10625": {
      "op": "ISZERO"
    },
    "10626": {
      "op": "PUSH2",
      "value": "0x298D"
    },
    "10629": {
      "op": "JUMPI"
    },
    "10630": {
      "op": "PUSH2",
      "value": "0x298D"
    },
    "10633": {
      "op": "PUSH2",
      "value": "0x291B"
    },
    "10636": {
      "jump": "i",
      "op": "JUMP"
    },
    "10637": {
      "op": "JUMPDEST"
    },
    "10638": {
      "op": "DUP2"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "op": "PUSH2",
      "value": "0x299C"
    },
    "10645": {
      "op": "DUP3"
    },
    "10646": {
      "op": "DUP3"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "PUSH2",
      "value": "0x2931"
    },
    "10651": {
      "jump": "i",
      "op": "JUMP"
    },
    "10652": {
      "op": "JUMPDEST"
    },
    "10653": {
      "op": "SWAP3"
    },
    "10654": {
      "op": "DUP4"
    },
    "10655": {
      "op": "MSTORE"
    },
    "10656": {
      "op": "DUP5"
    },
    "10657": {
      "op": "DUP2"
    },
    "10658": {
      "op": "ADD"
    },
    "10659": {
      "op": "DUP3"
    },
    "10660": {
      "op": "ADD"
    },
    "10661": {
      "op": "SWAP3"
    },
    "10662": {
      "op": "DUP3"
    },
    "10663": {
      "op": "DUP2"
    },
    "10664": {
      "op": "ADD"
    },
    "10665": {
      "op": "SWAP1"
    },
    "10666": {
      "op": "DUP8"
    },
    "10667": {
      "op": "DUP6"
    },
    "10668": {
      "op": "GT"
    },
    "10669": {
      "op": "ISZERO"
    },
    "10670": {
      "op": "PUSH2",
      "value": "0x29B6"
    },
    "10673": {
      "op": "JUMPI"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10676": {
      "op": "DUP1"
    },
    "10677": {
      "op": "REVERT"
    },
    "10678": {
      "op": "JUMPDEST"
    },
    "10679": {
      "op": "DUP4"
    },
    "10680": {
      "op": "DUP8"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "op": "SWAP3"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "JUMPDEST"
    },
    "10685": {
      "op": "DUP5"
    },
    "10686": {
      "op": "DUP4"
    },
    "10687": {
      "op": "LT"
    },
    "10688": {
      "op": "ISZERO"
    },
    "10689": {
      "op": "PUSH2",
      "value": "0x29D5"
    },
    "10692": {
      "op": "JUMPI"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "CALLDATALOAD"
    },
    "10695": {
      "op": "DUP3"
    },
    "10696": {
      "op": "MSTORE"
    },
    "10697": {
      "op": "SWAP2"
    },
    "10698": {
      "op": "DUP4"
    },
    "10699": {
      "op": "ADD"
    },
    "10700": {
      "op": "SWAP2"
    },
    "10701": {
      "op": "SWAP1"
    },
    "10702": {
      "op": "DUP4"
    },
    "10703": {
      "op": "ADD"
    },
    "10704": {
      "op": "SWAP1"
    },
    "10705": {
      "op": "PUSH2",
      "value": "0x29BC"
    },
    "10708": {
      "op": "JUMP"
    },
    "10709": {
      "op": "JUMPDEST"
    },
    "10710": {
      "op": "SWAP8"
    },
    "10711": {
      "op": "SWAP7"
    },
    "10712": {
      "op": "POP"
    },
    "10713": {
      "op": "POP"
    },
    "10714": {
      "op": "POP"
    },
    "10715": {
      "op": "POP"
    },
    "10716": {
      "op": "POP"
    },
    "10717": {
      "op": "POP"
    },
    "10718": {
      "op": "POP"
    },
    "10719": {
      "jump": "o",
      "op": "JUMP"
    },
    "10720": {
      "op": "JUMPDEST"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10723": {
      "op": "DUP1"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10728": {
      "op": "DUP5"
    },
    "10729": {
      "op": "DUP7"
    },
    "10730": {
      "op": "SUB"
    },
    "10731": {
      "op": "SLT"
    },
    "10732": {
      "op": "ISZERO"
    },
    "10733": {
      "op": "PUSH2",
      "value": "0x29F5"
    },
    "10736": {
      "op": "JUMPI"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10739": {
      "op": "DUP1"
    },
    "10740": {
      "op": "REVERT"
    },
    "10741": {
      "op": "JUMPDEST"
    },
    "10742": {
      "op": "DUP4"
    },
    "10743": {
      "op": "CALLDATALOAD"
    },
    "10744": {
      "op": "SWAP3"
    },
    "10745": {
      "op": "POP"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10748": {
      "op": "DUP5"
    },
    "10749": {
      "op": "ADD"
    },
    "10750": {
      "op": "CALLDATALOAD"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10757": {
      "op": "SHL"
    },
    "10758": {
      "op": "SUB"
    },
    "10759": {
      "op": "DUP2"
    },
    "10760": {
      "op": "GT"
    },
    "10761": {
      "op": "ISZERO"
    },
    "10762": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "10765": {
      "op": "JUMPI"
    },
    "10766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10768": {
      "op": "DUP1"
    },
    "10769": {
      "op": "REVERT"
    },
    "10770": {
      "op": "JUMPDEST"
    },
    "10771": {
      "op": "PUSH2",
      "value": "0x2A1E"
    },
    "10774": {
      "op": "DUP7"
    },
    "10775": {
      "op": "DUP3"
    },
    "10776": {
      "op": "DUP8"
    },
    "10777": {
      "op": "ADD"
    },
    "10778": {
      "op": "PUSH2",
      "value": "0x2961"
    },
    "10781": {
      "jump": "i",
      "op": "JUMP"
    },
    "10782": {
      "op": "JUMPDEST"
    },
    "10783": {
      "op": "SWAP3"
    },
    "10784": {
      "op": "POP"
    },
    "10785": {
      "op": "POP"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10788": {
      "op": "DUP5"
    },
    "10789": {
      "op": "ADD"
    },
    "10790": {
      "op": "CALLDATALOAD"
    },
    "10791": {
      "op": "DUP1"
    },
    "10792": {
      "op": "ISZERO"
    },
    "10793": {
      "op": "ISZERO"
    },
    "10794": {
      "op": "DUP2"
    },
    "10795": {
      "op": "EQ"
    },
    "10796": {
      "op": "PUSH2",
      "value": "0x2A34"
    },
    "10799": {
      "op": "JUMPI"
    },
    "10800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10802": {
      "op": "DUP1"
    },
    "10803": {
      "op": "REVERT"
    },
    "10804": {
      "op": "JUMPDEST"
    },
    "10805": {
      "op": "DUP1"
    },
    "10806": {
      "op": "SWAP2"
    },
    "10807": {
      "op": "POP"
    },
    "10808": {
      "op": "POP"
    },
    "10809": {
      "op": "SWAP3"
    },
    "10810": {
      "op": "POP"
    },
    "10811": {
      "op": "SWAP3"
    },
    "10812": {
      "op": "POP"
    },
    "10813": {
      "op": "SWAP3"
    },
    "10814": {
      "jump": "o",
      "op": "JUMP"
    },
    "10815": {
      "op": "JUMPDEST"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10818": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10821": {
      "op": "DUP1"
    },
    "10822": {
      "op": "DUP4"
    },
    "10823": {
      "op": "MSTORE"
    },
    "10824": {
      "op": "PUSH2",
      "value": "0x2A53"
    },
    "10827": {
      "op": "DUP2"
    },
    "10828": {
      "op": "DUP5"
    },
    "10829": {
      "op": "ADD"
    },
    "10830": {
      "op": "DUP13"
    },
    "10831": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "10834": {
      "jump": "i",
      "op": "JUMP"
    },
    "10835": {
      "op": "JUMPDEST"
    },
    "10836": {
      "op": "SWAP10"
    },
    "10837": {
      "op": "ISZERO"
    },
    "10838": {
      "op": "ISZERO"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10841": {
      "op": "DUP5"
    },
    "10842": {
      "op": "ADD"
    },
    "10843": {
      "op": "MSTORE"
    },
    "10844": {
      "op": "POP"
    },
    "10845": {
      "op": "POP"
    },
    "10846": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10852": {
      "op": "SWAP7"
    },
    "10853": {
      "op": "DUP8"
    },
    "10854": {
      "op": "AND"
    },
    "10855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10857": {
      "op": "DUP3"
    },
    "10858": {
      "op": "ADD"
    },
    "10859": {
      "op": "MSTORE"
    },
    "10860": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10862": {
      "op": "SWAP6"
    },
    "10863": {
      "op": "SWAP1"
    },
    "10864": {
      "op": "SWAP6"
    },
    "10865": {
      "op": "AND"
    },
    "10866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10868": {
      "op": "DUP7"
    },
    "10869": {
      "op": "ADD"
    },
    "10870": {
      "op": "MSTORE"
    },
    "10871": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "10875": {
      "op": "SWAP4"
    },
    "10876": {
      "op": "SWAP1"
    },
    "10877": {
      "op": "SWAP4"
    },
    "10878": {
      "op": "AND"
    },
    "10879": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10881": {
      "op": "DUP6"
    },
    "10882": {
      "op": "ADD"
    },
    "10883": {
      "op": "MSTORE"
    },
    "10884": {
      "op": "SWAP1"
    },
    "10885": {
      "op": "DUP5"
    },
    "10886": {
      "op": "AND"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10889": {
      "op": "DUP5"
    },
    "10890": {
      "op": "ADD"
    },
    "10891": {
      "op": "MSTORE"
    },
    "10892": {
      "op": "SWAP1"
    },
    "10893": {
      "op": "SWAP3"
    },
    "10894": {
      "op": "AND"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10897": {
      "op": "DUP3"
    },
    "10898": {
      "op": "ADD"
    },
    "10899": {
      "op": "MSTORE"
    },
    "10900": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10903": {
      "op": "SWAP1"
    },
    "10904": {
      "op": "SWAP2"
    },
    "10905": {
      "op": "AND"
    },
    "10906": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10908": {
      "op": "SWAP1"
    },
    "10909": {
      "op": "SWAP2"
    },
    "10910": {
      "op": "ADD"
    },
    "10911": {
      "op": "MSTORE"
    },
    "10912": {
      "op": "SWAP2"
    },
    "10913": {
      "op": "SWAP1"
    },
    "10914": {
      "op": "POP"
    },
    "10915": {
      "jump": "o",
      "op": "JUMP"
    },
    "10916": {
      "op": "JUMPDEST"
    },
    "10917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10919": {
      "op": "DUP1"
    },
    "10920": {
      "op": "DUP4"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10923": {
      "op": "DUP5"
    },
    "10924": {
      "op": "ADD"
    },
    "10925": {
      "op": "SLT"
    },
    "10926": {
      "op": "PUSH2",
      "value": "0x2AB6"
    },
    "10929": {
      "op": "JUMPI"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10932": {
      "op": "DUP1"
    },
    "10933": {
      "op": "REVERT"
    },
    "10934": {
      "op": "JUMPDEST"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "op": "DUP2"
    },
    "10937": {
      "op": "CALLDATALOAD"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10944": {
      "op": "SHL"
    },
    "10945": {
      "op": "SUB"
    },
    "10946": {
      "op": "DUP2"
    },
    "10947": {
      "op": "GT"
    },
    "10948": {
      "op": "ISZERO"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x2ACD"
    },
    "10952": {
      "op": "JUMPI"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10955": {
      "op": "DUP1"
    },
    "10956": {
      "op": "REVERT"
    },
    "10957": {
      "op": "JUMPDEST"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10960": {
      "op": "DUP4"
    },
    "10961": {
      "op": "ADD"
    },
    "10962": {
      "op": "SWAP2"
    },
    "10963": {
      "op": "POP"
    },
    "10964": {
      "op": "DUP4"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10967": {
      "op": "DUP3"
    },
    "10968": {
      "op": "DUP6"
    },
    "10969": {
      "op": "ADD"
    },
    "10970": {
      "op": "ADD"
    },
    "10971": {
      "op": "GT"
    },
    "10972": {
      "op": "ISZERO"
    },
    "10973": {
      "op": "PUSH2",
      "value": "0x2AE5"
    },
    "10976": {
      "op": "JUMPI"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10979": {
      "op": "DUP1"
    },
    "10980": {
      "op": "REVERT"
    },
    "10981": {
      "op": "JUMPDEST"
    },
    "10982": {
      "op": "SWAP3"
    },
    "10983": {
      "op": "POP"
    },
    "10984": {
      "op": "SWAP3"
    },
    "10985": {
      "op": "SWAP1"
    },
    "10986": {
      "op": "POP"
    },
    "10987": {
      "jump": "o",
      "op": "JUMP"
    },
    "10988": {
      "op": "JUMPDEST"
    },
    "10989": {
      "op": "DUP1"
    },
    "10990": {
      "op": "CALLDATALOAD"
    },
    "10991": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "10995": {
      "op": "DUP2"
    },
    "10996": {
      "op": "AND"
    },
    "10997": {
      "op": "DUP2"
    },
    "10998": {
      "op": "EQ"
    },
    "10999": {
      "op": "PUSH2",
      "value": "0x2AFF"
    },
    "11002": {
      "op": "JUMPI"
    },
    "11003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11005": {
      "op": "DUP1"
    },
    "11006": {
      "op": "REVERT"
    },
    "11007": {
      "op": "JUMPDEST"
    },
    "11008": {
      "op": "SWAP2"
    },
    "11009": {
      "op": "SWAP1"
    },
    "11010": {
      "op": "POP"
    },
    "11011": {
      "jump": "o",
      "op": "JUMP"
    },
    "11012": {
      "op": "JUMPDEST"
    },
    "11013": {
      "op": "DUP1"
    },
    "11014": {
      "op": "CALLDATALOAD"
    },
    "11015": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11021": {
      "op": "DUP2"
    },
    "11022": {
      "op": "AND"
    },
    "11023": {
      "op": "DUP2"
    },
    "11024": {
      "op": "EQ"
    },
    "11025": {
      "op": "PUSH2",
      "value": "0x2AFF"
    },
    "11028": {
      "op": "JUMPI"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11031": {
      "op": "DUP1"
    },
    "11032": {
      "op": "REVERT"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "DUP1"
    },
    "11035": {
      "op": "CALLDATALOAD"
    },
    "11036": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11039": {
      "op": "DUP2"
    },
    "11040": {
      "op": "AND"
    },
    "11041": {
      "op": "DUP2"
    },
    "11042": {
      "op": "EQ"
    },
    "11043": {
      "op": "PUSH2",
      "value": "0x2AFF"
    },
    "11046": {
      "op": "JUMPI"
    },
    "11047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11049": {
      "op": "DUP1"
    },
    "11050": {
      "op": "REVERT"
    },
    "11051": {
      "op": "JUMPDEST"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11054": {
      "op": "DUP1"
    },
    "11055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11057": {
      "op": "DUP1"
    },
    "11058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11060": {
      "op": "DUP1"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11063": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11065": {
      "op": "DUP9"
    },
    "11066": {
      "op": "DUP11"
    },
    "11067": {
      "op": "SUB"
    },
    "11068": {
      "op": "SLT"
    },
    "11069": {
      "op": "ISZERO"
    },
    "11070": {
      "op": "PUSH2",
      "value": "0x2B46"
    },
    "11073": {
      "op": "JUMPI"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11076": {
      "op": "DUP1"
    },
    "11077": {
      "op": "REVERT"
    },
    "11078": {
      "op": "JUMPDEST"
    },
    "11079": {
      "op": "DUP8"
    },
    "11080": {
      "op": "CALLDATALOAD"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11087": {
      "op": "SHL"
    },
    "11088": {
      "op": "SUB"
    },
    "11089": {
      "op": "DUP2"
    },
    "11090": {
      "op": "GT"
    },
    "11091": {
      "op": "ISZERO"
    },
    "11092": {
      "op": "PUSH2",
      "value": "0x2B5C"
    },
    "11095": {
      "op": "JUMPI"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11098": {
      "op": "DUP1"
    },
    "11099": {
      "op": "REVERT"
    },
    "11100": {
      "op": "JUMPDEST"
    },
    "11101": {
      "op": "PUSH2",
      "value": "0x2B68"
    },
    "11104": {
      "op": "DUP11"
    },
    "11105": {
      "op": "DUP3"
    },
    "11106": {
      "op": "DUP12"
    },
    "11107": {
      "op": "ADD"
    },
    "11108": {
      "op": "PUSH2",
      "value": "0x2AA4"
    },
    "11111": {
      "jump": "i",
      "op": "JUMP"
    },
    "11112": {
      "op": "JUMPDEST"
    },
    "11113": {
      "op": "SWAP1"
    },
    "11114": {
      "op": "SWAP9"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "op": "SWAP7"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11121": {
      "op": "DUP9"
    },
    "11122": {
      "op": "ADD"
    },
    "11123": {
      "op": "CALLDATALOAD"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11126": {
      "op": "DUP2"
    },
    "11127": {
      "op": "AND"
    },
    "11128": {
      "op": "DUP2"
    },
    "11129": {
      "op": "EQ"
    },
    "11130": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "11133": {
      "op": "JUMPI"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11136": {
      "op": "DUP1"
    },
    "11137": {
      "op": "REVERT"
    },
    "11138": {
      "op": "JUMPDEST"
    },
    "11139": {
      "op": "SWAP5"
    },
    "11140": {
      "op": "POP"
    },
    "11141": {
      "op": "PUSH2",
      "value": "0x2B90"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11146": {
      "op": "DUP10"
    },
    "11147": {
      "op": "ADD"
    },
    "11148": {
      "op": "PUSH2",
      "value": "0x2AEC"
    },
    "11151": {
      "jump": "i",
      "op": "JUMP"
    },
    "11152": {
      "op": "JUMPDEST"
    },
    "11153": {
      "op": "SWAP4"
    },
    "11154": {
      "op": "POP"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0x2B9E"
    },
    "11158": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11160": {
      "op": "DUP10"
    },
    "11161": {
      "op": "ADD"
    },
    "11162": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11165": {
      "jump": "i",
      "op": "JUMP"
    },
    "11166": {
      "op": "JUMPDEST"
    },
    "11167": {
      "op": "SWAP3"
    },
    "11168": {
      "op": "POP"
    },
    "11169": {
      "op": "PUSH2",
      "value": "0x2BAC"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11174": {
      "op": "DUP10"
    },
    "11175": {
      "op": "ADD"
    },
    "11176": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11179": {
      "jump": "i",
      "op": "JUMP"
    },
    "11180": {
      "op": "JUMPDEST"
    },
    "11181": {
      "op": "SWAP2"
    },
    "11182": {
      "op": "POP"
    },
    "11183": {
      "op": "PUSH2",
      "value": "0x2BBA"
    },
    "11186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11188": {
      "op": "DUP10"
    },
    "11189": {
      "op": "ADD"
    },
    "11190": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "11193": {
      "jump": "i",
      "op": "JUMP"
    },
    "11194": {
      "op": "JUMPDEST"
    },
    "11195": {
      "op": "SWAP1"
    },
    "11196": {
      "op": "POP"
    },
    "11197": {
      "op": "SWAP3"
    },
    "11198": {
      "op": "SWAP6"
    },
    "11199": {
      "op": "SWAP9"
    },
    "11200": {
      "op": "SWAP2"
    },
    "11201": {
      "op": "SWAP5"
    },
    "11202": {
      "op": "SWAP8"
    },
    "11203": {
      "op": "POP"
    },
    "11204": {
      "op": "SWAP3"
    },
    "11205": {
      "op": "SWAP6"
    },
    "11206": {
      "op": "POP"
    },
    "11207": {
      "jump": "o",
      "op": "JUMP"
    },
    "11208": {
      "op": "JUMPDEST"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11211": {
      "op": "DUP1"
    },
    "11212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11214": {
      "op": "DUP4"
    },
    "11215": {
      "op": "DUP6"
    },
    "11216": {
      "op": "SUB"
    },
    "11217": {
      "op": "SLT"
    },
    "11218": {
      "op": "ISZERO"
    },
    "11219": {
      "op": "PUSH2",
      "value": "0x2BDB"
    },
    "11222": {
      "op": "JUMPI"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11225": {
      "op": "DUP1"
    },
    "11226": {
      "op": "REVERT"
    },
    "11227": {
      "op": "JUMPDEST"
    },
    "11228": {
      "op": "POP"
    },
    "11229": {
      "op": "POP"
    },
    "11230": {
      "op": "DUP1"
    },
    "11231": {
      "op": "CALLDATALOAD"
    },
    "11232": {
      "op": "SWAP3"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11235": {
      "op": "SWAP1"
    },
    "11236": {
      "op": "SWAP2"
    },
    "11237": {
      "op": "ADD"
    },
    "11238": {
      "op": "CALLDATALOAD"
    },
    "11239": {
      "op": "SWAP2"
    },
    "11240": {
      "op": "POP"
    },
    "11241": {
      "jump": "o",
      "op": "JUMP"
    },
    "11242": {
      "op": "JUMPDEST"
    },
    "11243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11249": {
      "op": "SHL"
    },
    "11250": {
      "op": "SUB"
    },
    "11251": {
      "op": "DUP2"
    },
    "11252": {
      "op": "AND"
    },
    "11253": {
      "op": "DUP2"
    },
    "11254": {
      "op": "EQ"
    },
    "11255": {
      "op": "PUSH2",
      "value": "0x2135"
    },
    "11258": {
      "op": "JUMPI"
    },
    "11259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11261": {
      "op": "DUP1"
    },
    "11262": {
      "op": "REVERT"
    },
    "11263": {
      "op": "JUMPDEST"
    },
    "11264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11268": {
      "op": "DUP3"
    },
    "11269": {
      "op": "DUP5"
    },
    "11270": {
      "op": "SUB"
    },
    "11271": {
      "op": "SLT"
    },
    "11272": {
      "op": "ISZERO"
    },
    "11273": {
      "op": "PUSH2",
      "value": "0x2C11"
    },
    "11276": {
      "op": "JUMPI"
    },
    "11277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11279": {
      "op": "DUP1"
    },
    "11280": {
      "op": "REVERT"
    },
    "11281": {
      "op": "JUMPDEST"
    },
    "11282": {
      "op": "DUP2"
    },
    "11283": {
      "op": "CALLDATALOAD"
    },
    "11284": {
      "op": "PUSH2",
      "value": "0x2C1C"
    },
    "11287": {
      "op": "DUP2"
    },
    "11288": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11291": {
      "jump": "i",
      "op": "JUMP"
    },
    "11292": {
      "op": "JUMPDEST"
    },
    "11293": {
      "op": "SWAP4"
    },
    "11294": {
      "op": "SWAP3"
    },
    "11295": {
      "op": "POP"
    },
    "11296": {
      "op": "POP"
    },
    "11297": {
      "op": "POP"
    },
    "11298": {
      "jump": "o",
      "op": "JUMP"
    },
    "11299": {
      "op": "JUMPDEST"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11302": {
      "op": "DUP3"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11305": {
      "op": "DUP4"
    },
    "11306": {
      "op": "ADD"
    },
    "11307": {
      "op": "SLT"
    },
    "11308": {
      "op": "PUSH2",
      "value": "0x2C34"
    },
    "11311": {
      "op": "JUMPI"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11314": {
      "op": "DUP1"
    },
    "11315": {
      "op": "REVERT"
    },
    "11316": {
      "op": "JUMPDEST"
    },
    "11317": {
      "op": "DUP2"
    },
    "11318": {
      "op": "CALLDATALOAD"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11325": {
      "op": "SHL"
    },
    "11326": {
      "op": "SUB"
    },
    "11327": {
      "op": "DUP2"
    },
    "11328": {
      "op": "GT"
    },
    "11329": {
      "op": "ISZERO"
    },
    "11330": {
      "op": "PUSH2",
      "value": "0x2C4D"
    },
    "11333": {
      "op": "JUMPI"
    },
    "11334": {
      "op": "PUSH2",
      "value": "0x2C4D"
    },
    "11337": {
      "op": "PUSH2",
      "value": "0x291B"
    },
    "11340": {
      "jump": "i",
      "op": "JUMP"
    },
    "11341": {
      "op": "JUMPDEST"
    },
    "11342": {
      "op": "PUSH2",
      "value": "0x2C60"
    },
    "11345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11347": {
      "op": "DUP3"
    },
    "11348": {
      "op": "ADD"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11351": {
      "op": "NOT"
    },
    "11352": {
      "op": "AND"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11355": {
      "op": "ADD"
    },
    "11356": {
      "op": "PUSH2",
      "value": "0x2931"
    },
    "11359": {
      "jump": "i",
      "op": "JUMP"
    },
    "11360": {
      "op": "JUMPDEST"
    },
    "11361": {
      "op": "DUP2"
    },
    "11362": {
      "op": "DUP2"
    },
    "11363": {
      "op": "MSTORE"
    },
    "11364": {
      "op": "DUP5"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11367": {
      "op": "DUP4"
    },
    "11368": {
      "op": "DUP7"
    },
    "11369": {
      "op": "ADD"
    },
    "11370": {
      "op": "ADD"
    },
    "11371": {
      "op": "GT"
    },
    "11372": {
      "op": "ISZERO"
    },
    "11373": {
      "op": "PUSH2",
      "value": "0x2C75"
    },
    "11376": {
      "op": "JUMPI"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11379": {
      "op": "DUP1"
    },
    "11380": {
      "op": "REVERT"
    },
    "11381": {
      "op": "JUMPDEST"
    },
    "11382": {
      "op": "DUP2"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11385": {
      "op": "DUP6"
    },
    "11386": {
      "op": "ADD"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11389": {
      "op": "DUP4"
    },
    "11390": {
      "op": "ADD"
    },
    "11391": {
      "op": "CALLDATACOPY"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11394": {
      "op": "SWAP2"
    },
    "11395": {
      "op": "DUP2"
    },
    "11396": {
      "op": "ADD"
    },
    "11397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11399": {
      "op": "ADD"
    },
    "11400": {
      "op": "SWAP2"
    },
    "11401": {
      "op": "SWAP1"
    },
    "11402": {
      "op": "SWAP2"
    },
    "11403": {
      "op": "MSTORE"
    },
    "11404": {
      "op": "SWAP4"
    },
    "11405": {
      "op": "SWAP3"
    },
    "11406": {
      "op": "POP"
    },
    "11407": {
      "op": "POP"
    },
    "11408": {
      "op": "POP"
    },
    "11409": {
      "jump": "o",
      "op": "JUMP"
    },
    "11410": {
      "op": "JUMPDEST"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11413": {
      "op": "DUP1"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11418": {
      "op": "DUP5"
    },
    "11419": {
      "op": "DUP7"
    },
    "11420": {
      "op": "SUB"
    },
    "11421": {
      "op": "SLT"
    },
    "11422": {
      "op": "ISZERO"
    },
    "11423": {
      "op": "PUSH2",
      "value": "0x2CA7"
    },
    "11426": {
      "op": "JUMPI"
    },
    "11427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11429": {
      "op": "DUP1"
    },
    "11430": {
      "op": "REVERT"
    },
    "11431": {
      "op": "JUMPDEST"
    },
    "11432": {
      "op": "DUP4"
    },
    "11433": {
      "op": "CALLDATALOAD"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11440": {
      "op": "SHL"
    },
    "11441": {
      "op": "SUB"
    },
    "11442": {
      "op": "DUP2"
    },
    "11443": {
      "op": "GT"
    },
    "11444": {
      "op": "ISZERO"
    },
    "11445": {
      "op": "PUSH2",
      "value": "0x2CBD"
    },
    "11448": {
      "op": "JUMPI"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11451": {
      "op": "DUP1"
    },
    "11452": {
      "op": "REVERT"
    },
    "11453": {
      "op": "JUMPDEST"
    },
    "11454": {
      "op": "PUSH2",
      "value": "0x2CC9"
    },
    "11457": {
      "op": "DUP7"
    },
    "11458": {
      "op": "DUP3"
    },
    "11459": {
      "op": "DUP8"
    },
    "11460": {
      "op": "ADD"
    },
    "11461": {
      "op": "PUSH2",
      "value": "0x2C23"
    },
    "11464": {
      "jump": "i",
      "op": "JUMP"
    },
    "11465": {
      "op": "JUMPDEST"
    },
    "11466": {
      "op": "SWAP4"
    },
    "11467": {
      "op": "POP"
    },
    "11468": {
      "op": "POP"
    },
    "11469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11471": {
      "op": "DUP5"
    },
    "11472": {
      "op": "ADD"
    },
    "11473": {
      "op": "CALLDATALOAD"
    },
    "11474": {
      "op": "SWAP2"
    },
    "11475": {
      "op": "POP"
    },
    "11476": {
      "op": "PUSH2",
      "value": "0x2CDF"
    },
    "11479": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11481": {
      "op": "DUP6"
    },
    "11482": {
      "op": "ADD"
    },
    "11483": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11486": {
      "jump": "i",
      "op": "JUMP"
    },
    "11487": {
      "op": "JUMPDEST"
    },
    "11488": {
      "op": "SWAP1"
    },
    "11489": {
      "op": "POP"
    },
    "11490": {
      "op": "SWAP3"
    },
    "11491": {
      "op": "POP"
    },
    "11492": {
      "op": "SWAP3"
    },
    "11493": {
      "op": "POP"
    },
    "11494": {
      "op": "SWAP3"
    },
    "11495": {
      "jump": "o",
      "op": "JUMP"
    },
    "11496": {
      "op": "JUMPDEST"
    },
    "11497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11499": {
      "op": "DUP1"
    },
    "11500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11504": {
      "op": "DUP5"
    },
    "11505": {
      "op": "DUP7"
    },
    "11506": {
      "op": "SUB"
    },
    "11507": {
      "op": "SLT"
    },
    "11508": {
      "op": "ISZERO"
    },
    "11509": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11512": {
      "op": "JUMPI"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11515": {
      "op": "DUP1"
    },
    "11516": {
      "op": "REVERT"
    },
    "11517": {
      "op": "JUMPDEST"
    },
    "11518": {
      "op": "POP"
    },
    "11519": {
      "op": "POP"
    },
    "11520": {
      "op": "DUP2"
    },
    "11521": {
      "op": "CALLDATALOAD"
    },
    "11522": {
      "op": "SWAP4"
    },
    "11523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11525": {
      "op": "DUP4"
    },
    "11526": {
      "op": "ADD"
    },
    "11527": {
      "op": "CALLDATALOAD"
    },
    "11528": {
      "op": "SWAP4"
    },
    "11529": {
      "op": "POP"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11532": {
      "op": "SWAP1"
    },
    "11533": {
      "op": "SWAP3"
    },
    "11534": {
      "op": "ADD"
    },
    "11535": {
      "op": "CALLDATALOAD"
    },
    "11536": {
      "op": "SWAP2"
    },
    "11537": {
      "op": "SWAP1"
    },
    "11538": {
      "op": "POP"
    },
    "11539": {
      "jump": "o",
      "op": "JUMP"
    },
    "11540": {
      "op": "JUMPDEST"
    },
    "11541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11543": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11546": {
      "op": "DUP1"
    },
    "11547": {
      "op": "DUP4"
    },
    "11548": {
      "op": "MSTORE"
    },
    "11549": {
      "op": "PUSH2",
      "value": "0x2D28"
    },
    "11552": {
      "op": "DUP2"
    },
    "11553": {
      "op": "DUP5"
    },
    "11554": {
      "op": "ADD"
    },
    "11555": {
      "op": "DUP15"
    },
    "11556": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "11559": {
      "jump": "i",
      "op": "JUMP"
    },
    "11560": {
      "op": "JUMPDEST"
    },
    "11561": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11567": {
      "op": "SWAP13"
    },
    "11568": {
      "op": "DUP14"
    },
    "11569": {
      "op": "AND"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11572": {
      "op": "DUP6"
    },
    "11573": {
      "op": "ADD"
    },
    "11574": {
      "op": "MSTORE"
    },
    "11575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11577": {
      "op": "DUP5"
    },
    "11578": {
      "op": "ADD"
    },
    "11579": {
      "op": "SWAP12"
    },
    "11580": {
      "op": "SWAP1"
    },
    "11581": {
      "op": "SWAP12"
    },
    "11582": {
      "op": "MSTORE"
    },
    "11583": {
      "op": "POP"
    },
    "11584": {
      "op": "POP"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11587": {
      "op": "DUP2"
    },
    "11588": {
      "op": "ADD"
    },
    "11589": {
      "op": "SWAP8"
    },
    "11590": {
      "op": "SWAP1"
    },
    "11591": {
      "op": "SWAP8"
    },
    "11592": {
      "op": "MSTORE"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11595": {
      "op": "SWAP6"
    },
    "11596": {
      "op": "SWAP1"
    },
    "11597": {
      "op": "SWAP6"
    },
    "11598": {
      "op": "AND"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11601": {
      "op": "DUP8"
    },
    "11602": {
      "op": "ADD"
    },
    "11603": {
      "op": "MSTORE"
    },
    "11604": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11608": {
      "op": "SWAP4"
    },
    "11609": {
      "op": "SWAP1"
    },
    "11610": {
      "op": "SWAP4"
    },
    "11611": {
      "op": "AND"
    },
    "11612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11614": {
      "op": "DUP7"
    },
    "11615": {
      "op": "ADD"
    },
    "11616": {
      "op": "MSTORE"
    },
    "11617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11623": {
      "op": "SHL"
    },
    "11624": {
      "op": "SUB"
    },
    "11625": {
      "op": "SWAP2"
    },
    "11626": {
      "op": "SWAP1"
    },
    "11627": {
      "op": "SWAP2"
    },
    "11628": {
      "op": "AND"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11631": {
      "op": "DUP6"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "op": "MSTORE"
    },
    "11634": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11637": {
      "op": "SWAP1"
    },
    "11638": {
      "op": "DUP2"
    },
    "11639": {
      "op": "AND"
    },
    "11640": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11642": {
      "op": "DUP6"
    },
    "11643": {
      "op": "ADD"
    },
    "11644": {
      "op": "MSTORE"
    },
    "11645": {
      "op": "AND"
    },
    "11646": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11649": {
      "op": "DUP4"
    },
    "11650": {
      "op": "ADD"
    },
    "11651": {
      "op": "MSTORE"
    },
    "11652": {
      "op": "SWAP1"
    },
    "11653": {
      "op": "SWAP3"
    },
    "11654": {
      "op": "AND"
    },
    "11655": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11658": {
      "op": "SWAP1"
    },
    "11659": {
      "op": "SWAP3"
    },
    "11660": {
      "op": "ADD"
    },
    "11661": {
      "op": "SWAP2"
    },
    "11662": {
      "op": "SWAP1"
    },
    "11663": {
      "op": "SWAP2"
    },
    "11664": {
      "op": "MSTORE"
    },
    "11665": {
      "op": "SWAP2"
    },
    "11666": {
      "op": "SWAP1"
    },
    "11667": {
      "op": "POP"
    },
    "11668": {
      "jump": "o",
      "op": "JUMP"
    },
    "11669": {
      "op": "JUMPDEST"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11672": {
      "op": "DUP2"
    },
    "11673": {
      "op": "MSTORE"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11676": {
      "op": "DUP3"
    },
    "11677": {
      "op": "MLOAD"
    },
    "11678": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11681": {
      "op": "DUP1"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11684": {
      "op": "DUP6"
    },
    "11685": {
      "op": "ADD"
    },
    "11686": {
      "op": "MSTORE"
    },
    "11687": {
      "op": "PUSH2",
      "value": "0x2DB4"
    },
    "11690": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "11693": {
      "op": "DUP6"
    },
    "11694": {
      "op": "ADD"
    },
    "11695": {
      "op": "DUP4"
    },
    "11696": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "11699": {
      "jump": "i",
      "op": "JUMP"
    },
    "11700": {
      "op": "JUMPDEST"
    },
    "11701": {
      "op": "SWAP2"
    },
    "11702": {
      "op": "POP"
    },
    "11703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11705": {
      "op": "DUP6"
    },
    "11706": {
      "op": "ADD"
    },
    "11707": {
      "op": "MLOAD"
    },
    "11708": {
      "op": "PUSH2",
      "value": "0x2DCE"
    },
    "11711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11713": {
      "op": "DUP7"
    },
    "11714": {
      "op": "ADD"
    },
    "11715": {
      "op": "DUP3"
    },
    "11716": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11722": {
      "op": "AND"
    },
    "11723": {
      "op": "SWAP1"
    },
    "11724": {
      "op": "MSTORE"
    },
    "11725": {
      "op": "JUMP"
    },
    "11726": {
      "op": "JUMPDEST"
    },
    "11727": {
      "op": "POP"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11730": {
      "op": "DUP6"
    },
    "11731": {
      "op": "ADD"
    },
    "11732": {
      "op": "MLOAD"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11735": {
      "op": "DUP6"
    },
    "11736": {
      "op": "ADD"
    },
    "11737": {
      "op": "MSTORE"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11740": {
      "op": "DUP6"
    },
    "11741": {
      "op": "ADD"
    },
    "11742": {
      "op": "MLOAD"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11745": {
      "op": "DUP6"
    },
    "11746": {
      "op": "ADD"
    },
    "11747": {
      "op": "MSTORE"
    },
    "11748": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11750": {
      "op": "DUP6"
    },
    "11751": {
      "op": "ADD"
    },
    "11752": {
      "op": "MLOAD"
    },
    "11753": {
      "op": "PUSH2",
      "value": "0x2DF7"
    },
    "11756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11758": {
      "op": "DUP7"
    },
    "11759": {
      "op": "ADD"
    },
    "11760": {
      "op": "DUP3"
    },
    "11761": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11763": {
      "op": "AND"
    },
    "11764": {
      "op": "SWAP1"
    },
    "11765": {
      "op": "MSTORE"
    },
    "11766": {
      "op": "JUMP"
    },
    "11767": {
      "op": "JUMPDEST"
    },
    "11768": {
      "op": "POP"
    },
    "11769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11771": {
      "op": "DUP6"
    },
    "11772": {
      "op": "ADD"
    },
    "11773": {
      "op": "MLOAD"
    },
    "11774": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11778": {
      "op": "DUP2"
    },
    "11779": {
      "op": "AND"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11782": {
      "op": "DUP7"
    },
    "11783": {
      "op": "ADD"
    },
    "11784": {
      "op": "MSTORE"
    },
    "11785": {
      "op": "POP"
    },
    "11786": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11788": {
      "op": "DUP6"
    },
    "11789": {
      "op": "ADD"
    },
    "11790": {
      "op": "MLOAD"
    },
    "11791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11795": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11797": {
      "op": "SHL"
    },
    "11798": {
      "op": "SUB"
    },
    "11799": {
      "op": "DUP2"
    },
    "11800": {
      "op": "AND"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11803": {
      "op": "DUP7"
    },
    "11804": {
      "op": "ADD"
    },
    "11805": {
      "op": "MSTORE"
    },
    "11806": {
      "op": "POP"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11809": {
      "op": "DUP6"
    },
    "11810": {
      "op": "ADD"
    },
    "11811": {
      "op": "MLOAD"
    },
    "11812": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11815": {
      "op": "PUSH2",
      "value": "0x2E35"
    },
    "11818": {
      "op": "DUP2"
    },
    "11819": {
      "op": "DUP8"
    },
    "11820": {
      "op": "ADD"
    },
    "11821": {
      "op": "DUP4"
    },
    "11822": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11825": {
      "op": "AND"
    },
    "11826": {
      "op": "SWAP1"
    },
    "11827": {
      "op": "MSTORE"
    },
    "11828": {
      "op": "JUMP"
    },
    "11829": {
      "op": "JUMPDEST"
    },
    "11830": {
      "op": "DUP7"
    },
    "11831": {
      "op": "ADD"
    },
    "11832": {
      "op": "MLOAD"
    },
    "11833": {
      "op": "SWAP1"
    },
    "11834": {
      "op": "POP"
    },
    "11835": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11838": {
      "op": "PUSH2",
      "value": "0x2E4C"
    },
    "11841": {
      "op": "DUP7"
    },
    "11842": {
      "op": "DUP3"
    },
    "11843": {
      "op": "ADD"
    },
    "11844": {
      "op": "DUP4"
    },
    "11845": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11848": {
      "op": "AND"
    },
    "11849": {
      "op": "SWAP1"
    },
    "11850": {
      "op": "MSTORE"
    },
    "11851": {
      "op": "JUMP"
    },
    "11852": {
      "op": "JUMPDEST"
    },
    "11853": {
      "op": "DUP7"
    },
    "11854": {
      "op": "ADD"
    },
    "11855": {
      "op": "MLOAD"
    },
    "11856": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11862": {
      "op": "DUP2"
    },
    "11863": {
      "op": "AND"
    },
    "11864": {
      "op": "DUP4"
    },
    "11865": {
      "op": "DUP8"
    },
    "11866": {
      "op": "ADD"
    },
    "11867": {
      "op": "MSTORE"
    },
    "11868": {
      "op": "SWAP1"
    },
    "11869": {
      "op": "POP"
    },
    "11870": {
      "op": "PUSH2",
      "value": "0x14A7"
    },
    "11873": {
      "op": "JUMP"
    },
    "11874": {
      "op": "JUMPDEST"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11879": {
      "op": "DUP3"
    },
    "11880": {
      "op": "DUP5"
    },
    "11881": {
      "op": "SUB"
    },
    "11882": {
      "op": "SLT"
    },
    "11883": {
      "op": "ISZERO"
    },
    "11884": {
      "op": "PUSH2",
      "value": "0x2E74"
    },
    "11887": {
      "op": "JUMPI"
    },
    "11888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11890": {
      "op": "DUP1"
    },
    "11891": {
      "op": "REVERT"
    },
    "11892": {
      "op": "JUMPDEST"
    },
    "11893": {
      "op": "PUSH2",
      "value": "0x2C1C"
    },
    "11896": {
      "op": "DUP3"
    },
    "11897": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11900": {
      "jump": "i",
      "op": "JUMP"
    },
    "11901": {
      "op": "JUMPDEST"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11906": {
      "op": "DUP1"
    },
    "11907": {
      "op": "DUP4"
    },
    "11908": {
      "op": "ADD"
    },
    "11909": {
      "op": "DUP2"
    },
    "11910": {
      "op": "DUP5"
    },
    "11911": {
      "op": "MSTORE"
    },
    "11912": {
      "op": "DUP1"
    },
    "11913": {
      "op": "DUP6"
    },
    "11914": {
      "op": "MLOAD"
    },
    "11915": {
      "op": "DUP1"
    },
    "11916": {
      "op": "DUP4"
    },
    "11917": {
      "op": "MSTORE"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11920": {
      "op": "DUP7"
    },
    "11921": {
      "op": "ADD"
    },
    "11922": {
      "op": "SWAP2"
    },
    "11923": {
      "op": "POP"
    },
    "11924": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11926": {
      "op": "DUP2"
    },
    "11927": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11929": {
      "op": "SHL"
    },
    "11930": {
      "op": "DUP8"
    },
    "11931": {
      "op": "ADD"
    },
    "11932": {
      "op": "ADD"
    },
    "11933": {
      "op": "SWAP3"
    },
    "11934": {
      "op": "POP"
    },
    "11935": {
      "op": "DUP4"
    },
    "11936": {
      "op": "DUP8"
    },
    "11937": {
      "op": "ADD"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11940": {
      "op": "JUMPDEST"
    },
    "11941": {
      "op": "DUP3"
    },
    "11942": {
      "op": "DUP2"
    },
    "11943": {
      "op": "LT"
    },
    "11944": {
      "op": "ISZERO"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2ED2"
    },
    "11948": {
      "op": "JUMPI"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11951": {
      "op": "NOT"
    },
    "11952": {
      "op": "DUP9"
    },
    "11953": {
      "op": "DUP7"
    },
    "11954": {
      "op": "SUB"
    },
    "11955": {
      "op": "ADD"
    },
    "11956": {
      "op": "DUP5"
    },
    "11957": {
      "op": "MSTORE"
    },
    "11958": {
      "op": "PUSH2",
      "value": "0x2EC0"
    },
    "11961": {
      "op": "DUP6"
    },
    "11962": {
      "op": "DUP4"
    },
    "11963": {
      "op": "MLOAD"
    },
    "11964": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "11967": {
      "jump": "i",
      "op": "JUMP"
    },
    "11968": {
      "op": "JUMPDEST"
    },
    "11969": {
      "op": "SWAP5"
    },
    "11970": {
      "op": "POP"
    },
    "11971": {
      "op": "SWAP3"
    },
    "11972": {
      "op": "DUP6"
    },
    "11973": {
      "op": "ADD"
    },
    "11974": {
      "op": "SWAP3"
    },
    "11975": {
      "op": "SWAP1"
    },
    "11976": {
      "op": "DUP6"
    },
    "11977": {
      "op": "ADD"
    },
    "11978": {
      "op": "SWAP1"
    },
    "11979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11981": {
      "op": "ADD"
    },
    "11982": {
      "op": "PUSH2",
      "value": "0x2EA4"
    },
    "11985": {
      "op": "JUMP"
    },
    "11986": {
      "op": "JUMPDEST"
    },
    "11987": {
      "op": "POP"
    },
    "11988": {
      "op": "SWAP3"
    },
    "11989": {
      "op": "SWAP8"
    },
    "11990": {
      "op": "SWAP7"
    },
    "11991": {
      "op": "POP"
    },
    "11992": {
      "op": "POP"
    },
    "11993": {
      "op": "POP"
    },
    "11994": {
      "op": "POP"
    },
    "11995": {
      "op": "POP"
    },
    "11996": {
      "op": "POP"
    },
    "11997": {
      "op": "POP"
    },
    "11998": {
      "jump": "o",
      "op": "JUMP"
    },
    "11999": {
      "op": "JUMPDEST"
    },
    "12000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12002": {
      "op": "DUP1"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12005": {
      "op": "DUP1"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12008": {
      "op": "DUP1"
    },
    "12009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12013": {
      "op": "DUP9"
    },
    "12014": {
      "op": "DUP11"
    },
    "12015": {
      "op": "SUB"
    },
    "12016": {
      "op": "SLT"
    },
    "12017": {
      "op": "ISZERO"
    },
    "12018": {
      "op": "PUSH2",
      "value": "0x2EFA"
    },
    "12021": {
      "op": "JUMPI"
    },
    "12022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12024": {
      "op": "DUP1"
    },
    "12025": {
      "op": "REVERT"
    },
    "12026": {
      "op": "JUMPDEST"
    },
    "12027": {
      "op": "DUP8"
    },
    "12028": {
      "op": "CALLDATALOAD"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12035": {
      "op": "SHL"
    },
    "12036": {
      "op": "SUB"
    },
    "12037": {
      "op": "DUP2"
    },
    "12038": {
      "op": "GT"
    },
    "12039": {
      "op": "ISZERO"
    },
    "12040": {
      "op": "PUSH2",
      "value": "0x2F10"
    },
    "12043": {
      "op": "JUMPI"
    },
    "12044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12046": {
      "op": "DUP1"
    },
    "12047": {
      "op": "REVERT"
    },
    "12048": {
      "op": "JUMPDEST"
    },
    "12049": {
      "op": "PUSH2",
      "value": "0x2F1C"
    },
    "12052": {
      "op": "DUP11"
    },
    "12053": {
      "op": "DUP3"
    },
    "12054": {
      "op": "DUP12"
    },
    "12055": {
      "op": "ADD"
    },
    "12056": {
      "op": "PUSH2",
      "value": "0x2AA4"
    },
    "12059": {
      "jump": "i",
      "op": "JUMP"
    },
    "12060": {
      "op": "JUMPDEST"
    },
    "12061": {
      "op": "SWAP1"
    },
    "12062": {
      "op": "SWAP9"
    },
    "12063": {
      "op": "POP"
    },
    "12064": {
      "op": "SWAP7"
    },
    "12065": {
      "op": "POP"
    },
    "12066": {
      "op": "PUSH2",
      "value": "0x2B82"
    },
    "12069": {
      "op": "SWAP1"
    },
    "12070": {
      "op": "POP"
    },
    "12071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12073": {
      "op": "DUP10"
    },
    "12074": {
      "op": "ADD"
    },
    "12075": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "12078": {
      "jump": "i",
      "op": "JUMP"
    },
    "12079": {
      "op": "JUMPDEST"
    },
    "12080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12082": {
      "op": "DUP1"
    },
    "12083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12087": {
      "op": "DUP5"
    },
    "12088": {
      "op": "DUP7"
    },
    "12089": {
      "op": "SUB"
    },
    "12090": {
      "op": "SLT"
    },
    "12091": {
      "op": "ISZERO"
    },
    "12092": {
      "op": "PUSH2",
      "value": "0x2F44"
    },
    "12095": {
      "op": "JUMPI"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12098": {
      "op": "DUP1"
    },
    "12099": {
      "op": "REVERT"
    },
    "12100": {
      "op": "JUMPDEST"
    },
    "12101": {
      "op": "DUP4"
    },
    "12102": {
      "op": "CALLDATALOAD"
    },
    "12103": {
      "op": "SWAP3"
    },
    "12104": {
      "op": "POP"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12107": {
      "op": "DUP5"
    },
    "12108": {
      "op": "ADD"
    },
    "12109": {
      "op": "CALLDATALOAD"
    },
    "12110": {
      "op": "SWAP2"
    },
    "12111": {
      "op": "POP"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12114": {
      "op": "DUP5"
    },
    "12115": {
      "op": "ADD"
    },
    "12116": {
      "op": "CALLDATALOAD"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12123": {
      "op": "SHL"
    },
    "12124": {
      "op": "SUB"
    },
    "12125": {
      "op": "DUP2"
    },
    "12126": {
      "op": "GT"
    },
    "12127": {
      "op": "ISZERO"
    },
    "12128": {
      "op": "PUSH2",
      "value": "0x2F68"
    },
    "12131": {
      "op": "JUMPI"
    },
    "12132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12134": {
      "op": "DUP1"
    },
    "12135": {
      "op": "REVERT"
    },
    "12136": {
      "op": "JUMPDEST"
    },
    "12137": {
      "op": "PUSH2",
      "value": "0x2F74"
    },
    "12140": {
      "op": "DUP7"
    },
    "12141": {
      "op": "DUP3"
    },
    "12142": {
      "op": "DUP8"
    },
    "12143": {
      "op": "ADD"
    },
    "12144": {
      "op": "PUSH2",
      "value": "0x2961"
    },
    "12147": {
      "jump": "i",
      "op": "JUMP"
    },
    "12148": {
      "op": "JUMPDEST"
    },
    "12149": {
      "op": "SWAP2"
    },
    "12150": {
      "op": "POP"
    },
    "12151": {
      "op": "POP"
    },
    "12152": {
      "op": "SWAP3"
    },
    "12153": {
      "op": "POP"
    },
    "12154": {
      "op": "SWAP3"
    },
    "12155": {
      "op": "POP"
    },
    "12156": {
      "op": "SWAP3"
    },
    "12157": {
      "jump": "o",
      "op": "JUMP"
    },
    "12158": {
      "op": "JUMPDEST"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12163": {
      "op": "DUP3"
    },
    "12164": {
      "op": "DUP5"
    },
    "12165": {
      "op": "SUB"
    },
    "12166": {
      "op": "SLT"
    },
    "12167": {
      "op": "ISZERO"
    },
    "12168": {
      "op": "PUSH2",
      "value": "0x2F90"
    },
    "12171": {
      "op": "JUMPI"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12174": {
      "op": "DUP1"
    },
    "12175": {
      "op": "REVERT"
    },
    "12176": {
      "op": "JUMPDEST"
    },
    "12177": {
      "op": "DUP2"
    },
    "12178": {
      "op": "CALLDATALOAD"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12185": {
      "op": "SHL"
    },
    "12186": {
      "op": "SUB"
    },
    "12187": {
      "op": "DUP2"
    },
    "12188": {
      "op": "GT"
    },
    "12189": {
      "op": "ISZERO"
    },
    "12190": {
      "op": "PUSH2",
      "value": "0x2FA6"
    },
    "12193": {
      "op": "JUMPI"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12196": {
      "op": "DUP1"
    },
    "12197": {
      "op": "REVERT"
    },
    "12198": {
      "op": "JUMPDEST"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2FB2"
    },
    "12202": {
      "op": "DUP5"
    },
    "12203": {
      "op": "DUP3"
    },
    "12204": {
      "op": "DUP6"
    },
    "12205": {
      "op": "ADD"
    },
    "12206": {
      "op": "PUSH2",
      "value": "0x2C23"
    },
    "12209": {
      "jump": "i",
      "op": "JUMP"
    },
    "12210": {
      "op": "JUMPDEST"
    },
    "12211": {
      "op": "SWAP5"
    },
    "12212": {
      "op": "SWAP4"
    },
    "12213": {
      "op": "POP"
    },
    "12214": {
      "op": "POP"
    },
    "12215": {
      "op": "POP"
    },
    "12216": {
      "op": "POP"
    },
    "12217": {
      "jump": "o",
      "op": "JUMP"
    },
    "12218": {
      "op": "JUMPDEST"
    },
    "12219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12221": {
      "op": "DUP1"
    },
    "12222": {
      "op": "DUP3"
    },
    "12223": {
      "op": "MSTORE"
    },
    "12224": {
      "op": "DUP3"
    },
    "12225": {
      "op": "MLOAD"
    },
    "12226": {
      "op": "DUP3"
    },
    "12227": {
      "op": "DUP3"
    },
    "12228": {
      "op": "ADD"
    },
    "12229": {
      "op": "DUP2"
    },
    "12230": {
      "op": "SWAP1"
    },
    "12231": {
      "op": "MSTORE"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12234": {
      "op": "SWAP2"
    },
    "12235": {
      "op": "SWAP1"
    },
    "12236": {
      "op": "DUP5"
    },
    "12237": {
      "op": "DUP3"
    },
    "12238": {
      "op": "ADD"
    },
    "12239": {
      "op": "SWAP1"
    },
    "12240": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12242": {
      "op": "DUP6"
    },
    "12243": {
      "op": "ADD"
    },
    "12244": {
      "op": "SWAP1"
    },
    "12245": {
      "op": "DUP5"
    },
    "12246": {
      "op": "JUMPDEST"
    },
    "12247": {
      "op": "DUP2"
    },
    "12248": {
      "op": "DUP2"
    },
    "12249": {
      "op": "LT"
    },
    "12250": {
      "op": "ISZERO"
    },
    "12251": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12254": {
      "op": "JUMPI"
    },
    "12255": {
      "op": "DUP4"
    },
    "12256": {
      "op": "MLOAD"
    },
    "12257": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12260": {
      "op": "AND"
    },
    "12261": {
      "op": "DUP4"
    },
    "12262": {
      "op": "MSTORE"
    },
    "12263": {
      "op": "SWAP3"
    },
    "12264": {
      "op": "DUP5"
    },
    "12265": {
      "op": "ADD"
    },
    "12266": {
      "op": "SWAP3"
    },
    "12267": {
      "op": "SWAP2"
    },
    "12268": {
      "op": "DUP5"
    },
    "12269": {
      "op": "ADD"
    },
    "12270": {
      "op": "SWAP2"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12273": {
      "op": "ADD"
    },
    "12274": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12277": {
      "op": "JUMP"
    },
    "12278": {
      "op": "JUMPDEST"
    },
    "12279": {
      "op": "POP"
    },
    "12280": {
      "op": "SWAP1"
    },
    "12281": {
      "op": "SWAP7"
    },
    "12282": {
      "op": "SWAP6"
    },
    "12283": {
      "op": "POP"
    },
    "12284": {
      "op": "POP"
    },
    "12285": {
      "op": "POP"
    },
    "12286": {
      "op": "POP"
    },
    "12287": {
      "op": "POP"
    },
    "12288": {
      "op": "POP"
    },
    "12289": {
      "jump": "o",
      "op": "JUMP"
    },
    "12290": {
      "op": "JUMPDEST"
    },
    "12291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12293": {
      "op": "DUP2"
    },
    "12294": {
      "op": "DUP2"
    },
    "12295": {
      "op": "SHR"
    },
    "12296": {
      "op": "SWAP1"
    },
    "12297": {
      "op": "DUP3"
    },
    "12298": {
      "op": "AND"
    },
    "12299": {
      "op": "DUP1"
    },
    "12300": {
      "op": "PUSH2",
      "value": "0x3016"
    },
    "12303": {
      "op": "JUMPI"
    },
    "12304": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12306": {
      "op": "DUP3"
    },
    "12307": {
      "op": "AND"
    },
    "12308": {
      "op": "SWAP2"
    },
    "12309": {
      "op": "POP"
    },
    "12310": {
      "op": "JUMPDEST"
    },
    "12311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12313": {
      "op": "DUP3"
    },
    "12314": {
      "op": "LT"
    },
    "12315": {
      "op": "DUP2"
    },
    "12316": {
      "op": "SUB"
    },
    "12317": {
      "op": "PUSH2",
      "value": "0x3036"
    },
    "12320": {
      "op": "JUMPI"
    },
    "12321": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12328": {
      "op": "SHL"
    },
    "12329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12331": {
      "op": "MSTORE"
    },
    "12332": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12336": {
      "op": "MSTORE"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12341": {
      "op": "REVERT"
    },
    "12342": {
      "op": "JUMPDEST"
    },
    "12343": {
      "op": "POP"
    },
    "12344": {
      "op": "SWAP2"
    },
    "12345": {
      "op": "SWAP1"
    },
    "12346": {
      "op": "POP"
    },
    "12347": {
      "jump": "o",
      "op": "JUMP"
    },
    "12348": {
      "op": "JUMPDEST"
    },
    "12349": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12356": {
      "op": "SHL"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12359": {
      "op": "MSTORE"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12362": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12364": {
      "op": "MSTORE"
    },
    "12365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12369": {
      "op": "REVERT"
    },
    "12370": {
      "op": "JUMPDEST"
    },
    "12371": {
      "op": "DUP2"
    },
    "12372": {
      "op": "MLOAD"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12375": {
      "op": "SWAP1"
    },
    "12376": {
      "op": "DUP3"
    },
    "12377": {
      "op": "SWAP1"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12380": {
      "op": "DUP1"
    },
    "12381": {
      "op": "DUP7"
    },
    "12382": {
      "op": "ADD"
    },
    "12383": {
      "op": "DUP5"
    },
    "12384": {
      "op": "JUMPDEST"
    },
    "12385": {
      "op": "DUP4"
    },
    "12386": {
      "op": "DUP2"
    },
    "12387": {
      "op": "LT"
    },
    "12388": {
      "op": "ISZERO"
    },
    "12389": {
      "op": "PUSH2",
      "value": "0x307C"
    },
    "12392": {
      "op": "JUMPI"
    },
    "12393": {
      "op": "DUP2"
    },
    "12394": {
      "op": "MLOAD"
    },
    "12395": {
      "op": "DUP6"
    },
    "12396": {
      "op": "MSTORE"
    },
    "12397": {
      "op": "SWAP4"
    },
    "12398": {
      "op": "DUP3"
    },
    "12399": {
      "op": "ADD"
    },
    "12400": {
      "op": "SWAP4"
    },
    "12401": {
      "op": "SWAP1"
    },
    "12402": {
      "op": "DUP3"
    },
    "12403": {
      "op": "ADD"
    },
    "12404": {
      "op": "SWAP1"
    },
    "12405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12407": {
      "op": "ADD"
    },
    "12408": {
      "op": "PUSH2",
      "value": "0x3060"
    },
    "12411": {
      "op": "JUMP"
    },
    "12412": {
      "op": "JUMPDEST"
    },
    "12413": {
      "op": "POP"
    },
    "12414": {
      "op": "SWAP3"
    },
    "12415": {
      "op": "SWAP7"
    },
    "12416": {
      "op": "SWAP6"
    },
    "12417": {
      "op": "POP"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "op": "POP"
    },
    "12420": {
      "op": "POP"
    },
    "12421": {
      "op": "POP"
    },
    "12422": {
      "op": "POP"
    },
    "12423": {
      "jump": "o",
      "op": "JUMP"
    },
    "12424": {
      "op": "JUMPDEST"
    },
    "12425": {
      "op": "DUP5"
    },
    "12426": {
      "op": "DUP2"
    },
    "12427": {
      "op": "MSTORE"
    },
    "12428": {
      "op": "DUP4"
    },
    "12429": {
      "op": "ISZERO"
    },
    "12430": {
      "op": "ISZERO"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12433": {
      "op": "DUP3"
    },
    "12434": {
      "op": "ADD"
    },
    "12435": {
      "op": "MSTORE"
    },
    "12436": {
      "op": "DUP3"
    },
    "12437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12439": {
      "op": "DUP3"
    },
    "12440": {
      "op": "ADD"
    },
    "12441": {
      "op": "MSTORE"
    },
    "12442": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12444": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12446": {
      "op": "DUP3"
    },
    "12447": {
      "op": "ADD"
    },
    "12448": {
      "op": "MSTORE"
    },
    "12449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12451": {
      "op": "PUSH2",
      "value": "0x30AF"
    },
    "12454": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12456": {
      "op": "DUP4"
    },
    "12457": {
      "op": "ADD"
    },
    "12458": {
      "op": "DUP5"
    },
    "12459": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "12462": {
      "jump": "i",
      "op": "JUMP"
    },
    "12463": {
      "op": "JUMPDEST"
    },
    "12464": {
      "op": "SWAP7"
    },
    "12465": {
      "op": "SWAP6"
    },
    "12466": {
      "op": "POP"
    },
    "12467": {
      "op": "POP"
    },
    "12468": {
      "op": "POP"
    },
    "12469": {
      "op": "POP"
    },
    "12470": {
      "op": "POP"
    },
    "12471": {
      "op": "POP"
    },
    "12472": {
      "jump": "o",
      "op": "JUMP"
    },
    "12473": {
      "op": "JUMPDEST"
    },
    "12474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12476": {
      "op": "DUP1"
    },
    "12477": {
      "op": "DUP3"
    },
    "12478": {
      "op": "MSTORE"
    },
    "12479": {
      "op": "DUP2"
    },
    "12480": {
      "op": "DUP2"
    },
    "12481": {
      "op": "ADD"
    },
    "12482": {
      "op": "MSTORE"
    },
    "12483": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12518": {
      "op": "DUP3"
    },
    "12519": {
      "op": "ADD"
    },
    "12520": {
      "op": "MSTORE"
    },
    "12521": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12523": {
      "op": "ADD"
    },
    "12524": {
      "op": "SWAP1"
    },
    "12525": {
      "jump": "o",
      "op": "JUMP"
    },
    "12526": {
      "op": "JUMPDEST"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12529": {
      "op": "DUP2"
    },
    "12530": {
      "op": "MSTORE"
    },
    "12531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12533": {
      "op": "PUSH2",
      "value": "0x2C1C"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12538": {
      "op": "DUP4"
    },
    "12539": {
      "op": "ADD"
    },
    "12540": {
      "op": "DUP5"
    },
    "12541": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "12544": {
      "jump": "i",
      "op": "JUMP"
    },
    "12545": {
      "op": "JUMPDEST"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12550": {
      "op": "DUP1"
    },
    "12551": {
      "op": "DUP4"
    },
    "12552": {
      "op": "MSTORE"
    },
    "12553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12555": {
      "op": "DUP5"
    },
    "12556": {
      "op": "SLOAD"
    },
    "12557": {
      "op": "PUSH2",
      "value": "0x3115"
    },
    "12560": {
      "op": "DUP2"
    },
    "12561": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "12564": {
      "jump": "i",
      "op": "JUMP"
    },
    "12565": {
      "op": "JUMPDEST"
    },
    "12566": {
      "op": "DUP1"
    },
    "12567": {
      "op": "DUP5"
    },
    "12568": {
      "op": "DUP8"
    },
    "12569": {
      "op": "ADD"
    },
    "12570": {
      "op": "MSTORE"
    },
    "12571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12575": {
      "op": "DUP1"
    },
    "12576": {
      "op": "DUP5"
    },
    "12577": {
      "op": "AND"
    },
    "12578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12580": {
      "op": "DUP2"
    },
    "12581": {
      "op": "EQ"
    },
    "12582": {
      "op": "PUSH2",
      "value": "0x3136"
    },
    "12585": {
      "op": "JUMPI"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12588": {
      "op": "DUP2"
    },
    "12589": {
      "op": "EQ"
    },
    "12590": {
      "op": "PUSH2",
      "value": "0x3150"
    },
    "12593": {
      "op": "JUMPI"
    },
    "12594": {
      "op": "PUSH2",
      "value": "0x317E"
    },
    "12597": {
      "op": "JUMP"
    },
    "12598": {
      "op": "JUMPDEST"
    },
    "12599": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12601": {
      "op": "NOT"
    },
    "12602": {
      "op": "DUP6"
    },
    "12603": {
      "op": "AND"
    },
    "12604": {
      "op": "DUP10"
    },
    "12605": {
      "op": "DUP5"
    },
    "12606": {
      "op": "ADD"
    },
    "12607": {
      "op": "MSTORE"
    },
    "12608": {
      "op": "DUP4"
    },
    "12609": {
      "op": "ISZERO"
    },
    "12610": {
      "op": "ISZERO"
    },
    "12611": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12613": {
      "op": "SHL"
    },
    "12614": {
      "op": "DUP10"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "op": "DUP4"
    },
    "12617": {
      "op": "ADD"
    },
    "12618": {
      "op": "SWAP6"
    },
    "12619": {
      "op": "POP"
    },
    "12620": {
      "op": "PUSH2",
      "value": "0x317E"
    },
    "12623": {
      "op": "JUMP"
    },
    "12624": {
      "op": "JUMPDEST"
    },
    "12625": {
      "op": "DUP10"
    },
    "12626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12628": {
      "op": "MSTORE"
    },
    "12629": {
      "op": "DUP7"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12632": {
      "op": "KECCAK256"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12635": {
      "op": "JUMPDEST"
    },
    "12636": {
      "op": "DUP6"
    },
    "12637": {
      "op": "DUP2"
    },
    "12638": {
      "op": "LT"
    },
    "12639": {
      "op": "ISZERO"
    },
    "12640": {
      "op": "PUSH2",
      "value": "0x3176"
    },
    "12643": {
      "op": "JUMPI"
    },
    "12644": {
      "op": "DUP2"
    },
    "12645": {
      "op": "SLOAD"
    },
    "12646": {
      "op": "DUP12"
    },
    "12647": {
      "op": "DUP3"
    },
    "12648": {
      "op": "ADD"
    },
    "12649": {
      "op": "DUP7"
    },
    "12650": {
      "op": "ADD"
    },
    "12651": {
      "op": "MSTORE"
    },
    "12652": {
      "op": "SWAP1"
    },
    "12653": {
      "op": "DUP4"
    },
    "12654": {
      "op": "ADD"
    },
    "12655": {
      "op": "SWAP1"
    },
    "12656": {
      "op": "DUP9"
    },
    "12657": {
      "op": "ADD"
    },
    "12658": {
      "op": "PUSH2",
      "value": "0x315B"
    },
    "12661": {
      "op": "JUMP"
    },
    "12662": {
      "op": "JUMPDEST"
    },
    "12663": {
      "op": "DUP11"
    },
    "12664": {
      "op": "ADD"
    },
    "12665": {
      "op": "DUP5"
    },
    "12666": {
      "op": "ADD"
    },
    "12667": {
      "op": "SWAP7"
    },
    "12668": {
      "op": "POP"
    },
    "12669": {
      "op": "POP"
    },
    "12670": {
      "op": "JUMPDEST"
    },
    "12671": {
      "op": "POP"
    },
    "12672": {
      "op": "SWAP4"
    },
    "12673": {
      "op": "SWAP9"
    },
    "12674": {
      "op": "SWAP8"
    },
    "12675": {
      "op": "POP"
    },
    "12676": {
      "op": "POP"
    },
    "12677": {
      "op": "POP"
    },
    "12678": {
      "op": "POP"
    },
    "12679": {
      "op": "POP"
    },
    "12680": {
      "op": "POP"
    },
    "12681": {
      "op": "POP"
    },
    "12682": {
      "op": "POP"
    },
    "12683": {
      "jump": "o",
      "op": "JUMP"
    },
    "12684": {
      "op": "JUMPDEST"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12687": {
      "op": "DUP3"
    },
    "12688": {
      "op": "GT"
    },
    "12689": {
      "op": "ISZERO"
    },
    "12690": {
      "op": "PUSH2",
      "value": "0x31D6"
    },
    "12693": {
      "op": "JUMPI"
    },
    "12694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12696": {
      "op": "DUP2"
    },
    "12697": {
      "op": "DUP2"
    },
    "12698": {
      "op": "MSTORE"
    },
    "12699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12701": {
      "op": "DUP2"
    },
    "12702": {
      "op": "KECCAK256"
    },
    "12703": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12705": {
      "op": "DUP6"
    },
    "12706": {
      "op": "ADD"
    },
    "12707": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12709": {
      "op": "SHR"
    },
    "12710": {
      "op": "DUP2"
    },
    "12711": {
      "op": "ADD"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12714": {
      "op": "DUP7"
    },
    "12715": {
      "op": "LT"
    },
    "12716": {
      "op": "ISZERO"
    },
    "12717": {
      "op": "PUSH2",
      "value": "0x31B3"
    },
    "12720": {
      "op": "JUMPI"
    },
    "12721": {
      "op": "POP"
    },
    "12722": {
      "op": "DUP1"
    },
    "12723": {
      "op": "JUMPDEST"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12726": {
      "op": "DUP6"
    },
    "12727": {
      "op": "ADD"
    },
    "12728": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12730": {
      "op": "SHR"
    },
    "12731": {
      "op": "DUP3"
    },
    "12732": {
      "op": "ADD"
    },
    "12733": {
      "op": "SWAP2"
    },
    "12734": {
      "op": "POP"
    },
    "12735": {
      "op": "JUMPDEST"
    },
    "12736": {
      "op": "DUP2"
    },
    "12737": {
      "op": "DUP2"
    },
    "12738": {
      "op": "LT"
    },
    "12739": {
      "op": "ISZERO"
    },
    "12740": {
      "op": "PUSH2",
      "value": "0x31D2"
    },
    "12743": {
      "op": "JUMPI"
    },
    "12744": {
      "op": "DUP3"
    },
    "12745": {
      "op": "DUP2"
    },
    "12746": {
      "op": "SSTORE"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12749": {
      "op": "ADD"
    },
    "12750": {
      "op": "PUSH2",
      "value": "0x31BF"
    },
    "12753": {
      "op": "JUMP"
    },
    "12754": {
      "op": "JUMPDEST"
    },
    "12755": {
      "op": "POP"
    },
    "12756": {
      "op": "POP"
    },
    "12757": {
      "op": "POP"
    },
    "12758": {
      "op": "JUMPDEST"
    },
    "12759": {
      "op": "POP"
    },
    "12760": {
      "op": "POP"
    },
    "12761": {
      "op": "POP"
    },
    "12762": {
      "jump": "o",
      "op": "JUMP"
    },
    "12763": {
      "op": "JUMPDEST"
    },
    "12764": {
      "op": "DUP2"
    },
    "12765": {
      "op": "MLOAD"
    },
    "12766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12772": {
      "op": "SHL"
    },
    "12773": {
      "op": "SUB"
    },
    "12774": {
      "op": "DUP2"
    },
    "12775": {
      "op": "GT"
    },
    "12776": {
      "op": "ISZERO"
    },
    "12777": {
      "op": "PUSH2",
      "value": "0x31F4"
    },
    "12780": {
      "op": "JUMPI"
    },
    "12781": {
      "op": "PUSH2",
      "value": "0x31F4"
    },
    "12784": {
      "op": "PUSH2",
      "value": "0x291B"
    },
    "12787": {
      "jump": "i",
      "op": "JUMP"
    },
    "12788": {
      "op": "JUMPDEST"
    },
    "12789": {
      "op": "PUSH2",
      "value": "0x3208"
    },
    "12792": {
      "op": "DUP2"
    },
    "12793": {
      "op": "PUSH2",
      "value": "0x3202"
    },
    "12796": {
      "op": "DUP5"
    },
    "12797": {
      "op": "SLOAD"
    },
    "12798": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "12801": {
      "jump": "i",
      "op": "JUMP"
    },
    "12802": {
      "op": "JUMPDEST"
    },
    "12803": {
      "op": "DUP5"
    },
    "12804": {
      "op": "PUSH2",
      "value": "0x318C"
    },
    "12807": {
      "jump": "i",
      "op": "JUMP"
    },
    "12808": {
      "op": "JUMPDEST"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12811": {
      "op": "DUP1"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12814": {
      "op": "DUP4"
    },
    "12815": {
      "op": "GT"
    },
    "12816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12818": {
      "op": "DUP2"
    },
    "12819": {
      "op": "EQ"
    },
    "12820": {
      "op": "PUSH2",
      "value": "0x323D"
    },
    "12823": {
      "op": "JUMPI"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12826": {
      "op": "DUP5"
    },
    "12827": {
      "op": "ISZERO"
    },
    "12828": {
      "op": "PUSH2",
      "value": "0x3225"
    },
    "12831": {
      "op": "JUMPI"
    },
    "12832": {
      "op": "POP"
    },
    "12833": {
      "op": "DUP6"
    },
    "12834": {
      "op": "DUP4"
    },
    "12835": {
      "op": "ADD"
    },
    "12836": {
      "op": "MLOAD"
    },
    "12837": {
      "op": "JUMPDEST"
    },
    "12838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12840": {
      "op": "NOT"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12843": {
      "op": "DUP7"
    },
    "12844": {
      "op": "SWAP1"
    },
    "12845": {
      "op": "SHL"
    },
    "12846": {
      "op": "SHR"
    },
    "12847": {
      "op": "NOT"
    },
    "12848": {
      "op": "AND"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12851": {
      "op": "DUP6"
    },
    "12852": {
      "op": "SWAP1"
    },
    "12853": {
      "op": "SHL"
    },
    "12854": {
      "op": "OR"
    },
    "12855": {
      "op": "DUP6"
    },
    "12856": {
      "op": "SSTORE"
    },
    "12857": {
      "op": "PUSH2",
      "value": "0x31D2"
    },
    "12860": {
      "op": "JUMP"
    },
    "12861": {
      "op": "JUMPDEST"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12864": {
      "op": "DUP6"
    },
    "12865": {
      "op": "DUP2"
    },
    "12866": {
      "op": "MSTORE"
    },
    "12867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12869": {
      "op": "DUP2"
    },
    "12870": {
      "op": "KECCAK256"
    },
    "12871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12873": {
      "op": "NOT"
    },
    "12874": {
      "op": "DUP7"
    },
    "12875": {
      "op": "AND"
    },
    "12876": {
      "op": "SWAP2"
    },
    "12877": {
      "op": "JUMPDEST"
    },
    "12878": {
      "op": "DUP3"
    },
    "12879": {
      "op": "DUP2"
    },
    "12880": {
      "op": "LT"
    },
    "12881": {
      "op": "ISZERO"
    },
    "12882": {
      "op": "PUSH2",
      "value": "0x326C"
    },
    "12885": {
      "op": "JUMPI"
    },
    "12886": {
      "op": "DUP9"
    },
    "12887": {
      "op": "DUP7"
    },
    "12888": {
      "op": "ADD"
    },
    "12889": {
      "op": "MLOAD"
    },
    "12890": {
      "op": "DUP3"
    },
    "12891": {
      "op": "SSTORE"
    },
    "12892": {
      "op": "SWAP5"
    },
    "12893": {
      "op": "DUP5"
    },
    "12894": {
      "op": "ADD"
    },
    "12895": {
      "op": "SWAP5"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12898": {
      "op": "SWAP1"
    },
    "12899": {
      "op": "SWAP2"
    },
    "12900": {
      "op": "ADD"
    },
    "12901": {
      "op": "SWAP1"
    },
    "12902": {
      "op": "DUP5"
    },
    "12903": {
      "op": "ADD"
    },
    "12904": {
      "op": "PUSH2",
      "value": "0x324D"
    },
    "12907": {
      "op": "JUMP"
    },
    "12908": {
      "op": "JUMPDEST"
    },
    "12909": {
      "op": "POP"
    },
    "12910": {
      "op": "DUP6"
    },
    "12911": {
      "op": "DUP3"
    },
    "12912": {
      "op": "LT"
    },
    "12913": {
      "op": "ISZERO"
    },
    "12914": {
      "op": "PUSH2",
      "value": "0x328A"
    },
    "12917": {
      "op": "JUMPI"
    },
    "12918": {
      "op": "DUP8"
    },
    "12919": {
      "op": "DUP6"
    },
    "12920": {
      "op": "ADD"
    },
    "12921": {
      "op": "MLOAD"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12924": {
      "op": "NOT"
    },
    "12925": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12927": {
      "op": "DUP9"
    },
    "12928": {
      "op": "SWAP1"
    },
    "12929": {
      "op": "SHL"
    },
    "12930": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12932": {
      "op": "AND"
    },
    "12933": {
      "op": "SHR"
    },
    "12934": {
      "op": "NOT"
    },
    "12935": {
      "op": "AND"
    },
    "12936": {
      "op": "DUP2"
    },
    "12937": {
      "op": "SSTORE"
    },
    "12938": {
      "op": "JUMPDEST"
    },
    "12939": {
      "op": "POP"
    },
    "12940": {
      "op": "POP"
    },
    "12941": {
      "op": "POP"
    },
    "12942": {
      "op": "POP"
    },
    "12943": {
      "op": "POP"
    },
    "12944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12946": {
      "op": "SWAP1"
    },
    "12947": {
      "op": "DUP2"
    },
    "12948": {
      "op": "SHL"
    },
    "12949": {
      "op": "ADD"
    },
    "12950": {
      "op": "SWAP1"
    },
    "12951": {
      "op": "SSTORE"
    },
    "12952": {
      "op": "POP"
    },
    "12953": {
      "jump": "o",
      "op": "JUMP"
    },
    "12954": {
      "op": "JUMPDEST"
    },
    "12955": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12962": {
      "op": "SHL"
    },
    "12963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12965": {
      "op": "MSTORE"
    },
    "12966": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12970": {
      "op": "MSTORE"
    },
    "12971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12975": {
      "op": "REVERT"
    },
    "12976": {
      "op": "JUMPDEST"
    },
    "12977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12979": {
      "op": "DUP3"
    },
    "12980": {
      "op": "NOT"
    },
    "12981": {
      "op": "DUP3"
    },
    "12982": {
      "op": "GT"
    },
    "12983": {
      "op": "ISZERO"
    },
    "12984": {
      "op": "PUSH2",
      "value": "0x32C3"
    },
    "12987": {
      "op": "JUMPI"
    },
    "12988": {
      "op": "PUSH2",
      "value": "0x32C3"
    },
    "12991": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "12994": {
      "jump": "i",
      "op": "JUMP"
    },
    "12995": {
      "op": "JUMPDEST"
    },
    "12996": {
      "op": "POP"
    },
    "12997": {
      "op": "ADD"
    },
    "12998": {
      "op": "SWAP1"
    },
    "12999": {
      "jump": "o",
      "op": "JUMP"
    },
    "13000": {
      "op": "JUMPDEST"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13005": {
      "op": "DUP3"
    },
    "13006": {
      "op": "ADD"
    },
    "13007": {
      "op": "PUSH2",
      "value": "0x32DA"
    },
    "13010": {
      "op": "JUMPI"
    },
    "13011": {
      "op": "PUSH2",
      "value": "0x32DA"
    },
    "13014": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13017": {
      "jump": "i",
      "op": "JUMP"
    },
    "13018": {
      "op": "JUMPDEST"
    },
    "13019": {
      "op": "POP"
    },
    "13020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13022": {
      "op": "ADD"
    },
    "13023": {
      "op": "SWAP1"
    },
    "13024": {
      "jump": "o",
      "op": "JUMP"
    },
    "13025": {
      "op": "JUMPDEST"
    },
    "13026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13030": {
      "op": "DUP3"
    },
    "13031": {
      "op": "DUP5"
    },
    "13032": {
      "op": "SUB"
    },
    "13033": {
      "op": "SLT"
    },
    "13034": {
      "op": "ISZERO"
    },
    "13035": {
      "op": "PUSH2",
      "value": "0x32F3"
    },
    "13038": {
      "op": "JUMPI"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13041": {
      "op": "DUP1"
    },
    "13042": {
      "op": "REVERT"
    },
    "13043": {
      "op": "JUMPDEST"
    },
    "13044": {
      "op": "DUP2"
    },
    "13045": {
      "op": "MLOAD"
    },
    "13046": {
      "op": "PUSH2",
      "value": "0x2C1C"
    },
    "13049": {
      "op": "DUP2"
    },
    "13050": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "13053": {
      "jump": "i",
      "op": "JUMP"
    },
    "13054": {
      "op": "JUMPDEST"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13061": {
      "op": "SHL"
    },
    "13062": {
      "op": "SUB"
    },
    "13063": {
      "op": "DUP4"
    },
    "13064": {
      "op": "GT"
    },
    "13065": {
      "op": "ISZERO"
    },
    "13066": {
      "op": "PUSH2",
      "value": "0x3315"
    },
    "13069": {
      "op": "JUMPI"
    },
    "13070": {
      "op": "PUSH2",
      "value": "0x3315"
    },
    "13073": {
      "op": "PUSH2",
      "value": "0x291B"
    },
    "13076": {
      "jump": "i",
      "op": "JUMP"
    },
    "13077": {
      "op": "JUMPDEST"
    },
    "13078": {
      "op": "PUSH2",
      "value": "0x3329"
    },
    "13081": {
      "op": "DUP4"
    },
    "13082": {
      "op": "PUSH2",
      "value": "0x3323"
    },
    "13085": {
      "op": "DUP4"
    },
    "13086": {
      "op": "SLOAD"
    },
    "13087": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "13090": {
      "jump": "i",
      "op": "JUMP"
    },
    "13091": {
      "op": "JUMPDEST"
    },
    "13092": {
      "op": "DUP4"
    },
    "13093": {
      "op": "PUSH2",
      "value": "0x318C"
    },
    "13096": {
      "jump": "i",
      "op": "JUMP"
    },
    "13097": {
      "op": "JUMPDEST"
    },
    "13098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13100": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13102": {
      "op": "DUP5"
    },
    "13103": {
      "op": "GT"
    },
    "13104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13106": {
      "op": "DUP2"
    },
    "13107": {
      "op": "EQ"
    },
    "13108": {
      "op": "PUSH2",
      "value": "0x335D"
    },
    "13111": {
      "op": "JUMPI"
    },
    "13112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13114": {
      "op": "DUP6"
    },
    "13115": {
      "op": "ISZERO"
    },
    "13116": {
      "op": "PUSH2",
      "value": "0x3345"
    },
    "13119": {
      "op": "JUMPI"
    },
    "13120": {
      "op": "POP"
    },
    "13121": {
      "op": "DUP4"
    },
    "13122": {
      "op": "DUP3"
    },
    "13123": {
      "op": "ADD"
    },
    "13124": {
      "op": "CALLDATALOAD"
    },
    "13125": {
      "op": "JUMPDEST"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13128": {
      "op": "NOT"
    },
    "13129": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13131": {
      "op": "DUP8"
    },
    "13132": {
      "op": "SWAP1"
    },
    "13133": {
      "op": "SHL"
    },
    "13134": {
      "op": "SHR"
    },
    "13135": {
      "op": "NOT"
    },
    "13136": {
      "op": "AND"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13139": {
      "op": "DUP7"
    },
    "13140": {
      "op": "SWAP1"
    },
    "13141": {
      "op": "SHL"
    },
    "13142": {
      "op": "OR"
    },
    "13143": {
      "op": "DUP4"
    },
    "13144": {
      "op": "SSTORE"
    },
    "13145": {
      "op": "PUSH2",
      "value": "0x33B7"
    },
    "13148": {
      "op": "JUMP"
    },
    "13149": {
      "op": "JUMPDEST"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13152": {
      "op": "DUP4"
    },
    "13153": {
      "op": "DUP2"
    },
    "13154": {
      "op": "MSTORE"
    },
    "13155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13157": {
      "op": "SWAP1"
    },
    "13158": {
      "op": "KECCAK256"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13161": {
      "op": "NOT"
    },
    "13162": {
      "op": "DUP7"
    },
    "13163": {
      "op": "AND"
    },
    "13164": {
      "op": "SWAP1"
    },
    "13165": {
      "op": "DUP4"
    },
    "13166": {
      "op": "JUMPDEST"
    },
    "13167": {
      "op": "DUP3"
    },
    "13168": {
      "op": "DUP2"
    },
    "13169": {
      "op": "LT"
    },
    "13170": {
      "op": "ISZERO"
    },
    "13171": {
      "op": "PUSH2",
      "value": "0x338E"
    },
    "13174": {
      "op": "JUMPI"
    },
    "13175": {
      "op": "DUP7"
    },
    "13176": {
      "op": "DUP6"
    },
    "13177": {
      "op": "ADD"
    },
    "13178": {
      "op": "CALLDATALOAD"
    },
    "13179": {
      "op": "DUP3"
    },
    "13180": {
      "op": "SSTORE"
    },
    "13181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13183": {
      "op": "SWAP5"
    },
    "13184": {
      "op": "DUP6"
    },
    "13185": {
      "op": "ADD"
    },
    "13186": {
      "op": "SWAP5"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13189": {
      "op": "SWAP1"
    },
    "13190": {
      "op": "SWAP3"
    },
    "13191": {
      "op": "ADD"
    },
    "13192": {
      "op": "SWAP2"
    },
    "13193": {
      "op": "ADD"
    },
    "13194": {
      "op": "PUSH2",
      "value": "0x336E"
    },
    "13197": {
      "op": "JUMP"
    },
    "13198": {
      "op": "JUMPDEST"
    },
    "13199": {
      "op": "POP"
    },
    "13200": {
      "op": "DUP7"
    },
    "13201": {
      "op": "DUP3"
    },
    "13202": {
      "op": "LT"
    },
    "13203": {
      "op": "ISZERO"
    },
    "13204": {
      "op": "PUSH2",
      "value": "0x33AB"
    },
    "13207": {
      "op": "JUMPI"
    },
    "13208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13210": {
      "op": "NOT"
    },
    "13211": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13213": {
      "op": "DUP9"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13216": {
      "op": "SHL"
    },
    "13217": {
      "op": "AND"
    },
    "13218": {
      "op": "SHR"
    },
    "13219": {
      "op": "NOT"
    },
    "13220": {
      "op": "DUP5"
    },
    "13221": {
      "op": "DUP8"
    },
    "13222": {
      "op": "ADD"
    },
    "13223": {
      "op": "CALLDATALOAD"
    },
    "13224": {
      "op": "AND"
    },
    "13225": {
      "op": "DUP2"
    },
    "13226": {
      "op": "SSTORE"
    },
    "13227": {
      "op": "JUMPDEST"
    },
    "13228": {
      "op": "POP"
    },
    "13229": {
      "op": "POP"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13232": {
      "op": "DUP6"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13235": {
      "op": "SHL"
    },
    "13236": {
      "op": "ADD"
    },
    "13237": {
      "op": "DUP4"
    },
    "13238": {
      "op": "SSTORE"
    },
    "13239": {
      "op": "JUMPDEST"
    },
    "13240": {
      "op": "POP"
    },
    "13241": {
      "op": "POP"
    },
    "13242": {
      "op": "POP"
    },
    "13243": {
      "op": "POP"
    },
    "13244": {
      "op": "POP"
    },
    "13245": {
      "jump": "o",
      "op": "JUMP"
    },
    "13246": {
      "op": "JUMPDEST"
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13255": {
      "op": "SHL"
    },
    "13256": {
      "op": "SUB"
    },
    "13257": {
      "op": "DUP1"
    },
    "13258": {
      "op": "DUP5"
    },
    "13259": {
      "op": "AND"
    },
    "13260": {
      "op": "DUP1"
    },
    "13261": {
      "op": "PUSH2",
      "value": "0x33E6"
    },
    "13264": {
      "op": "JUMPI"
    },
    "13265": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13272": {
      "op": "SHL"
    },
    "13273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13275": {
      "op": "MSTORE"
    },
    "13276": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13280": {
      "op": "MSTORE"
    },
    "13281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13285": {
      "op": "REVERT"
    },
    "13286": {
      "op": "JUMPDEST"
    },
    "13287": {
      "op": "SWAP3"
    },
    "13288": {
      "op": "AND"
    },
    "13289": {
      "op": "SWAP2"
    },
    "13290": {
      "op": "SWAP1"
    },
    "13291": {
      "op": "SWAP2"
    },
    "13292": {
      "op": "DIV"
    },
    "13293": {
      "op": "SWAP3"
    },
    "13294": {
      "op": "SWAP2"
    },
    "13295": {
      "op": "POP"
    },
    "13296": {
      "op": "POP"
    },
    "13297": {
      "jump": "o",
      "op": "JUMP"
    },
    "13298": {
      "op": "JUMPDEST"
    },
    "13299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13301": {
      "op": "DUP1"
    },
    "13302": {
      "op": "DUP3"
    },
    "13303": {
      "op": "MSTORE"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "13306": {
      "op": "SWAP1"
    },
    "13307": {
      "op": "DUP3"
    },
    "13308": {
      "op": "ADD"
    },
    "13309": {
      "op": "MSTORE"
    },
    "13310": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "13333": {
      "op": "SHL"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13336": {
      "op": "DUP3"
    },
    "13337": {
      "op": "ADD"
    },
    "13338": {
      "op": "MSTORE"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13341": {
      "op": "ADD"
    },
    "13342": {
      "op": "SWAP1"
    },
    "13343": {
      "jump": "o",
      "op": "JUMP"
    },
    "13344": {
      "op": "JUMPDEST"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13347": {
      "op": "DUP3"
    },
    "13348": {
      "op": "MLOAD"
    },
    "13349": {
      "op": "PUSH2",
      "value": "0x3432"
    },
    "13352": {
      "op": "DUP2"
    },
    "13353": {
      "op": "DUP5"
    },
    "13354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13356": {
      "op": "DUP8"
    },
    "13357": {
      "op": "ADD"
    },
    "13358": {
      "op": "PUSH2",
      "value": "0x287F"
    },
    "13361": {
      "jump": "i",
      "op": "JUMP"
    },
    "13362": {
      "op": "JUMPDEST"
    },
    "13363": {
      "op": "SWAP2"
    },
    "13364": {
      "op": "SWAP1"
    },
    "13365": {
      "op": "SWAP2"
    },
    "13366": {
      "op": "ADD"
    },
    "13367": {
      "op": "SWAP3"
    },
    "13368": {
      "op": "SWAP2"
    },
    "13369": {
      "op": "POP"
    },
    "13370": {
      "op": "POP"
    },
    "13371": {
      "jump": "o",
      "op": "JUMP"
    },
    "13372": {
      "op": "JUMPDEST"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13375": {
      "op": "DUP1"
    },
    "13376": {
      "op": "DUP4"
    },
    "13377": {
      "op": "SLOAD"
    },
    "13378": {
      "op": "PUSH2",
      "value": "0x344A"
    },
    "13381": {
      "op": "DUP2"
    },
    "13382": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "13385": {
      "jump": "i",
      "op": "JUMP"
    },
    "13386": {
      "op": "JUMPDEST"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13389": {
      "op": "DUP3"
    },
    "13390": {
      "op": "DUP2"
    },
    "13391": {
      "op": "AND"
    },
    "13392": {
      "op": "DUP1"
    },
    "13393": {
      "op": "ISZERO"
    },
    "13394": {
      "op": "PUSH2",
      "value": "0x3462"
    },
    "13397": {
      "op": "JUMPI"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13400": {
      "op": "DUP2"
    },
    "13401": {
      "op": "EQ"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x3477"
    },
    "13405": {
      "op": "JUMPI"
    },
    "13406": {
      "op": "PUSH2",
      "value": "0x307C"
    },
    "13409": {
      "op": "JUMP"
    },
    "13410": {
      "op": "JUMPDEST"
    },
    "13411": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13413": {
      "op": "NOT"
    },
    "13414": {
      "op": "DUP5"
    },
    "13415": {
      "op": "AND"
    },
    "13416": {
      "op": "DUP8"
    },
    "13417": {
      "op": "MSTORE"
    },
    "13418": {
      "op": "DUP3"
    },
    "13419": {
      "op": "ISZERO"
    },
    "13420": {
      "op": "ISZERO"
    },
    "13421": {
      "op": "DUP4"
    },
    "13422": {
      "op": "MUL"
    },
    "13423": {
      "op": "DUP8"
    },
    "13424": {
      "op": "ADD"
    },
    "13425": {
      "op": "SWAP5"
    },
    "13426": {
      "op": "POP"
    },
    "13427": {
      "op": "PUSH2",
      "value": "0x307C"
    },
    "13430": {
      "op": "JUMP"
    },
    "13431": {
      "op": "JUMPDEST"
    },
    "13432": {
      "op": "DUP8"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13435": {
      "op": "MSTORE"
    },
    "13436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13438": {
      "op": "DUP1"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13441": {
      "op": "KECCAK256"
    },
    "13442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13444": {
      "op": "JUMPDEST"
    },
    "13445": {
      "op": "DUP6"
    },
    "13446": {
      "op": "DUP2"
    },
    "13447": {
      "op": "LT"
    },
    "13448": {
      "op": "ISZERO"
    },
    "13449": {
      "op": "PUSH2",
      "value": "0x349D"
    },
    "13452": {
      "op": "JUMPI"
    },
    "13453": {
      "op": "DUP2"
    },
    "13454": {
      "op": "SLOAD"
    },
    "13455": {
      "op": "DUP11"
    },
    "13456": {
      "op": "DUP3"
    },
    "13457": {
      "op": "ADD"
    },
    "13458": {
      "op": "MSTORE"
    },
    "13459": {
      "op": "SWAP1"
    },
    "13460": {
      "op": "DUP5"
    },
    "13461": {
      "op": "ADD"
    },
    "13462": {
      "op": "SWAP1"
    },
    "13463": {
      "op": "DUP3"
    },
    "13464": {
      "op": "ADD"
    },
    "13465": {
      "op": "PUSH2",
      "value": "0x3484"
    },
    "13468": {
      "op": "JUMP"
    },
    "13469": {
      "op": "JUMPDEST"
    },
    "13470": {
      "op": "POP"
    },
    "13471": {
      "op": "POP"
    },
    "13472": {
      "op": "POP"
    },
    "13473": {
      "op": "SWAP6"
    },
    "13474": {
      "op": "SWAP1"
    },
    "13475": {
      "op": "SWAP2"
    },
    "13476": {
      "op": "ADD"
    },
    "13477": {
      "op": "SWAP7"
    },
    "13478": {
      "op": "SWAP6"
    },
    "13479": {
      "op": "POP"
    },
    "13480": {
      "op": "POP"
    },
    "13481": {
      "op": "POP"
    },
    "13482": {
      "op": "POP"
    },
    "13483": {
      "op": "POP"
    },
    "13484": {
      "op": "POP"
    },
    "13485": {
      "jump": "o",
      "op": "JUMP"
    },
    "13486": {
      "op": "JUMPDEST"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13489": {
      "op": "DUP3"
    },
    "13490": {
      "op": "DUP3"
    },
    "13491": {
      "op": "LT"
    },
    "13492": {
      "op": "ISZERO"
    },
    "13493": {
      "op": "PUSH2",
      "value": "0x34C0"
    },
    "13496": {
      "op": "JUMPI"
    },
    "13497": {
      "op": "PUSH2",
      "value": "0x34C0"
    },
    "13500": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13503": {
      "jump": "i",
      "op": "JUMP"
    },
    "13504": {
      "op": "JUMPDEST"
    },
    "13505": {
      "op": "POP"
    },
    "13506": {
      "op": "SUB"
    },
    "13507": {
      "op": "SWAP1"
    },
    "13508": {
      "jump": "o",
      "op": "JUMP"
    },
    "13509": {
      "op": "JUMPDEST"
    },
    "13510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13512": {
      "op": "DUP2"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "DUP8"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13517": {
      "op": "DUP3"
    },
    "13518": {
      "op": "ADD"
    },
    "13519": {
      "op": "MSTORE"
    },
    "13520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13522": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13525": {
      "op": "DUP10"
    },
    "13526": {
      "op": "DUP12"
    },
    "13527": {
      "op": "DUP3"
    },
    "13528": {
      "op": "DUP6"
    },
    "13529": {
      "op": "ADD"
    },
    "13530": {
      "op": "CALLDATACOPY"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13533": {
      "op": "DUP11"
    },
    "13534": {
      "op": "DUP5"
    },
    "13535": {
      "op": "ADD"
    },
    "13536": {
      "op": "DUP3"
    },
    "13537": {
      "op": "ADD"
    },
    "13538": {
      "op": "MSTORE"
    },
    "13539": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13545": {
      "op": "SWAP9"
    },
    "13546": {
      "op": "DUP10"
    },
    "13547": {
      "op": "AND"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13550": {
      "op": "DUP5"
    },
    "13551": {
      "op": "ADD"
    },
    "13552": {
      "op": "MSTORE"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13555": {
      "op": "SWAP8"
    },
    "13556": {
      "op": "SWAP1"
    },
    "13557": {
      "op": "SWAP8"
    },
    "13558": {
      "op": "AND"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13561": {
      "op": "DUP4"
    },
    "13562": {
      "op": "ADD"
    },
    "13563": {
      "op": "MSTORE"
    },
    "13564": {
      "op": "POP"
    },
    "13565": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13569": {
      "op": "SWAP5"
    },
    "13570": {
      "op": "SWAP1"
    },
    "13571": {
      "op": "SWAP5"
    },
    "13572": {
      "op": "AND"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13575": {
      "op": "DUP6"
    },
    "13576": {
      "op": "ADD"
    },
    "13577": {
      "op": "MSTORE"
    },
    "13578": {
      "op": "SWAP2"
    },
    "13579": {
      "op": "DUP6"
    },
    "13580": {
      "op": "AND"
    },
    "13581": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13583": {
      "op": "DUP5"
    },
    "13584": {
      "op": "ADD"
    },
    "13585": {
      "op": "MSTORE"
    },
    "13586": {
      "op": "SWAP1"
    },
    "13587": {
      "op": "SWAP4"
    },
    "13588": {
      "op": "AND"
    },
    "13589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13591": {
      "op": "DUP3"
    },
    "13592": {
      "op": "ADD"
    },
    "13593": {
      "op": "MSTORE"
    },
    "13594": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13597": {
      "op": "SWAP1"
    },
    "13598": {
      "op": "SWAP3"
    },
    "13599": {
      "op": "AND"
    },
    "13600": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13602": {
      "op": "DUP4"
    },
    "13603": {
      "op": "ADD"
    },
    "13604": {
      "op": "MSTORE"
    },
    "13605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13607": {
      "op": "SWAP1"
    },
    "13608": {
      "op": "SWAP3"
    },
    "13609": {
      "op": "ADD"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13612": {
      "op": "NOT"
    },
    "13613": {
      "op": "AND"
    },
    "13614": {
      "op": "ADD"
    },
    "13615": {
      "op": "ADD"
    },
    "13616": {
      "op": "SWAP2"
    },
    "13617": {
      "op": "SWAP1"
    },
    "13618": {
      "op": "POP"
    },
    "13619": {
      "jump": "o",
      "op": "JUMP"
    },
    "13620": {
      "op": "JUMPDEST"
    },
    "13621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13623": {
      "op": "DUP1"
    },
    "13624": {
      "op": "DUP3"
    },
    "13625": {
      "op": "SLT"
    },
    "13626": {
      "op": "DUP1"
    },
    "13627": {
      "op": "ISZERO"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13634": {
      "op": "SHL"
    },
    "13635": {
      "op": "SUB"
    },
    "13636": {
      "op": "DUP5"
    },
    "13637": {
      "op": "SWAP1"
    },
    "13638": {
      "op": "SUB"
    },
    "13639": {
      "op": "DUP6"
    },
    "13640": {
      "op": "SGT"
    },
    "13641": {
      "op": "AND"
    },
    "13642": {
      "op": "ISZERO"
    },
    "13643": {
      "op": "PUSH2",
      "value": "0x3556"
    },
    "13646": {
      "op": "JUMPI"
    },
    "13647": {
      "op": "PUSH2",
      "value": "0x3556"
    },
    "13650": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13653": {
      "jump": "i",
      "op": "JUMP"
    },
    "13654": {
      "op": "JUMPDEST"
    },
    "13655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13657": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13659": {
      "op": "SHL"
    },
    "13660": {
      "op": "DUP4"
    },
    "13661": {
      "op": "SWAP1"
    },
    "13662": {
      "op": "SUB"
    },
    "13663": {
      "op": "DUP5"
    },
    "13664": {
      "op": "SLT"
    },
    "13665": {
      "op": "DUP2"
    },
    "13666": {
      "op": "AND"
    },
    "13667": {
      "op": "ISZERO"
    },
    "13668": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13671": {
      "op": "JUMPI"
    },
    "13672": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13675": {
      "op": "PUSH2",
      "value": "0x329A"
    },
    "13678": {
      "jump": "i",
      "op": "JUMP"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "POP"
    },
    "13682": {
      "op": "ADD"
    },
    "13683": {
      "op": "SWAP1"
    },
    "13684": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0d2702727da5badf64245502e519cd6fbb141b5f",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksSubmitted;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 tasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizID) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n            else {\n                string[] memory myReturn= new string[](1);\n                myReturn[0] = \"No luck.\";\n                return myReturn;\n            }\n            unchecked{++i;}\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[i] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizID) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n//            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n            // todo -- use above  version (removed restriction for checking)\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.refuterID!= _wizID){\n//                potentialTasks.push(uint256(DoubleEndedQueue.at(tasksSubmitted, i)));\n                taskId = uint256(DoubleEndedQueue.at(tasksSubmitted, i));\n                myTask = tasks[taskId];\n\n                /*\n                // adjust dequeue\n                tasksSubmitted[0], tasksSubmitted[uint128(i)] = bytes32(0), tasksSubmitted[uint128(i)];\n                tasksVerifying.push(uint256(tasksSubmitted[uint128(i)]));\n                // shift head of dequeue to maintain structure (slight penalty for head)\n                if (i != 0) {\n                    tasksSubmitted._data[uint128(i)] = tasksSubmitted._data[tasksSubmitted.begin];\n                }\n                DoubleEndedQueue.pop(tasksSubmitted);\n                */\n\n                // update task\n                // assign task to home boy\n                myTask.verifierID = uint16(_wizID);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))] = myTask;\n            }\n        }\n        // emit event with task\n        emit VerificationAssigned(_wizID, taskId);\n    }\n\n/*\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n\n*/\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizID) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length; i++){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizID, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksSubmitted, bytes32(tasksAttempted));\n                tasks[tasksAttempted] = myTask;\n                tasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizID] = block.timestamp + 1 days;\n            }\n        }\n\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:20737:2:-:0;;;2899:5;2872:32;;2960:6;2924:42;;9615:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:13;1778:7;:22;889:23:12;679:10:6;889:9:12;:23::i;:::-;9694:10:2;:26;;-1:-1:-1;;;;;;9694:26:2;-1:-1:-1;;;;;9694:26:2;;;;;;;;;;743:20737;;2101:173:12;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;:::-;743:20737:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}