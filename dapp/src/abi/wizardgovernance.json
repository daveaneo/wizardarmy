{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Governance.sol",
    "1": "contracts/helpers/Context.sol",
    "11": "contracts/interfaces/IERC721.sol",
    "6": "contracts/helpers/Ownable.sol",
    "7": "contracts/helpers/ReentrancyGuard.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        3389
      ],
      "Context": [
        719
      ],
      "ERC165": [
        743
      ],
      "ERC2981Collection": [
        827
      ],
      "ERC721": [
        1646
      ],
      "ERC721A": [
        2717
      ],
      "Governance": [
        698
      ],
      "IERC165": [
        2873
      ],
      "IERC20": [
        2946
      ],
      "IERC2981": [
        3610
      ],
      "IERC721": [
        3062
      ],
      "IERC721Enumerable": [
        3093
      ],
      "IERC721Metadata": [
        3637
      ],
      "IERC721Receiver": [
        3655
      ],
      "Ownable": [
        2821
      ],
      "ReentrancyGuard": [
        2861
      ],
      "Strings": [
        3592
      ]
    },
    "id": 699,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 2947,
        "src": "65:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 2874,
        "src": "99:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 3063,
        "src": "134:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 3094,
        "src": "169:44:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 2718,
        "src": "247:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 1647,
        "src": "279:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 744,
        "src": "310:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 2822,
        "src": "341:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 720,
        "src": "373:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 2862,
        "src": "405:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 828,
        "src": "445:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 3593,
        "src": "487:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 699,
        "sourceUnit": 3390,
        "src": "521:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2861,
              "src": "651:15:0"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "651:15:0"
          },
          {
            "baseName": {
              "id": 17,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2821,
              "src": "668:7:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "668:7:0"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 698,
        "linearizedBaseContracts": [
          698,
          2821,
          719,
          2861
        ],
        "name": "Governance",
        "nameLocation": "637:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "ecosystemNFTs",
            "nameLocation": "722:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "714:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$3062",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3062,
                "src": "714:7:0"
              },
              "referencedDeclaration": 3062,
              "src": "714:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$3062",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 27,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "902:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "845:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "854:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "845:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 25,
                "keyType": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "874:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "865:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "885:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "lastActiveTimestamp",
                "nameLocation": "1015:19:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "986:48:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 30,
                  "keyType": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "986:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1105:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1098:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1149:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1144:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 34,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1144:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1172:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1165:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1165:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1227:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1220:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1220:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1256:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "1249:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1249:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "967:8:0",
            "nodeType": "StructDefinition",
            "scope": 698,
            "src": "960:357:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1352:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1345:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1345:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1398:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1391:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1391:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1421:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1413:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 47,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1413:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1473:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1467:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1467:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1505:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1498:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1330:4:0",
            "nodeType": "StructDefinition",
            "scope": 698,
            "src": "1323:212:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 68,
            "members": [
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1574:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1567:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1567:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "1599:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1592:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1592:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "1634:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1624:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 58,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 60,
                  "length": {
                    "hexValue": "38",
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1631:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "1624:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "1656:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1649:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1649:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1683:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1676:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1676:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1712:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 68,
                "src": "1705:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1705:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "1548:8:0",
            "nodeType": "StructDefinition",
            "scope": 698,
            "src": "1541:190:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 72,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "1756:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "1738:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 70,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 69,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "1738:8:0"
                },
                "referencedDeclaration": 42,
                "src": "1738:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 71,
              "nodeType": "ArrayTypeName",
              "src": "1738:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 76,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "1785:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "1771:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Task_$53_storage_$dyn_storage",
              "typeString": "struct Governance.Task[]"
            },
            "typeName": {
              "baseType": {
                "id": 74,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 73,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "1771:4:0"
                },
                "referencedDeclaration": 53,
                "src": "1771:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$53_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              },
              "id": 75,
              "nodeType": "ArrayTypeName",
              "src": "1771:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Task_$53_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.Task[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 81,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "1834:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "1797:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 80,
              "keyType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1806:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1797:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 79,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 78,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "1817:8:0"
                },
                "referencedDeclaration": 68,
                "src": "1817:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 83,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "1857:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 698,
            "src": "1849:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 82,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1849:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2060:311:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2078:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 93,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2091:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2078:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2070:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:56:0"
                },
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "2152:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "2136:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2136:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 101,
                        "nodeType": "ArrayTypeName",
                        "src": "2136:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 106,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "2177:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 108,
                          "indexExpression": {
                            "id": 107,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "2187:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2177:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$68_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "2177:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2164:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 103,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2168:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 104,
                        "nodeType": "ArrayTypeName",
                        "src": "2168:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2136:79:0"
                },
                {
                  "body": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "2269:70:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 123,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "2283:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 125,
                            "indexExpression": {
                              "id": 124,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2293:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2283:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 126,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81,
                                  "src": "2298:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 128,
                                "indexExpression": {
                                  "id": 127,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "2308:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2298:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$68_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "2298:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "id": 130,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2326:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2298:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "2283:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "2283:45:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2244:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 117,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2247:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2247:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135,
                  "initializationExpression": {
                    "assignments": [
                      113
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2237:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "2229:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2229:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 115,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2241:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2229:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2265:3:0",
                      "subExpression": {
                        "id": 120,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2265:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 122,
                    "nodeType": "ExpressionStatement",
                    "src": "2265:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2225:114:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "2355:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2348:16:0"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "1991:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "2008:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2000:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1999:20:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2043:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "2043:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 88,
                    "nodeType": "ArrayTypeName",
                    "src": "2043:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2042:17:0"
            },
            "scope": 698,
            "src": "1982:389:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "2454:892:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 147,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2472:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 148,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2485:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2472:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2464:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 154,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2539:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2539:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 156,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "2557:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 158,
                            "indexExpression": {
                              "id": 157,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "2567:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2557:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$68_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67,
                          "src": "2557:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "2539:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2530:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2530:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2530:85:0"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "2743:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2735:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2735:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 166,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2735:19:0"
                },
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "2772:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2764:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2764:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2764:25:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "2807:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2799:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2811:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:13:0"
                },
                {
                  "body": {
                    "id": 233,
                    "nodeType": "Block",
                    "src": "2885:382:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 187,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81,
                                  "src": "2938:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 189,
                                "indexExpression": {
                                  "id": 188,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 141,
                                  "src": "2948:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2938:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$68_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "2938:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 192,
                            "indexExpression": {
                              "id": 191,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "2966:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2938:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 193,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "2971:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2938:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 218,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "3167:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 220,
                                  "indexExpression": {
                                    "id": 219,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 141,
                                    "src": "3177:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3167:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$68_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61,
                                "src": "3167:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "id": 222,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 175,
                                "src": "3195:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3167:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 224,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "3201:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3167:51:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 231,
                          "nodeType": "IfStatement",
                          "src": "3164:93:0",
                          "trueBody": {
                            "id": 230,
                            "nodeType": "Block",
                            "src": "3219:38:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 226,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "3237:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3241:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "3237:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 229,
                                "nodeType": "ExpressionStatement",
                                "src": "3237:5:0"
                              }
                            ]
                          }
                        },
                        "id": 232,
                        "nodeType": "IfStatement",
                        "src": "2935:322:0",
                        "trueBody": {
                          "id": 217,
                          "nodeType": "Block",
                          "src": "2990:156:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 195,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "3008:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 196,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81,
                                        "src": "3028:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 198,
                                      "indexExpression": {
                                        "id": 197,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 141,
                                        "src": "3038:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3028:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$68_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 199,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 61,
                                    "src": "3028:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 201,
                                  "indexExpression": {
                                    "id": 200,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 175,
                                    "src": "3056:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3028:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "3008:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 203,
                              "nodeType": "ExpressionStatement",
                              "src": "3008:50:0"
                            },
                            {
                              "expression": {
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 204,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 165,
                                  "src": "3076:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 205,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 175,
                                  "src": "3090:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3076:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 207,
                              "nodeType": "ExpressionStatement",
                              "src": "3076:15:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 208,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 171,
                                  "src": "3113:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3118:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3113:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 216,
                              "nodeType": "IfStatement",
                              "src": "3109:23:0",
                              "trueBody": {
                                "id": 215,
                                "nodeType": "Block",
                                "src": "3121:11:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 213,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 211,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 171,
                                        "src": "3123:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 212,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3129:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "3123:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 214,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3123:7:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 178,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2839:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 179,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2842:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 181,
                        "indexExpression": {
                          "id": 180,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2852:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2842:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2842:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2839:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "initializationExpression": {
                    "assignments": [
                      175
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2834:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "2826:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2826:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 177,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2836:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2826:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2881:3:0",
                      "subExpression": {
                        "id": 184,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "2881:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 186,
                    "nodeType": "ExpressionStatement",
                    "src": "2881:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2822:445:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 236,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3284:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3289:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3284:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3292:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3276:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:35:0"
                },
                {
                  "expression": {
                    "id": 242,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "3328:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 243,
                  "nodeType": "Return",
                  "src": "3321:18:0"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "2386:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "2409:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2401:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2400:20:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2444:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2443:10:0"
            },
            "scope": 698,
            "src": "2377:969:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3428:1072:0",
              "statements": [
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "3446:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "3438:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3438:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:13:0"
                },
                {
                  "body": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "3499:437:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 262,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "3516:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 264,
                                "indexExpression": {
                                  "id": 263,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 255,
                                  "src": "3526:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3516:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$42_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 265,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastActiveTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "3516:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 268,
                            "indexExpression": {
                              "expression": {
                                "id": 266,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3549:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3549:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3516:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 269,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3563:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3563:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3516:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 296,
                          "nodeType": "Block",
                          "src": "3749:149:0",
                          "statements": [
                            {
                              "assignments": [
                                281
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 281,
                                  "mutability": "mutable",
                                  "name": "myReturn",
                                  "nameLocation": "3783:8:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 296,
                                  "src": "3767:24:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 279,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3767:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 280,
                                    "nodeType": "ArrayTypeName",
                                    "src": "3767:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 287,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3806:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "3793:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 282,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3797:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 283,
                                    "nodeType": "ArrayTypeName",
                                    "src": "3797:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3793:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3767:41:0"
                            },
                            {
                              "expression": {
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 288,
                                    "name": "myReturn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 281,
                                    "src": "3826:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 290,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3835:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3826:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "4e6f206c75636b2e",
                                  "id": 291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3840:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c69ac3f68cfe1a47905034708a786a2148d121883dbf9372da36b09cc276002a",
                                    "typeString": "literal_string \"No luck.\""
                                  },
                                  "value": "No luck."
                                },
                                "src": "3826:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 293,
                              "nodeType": "ExpressionStatement",
                              "src": "3826:24:0"
                            },
                            {
                              "expression": {
                                "id": 294,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "3875:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "functionReturnParameters": 250,
                              "id": 295,
                              "nodeType": "Return",
                              "src": "3868:15:0"
                            }
                          ]
                        },
                        "id": 297,
                        "nodeType": "IfStatement",
                        "src": "3513:385:0",
                        "trueBody": {
                          "id": 276,
                          "nodeType": "Block",
                          "src": "3579:152:0",
                          "statements": [
                            {
                              "id": 275,
                              "nodeType": "UncheckedBlock",
                              "src": "3698:19:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "3708:7:0",
                                    "subExpression": {
                                      "id": 272,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 252,
                                      "src": "3710:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 274,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3708:7:0"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 301,
                        "nodeType": "UncheckedBlock",
                        "src": "3911:15:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "3921:3:0",
                              "subExpression": {
                                "id": 298,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "3923:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 300,
                            "nodeType": "ExpressionStatement",
                            "src": "3921:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 258,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3478:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 259,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3481:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3481:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3478:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "initializationExpression": {
                    "assignments": [
                      255
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3473:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "3465:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3465:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 257,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3475:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3465:11:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3461:475:0"
                },
                {
                  "assignments": [
                    308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "3962:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "3946:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 306,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3946:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 307,
                        "nodeType": "ArrayTypeName",
                        "src": "3946:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3985:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3972:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 309,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3976:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 310,
                        "nodeType": "ArrayTypeName",
                        "src": "3976:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3946:45:0"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "4009:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "4001:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4001:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4019:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4001:19:0"
                },
                {
                  "body": {
                    "id": 378,
                    "nodeType": "Block",
                    "src": "4068:402:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 327,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72,
                                      "src": "4085:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 329,
                                    "indexExpression": {
                                      "id": 328,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4095:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4085:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$42_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 330,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastActiveTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31,
                                  "src": "4085:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 333,
                                "indexExpression": {
                                  "expression": {
                                    "id": 331,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4118:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4118:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4085:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 334,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4132:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4132:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4085:62:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 337,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "4151:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 339,
                                  "indexExpression": {
                                    "id": 338,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "4161:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4151:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$42_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 340,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "begTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39,
                                "src": "4151:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 341,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4179:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4179:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4151:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4085:109:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 345,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "4198:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 347,
                                "indexExpression": {
                                  "id": 346,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "4208:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4198:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$42_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41,
                              "src": "4198:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 349,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4226:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4226:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4198:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4085:156:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "4082:350:0",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "4243:189:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 353,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 308,
                                    "src": "4261:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 355,
                                  "indexExpression": {
                                    "id": 354,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "4269:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4261:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 356,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72,
                                      "src": "4274:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 358,
                                    "indexExpression": {
                                      "id": 357,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4284:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4274:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$42_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "4274:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "4261:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 361,
                              "nodeType": "ExpressionStatement",
                              "src": "4261:34:0"
                            },
                            {
                              "id": 365,
                              "nodeType": "UncheckedBlock",
                              "src": "4313:21:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "4323:9:0",
                                    "subExpression": {
                                      "id": 362,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 316,
                                      "src": "4325:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 364,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4323:9:0"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 366,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "4354:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 367,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "4365:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4354:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 371,
                              "nodeType": "IfStatement",
                              "src": "4351:67:0",
                              "trueBody": {
                                "id": 370,
                                "nodeType": "Block",
                                "src": "4372:46:0",
                                "statements": [
                                  {
                                    "id": 369,
                                    "nodeType": "Break",
                                    "src": "4394:5:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 377,
                        "nodeType": "UncheckedBlock",
                        "src": "4445:15:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4455:3:0",
                              "subExpression": {
                                "id": 374,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4457:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 376,
                            "nodeType": "ExpressionStatement",
                            "src": "4455:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 323,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "4047:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 324,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "4050:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4050:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4047:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "initializationExpression": {
                    "assignments": [
                      320
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4042:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "4034:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 322,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4044:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4034:11:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4030:440:0"
                },
                {
                  "expression": {
                    "id": 380,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 308,
                    "src": "4486:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "4479:14:0"
                }
              ]
            },
            "functionSelector": "551bbe0b",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "3362:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3385:2:0"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "3411:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 247,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3411:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 248,
                    "nodeType": "ArrayTypeName",
                    "src": "3411:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3410:17:0"
            },
            "scope": 698,
            "src": "3353:1147:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "4667:47:0",
              "statements": [
                {
                  "expression": {
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 390,
                      "name": "ecosystemNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4677:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$3062",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 392,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "4701:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 391,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3062,
                        "src": "4693:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$3062_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4693:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$3062",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "4677:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$3062",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:30:0"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 387,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2764,
                  "src": "4657:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4657:9:0"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "4619:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "4641:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4633:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4632:15:0"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:0:0"
            },
            "scope": 698,
            "src": "4610:104:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "5064:154:0",
              "statements": [
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 403,
                      "name": "ecosystemNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5118:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$3062",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 405,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "5142:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 404,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3062,
                        "src": "5134:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$3062_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5134:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$3062",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "5118:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$3062",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:29:0"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "4945:89:0",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 410,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "5059:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5051:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5050:14:0"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5064:0:0"
            },
            "scope": 698,
            "src": "5039:179:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "5282:7:0",
              "statements": []
            },
            "id": 414,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5262:2:0"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5282:0:0"
            },
            "scope": 698,
            "src": "5255:34:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "5379:583:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 426,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "5397:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 427,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "5410:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5397:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5426:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5389:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5389:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "5389:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "5485:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 433,
                              "name": "ecosystemNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "5463:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3062",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2995,
                            "src": "5463:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5463:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5493:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5493:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5463:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5505:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5455:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5455:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "5455:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 444,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "5542:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 446,
                            "indexExpression": {
                              "id": 445,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "5561:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5542:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 448,
                          "indexExpression": {
                            "id": 447,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "5573:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5542:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5581:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5542:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5584:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5534:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5534:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "5534:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 455,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "5618:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5625:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5618:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 458,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "5630:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 459,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "5639:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 461,
                              "indexExpression": {
                                "id": 460,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 416,
                                "src": "5649:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5639:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$68_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "5639:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5630:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5618:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5610:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "5610:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 468,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5695:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5695:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 470,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "5713:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 472,
                            "indexExpression": {
                              "id": 471,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "5723:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5713:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$68_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67,
                          "src": "5713:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5695:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5687:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5687:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "5687:61:0"
                },
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 477,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "5758:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 480,
                        "indexExpression": {
                          "id": 478,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "5777:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5758:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 481,
                      "indexExpression": {
                        "id": 479,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5789:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5758:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 482,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "5798:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5806:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5798:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5758:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5758:49:0"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 487,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "5850:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "id": 488,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "5860:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5850:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$68_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "5850:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 492,
                      "indexExpression": {
                        "id": 491,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "5878:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5850:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5888:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5850:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "5850:39:0"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 496,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "5918:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 498,
                        "indexExpression": {
                          "id": 497,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "5928:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5918:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63,
                      "src": "5918:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5954:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5918:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "5918:37:0"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 422,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 688,
                  "src": "5368:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5368:10:0"
              }
            ],
            "name": "vote",
            "nameLocation": "5304:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5317:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "5309:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "5337:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "5329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "5352:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "5344:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5308:50:0"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5379:0:0"
            },
            "scope": 698,
            "src": "5295:667:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "6107:548:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 518,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "6125:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6144:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6125:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 521,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "6149:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6168:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "6149:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6125:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6173:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6117:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6117:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "6117:84:0"
                },
                {
                  "expression": {
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 528,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "6211:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6229:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6211:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:19:0"
                },
                {
                  "assignments": [
                    534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 534,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "6278:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "6261:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 533,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 532,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 68,
                          "src": "6261:8:0"
                        },
                        "referencedDeclaration": 68,
                        "src": "6261:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "initialValue": {
                    "baseExpression": {
                      "id": 535,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "6291:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$68_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 537,
                    "indexExpression": {
                      "id": 536,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "6301:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6291:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$68_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6261:55:0"
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 539,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6330:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65,
                      "src": "6330:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 542,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "6356:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "6330:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:39:0"
                },
                {
                  "expression": {
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 545,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6383:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67,
                      "src": "6383:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 548,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "6409:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "6383:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "6383:39:0"
                },
                {
                  "expression": {
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 551,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "6436:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 554,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "6465:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "6436:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "6436:45:0"
                },
                {
                  "expression": {
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 557,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6495:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$68_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "6495:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 560,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "6517:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6495:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "6495:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 564,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "6553:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 567,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "6571:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6564:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 565,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "6564:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6564:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 569,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "6588:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 570,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "6603:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "id": 563,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "6537:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint40_$_t_uint40_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint40,uint40)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:80:0"
                }
              ]
            },
            "functionSelector": "64d924ef",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 514,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 697,
                  "src": "6097:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6097:9:0"
              }
            ],
            "name": "createProposal",
            "nameLocation": "5977:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "6008:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "5992:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5992:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "6026:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "6019:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6019:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "6051:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "6044:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6044:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "6073:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "6066:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5991:96:0"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6107:0:0"
            },
            "scope": 698,
            "src": "5968:687:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "6775:76:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 586,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "6801:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6812:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 588,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6815:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 589,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "6830:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      ],
                      "id": 585,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "6785:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint40_$_t_uint40_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint40,uint40)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6785:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6785:59:0"
                }
              ]
            },
            "functionSelector": "7c7c7e5a",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 582,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 697,
                  "src": "6765:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6765:9:0"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "6670:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "6701:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "6685:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6685:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "6719:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "6712:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6712:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "6741:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "6734:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6734:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6684:71:0"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6775:0:0"
            },
            "scope": 698,
            "src": "6661:190:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "6982:427:0",
              "statements": [
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "7000:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "6992:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "expression": {
                      "id": 606,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7018:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7018:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6992:42:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 609,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "7044:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7044:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$42_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$42_storage_$bound_to$_t_array$_t_struct$_TaskType_$42_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7044:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$42_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7044:16:0"
                },
                {
                  "assignments": [
                    616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 616,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "7087:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "7070:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 615,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 614,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42,
                          "src": "7070:8:0"
                        },
                        "referencedDeclaration": 42,
                        "src": "7070:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "baseExpression": {
                      "id": 617,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7101:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$42_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 619,
                    "indexExpression": {
                      "id": 618,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "7111:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7101:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$42_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7070:57:0"
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 621,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7141:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "7141:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 624,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "7163:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7141:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "7141:31:0"
                },
                {
                  "expression": {
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 627,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7186:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "7186:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7207:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7186:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "7186:26:0"
                },
                {
                  "expression": {
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 633,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7226:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "7226:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 636,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7251:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "7226:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "7226:36:0"
                },
                {
                  "expression": {
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 639,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7276:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "7276:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 642,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "7303:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "7276:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "7276:40:0"
                },
                {
                  "expression": {
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 645,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "7330:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$42_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "7330:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 648,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "7357:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "7330:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "7330:40:0"
                }
              ]
            },
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "6866:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "6898:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "6882:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6882:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "6916:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "6909:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6909:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "6936:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "6929:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "6958:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "6951:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6881:91:0"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6982:0:0"
            },
            "scope": 698,
            "src": "6857:552:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "7517:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7535:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7541:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7527:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "7527:30:0"
                },
                {
                  "id": 659,
                  "nodeType": "PlaceholderStatement",
                  "src": "7567:1:0"
                }
              ]
            },
            "id": 661,
            "name": "onlyAdmin",
            "nameLocation": "7505:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7514:2:0"
            },
            "src": "7496:79:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "7605:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7623:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7629:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7615:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7615:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "7615:30:0"
                },
                {
                  "id": 668,
                  "nodeType": "PlaceholderStatement",
                  "src": "7655:1:0"
                }
              ]
            },
            "id": 670,
            "name": "onlyNFTOwner",
            "nameLocation": "7590:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7602:2:0"
            },
            "src": "7581:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "7691:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7709:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7715:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "7701:31:0"
                },
                {
                  "id": 677,
                  "nodeType": "PlaceholderStatement",
                  "src": "7742:1:0"
                }
              ]
            },
            "id": 679,
            "name": "onlyLessee",
            "nameLocation": "7678:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7688:2:0"
            },
            "src": "7669:81:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "7778:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7818:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7824:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7810:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "7810:31:0"
                },
                {
                  "id": 686,
                  "nodeType": "PlaceholderStatement",
                  "src": "7851:1:0"
                }
              ]
            },
            "id": 688,
            "name": "onlyMember",
            "nameLocation": "7765:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7775:2:0"
            },
            "src": "7756:103:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "7886:85:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7904:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7909:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7896:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7896:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:36:0"
                },
                {
                  "id": 695,
                  "nodeType": "PlaceholderStatement",
                  "src": "7963:1:0"
                }
              ]
            },
            "id": 697,
            "name": "onlyBoard",
            "nameLocation": "7874:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7883:2:0"
            },
            "src": "7865:106:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 699,
        "src": "628:7350:0",
        "usedErrors": []
      }
    ],
    "src": "0:7978:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161157b38038061157b83398101604081905261002f916100b4565b600160005561003d33610062565b600280546001600160a01b0319166001600160a01b03929092169190911790556100e4565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100c657600080fd5b81516001600160a01b03811681146100dd57600080fd5b9392505050565b611488806100f36000396000f3fe6080604052600436106100e15760003560e01c80637c7c7e5a1161007f5780638d977672116100595780638d977672146102775780638da5cb5b146102a8578063f2fde38b146102d0578063ff981099146102f057600080fd5b80637c7c7e5a14610217578063826b8ebd146102375780638a6655d61461025757600080fd5b80636215597b116100bb5780636215597b1461017a57806364d924ef146101c057806369d03738146101e2578063715018a61461020257600080fd5b8063013cf08b146100ed57806310190ef114610127578063551bbe0b1461015857600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610fc6565b61031d565b60405161011e95949392919061102c565b60405180910390f35b34801561013357600080fd5b50610147610142366004610fc6565b6103e9565b60405161011e959493929190611070565b34801561016457600080fd5b5061016d6104cb565b60405161011e91906110b0565b34801561018657600080fd5b506101b2610195366004611112565b600360209081526000928352604080842090915290825290205481565b60405190815260200161011e565b3480156101cc57600080fd5b506101e06101db366004611197565b610799565b005b3480156101ee57600080fd5b506101e06101fd36600461122a565b6108b5565b34801561020e57600080fd5b506101e0610901565b34801561022357600080fd5b506101e061023236600461124e565b610937565b34801561024357600080fd5b506101b2610252366004610fc6565b61094b565b34801561026357600080fd5b506101e06102723660046112b3565b610b5a565b34801561028357600080fd5b50610297610292366004610fc6565b610b93565b60405161011e9594939291906112df565b3480156102b457600080fd5b506001546040516001600160a01b03909116815260200161011e565b3480156102dc57600080fd5b506101e06102eb36600461122a565b610c74565b3480156102fc57600080fd5b5061031061030b366004610fc6565b610d0f565b60405161011e9190611325565b6006602052600090815260409020805481906103389061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546103649061136d565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b600481815481106103f957600080fd5b906000526020600020906003020160009150905080600101805461041c9061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546104489061136d565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050506002909301549192505060ff81169064ffffffffff6101008204811691600160301b8104821691600160581b9091041685565b60606000805b6004548110156105985742600482815481106104ef576104ef6113a8565b60009182526020808320338452600390920290910190526040902054101561051c57816001019150610590565b604080516001808252818301909252600091816020015b606081526020019060019003908161053357905050905060405180604001604052806008815260200167273790363ab1b59760c11b8152508160008151811061057e5761057e6113a8565b60209081029190910101529392505050565b6001016104d1565b5060008167ffffffffffffffff8111156105b4576105b46113be565b6040519080825280602002602001820160405280156105e757816020015b60608152602001906001900390816105d25790505b5090506000805b60045481101561079057426004828154811061060c5761060c6113a8565b6000918252602080832033845260039092029091019052604090205410801561066857504260048281548110610644576106446113a8565b6000918252602090912060039091020160020154600160301b900464ffffffffff16105b80156106a757504260048281548110610683576106836113a8565b6000918252602090912060039091020160020154600160581b900464ffffffffff16115b1561078857600481815481106106bf576106bf6113a8565b906000526020600020906003020160010180546106db9061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546107079061136d565b80156107545780601f1061072957610100808354040283529160200191610754565b820191906000526020600020905b81548152906001019060200180831161073757829003601f168201915b505050505083828151811061076b5761076b6113a8565b602002602001018190525081600101915083821061078857610790565b6001016105ee565b50909392505050565b6107a7565b60405180910390fd5b60018361ffff161180156107c057506101018361ffff16105b61080c5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161079e565b60016007600082825461081f91906113ea565b909155505060075460009081526006602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8681169190910264ffffffffff60501b191691909117600160501b9185169190910217905560018101805461ffff191661ffff861617905561089d818787610f2d565b506108ad86866007548686610e35565b505050505050565b6001546001600160a01b031633146108df5760405162461bcd60e51b815260040161079e90611402565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461092b5760405162461bcd60e51b815260040161079e90611402565b6109356000610edb565b565b610945848460008585610e35565b50505050565b600060075482106109915760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161079e565b600082815260066020526040902060030154600160501b900464ffffffffff1642116109f55760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161079e565b6000806000805b60008681526006602052604090206001015461ffff16811015610b1857600086815260066020526040902083906002018260088110610a3d57610a3d6113a8565b601091828204019190066002029054906101000a900461ffff1661ffff161115610ab95760008681526006602052604090206002018160088110610a8357610a836113a8565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160011415610ab457600091505b610b06565b600086815260066020526040902083906002018260088110610add57610add6113a8565b601091828204019190066002029054906101000a900461ffff1661ffff161415610b0657600191505b80610b1081611437565b9150506109fc565b5080156107905760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161079e565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161079e565b60058181548110610ba357600080fd5b9060005260206000209060040201600091509050806000018054610bc69061136d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf29061136d565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b5050505060018301546002840154600390940154929364ffffffffff9091169290915060ff811690610100900462ffffff1685565b6001546001600160a01b03163314610c9e5760405162461bcd60e51b815260040161079e90611402565b6001600160a01b038116610d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079e565b610d0c81610edb565b50565b60606007548210610d555760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161079e565b60008281526006602052604081206001015461ffff1667ffffffffffffffff811115610d8357610d836113be565b604051908082528060200260200182016040528015610dac578160200160208202803683370190505b50905060005b8151811015610e2e5760008481526006602052604090206002018160088110610ddd57610ddd6113a8565b601091828204019190066002029054906101000a900461ffff16828281518110610e0957610e096113a8565b61ffff9092166020928302919091019091015280610e2681611437565b915050610db2565b5092915050565b6004805460018101808355600083815291929083908110610e5857610e586113a8565b600091825260209091206003909102019050610e78600182018888610f2d565b50600201805464ffffffffff938416600160581b0264ffffffffff60581b19958516600160301b026affffffffff000000000000199590971661010002949094166affffffffffffffffffffff1990911617949094179290921617909155505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054610f399061136d565b90600052602060002090601f016020900481019282610f5b5760008555610fa1565b82601f10610f745782800160ff19823516178555610fa1565b82800160010185558215610fa1579182015b82811115610fa1578235825591602001919060010190610f86565b50610fad929150610fb1565b5090565b5b80821115610fad5760008155600101610fb2565b600060208284031215610fd857600080fd5b5035919050565b6000815180845260005b8181101561100557602081850181015186830182015201610fe9565b81811115611017576000602083870101525b50601f01601f19169290920160200192915050565b60a08152600061103f60a0830188610fdf565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b60a08152600061108360a0830188610fdf565b95151560208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561110557603f198886030184526110f3858351610fdf565b945092850192908501906001016110d7565b5092979650505050505050565b6000806040838503121561112557600080fd5b50508035926020909101359150565b60008083601f84011261114657600080fd5b50813567ffffffffffffffff81111561115e57600080fd5b60208301915083602082850101111561117657600080fd5b9250929050565b803564ffffffffff8116811461119257600080fd5b919050565b6000806000806000608086880312156111af57600080fd5b853567ffffffffffffffff8111156111c657600080fd5b6111d288828901611134565b909650945050602086013561ffff811681146111ed57600080fd5b92506111fb6040870161117d565b91506112096060870161117d565b90509295509295909350565b6001600160a01b0381168114610d0c57600080fd5b60006020828403121561123c57600080fd5b813561124781611215565b9392505050565b6000806000806060858703121561126457600080fd5b843567ffffffffffffffff81111561127b57600080fd5b61128787828801611134565b909550935061129a90506020860161117d565b91506112a86040860161117d565b905092959194509250565b6000806000606084860312156112c857600080fd5b505081359360208301359350604090920135919050565b60a0815260006112f260a0830188610fdf565b905064ffffffffff8616602083015284604083015260ff8416606083015262ffffff831660808301529695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561136157835161ffff1683529284019291840191600101611341565b50909695505050505050565b600181811c9082168061138157607f821691505b602082108114156113a257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156113fd576113fd6113d4565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060001982141561144b5761144b6113d4565b506001019056fea2646970667358221220e8e7c9fbcbaffce8d7bc516232a382abfa7916bd801a012ccf80093bc59c388e64736f6c634300080c0033",
  "bytecodeSha1": "54a5a4eaadb9002a768b9cb27a1711e2f698055f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "Governance.createProposal": {
          "48": [
            6125,
            6145,
            false
          ],
          "49": [
            6149,
            6171,
            true
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "43": [
            3516,
            3578,
            false
          ],
          "44": [
            4085,
            4147,
            false
          ],
          "45": [
            4151,
            4194,
            false
          ],
          "46": [
            4198,
            4241,
            false
          ],
          "47": [
            4354,
            4370,
            false
          ]
        },
        "Governance.getVotes": {
          "56": [
            2078,
            2105,
            true
          ]
        },
        "Governance.getWinningVote": {
          "50": [
            2472,
            2499,
            true
          ],
          "51": [
            2539,
            2591,
            true
          ],
          "52": [
            2938,
            2988,
            false
          ],
          "53": [
            3113,
            3119,
            false
          ],
          "54": [
            3167,
            3218,
            false
          ],
          "55": [
            3284,
            3290,
            true
          ]
        }
      },
      "1": {},
      "11": {},
      "6": {
        "Ownable.transferOwnership": {
          "57": [
            1990,
            2012,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Governance._createTaskType": {
          "35": [
            7044,
            7060
          ],
          "36": [
            7141,
            7172
          ],
          "37": [
            7186,
            7212
          ],
          "38": [
            7226,
            7262
          ],
          "39": [
            7330,
            7370
          ],
          "40": [
            7276,
            7316
          ]
        },
        "Governance.createProposal": {
          "10": [
            6117,
            6201
          ],
          "11": [
            6211,
            6230
          ],
          "12": [
            6330,
            6369
          ],
          "13": [
            6383,
            6422
          ],
          "14": [
            6436,
            6481
          ],
          "15": [
            6495,
            6526
          ],
          "16": [
            6537,
            6617
          ]
        },
        "Governance.createTaskType": {
          "20": [
            6785,
            6844
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "1": [
            3708,
            3715
          ],
          "2": [
            3826,
            3850
          ],
          "3": [
            3868,
            3883
          ],
          "4": [
            3921,
            3924
          ],
          "5": [
            4261,
            4295
          ],
          "6": [
            4323,
            4332
          ],
          "7": [
            4394,
            4399
          ],
          "8": [
            4455,
            4458
          ],
          "9": [
            4479,
            4493
          ]
        },
        "Governance.getVotes": {
          "31": [
            2070,
            2126
          ],
          "32": [
            2283,
            2328
          ],
          "33": [
            2265,
            2268
          ],
          "34": [
            2348,
            2364
          ]
        },
        "Governance.getWinningVote": {
          "21": [
            2464,
            2520
          ],
          "22": [
            2530,
            2615
          ],
          "23": [
            3008,
            3058
          ],
          "24": [
            3076,
            3091
          ],
          "25": [
            3123,
            3130
          ],
          "26": [
            3237,
            3242
          ],
          "27": [
            2881,
            2884
          ],
          "28": [
            3276,
            3311
          ]
        },
        "Governance.setNFTAddress": {
          "18": [
            4677,
            4707
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "17": [
            672,
            689
          ]
        }
      },
      "11": {},
      "6": {
        "Ownable._setOwner": {
          "41": [
            2193,
            2210
          ],
          "42": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "29": [
            1982,
            2055
          ],
          "30": [
            2066,
            2085
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC721",
    "Ownable",
    "ReentrancyGuard"
  ],
  "deployedBytecode": "6080604052600436106100e15760003560e01c80637c7c7e5a1161007f5780638d977672116100595780638d977672146102775780638da5cb5b146102a8578063f2fde38b146102d0578063ff981099146102f057600080fd5b80637c7c7e5a14610217578063826b8ebd146102375780638a6655d61461025757600080fd5b80636215597b116100bb5780636215597b1461017a57806364d924ef146101c057806369d03738146101e2578063715018a61461020257600080fd5b8063013cf08b146100ed57806310190ef114610127578063551bbe0b1461015857600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610fc6565b61031d565b60405161011e95949392919061102c565b60405180910390f35b34801561013357600080fd5b50610147610142366004610fc6565b6103e9565b60405161011e959493929190611070565b34801561016457600080fd5b5061016d6104cb565b60405161011e91906110b0565b34801561018657600080fd5b506101b2610195366004611112565b600360209081526000928352604080842090915290825290205481565b60405190815260200161011e565b3480156101cc57600080fd5b506101e06101db366004611197565b610799565b005b3480156101ee57600080fd5b506101e06101fd36600461122a565b6108b5565b34801561020e57600080fd5b506101e0610901565b34801561022357600080fd5b506101e061023236600461124e565b610937565b34801561024357600080fd5b506101b2610252366004610fc6565b61094b565b34801561026357600080fd5b506101e06102723660046112b3565b610b5a565b34801561028357600080fd5b50610297610292366004610fc6565b610b93565b60405161011e9594939291906112df565b3480156102b457600080fd5b506001546040516001600160a01b03909116815260200161011e565b3480156102dc57600080fd5b506101e06102eb36600461122a565b610c74565b3480156102fc57600080fd5b5061031061030b366004610fc6565b610d0f565b60405161011e9190611325565b6006602052600090815260409020805481906103389061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546103649061136d565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b600481815481106103f957600080fd5b906000526020600020906003020160009150905080600101805461041c9061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546104489061136d565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050506002909301549192505060ff81169064ffffffffff6101008204811691600160301b8104821691600160581b9091041685565b60606000805b6004548110156105985742600482815481106104ef576104ef6113a8565b60009182526020808320338452600390920290910190526040902054101561051c57816001019150610590565b604080516001808252818301909252600091816020015b606081526020019060019003908161053357905050905060405180604001604052806008815260200167273790363ab1b59760c11b8152508160008151811061057e5761057e6113a8565b60209081029190910101529392505050565b6001016104d1565b5060008167ffffffffffffffff8111156105b4576105b46113be565b6040519080825280602002602001820160405280156105e757816020015b60608152602001906001900390816105d25790505b5090506000805b60045481101561079057426004828154811061060c5761060c6113a8565b6000918252602080832033845260039092029091019052604090205410801561066857504260048281548110610644576106446113a8565b6000918252602090912060039091020160020154600160301b900464ffffffffff16105b80156106a757504260048281548110610683576106836113a8565b6000918252602090912060039091020160020154600160581b900464ffffffffff16115b1561078857600481815481106106bf576106bf6113a8565b906000526020600020906003020160010180546106db9061136d565b80601f01602080910402602001604051908101604052809291908181526020018280546107079061136d565b80156107545780601f1061072957610100808354040283529160200191610754565b820191906000526020600020905b81548152906001019060200180831161073757829003601f168201915b505050505083828151811061076b5761076b6113a8565b602002602001018190525081600101915083821061078857610790565b6001016105ee565b50909392505050565b6107a7565b60405180910390fd5b60018361ffff161180156107c057506101018361ffff16105b61080c5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e7300000000000000604482015260640161079e565b60016007600082825461081f91906113ea565b909155505060075460009081526006602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8681169190910264ffffffffff60501b191691909117600160501b9185169190910217905560018101805461ffff191661ffff861617905561089d818787610f2d565b506108ad86866007548686610e35565b505050505050565b6001546001600160a01b031633146108df5760405162461bcd60e51b815260040161079e90611402565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461092b5760405162461bcd60e51b815260040161079e90611402565b6109356000610edb565b565b610945848460008585610e35565b50505050565b600060075482106109915760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161079e565b600082815260066020526040902060030154600160501b900464ffffffffff1642116109f55760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b604482015260640161079e565b6000806000805b60008681526006602052604090206001015461ffff16811015610b1857600086815260066020526040902083906002018260088110610a3d57610a3d6113a8565b601091828204019190066002029054906101000a900461ffff1661ffff161115610ab95760008681526006602052604090206002018160088110610a8357610a836113a8565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160011415610ab457600091505b610b06565b600086815260066020526040902083906002018260088110610add57610add6113a8565b601091828204019190066002029054906101000a900461ffff1661ffff161415610b0657600191505b80610b1081611437565b9150506109fc565b5080156107905760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b604482015260640161079e565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b604482015260640161079e565b60058181548110610ba357600080fd5b9060005260206000209060040201600091509050806000018054610bc69061136d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf29061136d565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b5050505060018301546002840154600390940154929364ffffffffff9091169290915060ff811690610100900462ffffff1685565b6001546001600160a01b03163314610c9e5760405162461bcd60e51b815260040161079e90611402565b6001600160a01b038116610d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079e565b610d0c81610edb565b50565b60606007548210610d555760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b604482015260640161079e565b60008281526006602052604081206001015461ffff1667ffffffffffffffff811115610d8357610d836113be565b604051908082528060200260200182016040528015610dac578160200160208202803683370190505b50905060005b8151811015610e2e5760008481526006602052604090206002018160088110610ddd57610ddd6113a8565b601091828204019190066002029054906101000a900461ffff16828281518110610e0957610e096113a8565b61ffff9092166020928302919091019091015280610e2681611437565b915050610db2565b5092915050565b6004805460018101808355600083815291929083908110610e5857610e586113a8565b600091825260209091206003909102019050610e78600182018888610f2d565b50600201805464ffffffffff938416600160581b0264ffffffffff60581b19958516600160301b026affffffffff000000000000199590971661010002949094166affffffffffffffffffffff1990911617949094179290921617909155505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054610f399061136d565b90600052602060002090601f016020900481019282610f5b5760008555610fa1565b82601f10610f745782800160ff19823516178555610fa1565b82800160010185558215610fa1579182015b82811115610fa1578235825591602001919060010190610f86565b50610fad929150610fb1565b5090565b5b80821115610fad5760008155600101610fb2565b600060208284031215610fd857600080fd5b5035919050565b6000815180845260005b8181101561100557602081850181015186830182015201610fe9565b81811115611017576000602083870101525b50601f01601f19169290920160200192915050565b60a08152600061103f60a0830188610fdf565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b60a08152600061108360a0830188610fdf565b95151560208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561110557603f198886030184526110f3858351610fdf565b945092850192908501906001016110d7565b5092979650505050505050565b6000806040838503121561112557600080fd5b50508035926020909101359150565b60008083601f84011261114657600080fd5b50813567ffffffffffffffff81111561115e57600080fd5b60208301915083602082850101111561117657600080fd5b9250929050565b803564ffffffffff8116811461119257600080fd5b919050565b6000806000806000608086880312156111af57600080fd5b853567ffffffffffffffff8111156111c657600080fd5b6111d288828901611134565b909650945050602086013561ffff811681146111ed57600080fd5b92506111fb6040870161117d565b91506112096060870161117d565b90509295509295909350565b6001600160a01b0381168114610d0c57600080fd5b60006020828403121561123c57600080fd5b813561124781611215565b9392505050565b6000806000806060858703121561126457600080fd5b843567ffffffffffffffff81111561127b57600080fd5b61128787828801611134565b909550935061129a90506020860161117d565b91506112a86040860161117d565b905092959194509250565b6000806000606084860312156112c857600080fd5b505081359360208301359350604090920135919050565b60a0815260006112f260a0830188610fdf565b905064ffffffffff8616602083015284604083015260ff8416606083015262ffffff831660808301529695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561136157835161ffff1683529284019291840191600101611341565b50909695505050505050565b600181811c9082168061138157607f821691505b602082108114156113a257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156113fd576113fd6113d4565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060001982141561144b5761144b6113d4565b506001019056fea2646970667358221220e8e7c9fbcbaffce8d7bc516232a382abfa7916bd801a012ccf80093bc59c388e64736f6c634300080c0033",
  "deployedSourceMap": "628:7350:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1797:46;;;;;;;;;;-1:-1:-1;1797:46:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1738:27;;;;;;;;;;-1:-1:-1;1738:27:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;3353:1147::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;845:75::-;;;;;;;;;;-1:-1:-1;845:75:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3032:25:17;;;3020:2;3005:18;845:75:0;2886:177:17;5968:687:0;;;;;;;;;;-1:-1:-1;5968:687:0;;;;;:::i;:::-;;:::i;:::-;;4610:104;;;;;;;;;;-1:-1:-1;4610:104:0;;;;;:::i;:::-;;:::i;1652:94:6:-;;;;;;;;;;;;;:::i;6661:190:0:-;;;;;;;;;;-1:-1:-1;6661:190:0;;;;;:::i;:::-;;:::i;2377:969::-;;;;;;;;;;-1:-1:-1;2377:969:0;;;;;:::i;:::-;;:::i;5295:667::-;;;;;;;;;;-1:-1:-1;5295:667:0;;;;;:::i;:::-;;:::i;1771:19::-;;;;;;;;;;-1:-1:-1;1771:19:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1001:87:6:-;;;;;;;;;;-1:-1:-1;1074:6:6;;1001:87;;-1:-1:-1;;;;;1074:6:6;;;6276:51:17;;6264:2;6249:18;1001:87:6;6130:203:17;1901:192:6;;;;;;;;;;-1:-1:-1;1901:192:6;;;;;:::i;:::-;;:::i;1982:389:0:-;;;;;;;;;;-1:-1:-1;1982:389:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1797:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1797:46:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;1797:46:0;;;;;;-1:-1:-1;;;1797:46:0;;;;:::o;1738:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1738:27:0;;;;;;;-1:-1:-1;;1738:27:0;;;;;;;;;;;-1:-1:-1;;;1738:27:0;;;;;-1:-1:-1;;;1738:27:0;;;;;:::o;3353:1147::-;3411:15;3438:13;;3461:475;3481:9;:16;3478:19;;3461:475;;;3563:15;3516:9;3526:1;3516:12;;;;;;;;:::i;:::-;;;;;;;;;3549:10;3516:44;;:12;;;;;;;:44;;;;;;:62;3513:385;;;3708:7;;;;;3513:385;;;3793:15;;;3806:1;3793:15;;;;;;;;;3767:24;;3793:15;;;;;;;;;;;;;;;;;;;;3767:41;;3826:24;;;;;;;;;;;;;-1:-1:-1;;;3826:24:0;;;:8;3835:1;3826:11;;;;;;;;:::i;:::-;;;;;;;;;;:24;3875:8;3353:1147;-1:-1:-1;;;3353:1147:0:o;3513:385::-;3921:3;;3461:475;;;;3946:23;3985:5;3972:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:45;;4001:15;4034:9;4030:440;4050:9;:16;4047:19;;4030:440;;;4132:15;4085:9;4095:1;4085:12;;;;;;;;:::i;:::-;;;;;;;;;4118:10;4085:44;;:12;;;;;;;:44;;;;;;:62;:109;;;;;4179:15;4151:9;4161:1;4151:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;4151:25:0;;;;:43;4085:109;:156;;;;;4226:15;4198:9;4208:1;4198:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;4198:25:0;;;;:43;4085:156;4082:350;;;4274:9;4284:1;4274:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;4261:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;4269:1;4261:10;;;;;;;;:::i;:::-;;;;;;:34;;;;4323:9;;;;;4365:5;4354:7;:16;4351:67;;4394:5;;4351:67;4455:3;;4030:440;;;-1:-1:-1;4486:7:0;;3353:1147;-1:-1:-1;;;3353:1147:0:o;5968:687::-;7896:36;;;;;;;;;;;6144:1:::1;6125:16;:20;;;:46;;;;;6168:3;6149:16;:22;;;6125:46;6117:84;;;::::0;-1:-1:-1;;;6117:84:0;;8186:2:17;6117:84:0::1;::::0;::::1;8168:21:17::0;8225:2;8205:18;;;8198:30;8264:27;8244:18;;;8237:55;8309:18;;6117:84:0::1;7984:349:17::0;6117:84:0::1;6229:1;6211:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6301:14:0::1;::::0;6261:27:::1;6291:25:::0;;;:9:::1;:25;::::0;;;;6330:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;6383:39:0;6330;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;6383:39:0;;;;;-1:-1:-1;;;6383:39:0;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;6436:26:0;::::1;:45:::0;;-1:-1:-1;;6436:45:0::1;;::::0;::::1;;::::0;;6495:31:::1;6291:25:::0;6517:9;;6495:31:::1;:::i;:::-;;6537:80;6553:9;;6571:14;;6588:13;6603;6537:15;:80::i;:::-;6107:548;5968:687:::0;;;;;:::o;4610:104::-;1074:6:6;;-1:-1:-1;;;;;1074:6:6;679:10:1;1221:23:6;1213:68;;;;-1:-1:-1;;;1213:68:6;;;;;;;:::i;:::-;4677:13:0::1;:30:::0;;-1:-1:-1;;;;;;4677:30:0::1;-1:-1:-1::0;;;;;4677:30:0;;;::::1;::::0;;;::::1;::::0;;4610:104::o;1652:94:6:-;1074:6;;-1:-1:-1;;;;;1074:6:6;679:10:1;1221:23:6;1213:68;;;;-1:-1:-1;;;1213:68:6;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;6661:190:0:-;6785:59:::1;6801:9;;6812:1;6815:13;6830;6785:15;:59::i;:::-;6661:190:::0;;;;:::o;2377:969::-;2444:7;2485:14;;2472:10;:27;2464:56;;;;-1:-1:-1;;;2464:56:0;;9166:2:17;2464:56:0;;;9148:21:17;9205:2;9185:18;;;9178:30;-1:-1:-1;;;9224:18:17;;;9217:46;9280:18;;2464:56:0;8964:340:17;2464:56:0;2557:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;2557:34:0;;;;2539:15;:52;2530:85;;;;-1:-1:-1;;;2530:85:0;;9511:2:17;2530:85:0;;;9493:21:17;9550:2;9530:18;;;9523:30;-1:-1:-1;;;9569:18:17;;;9562:49;9628:18;;2530:85:0;9309:343:17;2530:85:0;2735:19;2764:25;2799:11;2826:9;2822:445;2842:21;;;;:9;:21;;;;;:37;;;;;2839:40;;2822:445;;;2938:21;;;;:9;:21;;;;;2971:17;;2938:27;;2966:1;2938:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;2935:322;;;3028:21;;;;:9;:21;;;;;:27;;3056:1;3028:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3008:50;;;;3090:1;3076:15;;3113:3;3118:1;3113:6;3109:23;;;3129:1;3123:7;;3109:23;2935:322;;;3167:21;;;;:9;:21;;;;;3201:17;;3167:27;;3195:1;3167:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;3164:93;;;3241:1;3237:5;;3164:93;2881:3;;;;:::i;:::-;;;;2822:445;;;-1:-1:-1;3284:6:0;;3276:35;;;;-1:-1:-1;;;3276:35:0;;9999:2:17;3276:35:0;;;9981:21:17;10038:2;10018:18;;;10011:30;-1:-1:-1;;;10057:18:17;;;10050:46;10113:18;;3276:35:0;9797:340:17;5295:667:0;7810:31;;-1:-1:-1;;;7810:31:0;;10344:2:17;7810:31:0;;;10326:21:17;10383:2;10363:18;;;10356:30;-1:-1:-1;;;10402:18:17;;;10395:44;10456:18;;7810:31:0;10142:338:17;1771:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1771:19:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1771:19:0;;;;;;;;;;:::o;1901:192:6:-;1074:6;;-1:-1:-1;;;;;1074:6:6;679:10:1;1221:23:6;1213:68;;;;-1:-1:-1;;;1213:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:6;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:6;;12094:2:17;1982:73:6::1;::::0;::::1;12076:21:17::0;12133:2;12113:18;;;12106:30;12172:34;12152:18;;;12145:62;-1:-1:-1;;;12223:18:17;;;12216:36;12269:19;;1982:73:6::1;11892:402:17::0;1982:73:6::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;1982:389:0:-;2043:15;2091:14;;2078:10;:27;2070:56;;;;-1:-1:-1;;;2070:56:0;;9166:2:17;2070:56:0;;;9148:21:17;9205:2;9185:18;;;9178:30;-1:-1:-1;;;9224:18:17;;;9217:46;9280:18;;2070:56:0;8964:340:17;2070:56:0;2136:25;2177:21;;;:9;:21;;;;;:37;;;;;2164:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2164:51:0;;2136:79;;2229:9;2225:114;2247:9;:16;2244:1;:19;2225:114;;;2298:21;;;;:9;:21;;;;;:27;;2326:1;2298:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2283:9;2293:1;2283:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;2265:3;;;;:::i;:::-;;;;2225:114;;;-1:-1:-1;2355:9:0;1982:389;-1:-1:-1;;1982:389:0:o;6857:552::-;7018:9;:16;;7044;;;;;;6992:23;7044:16;;;7018;;:9;:16;;7101:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;7141:31:0;:20;;;7163:9;;7141:31;:::i;:::-;-1:-1:-1;7186:18:0;;:26;;7226:36;7330:40;;;-1:-1:-1;;;7330:40:0;-1:-1:-1;;;;7276:40:0;;;-1:-1:-1;;;7276:40:0;-1:-1:-1;;7226:36:0;;;;7186:26;7226:36;7276:40;;;;-1:-1:-1;;7276:40:0;;;;;;;;7330;;;;;;;;-1:-1:-1;;;6857:552:0:o;2101:173:6:-;2176:6;;;-1:-1:-1;;;;;2193:17:6;;;-1:-1:-1;;;;;;2193:17:6;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:17;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;199:472::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;521:6;518:1;515:13;512:87;;;587:1;580:4;571:6;566:3;562:16;558:27;551:38;512:87;-1:-1:-1;653:2:17;632:15;-1:-1:-1;;628:29:17;619:39;;;;660:4;615:50;;199:472;-1:-1:-1;;199:472:17:o;676:570::-;929:3;918:9;911:22;892:4;950:46;991:3;980:9;976:19;968:6;950:46;:::i;:::-;1044:6;1032:19;;;;1027:2;1012:18;;1005:47;-1:-1:-1;1071:12:17;1119:15;;;1114:2;1099:18;;1092:43;1171:15;;;1166:2;1151:18;;1144:43;1224:15;;;1218:3;1203:19;;;1196:44;942:54;676:570;-1:-1:-1;676:570:17:o;1251:569::-;1500:3;1489:9;1482:22;1463:4;1521:46;1562:3;1551:9;1547:19;1539:6;1521:46;:::i;:::-;1610:14;;1603:22;1598:2;1583:18;;1576:50;-1:-1:-1;1645:12:17;1693:15;;;1688:2;1673:18;;1666:43;1745:15;;;1740:2;1725:18;;1718:43;1798:15;;;1792:3;1777:19;;;1770:44;1513:54;1251:569;-1:-1:-1;1251:569:17:o;1825:803::-;1987:4;2016:2;2056;2045:9;2041:18;2086:2;2075:9;2068:21;2109:6;2144;2138:13;2175:6;2167;2160:22;2213:2;2202:9;2198:18;2191:25;;2275:2;2265:6;2262:1;2258:14;2247:9;2243:30;2239:39;2225:53;;2313:2;2305:6;2301:15;2334:1;2344:255;2358:6;2355:1;2352:13;2344:255;;;2451:2;2447:7;2435:9;2427:6;2423:22;2419:36;2414:3;2407:49;2479:40;2512:6;2503;2497:13;2479:40;:::i;:::-;2469:50;-1:-1:-1;2577:12:17;;;;2542:15;;;;2380:1;2373:9;2344:255;;;-1:-1:-1;2616:6:17;;1825:803;-1:-1:-1;;;;;;;1825:803:17:o;2633:248::-;2701:6;2709;2762:2;2750:9;2741:7;2737:23;2733:32;2730:52;;;2778:1;2775;2768:12;2730:52;-1:-1:-1;;2801:23:17;;;2871:2;2856:18;;;2843:32;;-1:-1:-1;2633:248:17:o;3068:348::-;3120:8;3130:6;3184:3;3177:4;3169:6;3165:17;3161:27;3151:55;;3202:1;3199;3192:12;3151:55;-1:-1:-1;3225:20:17;;3268:18;3257:30;;3254:50;;;3300:1;3297;3290:12;3254:50;3337:4;3329:6;3325:17;3313:29;;3389:3;3382:4;3373:6;3365;3361:19;3357:30;3354:39;3351:59;;;3406:1;3403;3396:12;3351:59;3068:348;;;;;:::o;3421:165::-;3488:20;;3548:12;3537:24;;3527:35;;3517:63;;3576:1;3573;3566:12;3517:63;3421:165;;;:::o;3591:716::-;3686:6;3694;3702;3710;3718;3771:3;3759:9;3750:7;3746:23;3742:33;3739:53;;;3788:1;3785;3778:12;3739:53;3828:9;3815:23;3861:18;3853:6;3850:30;3847:50;;;3893:1;3890;3883:12;3847:50;3932:59;3983:7;3974:6;3963:9;3959:22;3932:59;:::i;:::-;4010:8;;-1:-1:-1;3906:85:17;-1:-1:-1;;4095:2:17;4080:18;;4067:32;4139:6;4128:18;;4118:29;;4108:57;;4161:1;4158;4151:12;4108:57;4184:5;-1:-1:-1;4208:37:17;4241:2;4226:18;;4208:37;:::i;:::-;4198:47;;4264:37;4297:2;4286:9;4282:18;4264:37;:::i;:::-;4254:47;;3591:716;;;;;;;;:::o;4312:131::-;-1:-1:-1;;;;;4387:31:17;;4377:42;;4367:70;;4433:1;4430;4423:12;4448:247;4507:6;4560:2;4548:9;4539:7;4535:23;4531:32;4528:52;;;4576:1;4573;4566:12;4528:52;4615:9;4602:23;4634:31;4659:5;4634:31;:::i;:::-;4684:5;4448:247;-1:-1:-1;;;4448:247:17:o;4700:555::-;4787:6;4795;4803;4811;4864:2;4852:9;4843:7;4839:23;4835:32;4832:52;;;4880:1;4877;4870:12;4832:52;4920:9;4907:23;4953:18;4945:6;4942:30;4939:50;;;4985:1;4982;4975:12;4939:50;5024:59;5075:7;5066:6;5055:9;5051:22;5024:59;:::i;:::-;5102:8;;-1:-1:-1;4998:85:17;-1:-1:-1;5156:37:17;;-1:-1:-1;5189:2:17;5174:18;;5156:37;:::i;:::-;5146:47;;5212:37;5245:2;5234:9;5230:18;5212:37;:::i;:::-;5202:47;;4700:555;;;;;;;:::o;5260:316::-;5337:6;5345;5353;5406:2;5394:9;5385:7;5381:23;5377:32;5374:52;;;5422:1;5419;5412:12;5374:52;-1:-1:-1;;5445:23:17;;;5515:2;5500:18;;5487:32;;-1:-1:-1;5566:2:17;5551:18;;;5538:32;;5260:316;-1:-1:-1;5260:316:17:o;5581:544::-;5834:3;5823:9;5816:22;5797:4;5855:46;5896:3;5885:9;5881:19;5873:6;5855:46;:::i;:::-;5847:54;;5949:12;5941:6;5937:25;5932:2;5921:9;5917:18;5910:53;5999:6;5994:2;5983:9;5979:18;5972:34;6054:4;6046:6;6042:17;6037:2;6026:9;6022:18;6015:45;6109:8;6101:6;6097:21;6091:3;6080:9;6076:19;6069:50;5581:544;;;;;;;;:::o;6338:643::-;6507:2;6559:21;;;6629:13;;6532:18;;;6651:22;;;6478:4;;6507:2;6730:15;;;;6704:2;6689:18;;;6478:4;6773:182;6787:6;6784:1;6781:13;6773:182;;;6852:13;;6867:6;6848:26;6836:39;;6930:15;;;;6895:12;;;;6809:1;6802:9;6773:182;;;-1:-1:-1;6972:3:17;;6338:643;-1:-1:-1;;;;;;6338:643:17:o;6986:380::-;7065:1;7061:12;;;;7108;;;7129:61;;7183:4;7175:6;7171:17;7161:27;;7129:61;7236:2;7228:6;7225:14;7205:18;7202:38;7199:161;;;7282:10;7277:3;7273:20;7270:1;7263:31;7317:4;7314:1;7307:15;7345:4;7342:1;7335:15;7199:161;;6986:380;;;:::o;7371:127::-;7432:10;7427:3;7423:20;7420:1;7413:31;7463:4;7460:1;7453:15;7487:4;7484:1;7477:15;7503:127;7564:10;7559:3;7555:20;7552:1;7545:31;7595:4;7592:1;7585:15;7619:4;7616:1;7609:15;8338:127;8399:10;8394:3;8390:20;8387:1;8380:31;8430:4;8427:1;8420:15;8454:4;8451:1;8444:15;8470:128;8510:3;8541:1;8537:6;8534:1;8531:13;8528:39;;;8547:18;;:::i;:::-;-1:-1:-1;8583:9:17;;8470:128::o;8603:356::-;8805:2;8787:21;;;8824:18;;;8817:30;8883:34;8878:2;8863:18;;8856:62;8950:2;8935:18;;8603:356::o;9657:135::-;9696:3;-1:-1:-1;;9717:17:17;;9714:43;;;9737:18;;:::i;:::-;-1:-1:-1;9784:1:17;9773:13;;9657:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    7978
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C7C7E5A GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8D977672 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8D977672 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C7C7E5A EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6215597B GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x64D924EF EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x551BBE0B EQ PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x124E JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x338 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x364 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x386 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x394 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x41C SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x495 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x495 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x478 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP2 AND SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x58 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x598 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4EF JUMPI PUSH2 0x4EF PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x51C JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x533 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x273790363AB1B597 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4D1 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B4 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5D2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x790 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x668 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x644 JUMPI PUSH2 0x644 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND LT JUMPDEST DUP1 ISZERO PUSH2 0x6A7 JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x683 JUMPI PUSH2 0x683 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x58 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x788 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6BF JUMPI PUSH2 0x6BF PUSH2 0x13A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x754 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x729 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x754 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x737 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76B PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT PUSH2 0x788 JUMPI PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5EE JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x7C0 JUMPI POP PUSH2 0x101 DUP4 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP7 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP7 AND OR SWAP1 SSTORE PUSH2 0x89D DUP2 DUP8 DUP8 PUSH2 0xF2D JUMP JUMPDEST POP PUSH2 0x8AD DUP7 DUP7 PUSH1 0x7 SLOAD DUP7 DUP7 PUSH2 0xE35 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x935 PUSH1 0x0 PUSH2 0xEDB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x945 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0xE35 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 LT PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xA3D JUMPI PUSH2 0xA3D PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA83 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xADD JUMPI PUSH2 0xADD PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND EQ ISZERO PUSH2 0xB06 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xB10 DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FC JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xBC6 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF2 SWAP1 PUSH2 0x136D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND DUP6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x79E JUMP JUMPDEST PUSH2 0xD0C DUP2 PUSH2 0xEDB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 SLOAD DUP3 LT PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD83 JUMPI PUSH2 0xD83 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDAC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDD PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE09 JUMPI PUSH2 0xE09 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xE26 DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDB2 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xE58 JUMPI PUSH2 0xE58 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH2 0xE78 PUSH1 0x1 DUP3 ADD DUP9 DUP9 PUSH2 0xF2D JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH5 0xFFFFFFFFFF PUSH1 0x58 SHL NOT SWAP6 DUP6 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH11 0xFFFFFFFFFF000000000000 NOT SWAP6 SWAP1 SWAP8 AND PUSH2 0x100 MUL SWAP5 SWAP1 SWAP5 AND PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xF39 SWAP1 PUSH2 0x136D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xF5B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xFA1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xF74 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0xFA1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xFA1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xFA1 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF86 JUMP JUMPDEST POP PUSH2 0xFAD SWAP3 SWAP2 POP PUSH2 0xFB1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1005 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFE9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1017 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x103F PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1083 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xFDF JUMP JUMPDEST SWAP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1105 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x10F3 DUP6 DUP4 MLOAD PUSH2 0xFDF JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10D7 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x115E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D2 DUP9 DUP3 DUP10 ADD PUSH2 0x1134 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x11ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x11FB PUSH1 0x40 DUP8 ADD PUSH2 0x117D JUMP JUMPDEST SWAP2 POP PUSH2 0x1209 PUSH1 0x60 DUP8 ADD PUSH2 0x117D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1247 DUP2 PUSH2 0x1215 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1287 DUP8 DUP3 DUP9 ADD PUSH2 0x1134 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x129A SWAP1 POP PUSH1 0x20 DUP7 ADD PUSH2 0x117D JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 PUSH1 0x40 DUP7 ADD PUSH2 0x117D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12F2 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH5 0xFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1361 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1341 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1381 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x13A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FD PUSH2 0x13D4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x144B JUMPI PUSH2 0x144B PUSH2 0x13D4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE7 0xC9 0xFB 0xCB 0xAF 0xFC 0xE8 0xD7 0xBC MLOAD PUSH3 0x32A382 0xAB STATICCALL PUSH26 0x16BD801A012CCF80093BC59C388E64736F6C634300080C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7C7C7E5A"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8D977672"
    },
    "36": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8D977672"
    },
    "47": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "51": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "62": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "73": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF981099"
    },
    "80": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F0"
    },
    "84": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7C7C7E5A"
    },
    "96": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x826B8EBD"
    },
    "107": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237"
    },
    "111": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8A6655D6"
    },
    "118": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x257"
    },
    "122": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "127": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6215597B"
    },
    "134": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "GT",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6215597B"
    },
    "145": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "149": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x64D924EF"
    },
    "156": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "160": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69D03738"
    },
    "167": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "171": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x202"
    },
    "182": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13CF08B"
    },
    "194": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "198": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x10190EF1"
    },
    "205": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127"
    },
    "209": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x551BBE0B"
    },
    "216": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "EQ",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "220": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "230": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "231": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "STOP",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "235": {
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        7978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "237": {
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "244": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "254": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "257": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "260": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC6"
    },
    "263": {
      "fn": null,
      "jump": "i",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "268": {
      "fn": null,
      "jump": "i",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "272": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "276": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "280": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "281": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "282": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102C"
    },
    "285": {
      "fn": null,
      "jump": "i",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "289": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "292": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SUB",
      "path": "0"
    },
    "293": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        1797,
        1843
      ],
      "op": "RETURN",
      "path": "0"
    },
    "295": {
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "297": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "302": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "303": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "305": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "REVERT",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "op": "POP"
    },
    "309": {
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "312": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "315": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "318": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC6"
    },
    "321": {
      "fn": null,
      "jump": "i",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9"
    },
    "326": {
      "fn": null,
      "jump": "i",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "330": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "334": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "338": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "340": {
      "fn": null,
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1070"
    },
    "343": {
      "fn": null,
      "jump": "i",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "347": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "348": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "REVERT",
      "path": "0"
    },
    "356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "POP",
      "path": "0"
    },
    "358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CB"
    },
    "364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B0"
    },
    "377": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "378": {
      "offset": [
        845,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "REVERT",
      "path": "0"
    },
    "390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "391": {
      "op": "POP"
    },
    "392": {
      "offset": [
        845,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1112"
    },
    "404": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        845,
        920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP5",
      "path": "0"
    },
    "422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        845,
        920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "438": {
      "op": "SWAP1"
    },
    "439": {
      "op": "DUP2"
    },
    "440": {
      "op": "MSTORE"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "offset": [
        845,
        920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "447": {
      "op": "JUMP"
    },
    "448": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "450": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "452": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "455": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "456": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "458": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "459": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "REVERT",
      "path": "0"
    },
    "460": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "465": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "468": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "469": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "471": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1197"
    },
    "474": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "475": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x799"
    },
    "479": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "480": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "481": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "STOP",
      "path": "0"
    },
    "482": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "484": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "485": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "486": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "489": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "490": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "492": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "493": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "REVERT",
      "path": "0"
    },
    "494": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "499": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "502": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "503": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "505": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122A"
    },
    "508": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "509": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B5"
    },
    "513": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "514": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "515": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "6"
    },
    "517": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "518": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20E"
    },
    "521": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "522": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "524": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "6"
    },
    "526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "527": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "6"
    },
    "528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E0"
    },
    "531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x901"
    },
    "534": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "6"
    },
    "535": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "537": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "538": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "539": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "542": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "543": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "545": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "546": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "REVERT",
      "path": "0"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "552": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "555": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "558": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124E"
    },
    "561": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMP",
      "path": "0"
    },
    "562": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "563": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x937"
    },
    "566": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMP",
      "path": "0"
    },
    "567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "571": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "575": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "577": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "578": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "REVERT",
      "path": "0"
    },
    "579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "584": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "587": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC6"
    },
    "593": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94B"
    },
    "598": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "599": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "600": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "601": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "DUP1",
      "path": "0"
    },
    "602": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "603": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x263"
    },
    "606": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "609": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "DUP1",
      "path": "0"
    },
    "610": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "REVERT",
      "path": "0"
    },
    "611": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "616": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272"
    },
    "619": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "620": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "622": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B3"
    },
    "625": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "626": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "627": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "630": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "631": {
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "633": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "634": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "635": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283"
    },
    "638": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "639": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "641": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "642": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "REVERT",
      "path": "0"
    },
    "643": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "648": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292"
    },
    "651": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "652": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "654": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC6"
    },
    "657": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "658": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "659": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "662": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "666": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "667": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "670": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "671": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "672": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "673": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "674": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "675": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12DF"
    },
    "679": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "680": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "681": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "682": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "6"
    },
    "683": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "684": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B4"
    },
    "687": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "688": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "690": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "6"
    },
    "691": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "6"
    },
    "692": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x1"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "699": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "709": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "710": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "6"
    },
    "711": {
      "op": "DUP2"
    },
    "712": {
      "op": "MSTORE"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "715": {
      "op": "ADD"
    },
    "716": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11E"
    },
    "719": {
      "op": "JUMP"
    },
    "720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "6"
    },
    "723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DC"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "728": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "6"
    },
    "731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "6"
    },
    "732": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E0"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EB"
    },
    "740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122A"
    },
    "746": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "6"
    },
    "747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC74"
    },
    "751": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "6"
    },
    "752": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "754": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "756": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FC"
    },
    "759": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "760": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "762": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "DUP1",
      "path": "0"
    },
    "763": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "764": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "769": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "772": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "773": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "775": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC6"
    },
    "778": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "779": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "780": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0F"
    },
    "783": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "787": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "788": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "791": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "792": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "793": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1325"
    },
    "796": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "800": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "802": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "803": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "805": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "806": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "807": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "808": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "810": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "811": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "812": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "813": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "814": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "816": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "819": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "820": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "823": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "824": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "825": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "826": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "828": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "829": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "831": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "832": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "833": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DIV",
      "path": "0"
    },
    "834": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MUL",
      "path": "0"
    },
    "835": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "837": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "838": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "840": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "841": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "842": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "843": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "844": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "846": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "847": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "848": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "849": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "850": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "851": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "853": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "854": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "856": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "857": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "858": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "860": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x364"
    },
    "863": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "867": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "868": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "869": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "870": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "871": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "874": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "875": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "876": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "878": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "LT",
      "path": "0"
    },
    "879": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "882": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "883": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "886": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "887": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "888": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "889": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DIV",
      "path": "0"
    },
    "890": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MUL",
      "path": "0"
    },
    "891": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "892": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "893": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "894": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "896": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "897": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "898": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "901": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "902": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "904": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "905": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "906": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "907": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "909": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "910": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "912": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "914": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "915": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "916": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "917": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "918": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "919": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "921": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "922": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "924": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "925": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "926": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "928": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "930": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "931": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "GT",
      "path": "0"
    },
    "932": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x394"
    },
    "935": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "936": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "937": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "938": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SUB",
      "path": "0"
    },
    "939": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "941": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "942": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "943": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "944": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "945": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "952": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "953": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "954": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "955": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "957": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "958": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "959": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "ADD",
      "path": "0"
    },
    "960": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "961": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "962": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "963": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "966": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "967": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "968": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "974": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "975": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "976": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "977": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "986": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "987": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DIV",
      "path": "0"
    },
    "988": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "989": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "990": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DIV",
      "path": "0"
    },
    "998": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "AND",
      "path": "0"
    },
    "999": {
      "fn": "Governance.getVotes",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1000": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1001": {
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1002": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1004": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1005": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1006": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1007": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "LT",
      "path": "0"
    },
    "1009": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1013": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1015": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1016": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1017": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1019": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1021": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1022": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1024": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1026": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1027": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1028": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1030": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MUL",
      "path": "0"
    },
    "1031": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1032": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1034": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1035": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "POP",
      "path": "0"
    },
    "1036": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1037": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "POP",
      "path": "0"
    },
    "1038": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1039": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1041": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1042": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1043": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1044": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1047": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "1051": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1054": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1056": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1059": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1060": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1061": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DIV",
      "path": "0"
    },
    "1062": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MUL",
      "path": "0"
    },
    "1063": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1065": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1066": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1068": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1069": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1071": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1072": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1074": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1075": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1076": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1077": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1078": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1079": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1080": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1081": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1082": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1084": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1085": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1086": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1087": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1088": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x448"
    },
    "1091": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1092": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "1095": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1096": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1097": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1098": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1099": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1102": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1103": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1104": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1106": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "LT",
      "path": "0"
    },
    "1107": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "1110": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1111": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1114": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1116": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DIV",
      "path": "0"
    },
    "1118": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MUL",
      "path": "0"
    },
    "1119": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1120": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1121": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1122": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1124": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1125": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1126": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1129": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1130": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1131": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1132": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1134": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1135": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1137": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1138": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1140": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1142": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1143": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1146": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1147": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1148": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1149": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1150": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1152": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1154": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1156": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1157": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1158": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1159": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "GT",
      "path": "0"
    },
    "1160": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "1163": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1164": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1165": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1166": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SUB",
      "path": "0"
    },
    "1167": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1169": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "AND",
      "path": "0"
    },
    "1170": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1171": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1172": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1179": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1181": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1182": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1184": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1189": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1190": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "AND",
      "path": "0"
    },
    "1191": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1192": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "1198": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1201": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1202": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DIV",
      "path": "0"
    },
    "1203": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1204": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "AND",
      "path": "0"
    },
    "1205": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1210": {
      "op": "SHL"
    },
    "1211": {
      "offset": [
        1738,
        1765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1212": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DIV",
      "path": "0"
    },
    "1213": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1214": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "AND",
      "path": "0"
    },
    "1215": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1222": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1223": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DIV",
      "path": "0"
    },
    "1224": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "AND",
      "path": "0"
    },
    "1225": {
      "fn": "Governance.getVotes",
      "offset": [
        1738,
        1765
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1226": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        1738,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3411,
        3426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3438,
        3451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3438,
        3451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3481,
        3490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3481,
        3497
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3478,
        3497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3478,
        3497
      ],
      "op": "LT",
      "path": "0"
    },
    "1239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x598"
    },
    "1243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3563,
        3578
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3526,
        3527
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "LT",
      "path": "0"
    },
    "1252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "1255": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "1259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        3516,
        3528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1273": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3549,
        3559
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "MUL",
      "path": "0"
    },
    "1282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1284": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3528
      ],
      "op": "ADD",
      "path": "0"
    },
    "1285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3560
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1292": {
      "branch": 43,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3516,
        3578
      ],
      "op": "LT",
      "path": "0"
    },
    "1293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1297": {
      "branch": 43,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3708,
        3715
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "1299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3708,
        3715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3708,
        3715
      ],
      "op": "ADD",
      "path": "0"
    },
    "1302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3708,
        3715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3708,
        3715
      ],
      "op": "POP",
      "path": "0"
    },
    "1304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x590"
    },
    "1307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1312": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3806,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1316": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1319": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "ADD",
      "path": "0"
    },
    "1321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1324": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3767,
        3791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3767,
        3791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "ADD",
      "path": "0"
    },
    "1331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "ADD",
      "path": "0"
    },
    "1339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SUB",
      "path": "0"
    },
    "1344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x533"
    },
    "1349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "POP",
      "path": "0"
    },
    "1352": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3793,
        3808
      ],
      "op": "POP",
      "path": "0"
    },
    "1353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3767,
        3808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3767,
        3808
      ],
      "op": "POP",
      "path": "0"
    },
    "1355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "1357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "ADD",
      "path": "0"
    },
    "1373": {
      "op": "PUSH8",
      "value": "0x273790363AB1B597"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "POP",
      "path": "0"
    },
    "1388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3835,
        3836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "LT",
      "path": "0"
    },
    "1395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57E"
    },
    "1398": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57E"
    },
    "1402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        3826,
        3837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1407": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1409": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "MUL",
      "path": "0"
    },
    "1412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "ADD",
      "path": "0"
    },
    "1416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3837
      ],
      "op": "ADD",
      "path": "0"
    },
    "1417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3826,
        3850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3875,
        3883
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 3
    },
    "1419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3513,
        3898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3921,
        3924
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "1427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3921,
        3924
      ],
      "op": "ADD",
      "path": "0"
    },
    "1428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D1"
    },
    "1431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3461,
        3936
      ],
      "op": "POP",
      "path": "0"
    },
    "1434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3946,
        3969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3985,
        3990
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1446": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1447": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "GT",
      "path": "0"
    },
    "1448": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B4"
    },
    "1452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B4"
    },
    "1456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BE"
    },
    "1459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1463": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1469": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "MUL",
      "path": "0"
    },
    "1472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ADD",
      "path": "0"
    },
    "1475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ADD",
      "path": "0"
    },
    "1477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E7"
    },
    "1485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ADD",
      "path": "0"
    },
    "1490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "ADD",
      "path": "0"
    },
    "1498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SUB",
      "path": "0"
    },
    "1503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D2"
    },
    "1508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "POP",
      "path": "0"
    },
    "1511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3972,
        3991
      ],
      "op": "POP",
      "path": "0"
    },
    "1513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3946,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3946,
        3991
      ],
      "op": "POP",
      "path": "0"
    },
    "1515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4001,
        4016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4034,
        4043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4050,
        4059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4050,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4047,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4047,
        4066
      ],
      "op": "LT",
      "path": "0"
    },
    "1524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x790"
    },
    "1528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4132,
        4147
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4095,
        4096
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "LT",
      "path": "0"
    },
    "1537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4085,
        4097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1553": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4118,
        4128
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "MUL",
      "path": "0"
    },
    "1567": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4097
      ],
      "op": "ADD",
      "path": "0"
    },
    "1570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1575": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4129
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1577": {
      "branch": 44,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4147
      ],
      "op": "LT",
      "path": "0"
    },
    "1578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1583": {
      "branch": 44,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "POP",
      "path": "0"
    },
    "1585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4179,
        4194
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1586": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4161,
        4162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1591": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "LT",
      "path": "0"
    },
    "1593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "1596": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "1600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4151,
        4163
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1605": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1609": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1613": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1614": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1615": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "MUL",
      "path": "0"
    },
    "1620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4163
      ],
      "op": "ADD",
      "path": "0"
    },
    "1621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "ADD",
      "path": "0"
    },
    "1624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "DIV",
      "path": "0"
    },
    "1632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "1638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4176
      ],
      "op": "AND",
      "path": "0"
    },
    "1639": {
      "branch": 45,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4151,
        4194
      ],
      "op": "LT",
      "path": "0"
    },
    "1640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1646": {
      "branch": 45,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "POP",
      "path": "0"
    },
    "1648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4226,
        4241
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4208,
        4209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1652": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1655": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "LT",
      "path": "0"
    },
    "1656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "1659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "1663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1666": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4198,
        4210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1673": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1677": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "MUL",
      "path": "0"
    },
    "1683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4210
      ],
      "op": "ADD",
      "path": "0"
    },
    "1684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "ADD",
      "path": "0"
    },
    "1687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "DIV",
      "path": "0"
    },
    "1695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "1701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4223
      ],
      "op": "AND",
      "path": "0"
    },
    "1702": {
      "branch": 46,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4198,
        4241
      ],
      "op": "GT",
      "path": "0"
    },
    "1703": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4085,
        4241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4082,
        4432
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4082,
        4432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1708": {
      "branch": 46,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4082,
        4432
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4283
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x4"
    },
    "1711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4284,
        4285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1714": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "LT",
      "path": "0"
    },
    "1716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BF"
    },
    "1719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BF"
    },
    "1723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4274,
        4286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "MUL",
      "path": "0"
    },
    "1741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4286
      ],
      "op": "ADD",
      "path": "0"
    },
    "1742": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4274,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DB"
    },
    "1750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "1754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DIV",
      "path": "0"
    },
    "1765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MUL",
      "path": "0"
    },
    "1766": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1773": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x707"
    },
    "1794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "1798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x754"
    },
    "1805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "LT",
      "path": "0"
    },
    "1810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x729"
    },
    "1813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DIV",
      "path": "0"
    },
    "1821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MUL",
      "path": "0"
    },
    "1822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1829": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x754"
    },
    "1832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1833": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1846": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "GT",
      "path": "0"
    },
    "1863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x737"
    },
    "1866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SUB",
      "path": "0"
    },
    "1870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "AND",
      "path": "0"
    },
    "1873": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "ADD",
      "path": "0"
    },
    "1875": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1877": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1881": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1882": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4269,
        4270
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "LT",
      "path": "0"
    },
    "1888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "1898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        4261,
        4271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "MUL",
      "path": "0"
    },
    "1903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "1906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "1907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4261,
        4295
      ],
      "op": "POP",
      "path": "0"
    },
    "1911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4323,
        4332
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "1912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4323,
        4332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4323,
        4332
      ],
      "op": "ADD",
      "path": "0"
    },
    "1915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4323,
        4332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4323,
        4332
      ],
      "op": "POP",
      "path": "0"
    },
    "1917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4365,
        4370
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4354,
        4361
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1919": {
      "branch": 47,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4354,
        4370
      ],
      "op": "LT",
      "path": "0"
    },
    "1920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4351,
        4418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1923": {
      "branch": 47,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4351,
        4418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4394,
        4399
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x790"
    },
    "1927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4394,
        4399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4351,
        4418
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4455,
        4458
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "1931": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4455,
        4458
      ],
      "op": "ADD",
      "path": "0"
    },
    "1932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EE"
    },
    "1935": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4030,
        4470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4486,
        4493
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "1939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        4486,
        4493
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        3353,
        4500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        3353,
        4500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1945": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "offset": [
        7896,
        7932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A7"
    },
    "1949": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1950": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1951": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1953": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1954": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1955": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1956": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "SUB",
      "path": "0"
    },
    "1957": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1958": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1959": {
      "fn": "Governance.createProposal",
      "offset": [
        7896,
        7932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1960": {
      "fn": "Governance.createProposal",
      "offset": [
        6144,
        6145
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "1962": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6141
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1963": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "1966": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6145
      ],
      "op": "AND",
      "path": "0"
    },
    "1967": {
      "branch": 48,
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6145
      ],
      "op": "GT",
      "path": "0"
    },
    "1968": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1969": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1970": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C0"
    },
    "1973": {
      "branch": 48,
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1974": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "POP",
      "path": "0"
    },
    "1975": {
      "fn": "Governance.createProposal",
      "offset": [
        6168,
        6171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "1978": {
      "fn": "Governance.createProposal",
      "offset": [
        6149,
        6165
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1979": {
      "fn": "Governance.createProposal",
      "offset": [
        6149,
        6171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "1982": {
      "fn": "Governance.createProposal",
      "offset": [
        6149,
        6171
      ],
      "op": "AND",
      "path": "0"
    },
    "1983": {
      "branch": 49,
      "fn": "Governance.createProposal",
      "offset": [
        6149,
        6171
      ],
      "op": "LT",
      "path": "0"
    },
    "1984": {
      "fn": "Governance.createProposal",
      "offset": [
        6125,
        6171
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1985": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80C"
    },
    "1988": {
      "branch": 49,
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1989": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1991": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2000": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2003": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2005": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2006": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "ADD",
      "path": "0"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "op": "MSTORE"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "2059": {
      "op": "JUMP"
    },
    "2060": {
      "fn": "Governance.createProposal",
      "offset": [
        6117,
        6201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2061": {
      "fn": "Governance.createProposal",
      "offset": [
        6229,
        6230
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "2063": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2065": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2067": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2068": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2069": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2070": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81F"
    },
    "2073": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2074": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2075": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EA"
    },
    "2078": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        6211,
        6230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2079": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2080": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2082": {
      "fn": "Governance.createProposal",
      "offset": [
        6211,
        6230
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "op": "POP"
    },
    "2085": {
      "fn": "Governance.createProposal",
      "offset": [
        6301,
        6315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2087": {
      "fn": "Governance.createProposal",
      "offset": [
        6301,
        6315
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2088": {
      "fn": "Governance.createProposal",
      "offset": [
        6261,
        6288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2090": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2091": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2092": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2093": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2095": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2097": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2098": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2100": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2101": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2102": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6353
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "2104": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6353
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2105": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6353
      ],
      "op": "ADD",
      "path": "0"
    },
    "2106": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2107": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2108": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "2124": {
      "op": "NOT"
    },
    "2125": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "AND",
      "path": "0",
      "statement": 13
    },
    "2126": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "2133": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "2139": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2140": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2141": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "AND",
      "path": "0"
    },
    "2142": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2143": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2144": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2145": {
      "fn": "Governance.createProposal",
      "offset": [
        6330,
        6369
      ],
      "op": "MUL",
      "path": "0"
    },
    "2146": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "NOT"
    },
    "2156": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "AND",
      "path": "0"
    },
    "2157": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2158": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2159": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2160": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "OR",
      "path": "0"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2167": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2168": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "AND",
      "path": "0"
    },
    "2169": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2170": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2171": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2172": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "MUL",
      "path": "0"
    },
    "2173": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "OR",
      "path": "0"
    },
    "2174": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2175": {
      "fn": "Governance.createProposal",
      "offset": [
        6383,
        6422
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2179": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "0"
    },
    "2180": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2181": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2182": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2185": {
      "op": "NOT"
    },
    "2186": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "AND",
      "path": "0"
    },
    "2187": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2190": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2191": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "AND",
      "path": "0"
    },
    "2192": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "OR",
      "path": "0"
    },
    "2193": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2194": {
      "fn": "Governance.createProposal",
      "offset": [
        6436,
        6481
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2195": {
      "fn": "Governance.createProposal",
      "offset": [
        6495,
        6526
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x89D"
    },
    "2198": {
      "fn": "Governance.createProposal",
      "offset": [
        6291,
        6316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2199": {
      "fn": "Governance.createProposal",
      "offset": [
        6517,
        6526
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2200": {
      "fn": "Governance.createProposal",
      "offset": [
        6517,
        6526
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2201": {
      "fn": "Governance.createProposal",
      "offset": [
        6495,
        6526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2D"
    },
    "2204": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        6495,
        6526
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2205": {
      "fn": "Governance.createProposal",
      "offset": [
        6495,
        6526
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2206": {
      "fn": "Governance.createProposal",
      "offset": [
        6495,
        6526
      ],
      "op": "POP",
      "path": "0"
    },
    "2207": {
      "fn": "Governance.createProposal",
      "offset": [
        6537,
        6617
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x8AD"
    },
    "2210": {
      "fn": "Governance.createProposal",
      "offset": [
        6553,
        6562
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2211": {
      "fn": "Governance.createProposal",
      "offset": [
        6553,
        6562
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2212": {
      "fn": "Governance.createProposal",
      "offset": [
        6571,
        6585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2214": {
      "fn": "Governance.createProposal",
      "offset": [
        6571,
        6585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2215": {
      "fn": "Governance.createProposal",
      "offset": [
        6588,
        6601
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2216": {
      "fn": "Governance.createProposal",
      "offset": [
        6603,
        6616
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2217": {
      "fn": "Governance.createProposal",
      "offset": [
        6537,
        6552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE35"
    },
    "2220": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        6537,
        6617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2221": {
      "fn": "Governance.createProposal",
      "offset": [
        6537,
        6617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2222": {
      "fn": "Governance.createProposal",
      "offset": [
        6107,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2223": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2224": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2225": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2226": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2227": {
      "fn": "Governance.createProposal",
      "offset": [
        5968,
        6655
      ],
      "op": "POP",
      "path": "0"
    },
    "2228": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        5968,
        6655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2229": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2230": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2232": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "6"
    },
    "2242": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 17
    },
    "2243": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "6"
    },
    "2244": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8DF"
    },
    "2247": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2248": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2250": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2257": {
      "op": "SHL"
    },
    "2258": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2259": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2260": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2262": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "6"
    },
    "2263": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79E"
    },
    "2266": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2267": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1402"
    },
    "2270": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2271": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2272": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x2"
    },
    "2274": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2275": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "SUB"
    },
    "2284": {
      "op": "NOT"
    },
    "2285": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "AND",
      "path": "0"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2295": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2296": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2297": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "AND",
      "path": "0"
    },
    "2298": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2299": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2300": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2301": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "OR",
      "path": "0"
    },
    "2302": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2303": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        4677,
        4707
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2304": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        4610,
        4714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2306": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2308": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "6"
    },
    "2318": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2319": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "6"
    },
    "2320": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92B"
    },
    "2323": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2324": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2326": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2335": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2336": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2338": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "6"
    },
    "2339": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79E"
    },
    "2342": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2343": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1402"
    },
    "2346": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2347": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0x935"
    },
    "2351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEDB"
    },
    "2356": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2358": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2359": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2360": {
      "fn": "Governance.createTaskType",
      "offset": [
        6785,
        6844
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x945"
    },
    "2363": {
      "fn": "Governance.createTaskType",
      "offset": [
        6801,
        6810
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2364": {
      "fn": "Governance.createTaskType",
      "offset": [
        6801,
        6810
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2365": {
      "fn": "Governance.createTaskType",
      "offset": [
        6812,
        6813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2367": {
      "fn": "Governance.createTaskType",
      "offset": [
        6815,
        6828
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2368": {
      "fn": "Governance.createTaskType",
      "offset": [
        6830,
        6843
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2369": {
      "fn": "Governance.createTaskType",
      "offset": [
        6785,
        6800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE35"
    },
    "2372": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        6785,
        6844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2373": {
      "fn": "Governance.createTaskType",
      "offset": [
        6785,
        6844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2374": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "POP",
      "path": "0"
    },
    "2375": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "POP",
      "path": "0"
    },
    "2376": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "POP",
      "path": "0"
    },
    "2377": {
      "fn": "Governance.createTaskType",
      "offset": [
        6661,
        6851
      ],
      "op": "POP",
      "path": "0"
    },
    "2378": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        6661,
        6851
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2379": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2377,
        3346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2380": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2444,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2382": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2485,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x7"
    },
    "2384": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2485,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2385": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2472,
        2482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2386": {
      "branch": 50,
      "fn": "Governance.getWinningVote",
      "offset": [
        2472,
        2499
      ],
      "op": "LT",
      "path": "0"
    },
    "2387": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x991"
    },
    "2390": {
      "branch": 50,
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2391": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2393": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2402": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2405": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2407": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2408": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "ADD",
      "path": "0"
    },
    "2409": {
      "op": "MSTORE"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "MSTORE"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "2448": {
      "op": "JUMP"
    },
    "2449": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2464,
        2520
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "2452": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2453": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2454": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2455": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2457": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2459": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2460": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2462": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2463": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2578
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2464": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2466": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "ADD",
      "path": "0"
    },
    "2467": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2474": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "DIV",
      "path": "0"
    },
    "2475": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "2481": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2557,
        2591
      ],
      "op": "AND",
      "path": "0"
    },
    "2482": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2539,
        2554
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2483": {
      "branch": 51,
      "fn": "Governance.getWinningVote",
      "offset": [
        2539,
        2591
      ],
      "op": "GT",
      "path": "0"
    },
    "2484": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F5"
    },
    "2487": {
      "branch": 51,
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2488": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2490": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2499": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2502": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2504": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2505": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "ADD",
      "path": "0"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "ADD"
    },
    "2541": {
      "op": "MSTORE"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2544": {
      "op": "ADD"
    },
    "2545": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "2548": {
      "op": "JUMP"
    },
    "2549": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2530,
        2615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2550": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2735,
        2754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2552": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2764,
        2789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2553": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2799,
        2810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2555": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2826,
        2835
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2556": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2557": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2559": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2560": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2561": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2562": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2564": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2566": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2570": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2863
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2571": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2879
      ],
      "op": "ADD",
      "path": "0"
    },
    "2574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2575": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2578": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2842,
        2879
      ],
      "op": "AND",
      "path": "0"
    },
    "2579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2839,
        2879
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2580": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2839,
        2879
      ],
      "op": "LT",
      "path": "0"
    },
    "2581": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2582": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "2585": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2586": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2589": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2591": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2595": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2596": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2598": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2599": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2959
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2600": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2971,
        2988
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2601": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2971,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2602": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2604": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2965
      ],
      "op": "ADD",
      "path": "0"
    },
    "2605": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2966,
        2967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2606": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2608": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "LT",
      "path": "0"
    },
    "2610": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "2613": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2614": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "2617": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "2620": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        2938,
        2968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2624": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2626": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2627": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "DIV",
      "path": "0"
    },
    "2628": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "ADD",
      "path": "0"
    },
    "2629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "MOD",
      "path": "0"
    },
    "2632": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2634": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "MUL",
      "path": "0"
    },
    "2635": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2636": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2637": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2641": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "EXP",
      "path": "0"
    },
    "2642": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "DIV",
      "path": "0"
    },
    "2644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2647": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2968
      ],
      "op": "AND",
      "path": "0"
    },
    "2648": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2651": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2652": {
      "branch": 52,
      "fn": "Governance.getWinningVote",
      "offset": [
        2938,
        2988
      ],
      "op": "GT",
      "path": "0"
    },
    "2653": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2654": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB9"
    },
    "2657": {
      "branch": 52,
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2658": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x0"
    },
    "2660": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2661": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2662": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2663": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2665": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2667": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2668": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2670": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3049
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2672": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3055
      ],
      "op": "ADD",
      "path": "0"
    },
    "2675": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3056,
        3057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2676": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2678": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "LT",
      "path": "0"
    },
    "2680": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA83"
    },
    "2683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2684": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA83"
    },
    "2687": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "2690": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        3028,
        3058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2692": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2694": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2695": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2697": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "DIV",
      "path": "0"
    },
    "2698": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "ADD",
      "path": "0"
    },
    "2699": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "MOD",
      "path": "0"
    },
    "2702": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2704": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "MUL",
      "path": "0"
    },
    "2705": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2706": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2708": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2711": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "EXP",
      "path": "0"
    },
    "2712": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2713": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "DIV",
      "path": "0"
    },
    "2714": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2717": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3028,
        3058
      ],
      "op": "AND",
      "path": "0"
    },
    "2718": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3008,
        3058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2721": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3008,
        3058
      ],
      "op": "AND",
      "path": "0"
    },
    "2722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3008,
        3058
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3008,
        3058
      ],
      "op": "POP",
      "path": "0"
    },
    "2724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3090,
        3091
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 24
    },
    "2725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3076,
        3091
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3076,
        3091
      ],
      "op": "POP",
      "path": "0"
    },
    "2727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3113,
        3116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3118,
        3119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2730": {
      "branch": 53,
      "fn": "Governance.getWinningVote",
      "offset": [
        3113,
        3119
      ],
      "op": "EQ",
      "path": "0"
    },
    "2731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3109,
        3132
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3109,
        3132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB4"
    },
    "2735": {
      "branch": 53,
      "fn": "Governance.getWinningVote",
      "offset": [
        3109,
        3132
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3129,
        3130
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "2738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3123,
        3130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3123,
        3130
      ],
      "op": "POP",
      "path": "0"
    },
    "2740": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3109,
        3132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB06"
    },
    "2744": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2935,
        3257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2746": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2749": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2750": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2756": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3188
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3201,
        3218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3201,
        3218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2762": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2764": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3194
      ],
      "op": "ADD",
      "path": "0"
    },
    "2765": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3195,
        3196
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2766": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "LT",
      "path": "0"
    },
    "2770": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADD"
    },
    "2773": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2774": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADD"
    },
    "2777": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "2780": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        3167,
        3197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2781": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2782": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2784": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2785": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2786": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2787": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "DIV",
      "path": "0"
    },
    "2788": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "ADD",
      "path": "0"
    },
    "2789": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "MOD",
      "path": "0"
    },
    "2792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2794": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "MUL",
      "path": "0"
    },
    "2795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2796": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2801": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "EXP",
      "path": "0"
    },
    "2802": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "DIV",
      "path": "0"
    },
    "2804": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2807": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3197
      ],
      "op": "AND",
      "path": "0"
    },
    "2808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "2811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3218
      ],
      "op": "AND",
      "path": "0"
    },
    "2812": {
      "branch": 54,
      "fn": "Governance.getWinningVote",
      "offset": [
        3167,
        3218
      ],
      "op": "EQ",
      "path": "0"
    },
    "2813": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3164,
        3257
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2814": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3164,
        3257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB06"
    },
    "2817": {
      "branch": 54,
      "fn": "Governance.getWinningVote",
      "offset": [
        3164,
        3257
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2818": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3241,
        3242
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x1"
    },
    "2820": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3237,
        3242
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2821": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3237,
        3242
      ],
      "op": "POP",
      "path": "0"
    },
    "2822": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3164,
        3257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2823": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "2824": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB10"
    },
    "2827": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2828": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1437"
    },
    "2831": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        2881,
        2884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2832": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2833": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2834": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "POP",
      "path": "0"
    },
    "2835": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2881,
        2884
      ],
      "op": "POP",
      "path": "0"
    },
    "2836": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FC"
    },
    "2839": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2840": {
      "fn": "Governance.getWinningVote",
      "offset": [
        2822,
        3267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3284,
        3290
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 28
    },
    "2843": {
      "branch": 55,
      "fn": "Governance.getWinningVote",
      "offset": [
        3284,
        3290
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2844": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x790"
    },
    "2847": {
      "branch": 55,
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2862": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2865": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "ADD",
      "path": "0"
    },
    "2866": {
      "op": "MSTORE"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2901": {
      "op": "ADD"
    },
    "2902": {
      "fn": "Governance.getWinningVote",
      "offset": [
        3276,
        3311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "2905": {
      "op": "JUMP"
    },
    "2906": {
      "fn": "Governance.vote",
      "offset": [
        5295,
        5962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2907": {
      "offset": [
        7810,
        7841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2909": {
      "fn": "Governance.vote",
      "offset": [
        7810,
        7841
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "offset": [
        7810,
        7841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2918": {
      "fn": "Governance.vote",
      "offset": [
        7810,
        7841
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2921": {
      "offset": [
        7810,
        7841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2923": {
      "fn": "Governance.vote",
      "offset": [
        7810,
        7841
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2924": {
      "fn": "Governance.vote",
      "offset": [
        7810,
        7841
      ],
      "op": "ADD",
      "path": "0"
    },
    "2925": {
      "op": "MSTORE"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2953": {
      "op": "DUP3"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "MSTORE"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2958": {
      "op": "ADD"
    },
    "2959": {
      "offset": [
        7810,
        7841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "2962": {
      "op": "JUMP"
    },
    "2963": {
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2964": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2966": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2967": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2968": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2969": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2970": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "LT",
      "path": "0"
    },
    "2971": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA3"
    },
    "2974": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2975": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2977": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2978": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2979": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2980": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2981": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2983": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2984": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2986": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2988": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2989": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2990": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2992": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MUL",
      "path": "0"
    },
    "2993": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "2994": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2996": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2997": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "POP",
      "path": "0"
    },
    "2998": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2999": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "POP",
      "path": "0"
    },
    "3000": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3001": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3003": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3004": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3005": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3006": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC6"
    },
    "3009": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3010": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "3013": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3014": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3015": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3016": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3018": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3019": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3021": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3022": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3023": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DIV",
      "path": "0"
    },
    "3024": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MUL",
      "path": "0"
    },
    "3025": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3027": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3028": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3030": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3031": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3032": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3033": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3034": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3036": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3037": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3038": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3039": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3040": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3041": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3042": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3043": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3044": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3046": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3047": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3048": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3049": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3050": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "3053": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3054": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136D"
    },
    "3057": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3058": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3059": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3060": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3061": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3F"
    },
    "3064": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3065": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3066": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3068": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "LT",
      "path": "0"
    },
    "3069": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC14"
    },
    "3072": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3073": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3076": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3077": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3078": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3079": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DIV",
      "path": "0"
    },
    "3080": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MUL",
      "path": "0"
    },
    "3081": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3082": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3083": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3084": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3086": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3087": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3088": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3F"
    },
    "3091": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3092": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3093": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3094": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3095": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3096": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3097": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3099": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3100": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3102": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3104": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3105": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3106": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3107": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3108": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3109": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3112": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3114": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3115": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3116": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3118": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3119": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3120": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3121": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "GT",
      "path": "0"
    },
    "3122": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC22"
    },
    "3125": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3126": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3127": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3128": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SUB",
      "path": "0"
    },
    "3129": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3131": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "AND",
      "path": "0"
    },
    "3132": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3133": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3134": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3135": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3142": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3143": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3144": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3145": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3147": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3148": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3149": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3150": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3152": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3153": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3154": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "ADD",
      "path": "0"
    },
    "3155": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3156": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3157": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3158": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xFFFFFFFFFF"
    },
    "3164": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3165": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3166": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "AND",
      "path": "0"
    },
    "3167": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3168": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3169": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3173": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3174": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "AND",
      "path": "0"
    },
    "3175": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3176": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3179": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3180": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DIV",
      "path": "0"
    },
    "3181": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFFFFFF"
    },
    "3185": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "AND",
      "path": "0"
    },
    "3186": {
      "fn": "Governance.vote",
      "offset": [
        1771,
        1790
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3187": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        1771,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3189": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3191": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3198": {
      "op": "SHL"
    },
    "3199": {
      "op": "SUB"
    },
    "3200": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "6"
    },
    "3201": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3202": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "6"
    },
    "3203": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC9E"
    },
    "3206": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3207": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3209": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3218": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3219": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3221": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "6"
    },
    "3222": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79E"
    },
    "3225": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3226": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1402"
    },
    "3229": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3230": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 29
    },
    "3240": {
      "branch": 57,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "6"
    },
    "3241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD03"
    },
    "3244": {
      "branch": 57,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "6"
    },
    "3263": {
      "op": "MSTORE"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "MSTORE"
    },
    "3271": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3306": {
      "op": "DUP3"
    },
    "3307": {
      "op": "ADD"
    },
    "3308": {
      "op": "MSTORE"
    },
    "3309": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3321": {
      "op": "DUP3"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "op": "MSTORE"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79E"
    },
    "3330": {
      "op": "JUMP"
    },
    "3331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 30,
      "value": "0xD0C"
    },
    "3335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEDB"
    },
    "3339": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "6"
    },
    "3342": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3343": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3344": {
      "fn": "Governance.getVotes",
      "offset": [
        2043,
        2058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3346": {
      "fn": "Governance.getVotes",
      "offset": [
        2091,
        2105
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x7"
    },
    "3348": {
      "fn": "Governance.getVotes",
      "offset": [
        2091,
        2105
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3349": {
      "fn": "Governance.getVotes",
      "offset": [
        2078,
        2088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3350": {
      "branch": 56,
      "fn": "Governance.getVotes",
      "offset": [
        2078,
        2105
      ],
      "op": "LT",
      "path": "0"
    },
    "3351": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD55"
    },
    "3354": {
      "branch": 56,
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3355": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3357": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3366": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3369": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3371": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3372": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "ADD",
      "path": "0"
    },
    "3373": {
      "op": "MSTORE"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3378": {
      "op": "DUP3"
    },
    "3379": {
      "op": "ADD"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3403": {
      "op": "DUP3"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "3412": {
      "op": "JUMP"
    },
    "3413": {
      "fn": "Governance.getVotes",
      "offset": [
        2070,
        2126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3414": {
      "fn": "Governance.getVotes",
      "offset": [
        2136,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3416": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3417": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3418": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3419": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3421": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3423": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3424": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3426": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3427": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2198
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3428": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3430": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2214
      ],
      "op": "ADD",
      "path": "0"
    },
    "3431": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2214
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3432": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "3435": {
      "fn": "Governance.getVotes",
      "offset": [
        2177,
        2214
      ],
      "op": "AND",
      "path": "0"
    },
    "3436": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3445": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3446": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "GT",
      "path": "0"
    },
    "3447": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3448": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD83"
    },
    "3451": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3452": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD83"
    },
    "3455": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BE"
    },
    "3458": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2164,
        2215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3459": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3460": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3462": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3463": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3464": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3465": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3466": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3467": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3468": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3470": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "MUL",
      "path": "0"
    },
    "3471": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3473": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3474": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3475": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3476": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3478": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3479": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3480": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3481": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDAC"
    },
    "3484": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3485": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3486": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3488": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3489": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3491": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3492": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "MUL",
      "path": "0"
    },
    "3493": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3494": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3495": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3496": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "3497": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "ADD",
      "path": "0"
    },
    "3498": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3501": {
      "fn": "Governance.getVotes",
      "offset": [
        2164,
        2215
      ],
      "op": "POP",
      "path": "0"
    },
    "3502": {
      "fn": "Governance.getVotes",
      "offset": [
        2136,
        2215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3503": {
      "fn": "Governance.getVotes",
      "offset": [
        2136,
        2215
      ],
      "op": "POP",
      "path": "0"
    },
    "3504": {
      "fn": "Governance.getVotes",
      "offset": [
        2229,
        2238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3506": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3507": {
      "fn": "Governance.getVotes",
      "offset": [
        2247,
        2256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3508": {
      "fn": "Governance.getVotes",
      "offset": [
        2247,
        2263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3509": {
      "fn": "Governance.getVotes",
      "offset": [
        2244,
        2245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3510": {
      "fn": "Governance.getVotes",
      "offset": [
        2244,
        2263
      ],
      "op": "LT",
      "path": "0"
    },
    "3511": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3512": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2E"
    },
    "3515": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3516": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x0"
    },
    "3518": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3519": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3520": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3521": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3523": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3525": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3526": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3528": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3529": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2319
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3530": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3532": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2325
      ],
      "op": "ADD",
      "path": "0"
    },
    "3533": {
      "fn": "Governance.getVotes",
      "offset": [
        2326,
        2327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3534": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3536": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3537": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "LT",
      "path": "0"
    },
    "3538": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDD"
    },
    "3541": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3542": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDD"
    },
    "3545": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "3548": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2298,
        2328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3549": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3550": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3552": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3553": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3554": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3555": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "DIV",
      "path": "0"
    },
    "3556": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "ADD",
      "path": "0"
    },
    "3557": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3558": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3559": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "MOD",
      "path": "0"
    },
    "3560": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3562": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "MUL",
      "path": "0"
    },
    "3563": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3564": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3565": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3566": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3569": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "EXP",
      "path": "0"
    },
    "3570": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3571": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "DIV",
      "path": "0"
    },
    "3572": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "3575": {
      "fn": "Governance.getVotes",
      "offset": [
        2298,
        2328
      ],
      "op": "AND",
      "path": "0"
    },
    "3576": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2292
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3577": {
      "fn": "Governance.getVotes",
      "offset": [
        2293,
        2294
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3578": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3579": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3580": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3581": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "LT",
      "path": "0"
    },
    "3582": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE09"
    },
    "3585": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3586": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE09"
    },
    "3589": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "3592": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2283,
        2295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3593": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3594": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "3597": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3598": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2328
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3599": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2328
      ],
      "op": "AND",
      "path": "0"
    },
    "3600": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3602": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3603": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3604": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "MUL",
      "path": "0"
    },
    "3605": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3606": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3607": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3608": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "ADD",
      "path": "0"
    },
    "3609": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3610": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3611": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2295
      ],
      "op": "ADD",
      "path": "0"
    },
    "3612": {
      "fn": "Governance.getVotes",
      "offset": [
        2283,
        2328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3613": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 33
    },
    "3614": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE26"
    },
    "3617": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3618": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1437"
    },
    "3621": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2265,
        2268
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3622": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3623": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3624": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "POP",
      "path": "0"
    },
    "3625": {
      "fn": "Governance.getVotes",
      "offset": [
        2265,
        2268
      ],
      "op": "POP",
      "path": "0"
    },
    "3626": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB2"
    },
    "3629": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3630": {
      "fn": "Governance.getVotes",
      "offset": [
        2225,
        2339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "fn": "Governance.getVotes",
      "offset": [
        2355,
        2364
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 34
    },
    "3633": {
      "fn": "Governance.getVotes",
      "offset": [
        1982,
        2371
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        1982,
        2371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3637": {
      "fn": "Governance._createTaskType",
      "offset": [
        6857,
        7409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3638": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3640": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3641": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3642": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x1"
    },
    "3644": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3645": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "ADD",
      "path": "0"
    },
    "3646": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3647": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3648": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3649": {
      "fn": "Governance._createTaskType",
      "offset": [
        6992,
        7015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3651": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3652": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3653": {
      "fn": "Governance._createTaskType",
      "offset": [
        7044,
        7060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3654": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3655": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3656": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3657": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3658": {
      "fn": "Governance._createTaskType",
      "offset": [
        7018,
        7034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3659": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3660": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "LT",
      "path": "0"
    },
    "3661": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE58"
    },
    "3664": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3665": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE58"
    },
    "3668": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A8"
    },
    "3671": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        7101,
        7127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3672": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3673": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3675": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3676": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3677": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3678": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3680": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3681": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3682": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3683": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3685": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3686": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3687": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "MUL",
      "path": "0"
    },
    "3688": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "ADD",
      "path": "0"
    },
    "3689": {
      "fn": "Governance._createTaskType",
      "offset": [
        7101,
        7127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3690": {
      "op": "POP"
    },
    "3691": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7172
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 36,
      "value": "0xE78"
    },
    "3694": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3696": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3697": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7161
      ],
      "op": "ADD",
      "path": "0"
    },
    "3698": {
      "fn": "Governance._createTaskType",
      "offset": [
        7163,
        7172
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3699": {
      "fn": "Governance._createTaskType",
      "offset": [
        7163,
        7172
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3700": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2D"
    },
    "3703": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        7141,
        7172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3704": {
      "fn": "Governance._createTaskType",
      "offset": [
        7141,
        7172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "fn": "Governance._createTaskType",
      "offset": [
        7186,
        7204
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x2"
    },
    "3708": {
      "fn": "Governance._createTaskType",
      "offset": [
        7186,
        7204
      ],
      "op": "ADD",
      "path": "0"
    },
    "3709": {
      "fn": "Governance._createTaskType",
      "offset": [
        7186,
        7212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3710": {
      "fn": "Governance._createTaskType",
      "offset": [
        7186,
        7212
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3711": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "PUSH5",
      "path": "0",
      "statement": 38,
      "value": "0xFFFFFFFFFF"
    },
    "3717": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 39
    },
    "3718": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3719": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "AND",
      "path": "0"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "MUL",
      "path": "0"
    },
    "3726": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "NOT"
    },
    "3736": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP6",
      "path": "0",
      "statement": 40
    },
    "3737": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3738": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "AND",
      "path": "0"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "3743": {
      "op": "SHL"
    },
    "3744": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "MUL",
      "path": "0"
    },
    "3745": {
      "op": "PUSH11",
      "value": "0xFFFFFFFFFF000000000000"
    },
    "3757": {
      "op": "NOT"
    },
    "3758": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "3759": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3760": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "3761": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "AND",
      "path": "0"
    },
    "3762": {
      "fn": "Governance._createTaskType",
      "offset": [
        7186,
        7212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3765": {
      "fn": "Governance._createTaskType",
      "offset": [
        7226,
        7262
      ],
      "op": "MUL",
      "path": "0"
    },
    "3766": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3767": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3768": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3769": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "AND",
      "path": "0"
    },
    "3770": {
      "op": "PUSH11",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3782": {
      "op": "NOT"
    },
    "3783": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3784": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3785": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "AND",
      "path": "0"
    },
    "3786": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "OR",
      "path": "0"
    },
    "3787": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3788": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3789": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3790": {
      "fn": "Governance._createTaskType",
      "offset": [
        7276,
        7316
      ],
      "op": "OR",
      "path": "0"
    },
    "3791": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3792": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3793": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3794": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "AND",
      "path": "0"
    },
    "3795": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "OR",
      "path": "0"
    },
    "3796": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3797": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3798": {
      "fn": "Governance._createTaskType",
      "offset": [
        7330,
        7370
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        6857,
        7409
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3803": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3804": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3806": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3807": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "SUB"
    },
    "3816": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 41
    },
    "3817": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3818": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "6"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "op": "SUB"
    },
    "3827": {
      "op": "NOT"
    },
    "3828": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3829": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "6"
    },
    "3830": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3831": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "6"
    },
    "3832": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3833": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3834": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3835": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x40"
    },
    "3837": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3838": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3839": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "6"
    },
    "3840": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3841": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3842": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3843": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3844": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3877": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3878": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3880": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3881": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "6"
    },
    "3882": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "6"
    },
    "3883": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "6"
    },
    "3884": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3885": {
      "op": "JUMPDEST"
    },
    "3886": {
      "op": "DUP3"
    },
    "3887": {
      "op": "DUP1"
    },
    "3888": {
      "op": "SLOAD"
    },
    "3889": {
      "op": "PUSH2",
      "value": "0xF39"
    },
    "3892": {
      "op": "SWAP1"
    },
    "3893": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "3896": {
      "jump": "i",
      "op": "JUMP"
    },
    "3897": {
      "op": "JUMPDEST"
    },
    "3898": {
      "op": "SWAP1"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3901": {
      "op": "MSTORE"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "KECCAK256"
    },
    "3907": {
      "op": "SWAP1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3910": {
      "op": "ADD"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3913": {
      "op": "SWAP1"
    },
    "3914": {
      "op": "DIV"
    },
    "3915": {
      "op": "DUP2"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "SWAP3"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "3922": {
      "op": "JUMPI"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3925": {
      "op": "DUP6"
    },
    "3926": {
      "op": "SSTORE"
    },
    "3927": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3930": {
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "DUP3"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3935": {
      "op": "LT"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF74"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "DUP3"
    },
    "3941": {
      "op": "DUP1"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3945": {
      "op": "NOT"
    },
    "3946": {
      "op": "DUP3"
    },
    "3947": {
      "op": "CALLDATALOAD"
    },
    "3948": {
      "op": "AND"
    },
    "3949": {
      "op": "OR"
    },
    "3950": {
      "op": "DUP6"
    },
    "3951": {
      "op": "SSTORE"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3955": {
      "op": "JUMP"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "DUP1"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "DUP6"
    },
    "3964": {
      "op": "SSTORE"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "ISZERO"
    },
    "3967": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3970": {
      "op": "JUMPI"
    },
    "3971": {
      "op": "SWAP2"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "DUP3"
    },
    "3976": {
      "op": "DUP2"
    },
    "3977": {
      "op": "GT"
    },
    "3978": {
      "op": "ISZERO"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3982": {
      "op": "JUMPI"
    },
    "3983": {
      "op": "DUP3"
    },
    "3984": {
      "op": "CALLDATALOAD"
    },
    "3985": {
      "op": "DUP3"
    },
    "3986": {
      "op": "SSTORE"
    },
    "3987": {
      "op": "SWAP2"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "SWAP2"
    },
    "3992": {
      "op": "SWAP1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "SWAP1"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "4000": {
      "op": "JUMP"
    },
    "4001": {
      "op": "JUMPDEST"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "PUSH2",
      "value": "0xFAD"
    },
    "4006": {
      "op": "SWAP3"
    },
    "4007": {
      "op": "SWAP2"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4012": {
      "jump": "i",
      "op": "JUMP"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "op": "SWAP1"
    },
    "4016": {
      "jump": "o",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "JUMPDEST"
    },
    "4019": {
      "op": "DUP1"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "GT"
    },
    "4022": {
      "op": "ISZERO"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xFAD"
    },
    "4026": {
      "op": "JUMPI"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "DUP2"
    },
    "4030": {
      "op": "SSTORE"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFB2"
    },
    "4037": {
      "op": "JUMP"
    },
    "4038": {
      "op": "JUMPDEST"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "DUP5"
    },
    "4045": {
      "op": "SUB"
    },
    "4046": {
      "op": "SLT"
    },
    "4047": {
      "op": "ISZERO"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0xFD8"
    },
    "4051": {
      "op": "JUMPI"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4054": {
      "op": "DUP1"
    },
    "4055": {
      "op": "REVERT"
    },
    "4056": {
      "op": "JUMPDEST"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "CALLDATALOAD"
    },
    "4059": {
      "op": "SWAP2"
    },
    "4060": {
      "op": "SWAP1"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "jump": "o",
      "op": "JUMP"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "MLOAD"
    },
    "4068": {
      "op": "DUP1"
    },
    "4069": {
      "op": "DUP5"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4073": {
      "op": "JUMPDEST"
    },
    "4074": {
      "op": "DUP2"
    },
    "4075": {
      "op": "DUP2"
    },
    "4076": {
      "op": "LT"
    },
    "4077": {
      "op": "ISZERO"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0x1005"
    },
    "4081": {
      "op": "JUMPI"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "DUP6"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "op": "DUP2"
    },
    "4088": {
      "op": "ADD"
    },
    "4089": {
      "op": "MLOAD"
    },
    "4090": {
      "op": "DUP7"
    },
    "4091": {
      "op": "DUP4"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "DUP3"
    },
    "4094": {
      "op": "ADD"
    },
    "4095": {
      "op": "MSTORE"
    },
    "4096": {
      "op": "ADD"
    },
    "4097": {
      "op": "PUSH2",
      "value": "0xFE9"
    },
    "4100": {
      "op": "JUMP"
    },
    "4101": {
      "op": "JUMPDEST"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "GT"
    },
    "4105": {
      "op": "ISZERO"
    },
    "4106": {
      "op": "PUSH2",
      "value": "0x1017"
    },
    "4109": {
      "op": "JUMPI"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4114": {
      "op": "DUP4"
    },
    "4115": {
      "op": "DUP8"
    },
    "4116": {
      "op": "ADD"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "POP"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4126": {
      "op": "NOT"
    },
    "4127": {
      "op": "AND"
    },
    "4128": {
      "op": "SWAP3"
    },
    "4129": {
      "op": "SWAP1"
    },
    "4130": {
      "op": "SWAP3"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "SWAP3"
    },
    "4136": {
      "op": "SWAP2"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "jump": "o",
      "op": "JUMP"
    },
    "4140": {
      "op": "JUMPDEST"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4143": {
      "op": "DUP2"
    },
    "4144": {
      "op": "MSTORE"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4147": {
      "op": "PUSH2",
      "value": "0x103F"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4152": {
      "op": "DUP4"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "DUP9"
    },
    "4155": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4158": {
      "jump": "i",
      "op": "JUMP"
    },
    "4159": {
      "op": "JUMPDEST"
    },
    "4160": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4163": {
      "op": "SWAP7"
    },
    "4164": {
      "op": "SWAP1"
    },
    "4165": {
      "op": "SWAP7"
    },
    "4166": {
      "op": "AND"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4169": {
      "op": "DUP4"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "MSTORE"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4179": {
      "op": "SWAP4"
    },
    "4180": {
      "op": "DUP5"
    },
    "4181": {
      "op": "AND"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4184": {
      "op": "DUP3"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "SWAP2"
    },
    "4188": {
      "op": "DUP4"
    },
    "4189": {
      "op": "AND"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4192": {
      "op": "DUP4"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "SWAP1"
    },
    "4196": {
      "op": "SWAP2"
    },
    "4197": {
      "op": "AND"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4200": {
      "op": "SWAP1"
    },
    "4201": {
      "op": "SWAP2"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "op": "MSTORE"
    },
    "4204": {
      "op": "SWAP2"
    },
    "4205": {
      "op": "SWAP1"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "jump": "o",
      "op": "JUMP"
    },
    "4208": {
      "op": "JUMPDEST"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4211": {
      "op": "DUP2"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4215": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4220": {
      "op": "DUP4"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "DUP9"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4226": {
      "jump": "i",
      "op": "JUMP"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "SWAP6"
    },
    "4229": {
      "op": "ISZERO"
    },
    "4230": {
      "op": "ISZERO"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4233": {
      "op": "DUP4"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "MSTORE"
    },
    "4236": {
      "op": "POP"
    },
    "4237": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4243": {
      "op": "SWAP4"
    },
    "4244": {
      "op": "DUP5"
    },
    "4245": {
      "op": "AND"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "SWAP2"
    },
    "4252": {
      "op": "DUP4"
    },
    "4253": {
      "op": "AND"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4256": {
      "op": "DUP4"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "op": "SWAP1"
    },
    "4260": {
      "op": "SWAP2"
    },
    "4261": {
      "op": "AND"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4264": {
      "op": "SWAP1"
    },
    "4265": {
      "op": "SWAP2"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "SWAP2"
    },
    "4269": {
      "op": "SWAP1"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "jump": "o",
      "op": "JUMP"
    },
    "4272": {
      "op": "JUMPDEST"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4277": {
      "op": "DUP1"
    },
    "4278": {
      "op": "DUP4"
    },
    "4279": {
      "op": "ADD"
    },
    "4280": {
      "op": "DUP2"
    },
    "4281": {
      "op": "DUP5"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "DUP1"
    },
    "4284": {
      "op": "DUP6"
    },
    "4285": {
      "op": "MLOAD"
    },
    "4286": {
      "op": "DUP1"
    },
    "4287": {
      "op": "DUP4"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4291": {
      "op": "DUP7"
    },
    "4292": {
      "op": "ADD"
    },
    "4293": {
      "op": "SWAP2"
    },
    "4294": {
      "op": "POP"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4297": {
      "op": "DUP2"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "DUP8"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "op": "SWAP3"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "DUP4"
    },
    "4307": {
      "op": "DUP8"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "DUP3"
    },
    "4313": {
      "op": "DUP2"
    },
    "4314": {
      "op": "LT"
    },
    "4315": {
      "op": "ISZERO"
    },
    "4316": {
      "op": "PUSH2",
      "value": "0x1105"
    },
    "4319": {
      "op": "JUMPI"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4322": {
      "op": "NOT"
    },
    "4323": {
      "op": "DUP9"
    },
    "4324": {
      "op": "DUP7"
    },
    "4325": {
      "op": "SUB"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "DUP5"
    },
    "4328": {
      "op": "MSTORE"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x10F3"
    },
    "4332": {
      "op": "DUP6"
    },
    "4333": {
      "op": "DUP4"
    },
    "4334": {
      "op": "MLOAD"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4338": {
      "jump": "i",
      "op": "JUMP"
    },
    "4339": {
      "op": "JUMPDEST"
    },
    "4340": {
      "op": "SWAP5"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "op": "SWAP3"
    },
    "4343": {
      "op": "DUP6"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "SWAP3"
    },
    "4346": {
      "op": "SWAP1"
    },
    "4347": {
      "op": "DUP6"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "SWAP1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "ADD"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4356": {
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "POP"
    },
    "4359": {
      "op": "SWAP3"
    },
    "4360": {
      "op": "SWAP8"
    },
    "4361": {
      "op": "SWAP7"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "POP"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "op": "POP"
    },
    "4369": {
      "jump": "o",
      "op": "JUMP"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "DUP1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4376": {
      "op": "DUP4"
    },
    "4377": {
      "op": "DUP6"
    },
    "4378": {
      "op": "SUB"
    },
    "4379": {
      "op": "SLT"
    },
    "4380": {
      "op": "ISZERO"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x1125"
    },
    "4384": {
      "op": "JUMPI"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4387": {
      "op": "DUP1"
    },
    "4388": {
      "op": "REVERT"
    },
    "4389": {
      "op": "JUMPDEST"
    },
    "4390": {
      "op": "POP"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "op": "DUP1"
    },
    "4393": {
      "op": "CALLDATALOAD"
    },
    "4394": {
      "op": "SWAP3"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4397": {
      "op": "SWAP1"
    },
    "4398": {
      "op": "SWAP2"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "CALLDATALOAD"
    },
    "4401": {
      "op": "SWAP2"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "jump": "o",
      "op": "JUMP"
    },
    "4404": {
      "op": "JUMPDEST"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4407": {
      "op": "DUP1"
    },
    "4408": {
      "op": "DUP4"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4411": {
      "op": "DUP5"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "SLT"
    },
    "4414": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "4417": {
      "op": "JUMPI"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4420": {
      "op": "DUP1"
    },
    "4421": {
      "op": "REVERT"
    },
    "4422": {
      "op": "JUMPDEST"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "DUP2"
    },
    "4425": {
      "op": "CALLDATALOAD"
    },
    "4426": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4435": {
      "op": "DUP2"
    },
    "4436": {
      "op": "GT"
    },
    "4437": {
      "op": "ISZERO"
    },
    "4438": {
      "op": "PUSH2",
      "value": "0x115E"
    },
    "4441": {
      "op": "JUMPI"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "DUP1"
    },
    "4445": {
      "op": "REVERT"
    },
    "4446": {
      "op": "JUMPDEST"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4449": {
      "op": "DUP4"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "op": "SWAP2"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "op": "DUP4"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "DUP6"
    },
    "4458": {
      "op": "ADD"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "op": "GT"
    },
    "4461": {
      "op": "ISZERO"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "REVERT"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "SWAP3"
    },
    "4472": {
      "op": "POP"
    },
    "4473": {
      "op": "SWAP3"
    },
    "4474": {
      "op": "SWAP1"
    },
    "4475": {
      "op": "POP"
    },
    "4476": {
      "jump": "o",
      "op": "JUMP"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "DUP1"
    },
    "4479": {
      "op": "CALLDATALOAD"
    },
    "4480": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4486": {
      "op": "DUP2"
    },
    "4487": {
      "op": "AND"
    },
    "4488": {
      "op": "DUP2"
    },
    "4489": {
      "op": "EQ"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4493": {
      "op": "JUMPI"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "DUP1"
    },
    "4497": {
      "op": "REVERT"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "SWAP2"
    },
    "4500": {
      "op": "SWAP1"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "jump": "o",
      "op": "JUMP"
    },
    "4503": {
      "op": "JUMPDEST"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4506": {
      "op": "DUP1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4514": {
      "op": "DUP7"
    },
    "4515": {
      "op": "DUP9"
    },
    "4516": {
      "op": "SUB"
    },
    "4517": {
      "op": "SLT"
    },
    "4518": {
      "op": "ISZERO"
    },
    "4519": {
      "op": "PUSH2",
      "value": "0x11AF"
    },
    "4522": {
      "op": "JUMPI"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4525": {
      "op": "DUP1"
    },
    "4526": {
      "op": "REVERT"
    },
    "4527": {
      "op": "JUMPDEST"
    },
    "4528": {
      "op": "DUP6"
    },
    "4529": {
      "op": "CALLDATALOAD"
    },
    "4530": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4539": {
      "op": "DUP2"
    },
    "4540": {
      "op": "GT"
    },
    "4541": {
      "op": "ISZERO"
    },
    "4542": {
      "op": "PUSH2",
      "value": "0x11C6"
    },
    "4545": {
      "op": "JUMPI"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4548": {
      "op": "DUP1"
    },
    "4549": {
      "op": "REVERT"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "PUSH2",
      "value": "0x11D2"
    },
    "4554": {
      "op": "DUP9"
    },
    "4555": {
      "op": "DUP3"
    },
    "4556": {
      "op": "DUP10"
    },
    "4557": {
      "op": "ADD"
    },
    "4558": {
      "op": "PUSH2",
      "value": "0x1134"
    },
    "4561": {
      "jump": "i",
      "op": "JUMP"
    },
    "4562": {
      "op": "JUMPDEST"
    },
    "4563": {
      "op": "SWAP1"
    },
    "4564": {
      "op": "SWAP7"
    },
    "4565": {
      "op": "POP"
    },
    "4566": {
      "op": "SWAP5"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4571": {
      "op": "DUP7"
    },
    "4572": {
      "op": "ADD"
    },
    "4573": {
      "op": "CALLDATALOAD"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4577": {
      "op": "DUP2"
    },
    "4578": {
      "op": "AND"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "EQ"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0x11ED"
    },
    "4584": {
      "op": "JUMPI"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "DUP1"
    },
    "4588": {
      "op": "REVERT"
    },
    "4589": {
      "op": "JUMPDEST"
    },
    "4590": {
      "op": "SWAP3"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0x11FB"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4597": {
      "op": "DUP8"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4602": {
      "jump": "i",
      "op": "JUMP"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "SWAP2"
    },
    "4605": {
      "op": "POP"
    },
    "4606": {
      "op": "PUSH2",
      "value": "0x1209"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4611": {
      "op": "DUP8"
    },
    "4612": {
      "op": "ADD"
    },
    "4613": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4616": {
      "jump": "i",
      "op": "JUMP"
    },
    "4617": {
      "op": "JUMPDEST"
    },
    "4618": {
      "op": "SWAP1"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "SWAP3"
    },
    "4621": {
      "op": "SWAP6"
    },
    "4622": {
      "op": "POP"
    },
    "4623": {
      "op": "SWAP3"
    },
    "4624": {
      "op": "SWAP6"
    },
    "4625": {
      "op": "SWAP1"
    },
    "4626": {
      "op": "SWAP4"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "jump": "o",
      "op": "JUMP"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4636": {
      "op": "SHL"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "op": "DUP2"
    },
    "4639": {
      "op": "AND"
    },
    "4640": {
      "op": "DUP2"
    },
    "4641": {
      "op": "EQ"
    },
    "4642": {
      "op": "PUSH2",
      "value": "0xD0C"
    },
    "4645": {
      "op": "JUMPI"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4648": {
      "op": "DUP1"
    },
    "4649": {
      "op": "REVERT"
    },
    "4650": {
      "op": "JUMPDEST"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4655": {
      "op": "DUP3"
    },
    "4656": {
      "op": "DUP5"
    },
    "4657": {
      "op": "SUB"
    },
    "4658": {
      "op": "SLT"
    },
    "4659": {
      "op": "ISZERO"
    },
    "4660": {
      "op": "PUSH2",
      "value": "0x123C"
    },
    "4663": {
      "op": "JUMPI"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4666": {
      "op": "DUP1"
    },
    "4667": {
      "op": "REVERT"
    },
    "4668": {
      "op": "JUMPDEST"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "CALLDATALOAD"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0x1247"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4678": {
      "jump": "i",
      "op": "JUMP"
    },
    "4679": {
      "op": "JUMPDEST"
    },
    "4680": {
      "op": "SWAP4"
    },
    "4681": {
      "op": "SWAP3"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "jump": "o",
      "op": "JUMP"
    },
    "4686": {
      "op": "JUMPDEST"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4689": {
      "op": "DUP1"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4692": {
      "op": "DUP1"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4695": {
      "op": "DUP6"
    },
    "4696": {
      "op": "DUP8"
    },
    "4697": {
      "op": "SUB"
    },
    "4698": {
      "op": "SLT"
    },
    "4699": {
      "op": "ISZERO"
    },
    "4700": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4703": {
      "op": "JUMPI"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4706": {
      "op": "DUP1"
    },
    "4707": {
      "op": "REVERT"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "DUP5"
    },
    "4710": {
      "op": "CALLDATALOAD"
    },
    "4711": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4720": {
      "op": "DUP2"
    },
    "4721": {
      "op": "GT"
    },
    "4722": {
      "op": "ISZERO"
    },
    "4723": {
      "op": "PUSH2",
      "value": "0x127B"
    },
    "4726": {
      "op": "JUMPI"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4729": {
      "op": "DUP1"
    },
    "4730": {
      "op": "REVERT"
    },
    "4731": {
      "op": "JUMPDEST"
    },
    "4732": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "4735": {
      "op": "DUP8"
    },
    "4736": {
      "op": "DUP3"
    },
    "4737": {
      "op": "DUP9"
    },
    "4738": {
      "op": "ADD"
    },
    "4739": {
      "op": "PUSH2",
      "value": "0x1134"
    },
    "4742": {
      "jump": "i",
      "op": "JUMP"
    },
    "4743": {
      "op": "JUMPDEST"
    },
    "4744": {
      "op": "SWAP1"
    },
    "4745": {
      "op": "SWAP6"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "SWAP4"
    },
    "4748": {
      "op": "POP"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x129A"
    },
    "4752": {
      "op": "SWAP1"
    },
    "4753": {
      "op": "POP"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4756": {
      "op": "DUP7"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4761": {
      "jump": "i",
      "op": "JUMP"
    },
    "4762": {
      "op": "JUMPDEST"
    },
    "4763": {
      "op": "SWAP2"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4770": {
      "op": "DUP7"
    },
    "4771": {
      "op": "ADD"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4775": {
      "jump": "i",
      "op": "JUMP"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "SWAP1"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "SWAP3"
    },
    "4780": {
      "op": "SWAP6"
    },
    "4781": {
      "op": "SWAP2"
    },
    "4782": {
      "op": "SWAP5"
    },
    "4783": {
      "op": "POP"
    },
    "4784": {
      "op": "SWAP3"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "jump": "o",
      "op": "JUMP"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4790": {
      "op": "DUP1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4795": {
      "op": "DUP5"
    },
    "4796": {
      "op": "DUP7"
    },
    "4797": {
      "op": "SUB"
    },
    "4798": {
      "op": "SLT"
    },
    "4799": {
      "op": "ISZERO"
    },
    "4800": {
      "op": "PUSH2",
      "value": "0x12C8"
    },
    "4803": {
      "op": "JUMPI"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4806": {
      "op": "DUP1"
    },
    "4807": {
      "op": "REVERT"
    },
    "4808": {
      "op": "JUMPDEST"
    },
    "4809": {
      "op": "POP"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "op": "DUP2"
    },
    "4812": {
      "op": "CALLDATALOAD"
    },
    "4813": {
      "op": "SWAP4"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4816": {
      "op": "DUP4"
    },
    "4817": {
      "op": "ADD"
    },
    "4818": {
      "op": "CALLDATALOAD"
    },
    "4819": {
      "op": "SWAP4"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4823": {
      "op": "SWAP1"
    },
    "4824": {
      "op": "SWAP3"
    },
    "4825": {
      "op": "ADD"
    },
    "4826": {
      "op": "CALLDATALOAD"
    },
    "4827": {
      "op": "SWAP2"
    },
    "4828": {
      "op": "SWAP1"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "jump": "o",
      "op": "JUMP"
    },
    "4831": {
      "op": "JUMPDEST"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4834": {
      "op": "DUP2"
    },
    "4835": {
      "op": "MSTORE"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4838": {
      "op": "PUSH2",
      "value": "0x12F2"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4843": {
      "op": "DUP4"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "op": "DUP9"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4849": {
      "jump": "i",
      "op": "JUMP"
    },
    "4850": {
      "op": "JUMPDEST"
    },
    "4851": {
      "op": "SWAP1"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4859": {
      "op": "DUP7"
    },
    "4860": {
      "op": "AND"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4863": {
      "op": "DUP4"
    },
    "4864": {
      "op": "ADD"
    },
    "4865": {
      "op": "MSTORE"
    },
    "4866": {
      "op": "DUP5"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4869": {
      "op": "DUP4"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4874": {
      "op": "DUP5"
    },
    "4875": {
      "op": "AND"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4878": {
      "op": "DUP4"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "4885": {
      "op": "DUP4"
    },
    "4886": {
      "op": "AND"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4889": {
      "op": "DUP4"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "MSTORE"
    },
    "4892": {
      "op": "SWAP7"
    },
    "4893": {
      "op": "SWAP6"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "jump": "o",
      "op": "JUMP"
    },
    "4901": {
      "op": "JUMPDEST"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "DUP3"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "MLOAD"
    },
    "4909": {
      "op": "DUP3"
    },
    "4910": {
      "op": "DUP3"
    },
    "4911": {
      "op": "ADD"
    },
    "4912": {
      "op": "DUP2"
    },
    "4913": {
      "op": "SWAP1"
    },
    "4914": {
      "op": "MSTORE"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4917": {
      "op": "SWAP2"
    },
    "4918": {
      "op": "SWAP1"
    },
    "4919": {
      "op": "DUP5"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "ADD"
    },
    "4922": {
      "op": "SWAP1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4925": {
      "op": "DUP6"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "SWAP1"
    },
    "4928": {
      "op": "DUP5"
    },
    "4929": {
      "op": "JUMPDEST"
    },
    "4930": {
      "op": "DUP2"
    },
    "4931": {
      "op": "DUP2"
    },
    "4932": {
      "op": "LT"
    },
    "4933": {
      "op": "ISZERO"
    },
    "4934": {
      "op": "PUSH2",
      "value": "0x1361"
    },
    "4937": {
      "op": "JUMPI"
    },
    "4938": {
      "op": "DUP4"
    },
    "4939": {
      "op": "MLOAD"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4943": {
      "op": "AND"
    },
    "4944": {
      "op": "DUP4"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "SWAP3"
    },
    "4947": {
      "op": "DUP5"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "SWAP3"
    },
    "4950": {
      "op": "SWAP2"
    },
    "4951": {
      "op": "DUP5"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "SWAP2"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4956": {
      "op": "ADD"
    },
    "4957": {
      "op": "PUSH2",
      "value": "0x1341"
    },
    "4960": {
      "op": "JUMP"
    },
    "4961": {
      "op": "JUMPDEST"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "SWAP1"
    },
    "4964": {
      "op": "SWAP7"
    },
    "4965": {
      "op": "SWAP6"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "op": "POP"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "jump": "o",
      "op": "JUMP"
    },
    "4973": {
      "op": "JUMPDEST"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "DUP2"
    },
    "4977": {
      "op": "DUP2"
    },
    "4978": {
      "op": "SHR"
    },
    "4979": {
      "op": "SWAP1"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "AND"
    },
    "4982": {
      "op": "DUP1"
    },
    "4983": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "4986": {
      "op": "JUMPI"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4989": {
      "op": "DUP3"
    },
    "4990": {
      "op": "AND"
    },
    "4991": {
      "op": "SWAP2"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "op": "JUMPDEST"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4996": {
      "op": "DUP3"
    },
    "4997": {
      "op": "LT"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "op": "EQ"
    },
    "5000": {
      "op": "ISZERO"
    },
    "5001": {
      "op": "PUSH2",
      "value": "0x13A2"
    },
    "5004": {
      "op": "JUMPI"
    },
    "5005": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5012": {
      "op": "SHL"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5015": {
      "op": "MSTORE"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5020": {
      "op": "MSTORE"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5025": {
      "op": "REVERT"
    },
    "5026": {
      "op": "JUMPDEST"
    },
    "5027": {
      "op": "POP"
    },
    "5028": {
      "op": "SWAP2"
    },
    "5029": {
      "op": "SWAP1"
    },
    "5030": {
      "op": "POP"
    },
    "5031": {
      "jump": "o",
      "op": "JUMP"
    },
    "5032": {
      "op": "JUMPDEST"
    },
    "5033": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5040": {
      "op": "SHL"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5048": {
      "op": "MSTORE"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5053": {
      "op": "REVERT"
    },
    "5054": {
      "op": "JUMPDEST"
    },
    "5055": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5062": {
      "op": "SHL"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5070": {
      "op": "MSTORE"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5075": {
      "op": "REVERT"
    },
    "5076": {
      "op": "JUMPDEST"
    },
    "5077": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5084": {
      "op": "SHL"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5087": {
      "op": "MSTORE"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5092": {
      "op": "MSTORE"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5097": {
      "op": "REVERT"
    },
    "5098": {
      "op": "JUMPDEST"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5101": {
      "op": "DUP3"
    },
    "5102": {
      "op": "NOT"
    },
    "5103": {
      "op": "DUP3"
    },
    "5104": {
      "op": "GT"
    },
    "5105": {
      "op": "ISZERO"
    },
    "5106": {
      "op": "PUSH2",
      "value": "0x13FD"
    },
    "5109": {
      "op": "JUMPI"
    },
    "5110": {
      "op": "PUSH2",
      "value": "0x13FD"
    },
    "5113": {
      "op": "PUSH2",
      "value": "0x13D4"
    },
    "5116": {
      "jump": "i",
      "op": "JUMP"
    },
    "5117": {
      "op": "JUMPDEST"
    },
    "5118": {
      "op": "POP"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "SWAP1"
    },
    "5121": {
      "jump": "o",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5125": {
      "op": "DUP1"
    },
    "5126": {
      "op": "DUP3"
    },
    "5127": {
      "op": "MSTORE"
    },
    "5128": {
      "op": "DUP2"
    },
    "5129": {
      "op": "DUP2"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5167": {
      "op": "DUP3"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "MSTORE"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5172": {
      "op": "ADD"
    },
    "5173": {
      "op": "SWAP1"
    },
    "5174": {
      "jump": "o",
      "op": "JUMP"
    },
    "5175": {
      "op": "JUMPDEST"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5180": {
      "op": "NOT"
    },
    "5181": {
      "op": "DUP3"
    },
    "5182": {
      "op": "EQ"
    },
    "5183": {
      "op": "ISZERO"
    },
    "5184": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5187": {
      "op": "JUMPI"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5191": {
      "op": "PUSH2",
      "value": "0x13D4"
    },
    "5194": {
      "jump": "i",
      "op": "JUMP"
    },
    "5195": {
      "op": "JUMPDEST"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "ADD"
    },
    "5200": {
      "op": "SWAP1"
    },
    "5201": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c89367a82d24112c2ce0f674fc278d3a27c5b45d",
  "source": "pragma solidity ^0.8.0;\n// SPDX-License-Identifier: Unlicensed\n\n\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\n\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    IERC721 ecosystemNFTs;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (address => uint256) lastActiveTimestamp; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        // max activity; current activity\n    }\n\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID;\n        bytes32 hash; // hashed input to be validated\n        uint8 numFieldsToHash;\n        uint24 timeBonus; // in seconds\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n    TaskType[] public taskTypes;\n    Task[] public tasks;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n\n    function getMyAvailableTaskTypes() external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp){ // && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp) {\n                unchecked{++count;}\n            }\n            else {\n                string[] memory myReturn= new string[](1);\n                myReturn[0] = \"No luck.\";\n                return myReturn;\n            }\n            unchecked{++i;}\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].lastActiveTimestamp[msg.sender] < block.timestamp && taskTypes[i].begTimestamp < block.timestamp && taskTypes[i].endTimestamp > block.timestamp) {\n                myTasks[i] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        ecosystemNFTs = IERC721(_addy);\n    }\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        ecosystemNFTs = IERC721(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(ecosystemNFTs.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint40 _begTimestamp, uint40 _endTimestamp) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), _begTimestamp, _endTimestamp);\n        // todo --  emit event\n    }\n\n    function createTaskType(string calldata _IPFSHash, uint40 _begTimestamp, uint40 _endTimestamp) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _begTimestamp, _endTimestamp);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint40 _begTimestamp, uint40 _endTimestamp) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n\n        // todo --  emit event\n    }\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "628:7350:0:-:0;;;5039:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:7;1778:7;:22;889:23:6;679:10:1;889:9:6;:23::i;:::-;5118:13:0;:29;;-1:-1:-1;;;;;;5118:29:0;-1:-1:-1;;;;;5118:29:0;;;;;;;;;;628:7350;;2101:173:6;2176:6;;;-1:-1:-1;;;;;2193:17:6;;;-1:-1:-1;;;;;;2193:17:6;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:17:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:17;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:17:o;:::-;628:7350:0;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}